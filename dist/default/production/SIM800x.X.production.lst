

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Apr 29 12:15:43 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=6
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=4
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=4
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=4
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=4
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=4
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=5
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=6
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=4
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=6
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=4
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=4
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=4
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=4
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=4
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=4
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=4
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=4
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=4
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=4
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=7
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=4
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=4
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=4
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=4
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=4
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=6
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=4
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=4
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=4
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=6
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=4
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    67                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    68                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    69  0000                     
    70                           ; Version 2.36
    71                           ; Generated 28/01/2022 GMT
    72                           ; 
    73                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution. Publication is not required when
    87                           ;        this file is used in an embedded application.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F452 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     
   106                           	psect	idataCOMRAM
   107  001F9E                     __pidataCOMRAM:
   108                           	callstack 0
   109                           
   110                           ;initializer for _Tout
   111  001F9E  0FA0               	dw	4000
   112  001FA0  0000               	dw	0
   113                           
   114                           	psect	idataBANK0
   115  001FA2                     __pidataBANK0:
   116                           	callstack 0
   117                           
   118                           ;initializer for _Tout@SIM800x_SDM$F1161
   119  001FA2  07D0               	dw	2000
   120  001FA4  0000               	dw	0
   121                           
   122                           	psect	mediumconst
   123  00798E                     __pmediumconst:
   124                           	callstack 0
   125  00798E  00                 	db	0
   126  00798F                     _dpowers:
   127                           	callstack 0
   128  00798F  0001               	dw	1
   129  007991  0000               	dw	0
   130  007993  000A               	dw	10
   131  007995  0000               	dw	0
   132  007997  0064               	dw	100
   133  007999  0000               	dw	0
   134  00799B  03E8               	dw	1000
   135  00799D  0000               	dw	0
   136  00799F  2710               	dw	10000
   137  0079A1  0000               	dw	0
   138  0079A3  86A0               	dw	34464
   139  0079A5  0001               	dw	1
   140  0079A7  4240               	dw	16960
   141  0079A9  000F               	dw	15
   142  0079AB  9680               	dw	38528
   143  0079AD  0098               	dw	152
   144  0079AF  E100               	dw	57600
   145  0079B1  05F5               	dw	1525
   146  0079B3  CA00               	dw	51712
   147  0079B5  3B9A               	dw	15258
   148  0079B7                     __end_of_dpowers:
   149                           	callstack 0
   150  0079B7  10                 	db	16
   151  0079B8                     __end_of_OSC_FREQ:
   152                           	callstack 0
   153  0000                     _RCREG	set	4014
   154  0000                     _SPBRG	set	4015
   155  0000                     _TXREG	set	4013
   156  0000                     _TXSTA	set	4012
   157  0000                     _INTCONbits	set	4082
   158  0000                     _TMR0IE	set	32661
   159  0000                     _TMR0IF	set	32658
   160  0000                     _GIE	set	32663
   161  0000                     _INT0IF	set	32657
   162  0000                     _PIE1	set	3997
   163  0000                     _T0CON	set	4053
   164  0000                     _INTCON2	set	4081
   165  0000                     _INTCON	set	4082
   166  0000                     _TMR0	set	4054
   167  0000                     _RCSTA	set	4011
   168  0000                     _TXSTAbits	set	4012
   169  0000                     _RCIF	set	31989
   170  0079B8                     STR_9:
   171  0079B8  68                 	db	104	;'h'
   172  0079B9  74                 	db	116	;'t'
   173  0079BA  74                 	db	116	;'t'
   174  0079BB  70                 	db	112	;'p'
   175  0079BC  3A                 	db	58	;':'
   176  0079BD  2F                 	db	47
   177  0079BE  2F                 	db	47
   178  0079BF  62                 	db	98	;'b'
   179  0079C0  61                 	db	97	;'a'
   180  0079C1  63                 	db	99	;'c'
   181  0079C2  6B                 	db	107	;'k'
   182  0079C3  65                 	db	101	;'e'
   183  0079C4  6E                 	db	110	;'n'
   184  0079C5  64                 	db	100	;'d'
   185  0079C6  2E                 	db	46
   186  0079C7  74                 	db	116	;'t'
   187  0079C8  68                 	db	104	;'h'
   188  0079C9  69                 	db	105	;'i'
   189  0079CA  6E                 	db	110	;'n'
   190  0079CB  67                 	db	103	;'g'
   191  0079CC  65                 	db	101	;'e'
   192  0079CD  72                 	db	114	;'r'
   193  0079CE  2E                 	db	46
   194  0079CF  69                 	db	105	;'i'
   195  0079D0  6F                 	db	111	;'o'
   196  0079D1  2F                 	db	47
   197  0079D2  76                 	db	118	;'v'
   198  0079D3  33                 	db	51	;'3'
   199  0079D4  2F                 	db	47
   200  0079D5  75                 	db	117	;'u'
   201  0079D6  73                 	db	115	;'s'
   202  0079D7  65                 	db	101	;'e'
   203  0079D8  72                 	db	114	;'r'
   204  0079D9  73                 	db	115	;'s'
   205  0079DA  2F                 	db	47
   206  0079DB  46                 	db	70	;'F'
   207  0079DC  69                 	db	105	;'i'
   208  0079DD  72                 	db	114	;'r'
   209  0079DE  6D                 	db	109	;'m'
   210  0079DF  77                 	db	119	;'w'
   211  0079E0  61                 	db	97	;'a'
   212  0079E1  72                 	db	114	;'r'
   213  0079E2  65                 	db	101	;'e'
   214  0079E3  45                 	db	69	;'E'
   215  0079E4  6E                 	db	110	;'n'
   216  0079E5  67                 	db	103	;'g'
   217  0079E6  69                 	db	105	;'i'
   218  0079E7  6E                 	db	110	;'n'
   219  0079E8  65                 	db	101	;'e'
   220  0079E9  65                 	db	101	;'e'
   221  0079EA  72                 	db	114	;'r'
   222  0079EB  73                 	db	115	;'s'
   223  0079EC  2F                 	db	47
   224  0079ED  64                 	db	100	;'d'
   225  0079EE  65                 	db	101	;'e'
   226  0079EF  76                 	db	118	;'v'
   227  0079F0  69                 	db	105	;'i'
   228  0079F1  63                 	db	99	;'c'
   229  0079F2  65                 	db	101	;'e'
   230  0079F3  73                 	db	115	;'s'
   231  0079F4  2F                 	db	47
   232  0079F5  53                 	db	83	;'S'
   233  0079F6  49                 	db	73	;'I'
   234  0079F7  4D                 	db	77	;'M'
   235  0079F8  38                 	db	56	;'8'
   236  0079F9  30                 	db	48	;'0'
   237  0079FA  30                 	db	48	;'0'
   238  0079FB  4C                 	db	76	;'L'
   239  0079FC  2F                 	db	47
   240  0079FD  63                 	db	99	;'c'
   241  0079FE  61                 	db	97	;'a'
   242  0079FF  6C                 	db	108	;'l'
   243  007A00  6C                 	db	108	;'l'
   244  007A01  62                 	db	98	;'b'
   245  007A02  61                 	db	97	;'a'
   246  007A03  63                 	db	99	;'c'
   247  007A04  6B                 	db	107	;'k'
   248  007A05  2F                 	db	47
   249  007A06  64                 	db	100	;'d'
   250  007A07  61                 	db	97	;'a'
   251  007A08  74                 	db	116	;'t'
   252  007A09  61                 	db	97	;'a'
   253  007A0A  3F                 	db	63	;'?'
   254  007A0B  61                 	db	97	;'a'
   255  007A0C  75                 	db	117	;'u'
   256  007A0D  74                 	db	116	;'t'
   257  007A0E  68                 	db	104	;'h'
   258  007A0F  6F                 	db	111	;'o'
   259  007A10  72                 	db	114	;'r'
   260  007A11  69                 	db	105	;'i'
   261  007A12  7A                 	db	122	;'z'
   262  007A13  61                 	db	97	;'a'
   263  007A14  74                 	db	116	;'t'
   264  007A15  69                 	db	105	;'i'
   265  007A16  6F                 	db	111	;'o'
   266  007A17  6E                 	db	110	;'n'
   267  007A18  3D                 	db	61	;'='
   268  007A19  65                 	db	101	;'e'
   269  007A1A  79                 	db	121	;'y'
   270  007A1B  4A                 	db	74	;'J'
   271  007A1C  68                 	db	104	;'h'
   272  007A1D  62                 	db	98	;'b'
   273  007A1E  47                 	db	71	;'G'
   274  007A1F  63                 	db	99	;'c'
   275  007A20  69                 	db	105	;'i'
   276  007A21  4F                 	db	79	;'O'
   277  007A22  69                 	db	105	;'i'
   278  007A23  4A                 	db	74	;'J'
   279  007A24  49                 	db	73	;'I'
   280  007A25  55                 	db	85	;'U'
   281  007A26  7A                 	db	122	;'z'
   282  007A27  49                 	db	73	;'I'
   283  007A28  31                 	db	49	;'1'
   284  007A29  4E                 	db	78	;'N'
   285  007A2A  69                 	db	105	;'i'
   286  007A2B  49                 	db	73	;'I'
   287  007A2C  73                 	db	115	;'s'
   288  007A2D  49                 	db	73	;'I'
   289  007A2E  6E                 	db	110	;'n'
   290  007A2F  52                 	db	82	;'R'
   291  007A30  35                 	db	53	;'5'
   292  007A31  63                 	db	99	;'c'
   293  007A32  43                 	db	67	;'C'
   294  007A33  49                 	db	73	;'I'
   295  007A34  36                 	db	54	;'6'
   296  007A35  49                 	db	73	;'I'
   297  007A36  6B                 	db	107	;'k'
   298  007A37  70                 	db	112	;'p'
   299  007A38  58                 	db	88	;'X'
   300  007A39  56                 	db	86	;'V'
   301  007A3A  43                 	db	67	;'C'
   302  007A3B  4A                 	db	74	;'J'
   303  007A3C  39                 	db	57	;'9'
   304  007A3D  2E                 	db	46
   305  007A3E  65                 	db	101	;'e'
   306  007A3F  79                 	db	121	;'y'
   307  007A40  4A                 	db	74	;'J'
   308  007A41  6C                 	db	108	;'l'
   309  007A42  65                 	db	101	;'e'
   310  007A43  48                 	db	72	;'H'
   311  007A44  41                 	db	65	;'A'
   312  007A45  69                 	db	105	;'i'
   313  007A46  4F                 	db	79	;'O'
   314  007A47  6A                 	db	106	;'j'
   315  007A48  45                 	db	69	;'E'
   316  007A49  32                 	db	50	;'2'
   317  007A4A  4F                 	db	79	;'O'
   318  007A4B  44                 	db	68	;'D'
   319  007A4C  41                 	db	65	;'A'
   320  007A4D  7A                 	db	122	;'z'
   321  007A4E  4E                 	db	78	;'N'
   322  007A4F  6A                 	db	106	;'j'
   323  007A50  41                 	db	65	;'A'
   324  007A51  30                 	db	48	;'0'
   325  007A52  4E                 	db	78	;'N'
   326  007A53  7A                 	db	122	;'z'
   327  007A54  41                 	db	65	;'A'
   328  007A55  73                 	db	115	;'s'
   329  007A56  49                 	db	73	;'I'
   330  007A57  6D                 	db	109	;'m'
   331  007A58  6C                 	db	108	;'l'
   332  007A59  68                 	db	104	;'h'
   333  007A5A  64                 	db	100	;'d'
   334  007A5B  43                 	db	67	;'C'
   335  007A5C  49                 	db	73	;'I'
   336  007A5D  36                 	db	54	;'6'
   337  007A5E  4D                 	db	77	;'M'
   338  007A5F  54                 	db	84	;'T'
   339  007A60  59                 	db	89	;'Y'
   340  007A61  34                 	db	52	;'4'
   341  007A62  4D                 	db	77	;'M'
   342  007A63  44                 	db	68	;'D'
   343  007A64  4D                 	db	77	;'M'
   344  007A65  31                 	db	49	;'1'
   345  007A66  4D                 	db	77	;'M'
   346  007A67  7A                 	db	122	;'z'
   347  007A68  49                 	db	73	;'I'
   348  007A69  33                 	db	51	;'3'
   349  007A6A  4D                 	db	77	;'M'
   350  007A6B  43                 	db	67	;'C'
   351  007A6C  77                 	db	119	;'w'
   352  007A6D  69                 	db	105	;'i'
   353  007A6E  63                 	db	99	;'c'
   354  007A6F  6D                 	db	109	;'m'
   355  007A70  39                 	db	57	;'9'
   356  007A71  73                 	db	115	;'s'
   357  007A72  5A                 	db	90	;'Z'
   358  007A73  53                 	db	83	;'S'
   359  007A74  49                 	db	73	;'I'
   360  007A75  36                 	db	54	;'6'
   361  007A76  49                 	db	73	;'I'
   362  007A77  6E                 	db	110	;'n'
   363  007A78  56                 	db	86	;'V'
   364  007A79  7A                 	db	122	;'z'
   365  007A7A  5A                 	db	90	;'Z'
   366  007A7B  58                 	db	88	;'X'
   367  007A7C  49                 	db	73	;'I'
   368  007A7D  69                 	db	105	;'i'
   369  007A7E  4C                 	db	76	;'L'
   370  007A7F  43                 	db	67	;'C'
   371  007A80  4A                 	db	74	;'J'
   372  007A81  31                 	db	49	;'1'
   373  007A82  63                 	db	99	;'c'
   374  007A83  33                 	db	51	;'3'
   375  007A84  49                 	db	73	;'I'
   376  007A85  69                 	db	105	;'i'
   377  007A86  4F                 	db	79	;'O'
   378  007A87  69                 	db	105	;'i'
   379  007A88  4A                 	db	74	;'J'
   380  007A89  47                 	db	71	;'G'
   381  007A8A  61                 	db	97	;'a'
   382  007A8B  58                 	db	88	;'X'
   383  007A8C  4A                 	db	74	;'J'
   384  007A8D  74                 	db	116	;'t'
   385  007A8E  64                 	db	100	;'d'
   386  007A8F  32                 	db	50	;'2'
   387  007A90  46                 	db	70	;'F'
   388  007A91  79                 	db	121	;'y'
   389  007A92  5A                 	db	90	;'Z'
   390  007A93  55                 	db	85	;'U'
   391  007A94  56                 	db	86	;'V'
   392  007A95  75                 	db	117	;'u'
   393  007A96  5A                 	db	90	;'Z'
   394  007A97  32                 	db	50	;'2'
   395  007A98  6C                 	db	108	;'l'
   396  007A99  75                 	db	117	;'u'
   397  007A9A  5A                 	db	90	;'Z'
   398  007A9B  57                 	db	87	;'W'
   399  007A9C  56                 	db	86	;'V'
   400  007A9D  79                 	db	121	;'y'
   401  007A9E  63                 	db	99	;'c'
   402  007A9F  79                 	db	121	;'y'
   403  007AA0  4A                 	db	74	;'J'
   404  007AA1  39                 	db	57	;'9'
   405  007AA2  2E                 	db	46
   406  007AA3  35                 	db	53	;'5'
   407  007AA4  4D                 	db	77	;'M'
   408  007AA5  59                 	db	89	;'Y'
   409  007AA6  72                 	db	114	;'r'
   410  007AA7  50                 	db	80	;'P'
   411  007AA8  56                 	db	86	;'V'
   412  007AA9  53                 	db	83	;'S'
   413  007AAA  34                 	db	52	;'4'
   414  007AAB  6E                 	db	110	;'n'
   415  007AAC  46                 	db	70	;'F'
   416  007AAD  61                 	db	97	;'a'
   417  007AAE  32                 	db	50	;'2'
   418  007AAF  6B                 	db	107	;'k'
   419  007AB0  6F                 	db	111	;'o'
   420  007AB1  75                 	db	117	;'u'
   421  007AB2  33                 	db	51	;'3'
   422  007AB3  64                 	db	100	;'d'
   423  007AB4  56                 	db	86	;'V'
   424  007AB5  32                 	db	50	;'2'
   425  007AB6  79                 	db	121	;'y'
   426  007AB7  5A                 	db	90	;'Z'
   427  007AB8  50                 	db	80	;'P'
   428  007AB9  34                 	db	52	;'4'
   429  007ABA  53                 	db	83	;'S'
   430  007ABB  76                 	db	118	;'v'
   431  007ABC  6F                 	db	111	;'o'
   432  007ABD  33                 	db	51	;'3'
   433  007ABE  4A                 	db	74	;'J'
   434  007ABF  56                 	db	86	;'V'
   435  007AC0  31                 	db	49	;'1'
   436  007AC1  5A                 	db	90	;'Z'
   437  007AC2  6A                 	db	106	;'j'
   438  007AC3  36                 	db	54	;'6'
   439  007AC4  67                 	db	103	;'g'
   440  007AC5  41                 	db	65	;'A'
   441  007AC6  49                 	db	73	;'I'
   442  007AC7  47                 	db	71	;'G'
   443  007AC8  54                 	db	84	;'T'
   444  007AC9  56                 	db	86	;'V'
   445  007ACA  75                 	db	117	;'u'
   446  007ACB  69                 	db	105	;'i'
   447  007ACC  39                 	db	57	;'9'
   448  007ACD  34                 	db	52	;'4'
   449  007ACE  00                 	db	0
   450  007ACF                     STR_20:
   451  007ACF  53                 	db	83	;'S'
   452  007AD0  79                 	db	121	;'y'
   453  007AD1  73                 	db	115	;'s'
   454  007AD2  74                 	db	116	;'t'
   455  007AD3  65                 	db	101	;'e'
   456  007AD4  6D                 	db	109	;'m'
   457  007AD5  20                 	db	32
   458  007AD6  49                 	db	73	;'I'
   459  007AD7  6E                 	db	110	;'n'
   460  007AD8  69                 	db	105	;'i'
   461  007AD9  74                 	db	116	;'t'
   462  007ADA  69                 	db	105	;'i'
   463  007ADB  61                 	db	97	;'a'
   464  007ADC  6C                 	db	108	;'l'
   465  007ADD  69                 	db	105	;'i'
   466  007ADE  7A                 	db	122	;'z'
   467  007ADF  61                 	db	97	;'a'
   468  007AE0  74                 	db	116	;'t'
   469  007AE1  69                 	db	105	;'i'
   470  007AE2  6F                 	db	111	;'o'
   471  007AE3  6E                 	db	110	;'n'
   472  007AE4  20                 	db	32
   473  007AE5  63                 	db	99	;'c'
   474  007AE6  6F                 	db	111	;'o'
   475  007AE7  6D                 	db	109	;'m'
   476  007AE8  70                 	db	112	;'p'
   477  007AE9  6C                 	db	108	;'l'
   478  007AEA  65                 	db	101	;'e'
   479  007AEB  74                 	db	116	;'t'
   480  007AEC  65                 	db	101	;'e'
   481  007AED  64                 	db	100	;'d'
   482  007AEE  2E                 	db	46
   483  007AEF  0D                 	db	13
   484  007AF0  0D                 	db	13
   485  007AF1  00                 	db	0
   486  007AF2                     STR_22:
   487  007AF2  53                 	db	83	;'S'
   488  007AF3  65                 	db	101	;'e'
   489  007AF4  6E                 	db	110	;'n'
   490  007AF5  64                 	db	100	;'d'
   491  007AF6  69                 	db	105	;'i'
   492  007AF7  6E                 	db	110	;'n'
   493  007AF8  67                 	db	103	;'g'
   494  007AF9  20                 	db	32
   495  007AFA  6D                 	db	109	;'m'
   496  007AFB  65                 	db	101	;'e'
   497  007AFC  73                 	db	115	;'s'
   498  007AFD  73                 	db	115	;'s'
   499  007AFE  61                 	db	97	;'a'
   500  007AFF  67                 	db	103	;'g'
   501  007B00  65                 	db	101	;'e'
   502  007B01  20                 	db	32
   503  007B02  74                 	db	116	;'t'
   504  007B03  6F                 	db	111	;'o'
   505  007B04  20                 	db	32
   506  007B05  74                 	db	116	;'t'
   507  007B06  68                 	db	104	;'h'
   508  007B07  69                 	db	105	;'i'
   509  007B08  6E                 	db	110	;'n'
   510  007B09  67                 	db	103	;'g'
   511  007B0A  65                 	db	101	;'e'
   512  007B0B  72                 	db	114	;'r'
   513  007B0C  2E                 	db	46
   514  007B0D  69                 	db	105	;'i'
   515  007B0E  6F                 	db	111	;'o'
   516  007B0F  2E                 	db	46
   517  007B10  2E                 	db	46
   518  007B11  2E                 	db	46
   519  007B12  0D                 	db	13
   520  007B13  00                 	db	0
   521  007B14                     STR_21:
   522  007B14  53                 	db	83	;'S'
   523  007B15  79                 	db	121	;'y'
   524  007B16  73                 	db	115	;'s'
   525  007B17  74                 	db	116	;'t'
   526  007B18  65                 	db	101	;'e'
   527  007B19  6D                 	db	109	;'m'
   528  007B1A  20                 	db	32
   529  007B1B  49                 	db	73	;'I'
   530  007B1C  6E                 	db	110	;'n'
   531  007B1D  69                 	db	105	;'i'
   532  007B1E  74                 	db	116	;'t'
   533  007B1F  69                 	db	105	;'i'
   534  007B20  61                 	db	97	;'a'
   535  007B21  6C                 	db	108	;'l'
   536  007B22  69                 	db	105	;'i'
   537  007B23  7A                 	db	122	;'z'
   538  007B24  61                 	db	97	;'a'
   539  007B25  74                 	db	116	;'t'
   540  007B26  69                 	db	105	;'i'
   541  007B27  6F                 	db	111	;'o'
   542  007B28  6E                 	db	110	;'n'
   543  007B29  20                 	db	32
   544  007B2A  66                 	db	102	;'f'
   545  007B2B  61                 	db	97	;'a'
   546  007B2C  69                 	db	105	;'i'
   547  007B2D  6C                 	db	108	;'l'
   548  007B2E  65                 	db	101	;'e'
   549  007B2F  64                 	db	100	;'d'
   550  007B30  2E                 	db	46
   551  007B31  0D                 	db	13
   552  007B32  0D                 	db	13
   553  007B33  00                 	db	0
   554  007B34                     STR_8:
   555  007B34  53                 	db	83	;'S'
   556  007B35  65                 	db	101	;'e'
   557  007B36  74                 	db	116	;'t'
   558  007B37  74                 	db	116	;'t'
   559  007B38  69                 	db	105	;'i'
   560  007B39  6E                 	db	110	;'n'
   561  007B3A  67                 	db	103	;'g'
   562  007B3B  20                 	db	32
   563  007B3C  48                 	db	72	;'H'
   564  007B3D  54                 	db	84	;'T'
   565  007B3E  54                 	db	84	;'T'
   566  007B3F  50                 	db	80	;'P'
   567  007B40  20                 	db	32
   568  007B41  63                 	db	99	;'c'
   569  007B42  6F                 	db	111	;'o'
   570  007B43  6E                 	db	110	;'n'
   571  007B44  66                 	db	102	;'f'
   572  007B45  69                 	db	105	;'i'
   573  007B46  67                 	db	103	;'g'
   574  007B47  75                 	db	117	;'u'
   575  007B48  72                 	db	114	;'r'
   576  007B49  61                 	db	97	;'a'
   577  007B4A  74                 	db	116	;'t'
   578  007B4B  69                 	db	105	;'i'
   579  007B4C  6F                 	db	111	;'o'
   580  007B4D  6E                 	db	110	;'n'
   581  007B4E  73                 	db	115	;'s'
   582  007B4F  2E                 	db	46
   583  007B50  2E                 	db	46
   584  007B51  2E                 	db	46
   585  007B52  0D                 	db	13
   586  007B53  00                 	db	0
   587  007B54                     STR_6:
   588  007B54  42                 	db	66	;'B'
   589  007B55  65                 	db	101	;'e'
   590  007B56  61                 	db	97	;'a'
   591  007B57  72                 	db	114	;'r'
   592  007B58  65                 	db	101	;'e'
   593  007B59  72                 	db	114	;'r'
   594  007B5A  20                 	db	32
   595  007B5B  70                 	db	112	;'p'
   596  007B5C  72                 	db	114	;'r'
   597  007B5D  6F                 	db	111	;'o'
   598  007B5E  66                 	db	102	;'f'
   599  007B5F  69                 	db	105	;'i'
   600  007B60  6C                 	db	108	;'l'
   601  007B61  65                 	db	101	;'e'
   602  007B62  20                 	db	32
   603  007B63  41                 	db	65	;'A'
   604  007B64  63                 	db	99	;'c'
   605  007B65  74                 	db	116	;'t'
   606  007B66  69                 	db	105	;'i'
   607  007B67  76                 	db	118	;'v'
   608  007B68  61                 	db	97	;'a'
   609  007B69  74                 	db	116	;'t'
   610  007B6A  65                 	db	101	;'e'
   611  007B6B  64                 	db	100	;'d'
   612  007B6C  2C                 	db	44
   613  007B6D  20                 	db	32
   614  007B6E  49                 	db	73	;'I'
   615  007B6F  50                 	db	80	;'P'
   616  007B70  3A                 	db	58	;':'
   617  007B71  20                 	db	32
   618  007B72  00                 	db	0
   619  007B73                     STR_2:
   620  007B73  53                 	db	83	;'S'
   621  007B74  65                 	db	101	;'e'
   622  007B75  74                 	db	116	;'t'
   623  007B76  74                 	db	116	;'t'
   624  007B77  69                 	db	105	;'i'
   625  007B78  6E                 	db	110	;'n'
   626  007B79  67                 	db	103	;'g'
   627  007B7A  20                 	db	32
   628  007B7B  49                 	db	73	;'I'
   629  007B7C  50                 	db	80	;'P'
   630  007B7D  20                 	db	32
   631  007B7E  63                 	db	99	;'c'
   632  007B7F  6F                 	db	111	;'o'
   633  007B80  6E                 	db	110	;'n'
   634  007B81  66                 	db	102	;'f'
   635  007B82  69                 	db	105	;'i'
   636  007B83  67                 	db	103	;'g'
   637  007B84  75                 	db	117	;'u'
   638  007B85  72                 	db	114	;'r'
   639  007B86  61                 	db	97	;'a'
   640  007B87  74                 	db	116	;'t'
   641  007B88  69                 	db	105	;'i'
   642  007B89  6F                 	db	111	;'o'
   643  007B8A  6E                 	db	110	;'n'
   644  007B8B  73                 	db	115	;'s'
   645  007B8C  2E                 	db	46
   646  007B8D  2E                 	db	46
   647  007B8E  2E                 	db	46
   648  007B8F  0D                 	db	13
   649  007B90  00                 	db	0
   650  007B91  41                 	db	65	;'A'
   651  007B92  54                 	db	84	;'T'
   652  007B93  2B                 	db	43
   653  007B94  43                 	db	67	;'C'
   654  007B95  47                 	db	71	;'G'
   655  007B96  51                 	db	81	;'Q'
   656  007B97  4D                 	db	77	;'M'
   657  007B98  49                 	db	73	;'I'
   658  007B99  4E                 	db	78	;'N'
   659  007B9A  3D                 	db	61	;'='
   660  007B9B  25                 	db	37
   661  007B9C  75                 	db	117	;'u'
   662  007B9D  2C                 	db	44
   663  007B9E  25                 	db	37
   664  007B9F  75                 	db	117	;'u'
   665  007BA0  2C                 	db	44
   666  007BA1  25                 	db	37
   667  007BA2  75                 	db	117	;'u'
   668  007BA3  2C                 	db	44
   669  007BA4  25                 	db	37
   670  007BA5  75                 	db	117	;'u'
   671  007BA6  2C                 	db	44
   672  007BA7  25                 	db	37
   673  007BA8  75                 	db	117	;'u'
   674  007BA9  2C                 	db	44
   675  007BAA  25                 	db	37
   676  007BAB  75                 	db	117	;'u'
   677  007BAC  0D                 	db	13
   678  007BAD  00                 	db	0
   679  007BAE  41                 	db	65	;'A'
   680  007BAF  54                 	db	84	;'T'
   681  007BB0  2B                 	db	43
   682  007BB1  43                 	db	67	;'C'
   683  007BB2  47                 	db	71	;'G'
   684  007BB3  51                 	db	81	;'Q'
   685  007BB4  52                 	db	82	;'R'
   686  007BB5  45                 	db	69	;'E'
   687  007BB6  51                 	db	81	;'Q'
   688  007BB7  3D                 	db	61	;'='
   689  007BB8  25                 	db	37
   690  007BB9  75                 	db	117	;'u'
   691  007BBA  2C                 	db	44
   692  007BBB  25                 	db	37
   693  007BBC  75                 	db	117	;'u'
   694  007BBD  2C                 	db	44
   695  007BBE  25                 	db	37
   696  007BBF  75                 	db	117	;'u'
   697  007BC0  2C                 	db	44
   698  007BC1  25                 	db	37
   699  007BC2  75                 	db	117	;'u'
   700  007BC3  2C                 	db	44
   701  007BC4  25                 	db	37
   702  007BC5  75                 	db	117	;'u'
   703  007BC6  2C                 	db	44
   704  007BC7  25                 	db	37
   705  007BC8  75                 	db	117	;'u'
   706  007BC9  0D                 	db	13
   707  007BCA  00                 	db	0
   708  007BCB  41                 	db	65	;'A'
   709  007BCC  54                 	db	84	;'T'
   710  007BCD  2B                 	db	43
   711  007BCE  48                 	db	72	;'H'
   712  007BCF  54                 	db	84	;'T'
   713  007BD0  54                 	db	84	;'T'
   714  007BD1  50                 	db	80	;'P'
   715  007BD2  50                 	db	80	;'P'
   716  007BD3  41                 	db	65	;'A'
   717  007BD4  52                 	db	82	;'R'
   718  007BD5  41                 	db	65	;'A'
   719  007BD6  3D                 	db	61	;'='
   720  007BD7  22                 	db	34
   721  007BD8  42                 	db	66	;'B'
   722  007BD9  52                 	db	82	;'R'
   723  007BDA  45                 	db	69	;'E'
   724  007BDB  41                 	db	65	;'A'
   725  007BDC  4B                 	db	75	;'K'
   726  007BDD  45                 	db	69	;'E'
   727  007BDE  4E                 	db	78	;'N'
   728  007BDF  44                 	db	68	;'D'
   729  007BE0  22                 	db	34
   730  007BE1  2C                 	db	44
   731  007BE2  25                 	db	37
   732  007BE3  6C                 	db	108	;'l'
   733  007BE4  64                 	db	100	;'d'
   734  007BE5  0D                 	db	13
   735  007BE6  00                 	db	0
   736  007BE7                     STR_24:
   737  007BE7  52                 	db	82	;'R'
   738  007BE8  65                 	db	101	;'e'
   739  007BE9  63                 	db	99	;'c'
   740  007BEA  65                 	db	101	;'e'
   741  007BEB  69                 	db	105	;'i'
   742  007BEC  76                 	db	118	;'v'
   743  007BED  65                 	db	101	;'e'
   744  007BEE  64                 	db	100	;'d'
   745  007BEF  20                 	db	32
   746  007BF0  64                 	db	100	;'d'
   747  007BF1  61                 	db	97	;'a'
   748  007BF2  74                 	db	116	;'t'
   749  007BF3  61                 	db	97	;'a'
   750  007BF4  20                 	db	32
   751  007BF5  6C                 	db	108	;'l'
   752  007BF6  65                 	db	101	;'e'
   753  007BF7  6E                 	db	110	;'n'
   754  007BF8  67                 	db	103	;'g'
   755  007BF9  74                 	db	116	;'t'
   756  007BFA  68                 	db	104	;'h'
   757  007BFB  3A                 	db	58	;':'
   758  007BFC  20                 	db	32
   759  007BFD  25                 	db	37
   760  007BFE  6C                 	db	108	;'l'
   761  007BFF  64                 	db	100	;'d'
   762  007C00  0D                 	db	13
   763  007C01  00                 	db	0
   764  007C02  41                 	db	65	;'A'
   765  007C03  54                 	db	84	;'T'
   766  007C04  2B                 	db	43
   767  007C05  48                 	db	72	;'H'
   768  007C06  54                 	db	84	;'T'
   769  007C07  54                 	db	84	;'T'
   770  007C08  50                 	db	80	;'P'
   771  007C09  50                 	db	80	;'P'
   772  007C0A  41                 	db	65	;'A'
   773  007C0B  52                 	db	82	;'R'
   774  007C0C  41                 	db	65	;'A'
   775  007C0D  3D                 	db	61	;'='
   776  007C0E  22                 	db	34
   777  007C0F  50                 	db	80	;'P'
   778  007C10  52                 	db	82	;'R'
   779  007C11  4F                 	db	79	;'O'
   780  007C12  50                 	db	80	;'P'
   781  007C13  4F                 	db	79	;'O'
   782  007C14  52                 	db	82	;'R'
   783  007C15  54                 	db	84	;'T'
   784  007C16  22                 	db	34
   785  007C17  2C                 	db	44
   786  007C18  25                 	db	37
   787  007C19  75                 	db	117	;'u'
   788  007C1A  0D                 	db	13
   789  007C1B  00                 	db	0
   790  007C1C  41                 	db	65	;'A'
   791  007C1D  54                 	db	84	;'T'
   792  007C1E  2B                 	db	43
   793  007C1F  48                 	db	72	;'H'
   794  007C20  54                 	db	84	;'T'
   795  007C21  54                 	db	84	;'T'
   796  007C22  50                 	db	80	;'P'
   797  007C23  50                 	db	80	;'P'
   798  007C24  41                 	db	65	;'A'
   799  007C25  52                 	db	82	;'R'
   800  007C26  41                 	db	65	;'A'
   801  007C27  3D                 	db	61	;'='
   802  007C28  22                 	db	34
   803  007C29  54                 	db	84	;'T'
   804  007C2A  49                 	db	73	;'I'
   805  007C2B  4D                 	db	77	;'M'
   806  007C2C  45                 	db	69	;'E'
   807  007C2D  4F                 	db	79	;'O'
   808  007C2E  55                 	db	85	;'U'
   809  007C2F  54                 	db	84	;'T'
   810  007C30  22                 	db	34
   811  007C31  2C                 	db	44
   812  007C32  25                 	db	37
   813  007C33  75                 	db	117	;'u'
   814  007C34  0D                 	db	13
   815  007C35  00                 	db	0
   816  007C36  41                 	db	65	;'A'
   817  007C37  54                 	db	84	;'T'
   818  007C38  2B                 	db	43
   819  007C39  48                 	db	72	;'H'
   820  007C3A  54                 	db	84	;'T'
   821  007C3B  54                 	db	84	;'T'
   822  007C3C  50                 	db	80	;'P'
   823  007C3D  50                 	db	80	;'P'
   824  007C3E  41                 	db	65	;'A'
   825  007C3F  52                 	db	82	;'R'
   826  007C40  41                 	db	65	;'A'
   827  007C41  3D                 	db	61	;'='
   828  007C42  22                 	db	34
   829  007C43  42                 	db	66	;'B'
   830  007C44  52                 	db	82	;'R'
   831  007C45  45                 	db	69	;'E'
   832  007C46  41                 	db	65	;'A'
   833  007C47  4B                 	db	75	;'K'
   834  007C48  22                 	db	34
   835  007C49  2C                 	db	44
   836  007C4A  25                 	db	37
   837  007C4B  6C                 	db	108	;'l'
   838  007C4C  64                 	db	100	;'d'
   839  007C4D  0D                 	db	13
   840  007C4E  00                 	db	0
   841  007C4F  41                 	db	65	;'A'
   842  007C50  54                 	db	84	;'T'
   843  007C51  2B                 	db	43
   844  007C52  48                 	db	72	;'H'
   845  007C53  54                 	db	84	;'T'
   846  007C54  54                 	db	84	;'T'
   847  007C55  50                 	db	80	;'P'
   848  007C56  50                 	db	80	;'P'
   849  007C57  41                 	db	65	;'A'
   850  007C58  52                 	db	82	;'R'
   851  007C59  41                 	db	65	;'A'
   852  007C5A  3D                 	db	61	;'='
   853  007C5B  22                 	db	34
   854  007C5C  52                 	db	82	;'R'
   855  007C5D  45                 	db	69	;'E'
   856  007C5E  44                 	db	68	;'D'
   857  007C5F  49                 	db	73	;'I'
   858  007C60  52                 	db	82	;'R'
   859  007C61  22                 	db	34
   860  007C62  2C                 	db	44
   861  007C63  25                 	db	37
   862  007C64  75                 	db	117	;'u'
   863  007C65  0D                 	db	13
   864  007C66  00                 	db	0
   865  007C67  41                 	db	65	;'A'
   866  007C68  54                 	db	84	;'T'
   867  007C69  2B                 	db	43
   868  007C6A  48                 	db	72	;'H'
   869  007C6B  54                 	db	84	;'T'
   870  007C6C  54                 	db	84	;'T'
   871  007C6D  50                 	db	80	;'P'
   872  007C6E  50                 	db	80	;'P'
   873  007C6F  41                 	db	65	;'A'
   874  007C70  52                 	db	82	;'R'
   875  007C71  41                 	db	65	;'A'
   876  007C72  3D                 	db	61	;'='
   877  007C73  22                 	db	34
   878  007C74  55                 	db	85	;'U'
   879  007C75  53                 	db	83	;'S'
   880  007C76  45                 	db	69	;'E'
   881  007C77  52                 	db	82	;'R'
   882  007C78  44                 	db	68	;'D'
   883  007C79  41                 	db	65	;'A'
   884  007C7A  54                 	db	84	;'T'
   885  007C7B  41                 	db	65	;'A'
   886  007C7C  22                 	db	34
   887  007C7D  2C                 	db	44
   888  007C7E  00                 	db	0
   889  007C7F                     STR_23:
   890  007C7F  48                 	db	72	;'H'
   891  007C80  54                 	db	84	;'T'
   892  007C81  54                 	db	84	;'T'
   893  007C82  50                 	db	80	;'P'
   894  007C83  20                 	db	32
   895  007C84  72                 	db	114	;'r'
   896  007C85  65                 	db	101	;'e'
   897  007C86  73                 	db	115	;'s'
   898  007C87  70                 	db	112	;'p'
   899  007C88  6F                 	db	111	;'o'
   900  007C89  6E                 	db	110	;'n'
   901  007C8A  73                 	db	115	;'s'
   902  007C8B  65                 	db	101	;'e'
   903  007C8C  20                 	db	32
   904  007C8D  63                 	db	99	;'c'
   905  007C8E  6F                 	db	111	;'o'
   906  007C8F  64                 	db	100	;'d'
   907  007C90  65                 	db	101	;'e'
   908  007C91  3A                 	db	58	;':'
   909  007C92  20                 	db	32
   910  007C93  25                 	db	37
   911  007C94  75                 	db	117	;'u'
   912  007C95  0D                 	db	13
   913  007C96  00                 	db	0
   914  007C97                     STR_96:
   915  007C97  41                 	db	65	;'A'
   916  007C98  54                 	db	84	;'T'
   917  007C99  2B                 	db	43
   918  007C9A  48                 	db	72	;'H'
   919  007C9B  54                 	db	84	;'T'
   920  007C9C  54                 	db	84	;'T'
   921  007C9D  50                 	db	80	;'P'
   922  007C9E  50                 	db	80	;'P'
   923  007C9F  41                 	db	65	;'A'
   924  007CA0  52                 	db	82	;'R'
   925  007CA1  41                 	db	65	;'A'
   926  007CA2  3D                 	db	61	;'='
   927  007CA3  22                 	db	34
   928  007CA4  43                 	db	67	;'C'
   929  007CA5  4F                 	db	79	;'O'
   930  007CA6  4E                 	db	78	;'N'
   931  007CA7  54                 	db	84	;'T'
   932  007CA8  45                 	db	69	;'E'
   933  007CA9  4E                 	db	78	;'N'
   934  007CAA  54                 	db	84	;'T'
   935  007CAB  22                 	db	34
   936  007CAC  2C                 	db	44
   937  007CAD  00                 	db	0
   938  007CAE                     STR_12:
   939  007CAE  45                 	db	69	;'E'
   940  007CAF  6E                 	db	110	;'n'
   941  007CB0  67                 	db	103	;'g'
   942  007CB1  69                 	db	105	;'i'
   943  007CB2  6E                 	db	110	;'n'
   944  007CB3  65                 	db	101	;'e'
   945  007CB4  20                 	db	32
   946  007CB5  54                 	db	84	;'T'
   947  007CB6  65                 	db	101	;'e'
   948  007CB7  6D                 	db	109	;'m'
   949  007CB8  70                 	db	112	;'p'
   950  007CB9  65                 	db	101	;'e'
   951  007CBA  72                 	db	114	;'r'
   952  007CBB  61                 	db	97	;'a'
   953  007CBC  74                 	db	116	;'t'
   954  007CBD  75                 	db	117	;'u'
   955  007CBE  72                 	db	114	;'r'
   956  007CBF  65                 	db	101	;'e'
   957  007CC0  20                 	db	32
   958  007CC1  28                 	db	40
   959  007CC2  43                 	db	67	;'C'
   960  007CC3  29                 	db	41
   961  007CC4  00                 	db	0
   962  007CC5                     STR_98:
   963  007CC5  41                 	db	65	;'A'
   964  007CC6  54                 	db	84	;'T'
   965  007CC7  2B                 	db	43
   966  007CC8  48                 	db	72	;'H'
   967  007CC9  54                 	db	84	;'T'
   968  007CCA  54                 	db	84	;'T'
   969  007CCB  50                 	db	80	;'P'
   970  007CCC  44                 	db	68	;'D'
   971  007CCD  41                 	db	65	;'A'
   972  007CCE  54                 	db	84	;'T'
   973  007CCF  41                 	db	65	;'A'
   974  007CD0  3D                 	db	61	;'='
   975  007CD1  25                 	db	37
   976  007CD2  6C                 	db	108	;'l'
   977  007CD3  64                 	db	100	;'d'
   978  007CD4  2C                 	db	44
   979  007CD5  25                 	db	37
   980  007CD6  6C                 	db	108	;'l'
   981  007CD7  64                 	db	100	;'d'
   982  007CD8  0D                 	db	13
   983  007CD9  00                 	db	0
   984  007CDA                     STR_100:
   985  007CDA  41                 	db	65	;'A'
   986  007CDB  54                 	db	84	;'T'
   987  007CDC  2B                 	db	43
   988  007CDD  48                 	db	72	;'H'
   989  007CDE  54                 	db	84	;'T'
   990  007CDF  54                 	db	84	;'T'
   991  007CE0  50                 	db	80	;'P'
   992  007CE1  52                 	db	82	;'R'
   993  007CE2  45                 	db	69	;'E'
   994  007CE3  41                 	db	65	;'A'
   995  007CE4  44                 	db	68	;'D'
   996  007CE5  3D                 	db	61	;'='
   997  007CE6  25                 	db	37
   998  007CE7  6C                 	db	108	;'l'
   999  007CE8  64                 	db	100	;'d'
  1000  007CE9  2C                 	db	44
  1001  007CEA  25                 	db	37
  1002  007CEB  6C                 	db	108	;'l'
  1003  007CEC  64                 	db	100	;'d'
  1004  007CED  0D                 	db	13
  1005  007CEE  00                 	db	0
  1006  007CEF  41                 	db	65	;'A'
  1007  007CF0  54                 	db	84	;'T'
  1008  007CF1  2B                 	db	43
  1009  007CF2  48                 	db	72	;'H'
  1010  007CF3  54                 	db	84	;'T'
  1011  007CF4  54                 	db	84	;'T'
  1012  007CF5  50                 	db	80	;'P'
  1013  007CF6  50                 	db	80	;'P'
  1014  007CF7  41                 	db	65	;'A'
  1015  007CF8  52                 	db	82	;'R'
  1016  007CF9  41                 	db	65	;'A'
  1017  007CFA  3D                 	db	61	;'='
  1018  007CFB  22                 	db	34
  1019  007CFC  50                 	db	80	;'P'
  1020  007CFD  52                 	db	82	;'R'
  1021  007CFE  4F                 	db	79	;'O'
  1022  007CFF  49                 	db	73	;'I'
  1023  007D00  50                 	db	80	;'P'
  1024  007D01  22                 	db	34
  1025  007D02  2C                 	db	44
  1026  007D03  00                 	db	0
  1027  007D04                     STR_1:
  1028  007D04  4D                 	db	77	;'M'
  1029  007D05  6F                 	db	111	;'o'
  1030  007D06  64                 	db	100	;'d'
  1031  007D07  65                 	db	101	;'e'
  1032  007D08  6D                 	db	109	;'m'
  1033  007D09  20                 	db	32
  1034  007D0A  49                 	db	73	;'I'
  1035  007D0B  6E                 	db	110	;'n'
  1036  007D0C  69                 	db	105	;'i'
  1037  007D0D  74                 	db	116	;'t'
  1038  007D0E  69                 	db	105	;'i'
  1039  007D0F  61                 	db	97	;'a'
  1040  007D10  6C                 	db	108	;'l'
  1041  007D11  69                 	db	105	;'i'
  1042  007D12  7A                 	db	122	;'z'
  1043  007D13  65                 	db	101	;'e'
  1044  007D14  64                 	db	100	;'d'
  1045  007D15  2E                 	db	46
  1046  007D16  0D                 	db	13
  1047  007D17  0D                 	db	13
  1048  007D18  00                 	db	0
  1049  007D19  41                 	db	65	;'A'
  1050  007D1A  54                 	db	84	;'T'
  1051  007D1B  2B                 	db	43
  1052  007D1C  43                 	db	67	;'C'
  1053  007D1D  47                 	db	71	;'G'
  1054  007D1E  44                 	db	68	;'D'
  1055  007D1F  41                 	db	65	;'A'
  1056  007D20  54                 	db	84	;'T'
  1057  007D21  41                 	db	65	;'A'
  1058  007D22  3D                 	db	61	;'='
  1059  007D23  22                 	db	34
  1060  007D24  50                 	db	80	;'P'
  1061  007D25  50                 	db	80	;'P'
  1062  007D26  50                 	db	80	;'P'
  1063  007D27  22                 	db	34
  1064  007D28  2C                 	db	44
  1065  007D29  25                 	db	37
  1066  007D2A  75                 	db	117	;'u'
  1067  007D2B  0D                 	db	13
  1068  007D2C  00                 	db	0
  1069  007D2D                     STR_16:
  1070  007D2D  56                 	db	86	;'V'
  1071  007D2E  65                 	db	101	;'e'
  1072  007D2F  68                 	db	104	;'h'
  1073  007D30  69                 	db	105	;'i'
  1074  007D31  63                 	db	99	;'c'
  1075  007D32  6C                 	db	108	;'l'
  1076  007D33  65                 	db	101	;'e'
  1077  007D34  20                 	db	32
  1078  007D35  53                 	db	83	;'S'
  1079  007D36  70                 	db	112	;'p'
  1080  007D37  65                 	db	101	;'e'
  1081  007D38  65                 	db	101	;'e'
  1082  007D39  64                 	db	100	;'d'
  1083  007D3A  20                 	db	32
  1084  007D3B  28                 	db	40
  1085  007D3C  4D                 	db	77	;'M'
  1086  007D3D  50                 	db	80	;'P'
  1087  007D3E  48                 	db	72	;'H'
  1088  007D3F  29                 	db	41
  1089  007D40  00                 	db	0
  1090  007D41  41                 	db	65	;'A'
  1091  007D42  54                 	db	84	;'T'
  1092  007D43  2B                 	db	43
  1093  007D44  48                 	db	72	;'H'
  1094  007D45  54                 	db	84	;'T'
  1095  007D46  54                 	db	84	;'T'
  1096  007D47  50                 	db	80	;'P'
  1097  007D48  50                 	db	80	;'P'
  1098  007D49  41                 	db	65	;'A'
  1099  007D4A  52                 	db	82	;'R'
  1100  007D4B  41                 	db	65	;'A'
  1101  007D4C  3D                 	db	61	;'='
  1102  007D4D  22                 	db	34
  1103  007D4E  43                 	db	67	;'C'
  1104  007D4F  49                 	db	73	;'I'
  1105  007D50  44                 	db	68	;'D'
  1106  007D51  22                 	db	34
  1107  007D52  2C                 	db	44
  1108  007D53  00                 	db	0
  1109  007D54                     STR_88:
  1110  007D54  41                 	db	65	;'A'
  1111  007D55  54                 	db	84	;'T'
  1112  007D56  2B                 	db	43
  1113  007D57  48                 	db	72	;'H'
  1114  007D58  54                 	db	84	;'T'
  1115  007D59  54                 	db	84	;'T'
  1116  007D5A  50                 	db	80	;'P'
  1117  007D5B  50                 	db	80	;'P'
  1118  007D5C  41                 	db	65	;'A'
  1119  007D5D  52                 	db	82	;'R'
  1120  007D5E  41                 	db	65	;'A'
  1121  007D5F  3D                 	db	61	;'='
  1122  007D60  22                 	db	34
  1123  007D61  55                 	db	85	;'U'
  1124  007D62  52                 	db	82	;'R'
  1125  007D63  4C                 	db	76	;'L'
  1126  007D64  22                 	db	34
  1127  007D65  2C                 	db	44
  1128  007D66  00                 	db	0
  1129  007D67                     STR_99:
  1130  007D67  41                 	db	65	;'A'
  1131  007D68  54                 	db	84	;'T'
  1132  007D69  2B                 	db	43
  1133  007D6A  48                 	db	72	;'H'
  1134  007D6B  54                 	db	84	;'T'
  1135  007D6C  54                 	db	84	;'T'
  1136  007D6D  50                 	db	80	;'P'
  1137  007D6E  41                 	db	65	;'A'
  1138  007D6F  43                 	db	67	;'C'
  1139  007D70  54                 	db	84	;'T'
  1140  007D71  49                 	db	73	;'I'
  1141  007D72  4F                 	db	79	;'O'
  1142  007D73  4E                 	db	78	;'N'
  1143  007D74  3D                 	db	61	;'='
  1144  007D75  25                 	db	37
  1145  007D76  75                 	db	117	;'u'
  1146  007D77  0D                 	db	13
  1147  007D78  00                 	db	0
  1148  007D79  41                 	db	65	;'A'
  1149  007D7A  54                 	db	84	;'T'
  1150  007D7B  2B                 	db	43
  1151  007D7C  48                 	db	72	;'H'
  1152  007D7D  54                 	db	84	;'T'
  1153  007D7E  54                 	db	84	;'T'
  1154  007D7F  50                 	db	80	;'P'
  1155  007D80  50                 	db	80	;'P'
  1156  007D81  41                 	db	65	;'A'
  1157  007D82  52                 	db	82	;'R'
  1158  007D83  41                 	db	65	;'A'
  1159  007D84  3D                 	db	61	;'='
  1160  007D85  22                 	db	34
  1161  007D86  55                 	db	85	;'U'
  1162  007D87  41                 	db	65	;'A'
  1163  007D88  22                 	db	34
  1164  007D89  2C                 	db	44
  1165  007D8A  00                 	db	0
  1166  007D8B                     STR_27:
  1167  007D8B  53                 	db	83	;'S'
  1168  007D8C  65                 	db	101	;'e'
  1169  007D8D  6E                 	db	110	;'n'
  1170  007D8E  64                 	db	100	;'d'
  1171  007D8F  69                 	db	105	;'i'
  1172  007D90  6E                 	db	110	;'n'
  1173  007D91  67                 	db	103	;'g'
  1174  007D92  20                 	db	32
  1175  007D93  66                 	db	102	;'f'
  1176  007D94  61                 	db	97	;'a'
  1177  007D95  69                 	db	105	;'i'
  1178  007D96  6C                 	db	108	;'l'
  1179  007D97  65                 	db	101	;'e'
  1180  007D98  64                 	db	100	;'d'
  1181  007D99  2E                 	db	46
  1182  007D9A  0D                 	db	13
  1183  007D9B  00                 	db	0
  1184  007D9C                     STR_10:
  1185  007D9C  61                 	db	97	;'a'
  1186  007D9D  70                 	db	112	;'p'
  1187  007D9E  70                 	db	112	;'p'
  1188  007D9F  6C                 	db	108	;'l'
  1189  007DA0  69                 	db	105	;'i'
  1190  007DA1  63                 	db	99	;'c'
  1191  007DA2  61                 	db	97	;'a'
  1192  007DA3  74                 	db	116	;'t'
  1193  007DA4  69                 	db	105	;'i'
  1194  007DA5  6F                 	db	111	;'o'
  1195  007DA6  6E                 	db	110	;'n'
  1196  007DA7  2F                 	db	47
  1197  007DA8  6A                 	db	106	;'j'
  1198  007DA9  73                 	db	115	;'s'
  1199  007DAA  6F                 	db	111	;'o'
  1200  007DAB  6E                 	db	110	;'n'
  1201  007DAC  00                 	db	0
  1202  007DAD  41                 	db	65	;'A'
  1203  007DAE  54                 	db	84	;'T'
  1204  007DAF  2B                 	db	43
  1205  007DB0  48                 	db	72	;'H'
  1206  007DB1  54                 	db	84	;'T'
  1207  007DB2  54                 	db	84	;'T'
  1208  007DB3  50                 	db	80	;'P'
  1209  007DB4  53                 	db	83	;'S'
  1210  007DB5  54                 	db	84	;'T'
  1211  007DB6  41                 	db	65	;'A'
  1212  007DB7  54                 	db	84	;'T'
  1213  007DB8  55                 	db	85	;'U'
  1214  007DB9  53                 	db	83	;'S'
  1215  007DBA  3F                 	db	63	;'?'
  1216  007DBB  0D                 	db	13
  1217  007DBC  00                 	db	0
  1218  007DBD  41                 	db	65	;'A'
  1219  007DBE  54                 	db	84	;'T'
  1220  007DBF  2B                 	db	43
  1221  007DC0  48                 	db	72	;'H'
  1222  007DC1  54                 	db	84	;'T'
  1223  007DC2  54                 	db	84	;'T'
  1224  007DC3  50                 	db	80	;'P'
  1225  007DC4  47                 	db	71	;'G'
  1226  007DC5  45                 	db	69	;'E'
  1227  007DC6  54                 	db	84	;'T'
  1228  007DC7  48                 	db	72	;'H'
  1229  007DC8  45                 	db	69	;'E'
  1230  007DC9  41                 	db	65	;'A'
  1231  007DCA  44                 	db	68	;'D'
  1232  007DCB  3D                 	db	61	;'='
  1233  007DCC  00                 	db	0
  1234  007DCD  41                 	db	65	;'A'
  1235  007DCE  54                 	db	84	;'T'
  1236  007DCF  2B                 	db	43
  1237  007DD0  53                 	db	83	;'S'
  1238  007DD1  41                 	db	65	;'A'
  1239  007DD2  50                 	db	80	;'P'
  1240  007DD3  42                 	db	66	;'B'
  1241  007DD4  52                 	db	82	;'R'
  1242  007DD5  3D                 	db	61	;'='
  1243  007DD6  34                 	db	52	;'4'
  1244  007DD7  2C                 	db	44
  1245  007DD8  25                 	db	37
  1246  007DD9  75                 	db	117	;'u'
  1247  007DDA  0D                 	db	13
  1248  007DDB  00                 	db	0
  1249  007DDC  41                 	db	65	;'A'
  1250  007DDD  54                 	db	84	;'T'
  1251  007DDE  2B                 	db	43
  1252  007DDF  43                 	db	67	;'C'
  1253  007DE0  47                 	db	71	;'G'
  1254  007DE1  50                 	db	80	;'P'
  1255  007DE2  41                 	db	65	;'A'
  1256  007DE3  44                 	db	68	;'D'
  1257  007DE4  44                 	db	68	;'D'
  1258  007DE5  52                 	db	82	;'R'
  1259  007DE6  3D                 	db	61	;'='
  1260  007DE7  25                 	db	37
  1261  007DE8  75                 	db	117	;'u'
  1262  007DE9  0D                 	db	13
  1263  007DEA  00                 	db	0
  1264  007DEB                     STR_18:
  1265  007DEB  46                 	db	70	;'F'
  1266  007DEC  75                 	db	117	;'u'
  1267  007DED  65                 	db	101	;'e'
  1268  007DEE  6C                 	db	108	;'l'
  1269  007DEF  20                 	db	32
  1270  007DF0  4C                 	db	76	;'L'
  1271  007DF1  65                 	db	101	;'e'
  1272  007DF2  76                 	db	118	;'v'
  1273  007DF3  65                 	db	101	;'e'
  1274  007DF4  6C                 	db	108	;'l'
  1275  007DF5  20                 	db	32
  1276  007DF6  28                 	db	40
  1277  007DF7  25                 	db	37
  1278  007DF8  29                 	db	41
  1279  007DF9  00                 	db	0
  1280  007DFA  41                 	db	65	;'A'
  1281  007DFB  54                 	db	84	;'T'
  1282  007DFC  2B                 	db	43
  1283  007DFD  48                 	db	72	;'H'
  1284  007DFE  54                 	db	84	;'T'
  1285  007DFF  54                 	db	84	;'T'
  1286  007E00  50                 	db	80	;'P'
  1287  007E01  53                 	db	83	;'S'
  1288  007E02  43                 	db	67	;'C'
  1289  007E03  4F                 	db	79	;'O'
  1290  007E04  4E                 	db	78	;'N'
  1291  007E05  54                 	db	84	;'T'
  1292  007E06  0D                 	db	13
  1293  007E07  00                 	db	0
  1294  007E08  41                 	db	65	;'A'
  1295  007E09  54                 	db	84	;'T'
  1296  007E0A  2B                 	db	43
  1297  007E0B  43                 	db	67	;'C'
  1298  007E0C  46                 	db	70	;'F'
  1299  007E0D  55                 	db	85	;'U'
  1300  007E0E  4E                 	db	78	;'N'
  1301  007E0F  3D                 	db	61	;'='
  1302  007E10  31                 	db	49	;'1'
  1303  007E11  2C                 	db	44
  1304  007E12  31                 	db	49	;'1'
  1305  007E13  0D                 	db	13
  1306  007E14  00                 	db	0
  1307  007E15  41                 	db	65	;'A'
  1308  007E16  54                 	db	84	;'T'
  1309  007E17  2B                 	db	43
  1310  007E18  43                 	db	67	;'C'
  1311  007E19  47                 	db	71	;'G'
  1312  007E1A  43                 	db	67	;'C'
  1313  007E1B  4C                 	db	76	;'L'
  1314  007E1C  41                 	db	65	;'A'
  1315  007E1D  53                 	db	83	;'S'
  1316  007E1E  53                 	db	83	;'S'
  1317  007E1F  3F                 	db	63	;'?'
  1318  007E20  0D                 	db	13
  1319  007E21  00                 	db	0
  1320  007E22  41                 	db	65	;'A'
  1321  007E23  54                 	db	84	;'T'
  1322  007E24  2B                 	db	43
  1323  007E25  48                 	db	72	;'H'
  1324  007E26  54                 	db	84	;'T'
  1325  007E27  54                 	db	84	;'T'
  1326  007E28  50                 	db	80	;'P'
  1327  007E29  48                 	db	72	;'H'
  1328  007E2A  45                 	db	69	;'E'
  1329  007E2B  41                 	db	65	;'A'
  1330  007E2C  44                 	db	68	;'D'
  1331  007E2D  0D                 	db	13
  1332  007E2E  00                 	db	0
  1333  007E2F  41                 	db	65	;'A'
  1334  007E30  54                 	db	84	;'T'
  1335  007E31  2B                 	db	43
  1336  007E32  48                 	db	72	;'H'
  1337  007E33  54                 	db	84	;'T'
  1338  007E34  54                 	db	84	;'T'
  1339  007E35  50                 	db	80	;'P'
  1340  007E36  54                 	db	84	;'T'
  1341  007E37  45                 	db	69	;'E'
  1342  007E38  52                 	db	82	;'R'
  1343  007E39  4D                 	db	77	;'M'
  1344  007E3A  0D                 	db	13
  1345  007E3B  00                 	db	0
  1346  007E3C                     STR_85:
  1347  007E3C  41                 	db	65	;'A'
  1348  007E3D  54                 	db	84	;'T'
  1349  007E3E  2B                 	db	43
  1350  007E3F  48                 	db	72	;'H'
  1351  007E40  54                 	db	84	;'T'
  1352  007E41  54                 	db	84	;'T'
  1353  007E42  50                 	db	80	;'P'
  1354  007E43  49                 	db	73	;'I'
  1355  007E44  4E                 	db	78	;'N'
  1356  007E45  49                 	db	73	;'I'
  1357  007E46  54                 	db	84	;'T'
  1358  007E47  0D                 	db	13
  1359  007E48  00                 	db	0
  1360  007E49  2C                 	db	44
  1361  007E4A  22                 	db	34
  1362  007E4B  50                 	db	80	;'P'
  1363  007E4C  48                 	db	72	;'H'
  1364  007E4D  4F                 	db	79	;'O'
  1365  007E4E  4E                 	db	78	;'N'
  1366  007E4F  45                 	db	69	;'E'
  1367  007E50  4E                 	db	78	;'N'
  1368  007E51  55                 	db	85	;'U'
  1369  007E52  4D                 	db	77	;'M'
  1370  007E53  22                 	db	34
  1371  007E54  2C                 	db	44
  1372  007E55  00                 	db	0
  1373  007E56  41                 	db	65	;'A'
  1374  007E57  54                 	db	84	;'T'
  1375  007E58  2B                 	db	43
  1376  007E59  43                 	db	67	;'C'
  1377  007E5A  47                 	db	71	;'G'
  1378  007E5B  41                 	db	65	;'A'
  1379  007E5C  54                 	db	84	;'T'
  1380  007E5D  54                 	db	84	;'T'
  1381  007E5E  3D                 	db	61	;'='
  1382  007E5F  30                 	db	48	;'0'
  1383  007E60  0D                 	db	13
  1384  007E61  00                 	db	0
  1385  007E62  41                 	db	65	;'A'
  1386  007E63  54                 	db	84	;'T'
  1387  007E64  2B                 	db	43
  1388  007E65  43                 	db	67	;'C'
  1389  007E66  47                 	db	71	;'G'
  1390  007E67  41                 	db	65	;'A'
  1391  007E68  54                 	db	84	;'T'
  1392  007E69  54                 	db	84	;'T'
  1393  007E6A  3D                 	db	61	;'='
  1394  007E6B  31                 	db	49	;'1'
  1395  007E6C  0D                 	db	13
  1396  007E6D  00                 	db	0
  1397  007E6E  41                 	db	65	;'A'
  1398  007E6F  54                 	db	84	;'T'
  1399  007E70  2B                 	db	43
  1400  007E71  43                 	db	67	;'C'
  1401  007E72  47                 	db	71	;'G'
  1402  007E73  45                 	db	69	;'E'
  1403  007E74  52                 	db	82	;'R'
  1404  007E75  45                 	db	69	;'E'
  1405  007E76  50                 	db	80	;'P'
  1406  007E77  3F                 	db	63	;'?'
  1407  007E78  0D                 	db	13
  1408  007E79  00                 	db	0
  1409  007E7A                     STR_30:
  1410  007E7A  41                 	db	65	;'A'
  1411  007E7B  54                 	db	84	;'T'
  1412  007E7C  2B                 	db	43
  1413  007E7D  49                 	db	73	;'I'
  1414  007E7E  50                 	db	80	;'P'
  1415  007E7F  52                 	db	82	;'R'
  1416  007E80  3D                 	db	61	;'='
  1417  007E81  25                 	db	37
  1418  007E82  6C                 	db	108	;'l'
  1419  007E83  64                 	db	100	;'d'
  1420  007E84  0D                 	db	13
  1421  007E85  00                 	db	0
  1422  007E86                     STR_44:
  1423  007E86  2C                 	db	44
  1424  007E87  22                 	db	34
  1425  007E88  43                 	db	67	;'C'
  1426  007E89  4F                 	db	79	;'O'
  1427  007E8A  4E                 	db	78	;'N'
  1428  007E8B  54                 	db	84	;'T'
  1429  007E8C  59                 	db	89	;'Y'
  1430  007E8D  50                 	db	80	;'P'
  1431  007E8E  45                 	db	69	;'E'
  1432  007E8F  22                 	db	34
  1433  007E90  2C                 	db	44
  1434  007E91  00                 	db	0
  1435  007E92  41                 	db	65	;'A'
  1436  007E93  54                 	db	84	;'T'
  1437  007E94  2B                 	db	43
  1438  007E95  53                 	db	83	;'S'
  1439  007E96  41                 	db	65	;'A'
  1440  007E97  50                 	db	80	;'P'
  1441  007E98  42                 	db	66	;'B'
  1442  007E99  52                 	db	82	;'R'
  1443  007E9A  3D                 	db	61	;'='
  1444  007E9B  30                 	db	48	;'0'
  1445  007E9C  2C                 	db	44
  1446  007E9D  00                 	db	0
  1447  007E9E  41                 	db	65	;'A'
  1448  007E9F  54                 	db	84	;'T'
  1449  007EA0  2B                 	db	43
  1450  007EA1  43                 	db	67	;'C'
  1451  007EA2  47                 	db	71	;'G'
  1452  007EA3  41                 	db	65	;'A'
  1453  007EA4  43                 	db	67	;'C'
  1454  007EA5  54                 	db	84	;'T'
  1455  007EA6  3D                 	db	61	;'='
  1456  007EA7  30                 	db	48	;'0'
  1457  007EA8  2C                 	db	44
  1458  007EA9  00                 	db	0
  1459  007EAA                     STR_56:
  1460  007EAA  41                 	db	65	;'A'
  1461  007EAB  54                 	db	84	;'T'
  1462  007EAC  2B                 	db	43
  1463  007EAD  53                 	db	83	;'S'
  1464  007EAE  41                 	db	65	;'A'
  1465  007EAF  50                 	db	80	;'P'
  1466  007EB0  42                 	db	66	;'B'
  1467  007EB1  52                 	db	82	;'R'
  1468  007EB2  3D                 	db	61	;'='
  1469  007EB3  31                 	db	49	;'1'
  1470  007EB4  2C                 	db	44
  1471  007EB5  00                 	db	0
  1472  007EB6  41                 	db	65	;'A'
  1473  007EB7  54                 	db	84	;'T'
  1474  007EB8  2B                 	db	43
  1475  007EB9  43                 	db	67	;'C'
  1476  007EBA  47                 	db	71	;'G'
  1477  007EBB  41                 	db	65	;'A'
  1478  007EBC  43                 	db	67	;'C'
  1479  007EBD  54                 	db	84	;'T'
  1480  007EBE  3D                 	db	61	;'='
  1481  007EBF  31                 	db	49	;'1'
  1482  007EC0  2C                 	db	44
  1483  007EC1  00                 	db	0
  1484  007EC2                     STR_58:
  1485  007EC2  41                 	db	65	;'A'
  1486  007EC3  54                 	db	84	;'T'
  1487  007EC4  2B                 	db	43
  1488  007EC5  53                 	db	83	;'S'
  1489  007EC6  41                 	db	65	;'A'
  1490  007EC7  50                 	db	80	;'P'
  1491  007EC8  42                 	db	66	;'B'
  1492  007EC9  52                 	db	82	;'R'
  1493  007ECA  3D                 	db	61	;'='
  1494  007ECB  32                 	db	50	;'2'
  1495  007ECC  2C                 	db	44
  1496  007ECD  00                 	db	0
  1497  007ECE                     STR_43:
  1498  007ECE  41                 	db	65	;'A'
  1499  007ECF  54                 	db	84	;'T'
  1500  007ED0  2B                 	db	43
  1501  007ED1  53                 	db	83	;'S'
  1502  007ED2  41                 	db	65	;'A'
  1503  007ED3  50                 	db	80	;'P'
  1504  007ED4  42                 	db	66	;'B'
  1505  007ED5  52                 	db	82	;'R'
  1506  007ED6  3D                 	db	61	;'='
  1507  007ED7  33                 	db	51	;'3'
  1508  007ED8  2C                 	db	44
  1509  007ED9  00                 	db	0
  1510  007EDA  41                 	db	65	;'A'
  1511  007EDB  54                 	db	84	;'T'
  1512  007EDC  2B                 	db	43
  1513  007EDD  43                 	db	67	;'C'
  1514  007EDE  47                 	db	71	;'G'
  1515  007EDF  43                 	db	67	;'C'
  1516  007EE0  4C                 	db	76	;'L'
  1517  007EE1  41                 	db	65	;'A'
  1518  007EE2  53                 	db	83	;'S'
  1519  007EE3  53                 	db	83	;'S'
  1520  007EE4  3D                 	db	61	;'='
  1521  007EE5  00                 	db	0
  1522  007EE6  41                 	db	65	;'A'
  1523  007EE7  54                 	db	84	;'T'
  1524  007EE8  2B                 	db	43
  1525  007EE9  43                 	db	67	;'C'
  1526  007EEA  47                 	db	71	;'G'
  1527  007EEB  44                 	db	68	;'D'
  1528  007EEC  43                 	db	67	;'C'
  1529  007EED  4F                 	db	79	;'O'
  1530  007EEE  4E                 	db	78	;'N'
  1531  007EEF  54                 	db	84	;'T'
  1532  007EF0  3D                 	db	61	;'='
  1533  007EF1  00                 	db	0
  1534  007EF2  41                 	db	65	;'A'
  1535  007EF3  54                 	db	84	;'T'
  1536  007EF4  2B                 	db	43
  1537  007EF5  43                 	db	67	;'C'
  1538  007EF6  47                 	db	71	;'G'
  1539  007EF7  52                 	db	82	;'R'
  1540  007EF8  45                 	db	69	;'E'
  1541  007EF9  47                 	db	71	;'G'
  1542  007EFA  3F                 	db	63	;'?'
  1543  007EFB  0D                 	db	13
  1544  007EFC  00                 	db	0
  1545  007EFD  41                 	db	65	;'A'
  1546  007EFE  54                 	db	84	;'T'
  1547  007EFF  2B                 	db	43
  1548  007F00  43                 	db	67	;'C'
  1549  007F01  47                 	db	71	;'G'
  1550  007F02  53                 	db	83	;'S'
  1551  007F03  4D                 	db	77	;'M'
  1552  007F04  53                 	db	83	;'S'
  1553  007F05  3F                 	db	63	;'?'
  1554  007F06  0D                 	db	13
  1555  007F07  00                 	db	0
  1556  007F08  41                 	db	65	;'A'
  1557  007F09  54                 	db	84	;'T'
  1558  007F0A  2B                 	db	43
  1559  007F0B  43                 	db	67	;'C'
  1560  007F0C  47                 	db	71	;'G'
  1561  007F0D  41                 	db	65	;'A'
  1562  007F0E  43                 	db	67	;'C'
  1563  007F0F  54                 	db	84	;'T'
  1564  007F10  3F                 	db	63	;'?'
  1565  007F11  0D                 	db	13
  1566  007F12  00                 	db	0
  1567  007F13  41                 	db	65	;'A'
  1568  007F14  54                 	db	84	;'T'
  1569  007F15  2B                 	db	43
  1570  007F16  43                 	db	67	;'C'
  1571  007F17  47                 	db	71	;'G'
  1572  007F18  41                 	db	65	;'A'
  1573  007F19  54                 	db	84	;'T'
  1574  007F1A  54                 	db	84	;'T'
  1575  007F1B  3F                 	db	63	;'?'
  1576  007F1C  0D                 	db	13
  1577  007F1D  00                 	db	0
  1578  007F1E  41                 	db	65	;'A'
  1579  007F1F  54                 	db	84	;'T'
  1580  007F20  2B                 	db	43
  1581  007F21  43                 	db	67	;'C'
  1582  007F22  47                 	db	71	;'G'
  1583  007F23  45                 	db	69	;'E'
  1584  007F24  52                 	db	82	;'R'
  1585  007F25  45                 	db	69	;'E'
  1586  007F26  50                 	db	80	;'P'
  1587  007F27  3D                 	db	61	;'='
  1588  007F28  00                 	db	0
  1589  007F29  41                 	db	65	;'A'
  1590  007F2A  54                 	db	84	;'T'
  1591  007F2B  2B                 	db	43
  1592  007F2C  43                 	db	67	;'C'
  1593  007F2D  4F                 	db	79	;'O'
  1594  007F2E  50                 	db	80	;'P'
  1595  007F2F  53                 	db	83	;'S'
  1596  007F30  3F                 	db	63	;'?'
  1597  007F31  0D                 	db	13
  1598  007F32  00                 	db	0
  1599  007F33  41                 	db	65	;'A'
  1600  007F34  54                 	db	84	;'T'
  1601  007F35  2B                 	db	43
  1602  007F36  43                 	db	67	;'C'
  1603  007F37  47                 	db	71	;'G'
  1604  007F38  52                 	db	82	;'R'
  1605  007F39  45                 	db	69	;'E'
  1606  007F3A  47                 	db	71	;'G'
  1607  007F3B  3D                 	db	61	;'='
  1608  007F3C  00                 	db	0
  1609  007F3D  41                 	db	65	;'A'
  1610  007F3E  54                 	db	84	;'T'
  1611  007F3F  2B                 	db	43
  1612  007F40  43                 	db	67	;'C'
  1613  007F41  47                 	db	71	;'G'
  1614  007F42  53                 	db	83	;'S'
  1615  007F43  4D                 	db	77	;'M'
  1616  007F44  53                 	db	83	;'S'
  1617  007F45  3D                 	db	61	;'='
  1618  007F46  00                 	db	0
  1619  007F47  41                 	db	65	;'A'
  1620  007F48  54                 	db	84	;'T'
  1621  007F49  2B                 	db	43
  1622  007F4A  43                 	db	67	;'C'
  1623  007F4B  49                 	db	73	;'I'
  1624  007F4C  4D                 	db	77	;'M'
  1625  007F4D  49                 	db	73	;'I'
  1626  007F4E  0D                 	db	13
  1627  007F4F  00                 	db	0
  1628  007F50  41                 	db	65	;'A'
  1629  007F51  54                 	db	84	;'T'
  1630  007F52  2B                 	db	43
  1631  007F53  43                 	db	67	;'C'
  1632  007F54  4E                 	db	78	;'N'
  1633  007F55  55                 	db	85	;'U'
  1634  007F56  4D                 	db	77	;'M'
  1635  007F57  0D                 	db	13
  1636  007F58  00                 	db	0
  1637  007F59  2C                 	db	44
  1638  007F5A  22                 	db	34
  1639  007F5B  52                 	db	82	;'R'
  1640  007F5C  41                 	db	65	;'A'
  1641  007F5D  54                 	db	84	;'T'
  1642  007F5E  45                 	db	69	;'E'
  1643  007F5F  22                 	db	34
  1644  007F60  2C                 	db	44
  1645  007F61  00                 	db	0
  1646  007F62  2C                 	db	44
  1647  007F63  22                 	db	34
  1648  007F64  55                 	db	85	;'U'
  1649  007F65  53                 	db	83	;'S'
  1650  007F66  45                 	db	69	;'E'
  1651  007F67  52                 	db	82	;'R'
  1652  007F68  22                 	db	34
  1653  007F69  2C                 	db	44
  1654  007F6A  00                 	db	0
  1655  007F6B                     STR_4:
  1656  007F6B  49                 	db	73	;'I'
  1657  007F6C  6E                 	db	110	;'n'
  1658  007F6D  74                 	db	116	;'t'
  1659  007F6E  65                 	db	101	;'e'
  1660  007F6F  72                 	db	114	;'r'
  1661  007F70  6E                 	db	110	;'n'
  1662  007F71  65                 	db	101	;'e'
  1663  007F72  74                 	db	116	;'t'
  1664  007F73  00                 	db	0
  1665  007F74  41                 	db	65	;'A'
  1666  007F75  54                 	db	84	;'T'
  1667  007F76  2B                 	db	43
  1668  007F77  47                 	db	71	;'G'
  1669  007F78  4D                 	db	77	;'M'
  1670  007F79  49                 	db	73	;'I'
  1671  007F7A  0D                 	db	13
  1672  007F7B  00                 	db	0
  1673  007F7C  41                 	db	65	;'A'
  1674  007F7D  54                 	db	84	;'T'
  1675  007F7E  2B                 	db	43
  1676  007F7F  47                 	db	71	;'G'
  1677  007F80  4F                 	db	79	;'O'
  1678  007F81  49                 	db	73	;'I'
  1679  007F82  0D                 	db	13
  1680  007F83  00                 	db	0
  1681  007F84  41                 	db	65	;'A'
  1682  007F85  54                 	db	84	;'T'
  1683  007F86  2B                 	db	43
  1684  007F87  47                 	db	71	;'G'
  1685  007F88  4D                 	db	77	;'M'
  1686  007F89  4D                 	db	77	;'M'
  1687  007F8A  0D                 	db	13
  1688  007F8B  00                 	db	0
  1689  007F8C  41                 	db	65	;'A'
  1690  007F8D  54                 	db	84	;'T'
  1691  007F8E  2B                 	db	43
  1692  007F8F  47                 	db	71	;'G'
  1693  007F90  53                 	db	83	;'S'
  1694  007F91  4E                 	db	78	;'N'
  1695  007F92  0D                 	db	13
  1696  007F93  00                 	db	0
  1697  007F94  41                 	db	65	;'A'
  1698  007F95  54                 	db	84	;'T'
  1699  007F96  2B                 	db	43
  1700  007F97  43                 	db	67	;'C'
  1701  007F98  53                 	db	83	;'S'
  1702  007F99  51                 	db	81	;'Q'
  1703  007F9A  0D                 	db	13
  1704  007F9B  00                 	db	0
  1705  007F9C  41                 	db	65	;'A'
  1706  007F9D  54                 	db	84	;'T'
  1707  007F9E  2B                 	db	43
  1708  007F9F  47                 	db	71	;'G'
  1709  007FA0  4D                 	db	77	;'M'
  1710  007FA1  52                 	db	82	;'R'
  1711  007FA2  0D                 	db	13
  1712  007FA3  00                 	db	0
  1713  007FA4  2C                 	db	44
  1714  007FA5  22                 	db	34
  1715  007FA6  50                 	db	80	;'P'
  1716  007FA7  57                 	db	87	;'W'
  1717  007FA8  44                 	db	68	;'D'
  1718  007FA9  22                 	db	34
  1719  007FAA  2C                 	db	44
  1720  007FAB  00                 	db	0
  1721  007FAC                     STR_46:
  1722  007FAC  2C                 	db	44
  1723  007FAD  22                 	db	34
  1724  007FAE  41                 	db	65	;'A'
  1725  007FAF  50                 	db	80	;'P'
  1726  007FB0  4E                 	db	78	;'N'
  1727  007FB1  22                 	db	34
  1728  007FB2  2C                 	db	44
  1729  007FB3  00                 	db	0
  1730  007FB4                     STR_5:
  1731  007FB4  44                 	db	68	;'D'
  1732  007FB5  6F                 	db	111	;'o'
  1733  007FB6  6E                 	db	110	;'n'
  1734  007FB7  65                 	db	101	;'e'
  1735  007FB8  2E                 	db	46
  1736  007FB9  0D                 	db	13
  1737  007FBA  0D                 	db	13
  1738  007FBB  00                 	db	0
  1739  007FBC  2C                 	db	44
  1740  007FBD  22                 	db	34
  1741  007FBE  49                 	db	73	;'I'
  1742  007FBF  50                 	db	80	;'P'
  1743  007FC0  22                 	db	34
  1744  007FC1  2C                 	db	44
  1745  007FC2  00                 	db	0
  1746  007FC3                     STR_25:
  1747  007FC3  44                 	db	68	;'D'
  1748  007FC4  61                 	db	97	;'a'
  1749  007FC5  74                 	db	116	;'t'
  1750  007FC6  61                 	db	97	;'a'
  1751  007FC7  3A                 	db	58	;':'
  1752  007FC8  20                 	db	32
  1753  007FC9  00                 	db	0
  1754  007FCA                     STR_29:
  1755  007FCA  41                 	db	65	;'A'
  1756  007FCB  54                 	db	84	;'T'
  1757  007FCC  45                 	db	69	;'E'
  1758  007FCD  30                 	db	48	;'0'
  1759  007FCE  0D                 	db	13
  1760  007FCF  00                 	db	0
  1761  007FD0                     STR_31:
  1762  007FD0  41                 	db	65	;'A'
  1763  007FD1  54                 	db	84	;'T'
  1764  007FD2  26                 	db	38
  1765  007FD3  57                 	db	87	;'W'
  1766  007FD4  0D                 	db	13
  1767  007FD5  00                 	db	0
  1768  007FD6  41                 	db	65	;'A'
  1769  007FD7  54                 	db	84	;'T'
  1770  007FD8  49                 	db	73	;'I'
  1771  007FD9  0D                 	db	13
  1772  007FDA  00                 	db	0
  1773  007FDB                     STR_15:
  1774  007FDB  33                 	db	51	;'3'
  1775  007FDC  35                 	db	53	;'5'
  1776  007FDD  30                 	db	48	;'0'
  1777  007FDE  30                 	db	48	;'0'
  1778  007FDF  00                 	db	0
  1779  007FE0                     STR_3:
  1780  007FE0  47                 	db	71	;'G'
  1781  007FE1  50                 	db	80	;'P'
  1782  007FE2  52                 	db	82	;'R'
  1783  007FE3  53                 	db	83	;'S'
  1784  007FE4  00                 	db	0
  1785  007FE5                     STR_28:
  1786  007FE5  41                 	db	65	;'A'
  1787  007FE6  54                 	db	84	;'T'
  1788  007FE7  0D                 	db	13
  1789  007FE8  00                 	db	0
  1790  007FE9                     STR_14:
  1791  007FE9  52                 	db	82	;'R'
  1792  007FEA  50                 	db	80	;'P'
  1793  007FEB  4D                 	db	77	;'M'
  1794  007FEC  00                 	db	0
  1795  007FED  43                 	db	67	;'C'
  1796  007FEE  43                 	db	67	;'C'
  1797  007FEF  00                 	db	0
  1798  007FF0  43                 	db	67	;'C'
  1799  007FF1  47                 	db	71	;'G'
  1800  007FF2  00                 	db	0
  1801  007FF3                     STR_13:
  1802  007FF3  33                 	db	51	;'3'
  1803  007FF4  30                 	db	48	;'0'
  1804  007FF5  00                 	db	0
  1805  007FF6                     STR_19:
  1806  007FF6  35                 	db	53	;'5'
  1807  007FF7  30                 	db	48	;'0'
  1808  007FF8  00                 	db	0
  1809  007FF9                     STR_17:
  1810  007FF9  33                 	db	51	;'3'
  1811  007FFA  35                 	db	53	;'5'
  1812  007FFB  00                 	db	0
  1813  007FFC                     STR_73:
  1814  007FFC  42                 	db	66	;'B'
  1815  007FFD  00                 	db	0
  1816  007FFE  00                 	db	0	; dummy byte at the end
  1817  0000                     
  1818                           ; #config settings
  1819                           
  1820                           	psect	cinit
  1821  00167A                     __pcinit:
  1822                           	callstack 0
  1823  00167A                     start_initialization:
  1824                           	callstack 0
  1825  00167A                     __initialization:
  1826                           	callstack 0
  1827                           
  1828                           ; Initialize objects allocated to BANK0 (4 bytes)
  1829                           ; load TBLPTR registers with __pidataBANK0
  1830  00167A  0EA2               	movlw	low __pidataBANK0
  1831  00167C  6EF6               	movwf	tblptrl,c
  1832  00167E  0E1F               	movlw	high __pidataBANK0
  1833  001680  6EF7               	movwf	tblptrh,c
  1834  001682  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1835  001684  6EF8               	movwf	tblptru,c
  1836  001686  EE00  F0E1         	lfsr	0,__pdataBANK0
  1837  00168A  EE10 F004          	lfsr	1,4
  1838  00168E                     copy_data0:
  1839  00168E  0009               	tblrd		*+
  1840  001690  CFF5 FFEE          	movff	tablat,postinc0
  1841  001694  50E5               	movf	postdec1,w,c
  1842  001696  50E1               	movf	fsr1l,w,c
  1843  001698  E1FA               	bnz	copy_data0
  1844                           
  1845                           ; Initialize objects allocated to COMRAM (4 bytes)
  1846                           ; load TBLPTR registers with __pidataCOMRAM
  1847  00169A  0E9E               	movlw	low __pidataCOMRAM
  1848  00169C  6EF6               	movwf	tblptrl,c
  1849  00169E  0E1F               	movlw	high __pidataCOMRAM
  1850  0016A0  6EF7               	movwf	tblptrh,c
  1851  0016A2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1852  0016A4  6EF8               	movwf	tblptru,c
  1853  0016A6  EE00  F07A         	lfsr	0,__pdataCOMRAM
  1854  0016AA  EE10 F004          	lfsr	1,4
  1855  0016AE                     copy_data1:
  1856  0016AE  0009               	tblrd		*+
  1857  0016B0  CFF5 FFEE          	movff	tablat,postinc0
  1858  0016B4  50E5               	movf	postdec1,w,c
  1859  0016B6  50E1               	movf	fsr1l,w,c
  1860  0016B8  E1FA               	bnz	copy_data1
  1861                           
  1862                           ; Clear objects allocated to BANK3 (200 bytes)
  1863  0016BA  EE03  F000         	lfsr	0,__pbssBANK3
  1864  0016BE  0EC8               	movlw	200
  1865  0016C0                     clear_0:
  1866  0016C0  6AEE               	clrf	postinc0,c
  1867  0016C2  06E8               	decf	wreg,f,c
  1868  0016C4  E1FD               	bnz	clear_0
  1869                           
  1870                           ; Clear objects allocated to BANK2 (240 bytes)
  1871  0016C6  EE02  F000         	lfsr	0,__pbssBANK2
  1872  0016CA  0EF0               	movlw	240
  1873  0016CC                     clear_1:
  1874  0016CC  6AEE               	clrf	postinc0,c
  1875  0016CE  06E8               	decf	wreg,f,c
  1876  0016D0  E1FD               	bnz	clear_1
  1877                           
  1878                           ; Clear objects allocated to BANK1 (220 bytes)
  1879  0016D2  EE01  F000         	lfsr	0,__pbssBANK1
  1880  0016D6  0EDC               	movlw	220
  1881  0016D8                     clear_2:
  1882  0016D8  6AEE               	clrf	postinc0,c
  1883  0016DA  06E8               	decf	wreg,f,c
  1884  0016DC  E1FD               	bnz	clear_2
  1885                           
  1886                           ; Clear objects allocated to BANK0 (68 bytes)
  1887  0016DE  EE00  F080         	lfsr	0,__pbssBANK0
  1888  0016E2  0E44               	movlw	68
  1889  0016E4                     clear_3:
  1890  0016E4  6AEE               	clrf	postinc0,c
  1891  0016E6  06E8               	decf	wreg,f,c
  1892  0016E8  E1FD               	bnz	clear_3
  1893                           
  1894                           ; Clear objects allocated to COMRAM (15 bytes)
  1895  0016EA  EE00  F06B         	lfsr	0,__pbssCOMRAM
  1896  0016EE  0E0F               	movlw	15
  1897  0016F0                     clear_4:
  1898  0016F0  6AEE               	clrf	postinc0,c
  1899  0016F2  06E8               	decf	wreg,f,c
  1900  0016F4  E1FD               	bnz	clear_4
  1901  0016F6                     end_of_initialization:
  1902                           	callstack 0
  1903  0016F6                     __end_of__initialization:
  1904                           	callstack 0
  1905  0016F6  907E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1906  0016F8  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1907  0016FA  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1908  0016FC  6EF8               	movwf	tblptru,c
  1909  0016FE  0100               	movlb	0
  1910  001700  EFC8  F00F         	goto	_main	;jump to C main() function
  1911                           
  1912                           	psect	bssCOMRAM
  1913  00006B                     __pbssCOMRAM:
  1914                           	callstack 0
  1915  00006B                     _IncVar:
  1916                           	callstack 0
  1917  00006B                     	ds	4
  1918  00006F                     _Rxfifocurrent@SIM800x_SDM$F1160:
  1919                           	callstack 0
  1920  00006F                     	ds	2
  1921  000071                     _Rxfifoptr@SIM800x_SDM$F1159:
  1922                           	callstack 0
  1923  000071                     	ds	2
  1924  000073                     _val:
  1925                           	callstack 0
  1926  000073                     	ds	2
  1927  000075                     _Rxstatus:
  1928                           	callstack 0
  1929  000075                     	ds	1
  1930  000076                     _Rxfifocurrent:
  1931                           	callstack 0
  1932  000076                     	ds	1
  1933  000077                     _Rxfifoptr:
  1934                           	callstack 0
  1935  000077                     	ds	1
  1936  000078                     _cpos:
  1937                           	callstack 0
  1938  000078                     	ds	2
  1939                           
  1940                           	psect	dataCOMRAM
  1941  00007A                     __pdataCOMRAM:
  1942                           	callstack 0
  1943  00007A                     _Tout:
  1944                           	callstack 0
  1945  00007A                     	ds	4
  1946                           
  1947                           	psect	bssBANK0
  1948  000080                     __pbssBANK0:
  1949                           	callstack 0
  1950  000080                     	ds	20
  1951  000094                     	ds	20
  1952  0000A8                     	ds	20
  1953  0000BC                     _DecVar:
  1954                           	callstack 0
  1955  0000BC                     	ds	4
  1956  0000C0                     	ds	2
  1957  0000C2                     	ds	2
  1958                           
  1959                           	psect	dataBANK0
  1960  0000E1                     __pdataBANK0:
  1961                           	callstack 0
  1962  0000E1                     	ds	4
  1963                           
  1964                           	psect	bssBANK1
  1965  000100                     __pbssBANK1:
  1966                           	callstack 0
  1967  000100                     	ds	40
  1968  000128                     	ds	30
  1969  000146                     	ds	30
  1970  000164                     	ds	30
  1971  000182                     	ds	30
  1972  0001A0                     	ds	30
  1973  0001BE                     _rxmessage:
  1974                           	callstack 0
  1975  0001BE                     	ds	30
  1976                           
  1977                           	psect	bssBANK2
  1978  000200                     __pbssBANK2:
  1979                           	callstack 0
  1980  000200                     _RxFIFO:
  1981                           	callstack 0
  1982  000200                     	ds	100
  1983  000264                     	ds	40
  1984  00028C                     _txmessage:
  1985                           	callstack 0
  1986  00028C                     	ds	100
  1987                           
  1988                           	psect	bssBANK3
  1989  000300                     __pbssBANK3:
  1990                           	callstack 0
  1991  000300                     _RxFIFO@SIM800x_SDM$F1158:
  1992                           	callstack 0
  1993  000300                     	ds	200
  1994                           
  1995                           	psect	cstackBANK0
  1996  0000C4                     __pcstackBANK0:
  1997                           	callstack 0
  1998  0000C4                     SystemTask@msg:
  1999                           	callstack 0
  2000                           
  2001                           ; 20 bytes @ 0x0
  2002  0000C4                     	ds	20
  2003  0000D8                     SystemTask@cmd:
  2004                           	callstack 0
  2005                           
  2006                           ; 1 bytes @ 0x14
  2007  0000D8                     	ds	1
  2008  0000D9                     SystemTask@scode:
  2009                           	callstack 0
  2010                           
  2011                           ; 2 bytes @ 0x15
  2012  0000D9                     	ds	2
  2013  0000DB                     SystemTask@errcode:
  2014                           	callstack 0
  2015                           
  2016                           ; 2 bytes @ 0x17
  2017  0000DB                     	ds	2
  2018  0000DD                     SystemTask@cnt:
  2019                           	callstack 0
  2020                           
  2021                           ; 4 bytes @ 0x19
  2022  0000DD                     	ds	4
  2023                           
  2024                           	psect	cstackCOMRAM
  2025  000001                     __pcstackCOMRAM:
  2026                           	callstack 0
  2027  000001                     ??_SIM800xSDMPeek:
  2028  000001                     ?_strlen:
  2029                           	callstack 0
  2030  000001                     ?___awmod:
  2031                           	callstack 0
  2032  000001                     ?___lwmod:
  2033                           	callstack 0
  2034  000001                     ?_Tick_ms:
  2035                           	callstack 0
  2036  000001                     ?___lmul:
  2037                           	callstack 0
  2038  000001                     ?___lldiv:
  2039                           	callstack 0
  2040  000001                     SoftUARTTransmitByte@data:
  2041                           	callstack 0
  2042  000001                     SIM800xSDMSendByte@data:
  2043                           	callstack 0
  2044  000001                     USARTAsyncInit@bgr:
  2045                           	callstack 0
  2046  000001                     AddEntryToJsonObject@JsonObject:
  2047                           	callstack 0
  2048  000001                     SIM800xSDMSendBytes@data:
  2049                           	callstack 0
  2050  000001                     ___awmod@dividend:
  2051                           	callstack 0
  2052  000001                     ___lwmod@dividend:
  2053                           	callstack 0
  2054  000001                     strlen@s:
  2055                           	callstack 0
  2056  000001                     Wait_ms@value:
  2057                           	callstack 0
  2058  000001                     ___lmul@multiplier:
  2059                           	callstack 0
  2060  000001                     ___lldiv@dividend:
  2061                           	callstack 0
  2062                           
  2063                           ; 4 bytes @ 0x0
  2064  000001                     	ds	1
  2065  000002                     SoftUARTTransmitByte@tmp:
  2066                           	callstack 0
  2067  000002                     SIM800xSDMPrint@str:
  2068                           	callstack 0
  2069                           
  2070                           ; 2 bytes @ 0x1
  2071  000002                     	ds	1
  2072  000003                     SoftUARTTransmitByte@k:
  2073                           	callstack 0
  2074  000003                     SIM800xSDMPeek@idx:
  2075                           	callstack 0
  2076  000003                     AddEntryToJsonObject@key:
  2077                           	callstack 0
  2078  000003                     SIM800xSDMSendBytes@cnt:
  2079                           	callstack 0
  2080  000003                     ___awmod@divisor:
  2081                           	callstack 0
  2082  000003                     ___lwmod@divisor:
  2083                           	callstack 0
  2084  000003                     strlen@cp:
  2085                           	callstack 0
  2086                           
  2087                           ; 2 bytes @ 0x2
  2088  000003                     	ds	1
  2089  000004                     SoftUARTPrint@str:
  2090                           	callstack 0
  2091                           
  2092                           ; 2 bytes @ 0x3
  2093  000004                     	ds	1
  2094  000005                     ??_Wait_ms:
  2095  000005                     ___awmod@counter:
  2096                           	callstack 0
  2097  000005                     ___lwmod@counter:
  2098                           	callstack 0
  2099  000005                     AddEntryToJsonObject@value:
  2100                           	callstack 0
  2101  000005                     ___lmul@multiplicand:
  2102                           	callstack 0
  2103  000005                     ___lldiv@divisor:
  2104                           	callstack 0
  2105                           
  2106                           ; 4 bytes @ 0x4
  2107  000005                     	ds	1
  2108  000006                     ?_SIM800xSDMRxAvailable:
  2109                           	callstack 0
  2110  000006                     SIM800xSDMReadByte@data:
  2111                           	callstack 0
  2112  000006                     ___awmod@sign:
  2113                           	callstack 0
  2114                           
  2115                           ; 1 bytes @ 0x5
  2116  000006                     	ds	1
  2117  000007                     ??_SoftUARTRxAvailable:
  2118  000007                     ?_SoftUARTReceiveByte:
  2119                           	callstack 0
  2120  000007                     AddEntryToJsonObject@Cpos:
  2121                           	callstack 0
  2122                           
  2123                           ; 2 bytes @ 0x6
  2124  000007                     	ds	1
  2125  000008                     ??_SIM800xSDMRxAvailable:
  2126                           
  2127                           ; 1 bytes @ 0x7
  2128  000008                     	ds	1
  2129  000009                     ??_AddEntryToJsonObject:
  2130  000009                     SoftUARTReceiveByte@data:
  2131                           	callstack 0
  2132  000009                     Wait_ms@x:
  2133                           	callstack 0
  2134  000009                     ___lmul@product:
  2135                           	callstack 0
  2136  000009                     ___lldiv@quotient:
  2137                           	callstack 0
  2138                           
  2139                           ; 4 bytes @ 0x8
  2140  000009                     	ds	1
  2141  00000A                     ??_ProcessResp1:
  2142  00000A                     ?_SIM800xSDMReadF1Pkt:
  2143                           	callstack 0
  2144  00000A                     SIM800xSDMReadF1Pkt@data:
  2145                           	callstack 0
  2146                           
  2147                           ; 2 bytes @ 0x9
  2148  00000A                     	ds	2
  2149  00000C                     ??_SIM800xSDMReadF1Pkt:
  2150                           
  2151                           ; 1 bytes @ 0xB
  2152  00000C                     	ds	1
  2153  00000D                     ?_StrToInt:
  2154                           	callstack 0
  2155  00000D                     AddEntryToJsonObject@offset:
  2156                           	callstack 0
  2157  00000D                     ___lldiv@counter:
  2158                           	callstack 0
  2159  00000D                     StrToInt@str:
  2160                           	callstack 0
  2161                           
  2162                           ; 2 bytes @ 0xC
  2163  00000D                     	ds	1
  2164  00000E                     ?___llmod:
  2165                           	callstack 0
  2166  00000E                     ProcessResp1@time:
  2167                           	callstack 0
  2168  00000E                     SIM800xSDMInit@br:
  2169                           	callstack 0
  2170  00000E                     ___llmod@dividend:
  2171                           	callstack 0
  2172                           
  2173                           ; 4 bytes @ 0xD
  2174  00000E                     	ds	1
  2175  00000F                     StrToInt@start:
  2176                           	callstack 0
  2177                           
  2178                           ; 1 bytes @ 0xE
  2179  00000F                     	ds	1
  2180  000010                     StrToInt@stop:
  2181                           	callstack 0
  2182  000010                     SIM800xSDMReadF1Pkt@val:
  2183                           	callstack 0
  2184                           
  2185                           ; 2 bytes @ 0xF
  2186  000010                     	ds	1
  2187  000011                     ??_StrToInt:
  2188                           
  2189                           ; 1 bytes @ 0x10
  2190  000011                     	ds	1
  2191  000012                     ??_SIM800xSDMInit:
  2192  000012                     ProcessResp1@c:
  2193                           	callstack 0
  2194  000012                     SIM800xSDMReadF1Pkt@i:
  2195                           	callstack 0
  2196  000012                     ___llmod@divisor:
  2197                           	callstack 0
  2198                           
  2199                           ; 4 bytes @ 0x11
  2200  000012                     	ds	1
  2201  000013                     SIM800xIPOpen@cid:
  2202                           	callstack 0
  2203  000013                     SIM800xIPSetConnectionType@contype:
  2204                           	callstack 0
  2205  000013                     SIM800xIPSetAPN@apn:
  2206                           	callstack 0
  2207  000013                     SIM800xSDMReadF1Pkt@time:
  2208                           	callstack 0
  2209                           
  2210                           ; 4 bytes @ 0x12
  2211  000013                     	ds	2
  2212  000015                     SIM800xIPSetConnectionType@cid:
  2213                           	callstack 0
  2214  000015                     SIM800xIPSetAPN@cid:
  2215                           	callstack 0
  2216                           
  2217                           ; 1 bytes @ 0x14
  2218  000015                     	ds	1
  2219  000016                     ___llmod@counter:
  2220                           	callstack 0
  2221  000016                     StrToInt@val:
  2222                           	callstack 0
  2223  000016                     SIM800xSDMInit@val:
  2224                           	callstack 0
  2225                           
  2226                           ; 4 bytes @ 0x15
  2227  000016                     	ds	1
  2228  000017                     ?_sprintf:
  2229                           	callstack 0
  2230  000017                     SIM800xSDMReadF1Pkt@tmp:
  2231                           	callstack 0
  2232  000017                     sprintf@sp:
  2233                           	callstack 0
  2234                           
  2235                           ; 2 bytes @ 0x16
  2236  000017                     	ds	1
  2237  000018                     ProcessResp2@str:
  2238                           	callstack 0
  2239                           
  2240                           ; 2 bytes @ 0x17
  2241  000018                     	ds	1
  2242  000019                     sprintf@f:
  2243                           	callstack 0
  2244                           
  2245                           ; 2 bytes @ 0x18
  2246  000019                     	ds	1
  2247  00001A                     ??_ProcessResp2:
  2248  00001A                     StrToInt@j:
  2249                           	callstack 0
  2250                           
  2251                           ; 1 bytes @ 0x19
  2252  00001A                     	ds	1
  2253  00001B                     StrToInt@ctrl:
  2254                           	callstack 0
  2255                           
  2256                           ; 1 bytes @ 0x1A
  2257  00001B                     	ds	1
  2258  00001C                     StrToInt@po:
  2259                           	callstack 0
  2260                           
  2261                           ; 4 bytes @ 0x1B
  2262  00001C                     	ds	2
  2263  00001E                     ProcessResp2@time:
  2264                           	callstack 0
  2265                           
  2266                           ; 4 bytes @ 0x1D
  2267  00001E                     	ds	2
  2268  000020                     StrToInt@i:
  2269                           	callstack 0
  2270                           
  2271                           ; 1 bytes @ 0x1F
  2272  000020                     	ds	1
  2273  000021                     ProcessResp4@ec:
  2274                           	callstack 0
  2275                           
  2276                           ; 2 bytes @ 0x20
  2277  000021                     	ds	1
  2278  000022                     ProcessResp2@res:
  2279                           	callstack 0
  2280                           
  2281                           ; 2 bytes @ 0x21
  2282  000022                     	ds	1
  2283  000023                     ??_sprintf:
  2284  000023                     ??_ProcessResp4:
  2285                           
  2286                           ; 1 bytes @ 0x22
  2287  000023                     	ds	1
  2288  000024                     SIM800xIPGetState@ip:
  2289                           	callstack 0
  2290                           
  2291                           ; 2 bytes @ 0x23
  2292  000024                     	ds	1
  2293  000025                     sprintf@prec:
  2294                           	callstack 0
  2295                           
  2296                           ; 2 bytes @ 0x24
  2297  000025                     	ds	1
  2298  000026                     ??_SIM800xIPGetState:
  2299                           
  2300                           ; 1 bytes @ 0x25
  2301  000026                     	ds	1
  2302  000027                     sprintf@val:
  2303                           	callstack 0
  2304  000027                     ProcessResp4@str:
  2305                           	callstack 0
  2306                           
  2307                           ; 20 bytes @ 0x26
  2308  000027                     	ds	3
  2309  00002A                     SIM800xIPGetState@str:
  2310                           	callstack 0
  2311                           
  2312                           ; 30 bytes @ 0x29
  2313  00002A                     	ds	1
  2314  00002B                     sprintf@ap:
  2315                           	callstack 0
  2316                           
  2317                           ; 2 bytes @ 0x2A
  2318  00002B                     	ds	2
  2319  00002D                     sprintf@flag:
  2320                           	callstack 0
  2321                           
  2322                           ; 1 bytes @ 0x2C
  2323  00002D                     	ds	1
  2324  00002E                     sprintf@c:
  2325                           	callstack 0
  2326                           
  2327                           ; 1 bytes @ 0x2D
  2328  00002E                     	ds	1
  2329  00002F                     SIM800xHTTPInputData@data:
  2330                           	callstack 0
  2331  00002F                     SIM800xHTTPAction@statuscode:
  2332                           	callstack 0
  2333  00002F                     SIM800xHTTPRead@data:
  2334                           	callstack 0
  2335  00002F                     SIM800xInit@br:
  2336                           	callstack 0
  2337                           
  2338                           ; 4 bytes @ 0x2E
  2339  00002F                     	ds	2
  2340  000031                     SIM800xHTTPAction@cnt:
  2341                           	callstack 0
  2342  000031                     SIM800xHTTPInputData@cnt:
  2343                           	callstack 0
  2344  000031                     SIM800xHTTPRead@strindex:
  2345                           	callstack 0
  2346                           
  2347                           ; 4 bytes @ 0x30
  2348  000031                     	ds	2
  2349  000033                     SIM800xHTTPAction@tout:
  2350                           	callstack 0
  2351  000033                     SIM800xInit@str:
  2352                           	callstack 0
  2353                           
  2354                           ; 15 bytes @ 0x32
  2355  000033                     	ds	2
  2356  000035                     SIM800xHTTPInputData@timeout:
  2357                           	callstack 0
  2358  000035                     SIM800xHTTPRead@size:
  2359                           	callstack 0
  2360                           
  2361                           ; 4 bytes @ 0x34
  2362  000035                     	ds	2
  2363  000037                     SIM800xHTTPAction@errcode:
  2364                           	callstack 0
  2365                           
  2366                           ; 2 bytes @ 0x36
  2367  000037                     	ds	2
  2368  000039                     ??_SIM800xHTTPAction:
  2369  000039                     SIM800xHTTPInputData@errcode:
  2370                           	callstack 0
  2371  000039                     SIM800xHTTPRead@cnt:
  2372                           	callstack 0
  2373                           
  2374                           ; 2 bytes @ 0x38
  2375  000039                     	ds	2
  2376  00003B                     ??_SIM800xHTTPInputData:
  2377  00003B                     SIM800xHTTPRead@errcode:
  2378                           	callstack 0
  2379  00003B                     ProcessResp4@time:
  2380                           	callstack 0
  2381                           
  2382                           ; 4 bytes @ 0x3A
  2383  00003B                     	ds	2
  2384  00003D                     ??_SIM800xHTTPRead:
  2385  00003D                     SIM800xHTTPAction@str:
  2386                           	callstack 0
  2387                           
  2388                           ; 30 bytes @ 0x3C
  2389  00003D                     	ds	2
  2390  00003F                     ProcessResp4@res:
  2391                           	callstack 0
  2392  00003F                     SIM800xHTTPInputData@str:
  2393                           	callstack 0
  2394                           
  2395                           ; 30 bytes @ 0x3E
  2396  00003F                     	ds	2
  2397  000041                     SIM800xHTTPInit@errcode:
  2398                           	callstack 0
  2399  000041                     SIM800xHTTPSetURL@url:
  2400                           	callstack 0
  2401  000041                     SIM800xHTTPSetContent@content:
  2402                           	callstack 0
  2403  000041                     SIM800xHTTPRead@str:
  2404                           	callstack 0
  2405                           
  2406                           ; 30 bytes @ 0x40
  2407  000041                     	ds	1
  2408  000042                     SIM800xInit@tmp:
  2409                           	callstack 0
  2410                           
  2411                           ; 2 bytes @ 0x41
  2412  000042                     	ds	1
  2413  000043                     SIM800xHTTPSetURL@errcode:
  2414                           	callstack 0
  2415  000043                     SIM800xHTTPSetContent@errcode:
  2416                           	callstack 0
  2417                           
  2418                           ; 2 bytes @ 0x42
  2419  000043                     	ds	1
  2420  000044                     SIM800xInit@c:
  2421                           	callstack 0
  2422                           
  2423                           ; 1 bytes @ 0x43
  2424  000044                     	ds	1
  2425  000045                     
  2426                           ; 1 bytes @ 0x44
  2427  000045                     	ds	3
  2428  000048                     SIM800xIPGetState@time1:
  2429                           	callstack 0
  2430                           
  2431                           ; 4 bytes @ 0x47
  2432  000048                     	ds	4
  2433  00004C                     SIM800xIPGetState@res:
  2434                           	callstack 0
  2435                           
  2436                           ; 1 bytes @ 0x4B
  2437  00004C                     	ds	1
  2438  00004D                     SIM800xIPGetState@cid:
  2439                           	callstack 0
  2440                           
  2441                           ; 1 bytes @ 0x4C
  2442  00004D                     	ds	1
  2443  00004E                     SIM800xIPGetState@len:
  2444                           	callstack 0
  2445                           
  2446                           ; 1 bytes @ 0x4D
  2447  00004E                     	ds	1
  2448  00004F                     SIM800xIPGetState@i:
  2449                           	callstack 0
  2450                           
  2451                           ; 1 bytes @ 0x4E
  2452  00004F                     	ds	1
  2453  000050                     SystemInit@ip:
  2454                           	callstack 0
  2455                           
  2456                           ; 20 bytes @ 0x4F
  2457  000050                     	ds	11
  2458  00005B                     SIM800xHTTPAction@t:
  2459                           	callstack 0
  2460                           
  2461                           ; 4 bytes @ 0x5A
  2462  00005B                     	ds	2
  2463  00005D                     SIM800xHTTPInputData@len:
  2464                           	callstack 0
  2465                           
  2466                           ; 4 bytes @ 0x5C
  2467  00005D                     	ds	2
  2468  00005F                     SIM800xHTTPAction@method:
  2469                           	callstack 0
  2470  00005F                     SIM800xHTTPRead@sz:
  2471                           	callstack 0
  2472                           
  2473                           ; 4 bytes @ 0x5E
  2474  00005F                     	ds	1
  2475  000060                     SIM800xHTTPAction@time:
  2476                           	callstack 0
  2477                           
  2478                           ; 4 bytes @ 0x5F
  2479  000060                     	ds	1
  2480  000061                     SIM800xHTTPInputData@time:
  2481                           	callstack 0
  2482                           
  2483                           ; 4 bytes @ 0x60
  2484  000061                     	ds	2
  2485  000063                     SIM800xHTTPRead@time:
  2486                           	callstack 0
  2487                           
  2488                           ; 4 bytes @ 0x62
  2489  000063                     	ds	1
  2490  000064                     SystemInit@err:
  2491                           	callstack 0
  2492  000064                     SIM800xHTTPAction@res:
  2493                           	callstack 0
  2494                           
  2495                           ; 2 bytes @ 0x63
  2496  000064                     	ds	1
  2497  000065                     SIM800xHTTPInputData@res:
  2498                           	callstack 0
  2499                           
  2500                           ; 2 bytes @ 0x64
  2501  000065                     	ds	2
  2502  000067                     SIM800xHTTPRead@res:
  2503                           	callstack 0
  2504                           
  2505                           ; 2 bytes @ 0x66
  2506  000067                     	ds	2
  2507  000069                     ??_SystemTask:
  2508                           
  2509                           ; 1 bytes @ 0x68
  2510  000069                     	ds	2
  2511  00006B                     
  2512                           ; 1 bytes @ 0x6A
  2513 ;;
  2514 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2515 ;;
  2516 ;; *************** function _main *****************
  2517 ;; Defined at:
  2518 ;;		line 12 in file "Src/main.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;		None
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;		None
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      void 
  2525 ;; Registers used:
  2526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2532 ;;      Params:         0       0       0       0       0       0       0
  2533 ;;      Locals:         0       0       0       0       0       0       0
  2534 ;;      Temps:          0       0       0       0       0       0       0
  2535 ;;      Totals:         0       0       0       0       0       0       0
  2536 ;;Total ram usage:        0 bytes
  2537 ;; Hardware stack levels required when called: 8
  2538 ;; This function calls:
  2539 ;;		_SystemInit
  2540 ;;		_SystemTask
  2541 ;; This function is called by:
  2542 ;;		Startup code after reset
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546                           	psect	text0
  2547  001F90                     __ptext0:
  2548                           	callstack 0
  2549  001F90                     _main:
  2550                           	callstack 0
  2551  001F90  FFFF               	dw	65535	; assembler added errata NOP
  2552                           
  2553                           ;main.c: 15: SystemInit();
  2554                           
  2555                           ;incstack = 0
  2556  001F92  ECF9  F005         	call	_SystemInit	;wreg free
  2557  001F96                     l75:
  2558  001F96  FFFF               	dw	65535	; assembler added errata NOP
  2559                           
  2560                           ;main.c: 18: {;main.c: 19: SystemTask();
  2561  001F98  ECD6  F006         	call	_SystemTask	;wreg free
  2562  001F9C  D7FC               	goto	l75
  2563  001F9E                     __end_of_main:
  2564                           	callstack 0
  2565                           
  2566 ;; *************** function _SystemTask *****************
  2567 ;; Defined at:
  2568 ;;		line 96 in file "Src/ApplicationExample.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;		None
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;  msg            20    0[BANK0 ] unsigned char [20]
  2573 ;;  cnt             4   25[BANK0 ] unsigned long 
  2574 ;;  errcode         2   23[BANK0 ] unsigned int 
  2575 ;;  scode           2   21[BANK0 ] unsigned int 
  2576 ;;  cmd             1   20[BANK0 ] unsigned char 
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  1    wreg      void 
  2579 ;; Registers used:
  2580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2586 ;;      Params:         0       0       0       0       0       0       0
  2587 ;;      Locals:         0      29       0       0       0       0       0
  2588 ;;      Temps:          2       0       0       0       0       0       0
  2589 ;;      Totals:         2      29       0       0       0       0       0
  2590 ;;Total ram usage:       31 bytes
  2591 ;; Hardware stack levels used: 1
  2592 ;; Hardware stack levels required when called: 6
  2593 ;; This function calls:
  2594 ;;		_SIM800xHTTPAction
  2595 ;;		_SIM800xHTTPInputData
  2596 ;;		_SIM800xHTTPRead
  2597 ;;		_SoftUARTPrint
  2598 ;;		_SoftUARTReceiveByte
  2599 ;;		_SoftUARTRxAvailable
  2600 ;;		_sprintf
  2601 ;; This function is called by:
  2602 ;;		_main
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           	psect	text1
  2607  000DAC                     __ptext1:
  2608                           	callstack 0
  2609  000DAC                     _SystemTask:
  2610                           	callstack 0
  2611  000DAC  FFFF               	dw	65535	; assembler added errata NOP
  2612                           
  2613                           ;ApplicationExample.c: 98: uint8_t cmd = 0;
  2614                           
  2615                           ;incstack = 0
  2616  000DAE  0E00               	movlw	0
  2617  000DB0  0100               	movlb	0	; () banked
  2618  000DB2  6FD8               	movwf	SystemTask@cmd& (0+255),b
  2619                           
  2620                           ;ApplicationExample.c: 99: uint16_t scode = 0, errcode = 0;
  2621  000DB4  0E00               	movlw	0
  2622  000DB6  6FDA               	movwf	(SystemTask@scode+1)& (0+255),b
  2623  000DB8  0E00               	movlw	0
  2624  000DBA  6FD9               	movwf	SystemTask@scode& (0+255),b
  2625  000DBC  0E00               	movlw	0
  2626  000DBE  6FDC               	movwf	(SystemTask@errcode+1)& (0+255),b
  2627  000DC0  0E00               	movlw	0
  2628  000DC2  6FDB               	movwf	SystemTask@errcode& (0+255),b
  2629                           
  2630                           ;ApplicationExample.c: 100: uint32_t cnt = 0;
  2631  000DC4  0E00               	movlw	0
  2632  000DC6  6FDD               	movwf	SystemTask@cnt& (0+255),b
  2633  000DC8  0E00               	movlw	0
  2634  000DCA  6FDE               	movwf	(SystemTask@cnt+1)& (0+255),b
  2635  000DCC  0E00               	movlw	0
  2636  000DCE  6FDF               	movwf	(SystemTask@cnt+2)& (0+255),b
  2637  000DD0  0E00               	movlw	0
  2638  000DD2  6FE0               	movwf	(SystemTask@cnt+3)& (0+255),b
  2639                           
  2640                           ; BSR set to: 0
  2641                           ;ApplicationExample.c: 101: if(SoftUARTRxAvailable())
  2642  000DD4  EC5C  F00F         	call	_SoftUARTRxAvailable	;wreg free
  2643  000DD8  0900               	iorlw	0
  2644  000DDA  B4D8               	btfsc	status,2,c
  2645  000DDC  D005               	goto	l4176
  2646                           
  2647                           ;ApplicationExample.c: 102: cmd = (uint8_t)SoftUARTReceiveByte();
  2648  000DDE  EC9F  F00E         	call	_SoftUARTReceiveByte	;wreg free
  2649  000DE2  5007               	movf	?_SoftUARTReceiveByte^0,w,c
  2650  000DE4  0100               	movlb	0	; () banked
  2651  000DE6  6FD8               	movwf	SystemTask@cmd& (0+255),b
  2652  000DE8                     l4176:
  2653  000DE8  FFFF               	dw	65535	; assembler added errata NOP
  2654                           
  2655                           ;ApplicationExample.c: 103: if(cmd == '1')
  2656  000DEA  0E31               	movlw	49
  2657  000DEC  0100               	movlb	0	; () banked
  2658  000DEE  19D8               	xorwf	SystemTask@cmd& (0+255),w,b
  2659  000DF0  A4D8               	btfss	status,2,c
  2660  000DF2  D0A5               	goto	l4194
  2661                           
  2662                           ; BSR set to: 0
  2663                           ;ApplicationExample.c: 104: {;ApplicationExample.c: 106: SoftUARTPrint("Sending message 
      +                          to thinger.io...\r");
  2664  000DF4  0EF2               	movlw	low STR_22
  2665  000DF6  6E04               	movwf	SoftUARTPrint@str^0,c
  2666  000DF8  0E7A               	movlw	high STR_22
  2667  000DFA  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  2668  000DFC  EC1C  F00D         	call	_SoftUARTPrint	;wreg free
  2669                           
  2670                           ;ApplicationExample.c: 108: SIM800xHTTPInputData(txmessage, (uint32_t)(cpos + 1), 5000, 
      +                          &errcode);
  2671  000E00  0E8C               	movlw	low _txmessage
  2672  000E02  6E2F               	movwf	SIM800xHTTPInputData@data^0,c
  2673  000E04  0E02               	movlw	high _txmessage
  2674  000E06  6E30               	movwf	(SIM800xHTTPInputData@data+1)^0,c
  2675  000E08  0E01               	movlw	1
  2676  000E0A  2478               	addwf	_cpos^0,w,c
  2677  000E0C  6E69               	movwf	??_SystemTask^0,c
  2678  000E0E  0E00               	movlw	0
  2679  000E10  2079               	addwfc	(_cpos+1)^0,w,c
  2680  000E12  6E6A               	movwf	(??_SystemTask+1)^0,c
  2681  000E14  C069  F031         	movff	??_SystemTask,SIM800xHTTPInputData@cnt
  2682  000E18  C06A  F032         	movff	??_SystemTask+1,SIM800xHTTPInputData@cnt+1
  2683  000E1C  6A33               	clrf	(SIM800xHTTPInputData@cnt+2)^0,c
  2684  000E1E  6A34               	clrf	(SIM800xHTTPInputData@cnt+3)^0,c
  2685  000E20  0E88               	movlw	136
  2686  000E22  6E35               	movwf	SIM800xHTTPInputData@timeout^0,c
  2687  000E24  0E13               	movlw	19
  2688  000E26  6E36               	movwf	(SIM800xHTTPInputData@timeout+1)^0,c
  2689  000E28  0E00               	movlw	0
  2690  000E2A  6E37               	movwf	(SIM800xHTTPInputData@timeout+2)^0,c
  2691  000E2C  0E00               	movlw	0
  2692  000E2E  6E38               	movwf	(SIM800xHTTPInputData@timeout+3)^0,c
  2693  000E30  0EDB               	movlw	low SystemTask@errcode
  2694  000E32  6E39               	movwf	SIM800xHTTPInputData@errcode^0,c
  2695  000E34  0E00               	movlw	high SystemTask@errcode
  2696  000E36  6E3A               	movwf	(SIM800xHTTPInputData@errcode+1)^0,c
  2697  000E38  ECF8  F004         	call	_SIM800xHTTPInputData	;wreg free
  2698                           
  2699                           ;ApplicationExample.c: 110: if(SIM800xHTTPAction(1, &scode, &cnt, 10000, &errcode) == SI
      +                          M800X_OK)
  2700  000E3C  0ED9               	movlw	low SystemTask@scode
  2701  000E3E  6E2F               	movwf	SIM800xHTTPAction@statuscode^0,c
  2702  000E40  0E00               	movlw	high SystemTask@scode
  2703  000E42  6E30               	movwf	(SIM800xHTTPAction@statuscode+1)^0,c
  2704  000E44  0EDD               	movlw	low SystemTask@cnt
  2705  000E46  6E31               	movwf	SIM800xHTTPAction@cnt^0,c
  2706  000E48  0E00               	movlw	high SystemTask@cnt
  2707  000E4A  6E32               	movwf	(SIM800xHTTPAction@cnt+1)^0,c
  2708  000E4C  0E10               	movlw	16
  2709  000E4E  6E33               	movwf	SIM800xHTTPAction@tout^0,c
  2710  000E50  0E27               	movlw	39
  2711  000E52  6E34               	movwf	(SIM800xHTTPAction@tout+1)^0,c
  2712  000E54  0E00               	movlw	0
  2713  000E56  6E35               	movwf	(SIM800xHTTPAction@tout+2)^0,c
  2714  000E58  0E00               	movlw	0
  2715  000E5A  6E36               	movwf	(SIM800xHTTPAction@tout+3)^0,c
  2716  000E5C  0EDB               	movlw	low SystemTask@errcode
  2717  000E5E  6E37               	movwf	SIM800xHTTPAction@errcode^0,c
  2718  000E60  0E00               	movlw	high SystemTask@errcode
  2719  000E62  6E38               	movwf	(SIM800xHTTPAction@errcode+1)^0,c
  2720  000E64  0E01               	movlw	1
  2721  000E66  ECEE  F003         	call	_SIM800xHTTPAction
  2722  000E6A  0900               	iorlw	0
  2723  000E6C  A4D8               	btfss	status,2,c
  2724  000E6E  D060               	goto	l4192
  2725                           
  2726                           ;ApplicationExample.c: 111: {;ApplicationExample.c: 112: if(SIM800xHTTPRead(rxmessage, 0
      +                          , cnt, &cnt, &errcode) == SIM800X_OK)
  2727  000E70  0EBE               	movlw	low _rxmessage
  2728  000E72  6E2F               	movwf	SIM800xHTTPRead@data^0,c
  2729  000E74  0E01               	movlw	high _rxmessage
  2730  000E76  6E30               	movwf	(SIM800xHTTPRead@data+1)^0,c
  2731  000E78  0E00               	movlw	0
  2732  000E7A  6E31               	movwf	SIM800xHTTPRead@strindex^0,c
  2733  000E7C  0E00               	movlw	0
  2734  000E7E  6E32               	movwf	(SIM800xHTTPRead@strindex+1)^0,c
  2735  000E80  0E00               	movlw	0
  2736  000E82  6E33               	movwf	(SIM800xHTTPRead@strindex+2)^0,c
  2737  000E84  0E00               	movlw	0
  2738  000E86  6E34               	movwf	(SIM800xHTTPRead@strindex+3)^0,c
  2739  000E88  C0DD  F035         	movff	SystemTask@cnt,SIM800xHTTPRead@size
  2740  000E8C  C0DE  F036         	movff	SystemTask@cnt+1,SIM800xHTTPRead@size+1
  2741  000E90  C0DF  F037         	movff	SystemTask@cnt+2,SIM800xHTTPRead@size+2
  2742  000E94  C0E0  F038         	movff	SystemTask@cnt+3,SIM800xHTTPRead@size+3
  2743  000E98  0EDD               	movlw	low SystemTask@cnt
  2744  000E9A  6E39               	movwf	SIM800xHTTPRead@cnt^0,c
  2745  000E9C  0E00               	movlw	high SystemTask@cnt
  2746  000E9E  6E3A               	movwf	(SIM800xHTTPRead@cnt+1)^0,c
  2747  000EA0  0EDB               	movlw	low SystemTask@errcode
  2748  000EA2  6E3B               	movwf	SIM800xHTTPRead@errcode^0,c
  2749  000EA4  0E00               	movlw	high SystemTask@errcode
  2750  000EA6  6E3C               	movwf	(SIM800xHTTPRead@errcode+1)^0,c
  2751  000EA8  EC81  F001         	call	_SIM800xHTTPRead	;wreg free
  2752  000EAC  0900               	iorlw	0
  2753  000EAE  A4D8               	btfss	status,2,c
  2754  000EB0  D046               	goto	l4194
  2755                           
  2756                           ;ApplicationExample.c: 113: {;ApplicationExample.c: 114: char msg[20];;ApplicationExampl
      +                          e.c: 115: sprintf(msg, "HTTP response code: %u\r", scode);
  2757  000EB2  0EC4               	movlw	low SystemTask@msg
  2758  000EB4  6E17               	movwf	sprintf@sp^0,c
  2759  000EB6  0E00               	movlw	high SystemTask@msg
  2760  000EB8  6E18               	movwf	(sprintf@sp+1)^0,c
  2761  000EBA  0E7F               	movlw	low STR_23
  2762  000EBC  6E19               	movwf	sprintf@f^0,c
  2763  000EBE  0E7C               	movlw	high STR_23
  2764  000EC0  6E1A               	movwf	(sprintf@f+1)^0,c
  2765  000EC2  C0D9  F01B         	movff	SystemTask@scode,?_sprintf+4
  2766  000EC6  C0DA  F01C         	movff	SystemTask@scode+1,?_sprintf+5
  2767  000ECA  ECBD  F002         	call	_sprintf	;wreg free
  2768                           
  2769                           ;ApplicationExample.c: 116: SoftUARTPrint(msg);
  2770  000ECE  0EC4               	movlw	low SystemTask@msg
  2771  000ED0  6E04               	movwf	SoftUARTPrint@str^0,c
  2772  000ED2  0E00               	movlw	high SystemTask@msg
  2773  000ED4  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  2774  000ED6  EC1C  F00D         	call	_SoftUARTPrint	;wreg free
  2775                           
  2776                           ;ApplicationExample.c: 117: sprintf(msg, "Received data length: %ld\r", cnt);
  2777  000EDA  0EC4               	movlw	low SystemTask@msg
  2778  000EDC  6E17               	movwf	sprintf@sp^0,c
  2779  000EDE  0E00               	movlw	high SystemTask@msg
  2780  000EE0  6E18               	movwf	(sprintf@sp+1)^0,c
  2781  000EE2  0EE7               	movlw	low STR_24
  2782  000EE4  6E19               	movwf	sprintf@f^0,c
  2783  000EE6  0E7B               	movlw	high STR_24
  2784  000EE8  6E1A               	movwf	(sprintf@f+1)^0,c
  2785  000EEA  C0DD  F01B         	movff	SystemTask@cnt,?_sprintf+4
  2786  000EEE  C0DE  F01C         	movff	SystemTask@cnt+1,?_sprintf+5
  2787  000EF2  C0DF  F01D         	movff	SystemTask@cnt+2,?_sprintf+6
  2788  000EF6  C0E0  F01E         	movff	SystemTask@cnt+3,?_sprintf+7
  2789  000EFA  ECBD  F002         	call	_sprintf	;wreg free
  2790                           
  2791                           ;ApplicationExample.c: 118: SoftUARTPrint(msg);
  2792  000EFE  0EC4               	movlw	low SystemTask@msg
  2793  000F00  6E04               	movwf	SoftUARTPrint@str^0,c
  2794  000F02  0E00               	movlw	high SystemTask@msg
  2795  000F04  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  2796  000F06  EC1C  F00D         	call	_SoftUARTPrint	;wreg free
  2797                           
  2798                           ;ApplicationExample.c: 119: SoftUARTPrint("Data: ");
  2799  000F0A  0EC3               	movlw	low STR_25
  2800  000F0C  6E04               	movwf	SoftUARTPrint@str^0,c
  2801  000F0E  0E7F               	movlw	high STR_25
  2802  000F10  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  2803  000F12  EC1C  F00D         	call	_SoftUARTPrint	;wreg free
  2804                           
  2805                           ;ApplicationExample.c: 120: SoftUARTPrint(msg);
  2806  000F16  0EC4               	movlw	low SystemTask@msg
  2807  000F18  6E04               	movwf	SoftUARTPrint@str^0,c
  2808  000F1A  0E00               	movlw	high SystemTask@msg
  2809  000F1C  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  2810  000F1E  EC1C  F00D         	call	_SoftUARTPrint	;wreg free
  2811                           
  2812                           ;ApplicationExample.c: 121: SoftUARTPrint("\r\r");
  2813  000F22  0E31               	movlw	low (STR_21+29)
  2814  000F24  6E04               	movwf	SoftUARTPrint@str^0,c
  2815  000F26  0E7B               	movlw	high (STR_21+29)
  2816  000F28  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  2817  000F2A  EC1C  F00D         	call	_SoftUARTPrint	;wreg free
  2818  000F2E  D007               	goto	l4194
  2819  000F30                     l4192:
  2820  000F30  FFFF               	dw	65535	; assembler added errata NOP
  2821                           
  2822                           ;ApplicationExample.c: 124: {;ApplicationExample.c: 125: SoftUARTPrint("Sending failed.\
      +                          r");
  2823  000F32  0E8B               	movlw	low STR_27
  2824  000F34  6E04               	movwf	SoftUARTPrint@str^0,c
  2825  000F36  0E7D               	movlw	high STR_27
  2826  000F38  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  2827  000F3A  EC1C  F00D         	call	_SoftUARTPrint	;wreg free
  2828  000F3E                     l4194:
  2829  000F3E  FFFF               	dw	65535	; assembler added errata NOP
  2830  000F40  0012               	return		;funcret
  2831  000F42  FFFF               	dw	65535	; errata NOP
  2832  000F44                     __end_of_SystemTask:
  2833                           	callstack 0
  2834                           
  2835 ;; *************** function _SoftUARTRxAvailable *****************
  2836 ;; Defined at:
  2837 ;;		line 352 in file "Src/SoftwareUART.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;		None
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;		None
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      unsigned char 
  2844 ;; Registers used:
  2845 ;;		wreg, status,2, status,0, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2851 ;;      Params:         0       0       0       0       0       0       0
  2852 ;;      Locals:         0       0       0       0       0       0       0
  2853 ;;      Temps:          2       0       0       0       0       0       0
  2854 ;;      Totals:         2       0       0       0       0       0       0
  2855 ;;Total ram usage:        2 bytes
  2856 ;; Hardware stack levels used: 1
  2857 ;; Hardware stack levels required when called: 3
  2858 ;; This function calls:
  2859 ;;		___awmod
  2860 ;; This function is called by:
  2861 ;;		_SystemTask
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text2
  2866  001EB8                     __ptext2:
  2867                           	callstack 0
  2868  001EB8                     _SoftUARTRxAvailable:
  2869                           	callstack 0
  2870  001EB8  FFFF               	dw	65535	; assembler added errata NOP
  2871                           
  2872                           ;SoftwareUART.c: 355: return (uint8_t)((Rxfifocurrent + 100 - Rxfifoptr) % 100);
  2873                           
  2874                           ;incstack = 0
  2875  001EBA  5077               	movf	_Rxfifoptr^0,w,c	;volatile
  2876  001EBC  C076  F007         	movff	_Rxfifocurrent,??_SoftUARTRxAvailable	;volatile
  2877  001EC0  6A08               	clrf	(??_SoftUARTRxAvailable+1)^0,c
  2878  001EC2  5E07               	subwf	??_SoftUARTRxAvailable^0,f,c
  2879  001EC4  0E00               	movlw	0
  2880  001EC6  5A08               	subwfb	(??_SoftUARTRxAvailable+1)^0,f,c
  2881  001EC8  0E64               	movlw	100
  2882  001ECA  2407               	addwf	??_SoftUARTRxAvailable^0,w,c
  2883  001ECC  6E01               	movwf	___awmod@dividend^0,c
  2884  001ECE  0E00               	movlw	0
  2885  001ED0  2008               	addwfc	(??_SoftUARTRxAvailable+1)^0,w,c
  2886  001ED2  6E02               	movwf	(___awmod@dividend+1)^0,c
  2887  001ED4  0E00               	movlw	0
  2888  001ED6  6E04               	movwf	(___awmod@divisor+1)^0,c
  2889  001ED8  0E64               	movlw	100
  2890  001EDA  6E03               	movwf	___awmod@divisor^0,c
  2891  001EDC  EC82  F00B         	call	___awmod	;wreg free
  2892  001EE0  5001               	movf	?___awmod^0,w,c
  2893  001EE2  0012               	return		;funcret
  2894  001EE4  FFFF               	dw	65535	; errata NOP
  2895  001EE6                     __end_of_SoftUARTRxAvailable:
  2896                           	callstack 0
  2897                           
  2898 ;; *************** function _SoftUARTReceiveByte *****************
  2899 ;; Defined at:
  2900 ;;		line 360 in file "Src/SoftwareUART.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;		None
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  data            1    8[COMRAM] unsigned char 
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  2    6[COMRAM] int 
  2907 ;; Registers used:
  2908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2914 ;;      Params:         2       0       0       0       0       0       0
  2915 ;;      Locals:         1       0       0       0       0       0       0
  2916 ;;      Temps:          0       0       0       0       0       0       0
  2917 ;;      Totals:         3       0       0       0       0       0       0
  2918 ;;Total ram usage:        3 bytes
  2919 ;; Hardware stack levels used: 1
  2920 ;; Hardware stack levels required when called: 3
  2921 ;; This function calls:
  2922 ;;		___awmod
  2923 ;; This function is called by:
  2924 ;;		_SystemTask
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           	psect	text3
  2929  001D3E                     __ptext3:
  2930                           	callstack 0
  2931  001D3E                     _SoftUARTReceiveByte:
  2932                           	callstack 0
  2933  001D3E  FFFF               	dw	65535	; assembler added errata NOP
  2934                           
  2935                           ;SoftwareUART.c: 363: if(Rxfifocurrent == Rxfifoptr)
  2936                           
  2937                           ;incstack = 0
  2938  001D40  5077               	movf	_Rxfifoptr^0,w,c	;volatile
  2939  001D42  1876               	xorwf	_Rxfifocurrent^0,w,c	;volatile
  2940  001D44  A4D8               	btfss	status,2,c
  2941  001D46  D003               	goto	l3878
  2942                           
  2943                           ;SoftwareUART.c: 364: return -1;
  2944  001D48  6807               	setf	?_SoftUARTReceiveByte^0,c
  2945  001D4A  6808               	setf	(?_SoftUARTReceiveByte+1)^0,c
  2946  001D4C  D01A               	goto	l247
  2947  001D4E                     l3878:
  2948  001D4E  FFFF               	dw	65535	; assembler added errata NOP
  2949                           
  2950                           ;SoftwareUART.c: 366: uint8_t data = RxFIFO[Rxfifoptr];
  2951  001D50  0E00               	movlw	low _RxFIFO
  2952  001D52  2477               	addwf	_Rxfifoptr^0,w,c	;volatile
  2953  001D54  6ED9               	movwf	fsr2l,c
  2954  001D56  6ADA               	clrf	fsr2h,c
  2955  001D58  0E02               	movlw	high _RxFIFO
  2956  001D5A  22DA               	addwfc	fsr2h,f,c
  2957  001D5C  50DF               	movf	indf2,w,c
  2958  001D5E  6E09               	movwf	SoftUARTReceiveByte@data^0,c
  2959                           
  2960                           ;SoftwareUART.c: 367: Rxfifoptr = (uint8_t)((Rxfifoptr + 1) % 100);
  2961  001D60  0E01               	movlw	1
  2962  001D62  2477               	addwf	_Rxfifoptr^0,w,c	;volatile
  2963  001D64  6E01               	movwf	___awmod@dividend^0,c
  2964  001D66  6A02               	clrf	(___awmod@dividend+1)^0,c
  2965  001D68  0E00               	movlw	0
  2966  001D6A  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  2967  001D6C  0E00               	movlw	0
  2968  001D6E  6E04               	movwf	(___awmod@divisor+1)^0,c
  2969  001D70  0E64               	movlw	100
  2970  001D72  6E03               	movwf	___awmod@divisor^0,c
  2971  001D74  EC82  F00B         	call	___awmod	;wreg free
  2972  001D78  5001               	movf	?___awmod^0,w,c
  2973  001D7A  6E77               	movwf	_Rxfifoptr^0,c	;volatile
  2974                           
  2975                           ;SoftwareUART.c: 369: return data;
  2976  001D7C  C009  F007         	movff	SoftUARTReceiveByte@data,?_SoftUARTReceiveByte
  2977  001D80  6A08               	clrf	(?_SoftUARTReceiveByte+1)^0,c
  2978  001D82                     l247:
  2979  001D82  FFFF               	dw	65535	; assembler added errata NOP
  2980  001D84  0012               	return		;funcret
  2981  001D86  FFFF               	dw	65535	; errata NOP
  2982  001D88                     __end_of_SoftUARTReceiveByte:
  2983                           	callstack 0
  2984                           
  2985 ;; *************** function ___awmod *****************
  2986 ;; Defined at:
  2987 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;  dividend        2    0[COMRAM] int 
  2990 ;;  divisor         2    2[COMRAM] int 
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;  sign            1    5[COMRAM] unsigned char 
  2993 ;;  counter         1    4[COMRAM] unsigned char 
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  2    0[COMRAM] int 
  2996 ;; Registers used:
  2997 ;;		wreg, status,2, status,0
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3003 ;;      Params:         4       0       0       0       0       0       0
  3004 ;;      Locals:         2       0       0       0       0       0       0
  3005 ;;      Temps:          0       0       0       0       0       0       0
  3006 ;;      Totals:         6       0       0       0       0       0       0
  3007 ;;Total ram usage:        6 bytes
  3008 ;; Hardware stack levels used: 1
  3009 ;; Hardware stack levels required when called: 2
  3010 ;; This function calls:
  3011 ;;		Nothing
  3012 ;; This function is called by:
  3013 ;;		_SoftUARTRxAvailable
  3014 ;;		_SoftUARTReceiveByte
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text4
  3019  001704                     __ptext4:
  3020                           	callstack 0
  3021  001704                     ___awmod:
  3022                           	callstack 0
  3023  001704  FFFF               	dw	65535	; assembler added errata NOP
  3024                           
  3025                           ;incstack = 0
  3026  001706  0E00               	movlw	0
  3027  001708  6E06               	movwf	___awmod@sign^0,c
  3028  00170A  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  3029  00170C  D006               	goto	l3576
  3030  00170E  6C01               	negf	___awmod@dividend^0,c
  3031  001710  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3032  001712  B0D8               	btfsc	status,0,c
  3033  001714  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3034  001716  0E01               	movlw	1
  3035  001718  6E06               	movwf	___awmod@sign^0,c
  3036  00171A                     l3576:
  3037  00171A  FFFF               	dw	65535	; assembler added errata NOP
  3038  00171C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3039  00171E  D004               	goto	l3580
  3040  001720  6C03               	negf	___awmod@divisor^0,c
  3041  001722  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3042  001724  B0D8               	btfsc	status,0,c
  3043  001726  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3044  001728                     l3580:
  3045  001728  FFFF               	dw	65535	; assembler added errata NOP
  3046  00172A  5003               	movf	___awmod@divisor^0,w,c
  3047  00172C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3048  00172E  B4D8               	btfsc	status,2,c
  3049  001730  D01C               	goto	l3596
  3050  001732  0E01               	movlw	1
  3051  001734  6E05               	movwf	___awmod@counter^0,c
  3052  001736  D005               	goto	l3586
  3053  001738                     l3584:
  3054  001738  FFFF               	dw	65535	; assembler added errata NOP
  3055  00173A  90D8               	bcf	status,0,c
  3056  00173C  3603               	rlcf	___awmod@divisor^0,f,c
  3057  00173E  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3058  001740  2A05               	incf	___awmod@counter^0,f,c
  3059  001742                     l3586:
  3060  001742  FFFF               	dw	65535	; assembler added errata NOP
  3061  001744  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3062  001746  D7F8               	goto	l3584
  3063  001748                     u2290:
  3064  001748  FFFF               	dw	65535	; assembler added errata NOP
  3065  00174A  5003               	movf	___awmod@divisor^0,w,c
  3066  00174C  5C01               	subwf	___awmod@dividend^0,w,c
  3067  00174E  5004               	movf	(___awmod@divisor+1)^0,w,c
  3068  001750  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3069  001752  A0D8               	btfss	status,0,c
  3070  001754  D004               	goto	l3592
  3071  001756  5003               	movf	___awmod@divisor^0,w,c
  3072  001758  5E01               	subwf	___awmod@dividend^0,f,c
  3073  00175A  5004               	movf	(___awmod@divisor+1)^0,w,c
  3074  00175C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3075  00175E                     l3592:
  3076  00175E  FFFF               	dw	65535	; assembler added errata NOP
  3077  001760  90D8               	bcf	status,0,c
  3078  001762  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3079  001764  3203               	rrcf	___awmod@divisor^0,f,c
  3080  001766  2E05               	decfsz	___awmod@counter^0,f,c
  3081  001768  D7EF               	goto	u2290
  3082  00176A                     l3596:
  3083  00176A  FFFF               	dw	65535	; assembler added errata NOP
  3084  00176C  5006               	movf	___awmod@sign^0,w,c
  3085  00176E  B4D8               	btfsc	status,2,c
  3086  001770  D004               	goto	l3600
  3087  001772  6C01               	negf	___awmod@dividend^0,c
  3088  001774  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3089  001776  B0D8               	btfsc	status,0,c
  3090  001778  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3091  00177A                     l3600:
  3092  00177A  FFFF               	dw	65535	; assembler added errata NOP
  3093  00177C  C001  F001         	movff	___awmod@dividend,?___awmod
  3094  001780  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3095  001784  0012               	return		;funcret
  3096  001786  FFFF               	dw	65535	; errata NOP
  3097  001788                     __end_of___awmod:
  3098                           	callstack 0
  3099                           
  3100 ;; *************** function _SIM800xHTTPRead *****************
  3101 ;; Defined at:
  3102 ;;		line 1693 in file "Src/SIM800x.c"
  3103 ;; Parameters:    Size  Location     Type
  3104 ;;  data            2   46[COMRAM] PTR unsigned char 
  3105 ;;		 -> rxmessage(30), 
  3106 ;;  strindex        4   48[COMRAM] unsigned long 
  3107 ;;  size            4   52[COMRAM] unsigned long 
  3108 ;;  cnt             2   56[COMRAM] PTR unsigned long 
  3109 ;;		 -> SystemTask@cnt(4), 
  3110 ;;  errcode         2   58[COMRAM] PTR unsigned int 
  3111 ;;		 -> SystemTask@errcode(2), 
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;  sz              4   94[COMRAM] unsigned long 
  3114 ;;  str            30   64[COMRAM] unsigned char [30]
  3115 ;;  time            4   98[COMRAM] unsigned long 
  3116 ;;  res             2  102[COMRAM] int 
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  1    wreg      enum E2115
  3119 ;; Registers used:
  3120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3126 ;;      Params:        14       0       0       0       0       0       0
  3127 ;;      Locals:        40       0       0       0       0       0       0
  3128 ;;      Temps:          4       0       0       0       0       0       0
  3129 ;;      Totals:        58       0       0       0       0       0       0
  3130 ;;Total ram usage:       58 bytes
  3131 ;; Hardware stack levels used: 1
  3132 ;; Hardware stack levels required when called: 5
  3133 ;; This function calls:
  3134 ;;		_SIM800xSDMFlush
  3135 ;;		_SIM800xSDMPeek
  3136 ;;		_SIM800xSDMPrint
  3137 ;;		_SIM800xSDMReadByte
  3138 ;;		_SIM800xSDMReadF1Pkt
  3139 ;;		_SIM800xSDMRxAvailable
  3140 ;;		_StrToInt
  3141 ;;		_Tick_ms
  3142 ;;		_sprintf
  3143 ;; This function is called by:
  3144 ;;		_SystemTask
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           	psect	text5
  3149  000302                     __ptext5:
  3150                           	callstack 0
  3151  000302                     _SIM800xHTTPRead:
  3152                           	callstack 0
  3153  000302  FFFF               	dw	65535	; assembler added errata NOP
  3154                           
  3155                           ;SIM800x.c: 1696: if((strindex > 0x4E000) || (size > 0x4E000) || (size < 1))
  3156                           
  3157                           ;incstack = 0
  3158  000304  5034               	movf	(SIM800xHTTPRead@strindex+3)^0,w,c
  3159  000306  E117               	bnz	l4040
  3160  000308  0431               	decf	SIM800xHTTPRead@strindex^0,w,c
  3161  00030A  0EE0               	movlw	224
  3162  00030C  5832               	subwfb	(SIM800xHTTPRead@strindex+1)^0,w,c
  3163  00030E  0E04               	movlw	4
  3164  000310  5833               	subwfb	(SIM800xHTTPRead@strindex+2)^0,w,c
  3165  000312  B0D8               	btfsc	status,0,c
  3166  000314  D00F               	goto	u2840
  3167  000316  5038               	movf	(SIM800xHTTPRead@size+3)^0,w,c
  3168  000318  E10E               	bnz	l4040
  3169  00031A  0435               	decf	SIM800xHTTPRead@size^0,w,c
  3170  00031C  0EE0               	movlw	224
  3171  00031E  5836               	subwfb	(SIM800xHTTPRead@size+1)^0,w,c
  3172  000320  0E04               	movlw	4
  3173  000322  5837               	subwfb	(SIM800xHTTPRead@size+2)^0,w,c
  3174  000324  B0D8               	btfsc	status,0,c
  3175  000326  D006               	goto	u2840
  3176  000328  5035               	movf	SIM800xHTTPRead@size^0,w,c
  3177  00032A  1036               	iorwf	(SIM800xHTTPRead@size+1)^0,w,c
  3178  00032C  1037               	iorwf	(SIM800xHTTPRead@size+2)^0,w,c
  3179  00032E  1038               	iorwf	(SIM800xHTTPRead@size+3)^0,w,c
  3180  000330  A4D8               	btfss	status,2,c
  3181  000332  D003               	goto	l4044
  3182  000334                     u2840:
  3183  000334  FFFF               	dw	65535	; assembler added errata NOP
  3184  000336                     l4040:
  3185                           
  3186                           ;SIM800x.c: 1697: return SIM800X_ERROR;
  3187  000336  0E01               	movlw	1
  3188  000338  D11D               	goto	l825
  3189  00033A                     l4044:
  3190  00033A  FFFF               	dw	65535	; assembler added errata NOP
  3191                           
  3192                           ;SIM800x.c: 1699: char str[30] = {0, 0, 0, 0};
  3193  00033C  EE20  F041         	lfsr	2,SIM800xHTTPRead@str
  3194  000340  0E1D               	movlw	29
  3195  000342                     u2851:
  3196  000342  6ADE               	clrf	postinc2,c
  3197  000344  06E8               	decf	wreg,f,c
  3198  000346  E2FD               	bc	u2851
  3199                           
  3200                           ;SIM800x.c: 1701: sprintf(str, "AT+HTTPREAD=%ld,%ld\r", strindex, size);
  3201  000348  0E41               	movlw	low SIM800xHTTPRead@str
  3202  00034A  6E17               	movwf	sprintf@sp^0,c
  3203  00034C  0E00               	movlw	high SIM800xHTTPRead@str
  3204  00034E  6E18               	movwf	(sprintf@sp+1)^0,c
  3205  000350  0EDA               	movlw	low STR_100
  3206  000352  6E19               	movwf	sprintf@f^0,c
  3207  000354  0E7C               	movlw	high STR_100
  3208  000356  6E1A               	movwf	(sprintf@f+1)^0,c
  3209  000358  C031  F01B         	movff	SIM800xHTTPRead@strindex,?_sprintf+4
  3210  00035C  C032  F01C         	movff	SIM800xHTTPRead@strindex+1,?_sprintf+5
  3211  000360  C033  F01D         	movff	SIM800xHTTPRead@strindex+2,?_sprintf+6
  3212  000364  C034  F01E         	movff	SIM800xHTTPRead@strindex+3,?_sprintf+7
  3213  000368  C035  F01F         	movff	SIM800xHTTPRead@size,?_sprintf+8
  3214  00036C  C036  F020         	movff	SIM800xHTTPRead@size+1,?_sprintf+9
  3215  000370  C037  F021         	movff	SIM800xHTTPRead@size+2,?_sprintf+10
  3216  000374  C038  F022         	movff	SIM800xHTTPRead@size+3,?_sprintf+11
  3217  000378  ECBD  F002         	call	_sprintf	;wreg free
  3218                           
  3219                           ;SIM800x.c: 1702: SIM800xSDMFlush();
  3220  00037C  ECA0  F00F         	call	_SIM800xSDMFlush	;wreg free
  3221                           
  3222                           ;SIM800x.c: 1703: SIM800xSDMPrint(str);
  3223  000380  0E41               	movlw	low SIM800xHTTPRead@str
  3224  000382  6E02               	movwf	SIM800xSDMPrint@str^0,c
  3225  000384  0E00               	movlw	high SIM800xHTTPRead@str
  3226  000386  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  3227  000388  EC4C  F00D         	call	_SIM800xSDMPrint	;wreg free
  3228                           
  3229                           ;SIM800x.c: 1705: uint32_t time = Tick_ms();
  3230  00038C  EC95  F00F         	call	_Tick_ms	;wreg free
  3231  000390  C001  F063         	movff	?_Tick_ms,SIM800xHTTPRead@time
  3232  000394  C002  F064         	movff	?_Tick_ms+1,SIM800xHTTPRead@time+1
  3233  000398  C003  F065         	movff	?_Tick_ms+2,SIM800xHTTPRead@time+2
  3234  00039C  C004  F066         	movff	?_Tick_ms+3,SIM800xHTTPRead@time+3
  3235                           
  3236                           ;SIM800x.c: 1706: while(SIM800xSDMRxAvailable() < 16)
  3237  0003A0  D01C               	goto	l4060
  3238  0003A2                     l4054:
  3239  0003A2  FFFF               	dw	65535	; assembler added errata NOP
  3240                           
  3241                           ;SIM800x.c: 1707: {;SIM800x.c: 1708: if((Tick_ms() - time) > Tout)
  3242  0003A4  EC95  F00F         	call	_Tick_ms	;wreg free
  3243  0003A8  5063               	movf	SIM800xHTTPRead@time^0,w,c
  3244  0003AA  5C01               	subwf	?_Tick_ms^0,w,c
  3245  0003AC  6E3D               	movwf	??_SIM800xHTTPRead^0,c
  3246  0003AE  5064               	movf	(SIM800xHTTPRead@time+1)^0,w,c
  3247  0003B0  5802               	subwfb	(?_Tick_ms+1)^0,w,c
  3248  0003B2  6E3E               	movwf	(??_SIM800xHTTPRead+1)^0,c
  3249  0003B4  5065               	movf	(SIM800xHTTPRead@time+2)^0,w,c
  3250  0003B6  5803               	subwfb	(?_Tick_ms+2)^0,w,c
  3251  0003B8  6E3F               	movwf	(??_SIM800xHTTPRead+2)^0,c
  3252  0003BA  5066               	movf	(SIM800xHTTPRead@time+3)^0,w,c
  3253  0003BC  5804               	subwfb	(?_Tick_ms+3)^0,w,c
  3254  0003BE  6E40               	movwf	(??_SIM800xHTTPRead+3)^0,c
  3255  0003C0  503D               	movf	??_SIM800xHTTPRead^0,w,c
  3256  0003C2  5C7A               	subwf	_Tout^0,w,c
  3257  0003C4  503E               	movf	(??_SIM800xHTTPRead+1)^0,w,c
  3258  0003C6  587B               	subwfb	(_Tout+1)^0,w,c
  3259  0003C8  503F               	movf	(??_SIM800xHTTPRead+2)^0,w,c
  3260  0003CA  587C               	subwfb	(_Tout+2)^0,w,c
  3261  0003CC  5040               	movf	(??_SIM800xHTTPRead+3)^0,w,c
  3262  0003CE  587D               	subwfb	(_Tout+3)^0,w,c
  3263  0003D0  B0D8               	btfsc	status,0,c
  3264  0003D2  D003               	goto	l4060
  3265  0003D4                     u2860:
  3266  0003D4  FFFF               	dw	65535	; assembler added errata NOP
  3267                           
  3268                           ;SIM800x.c: 1709: {;SIM800x.c: 1710: return SIM800X_TIME_OUT;
  3269  0003D6  0E05               	movlw	5
  3270  0003D8  D0CD               	goto	l825
  3271  0003DA                     l4060:
  3272  0003DA  FFFF               	dw	65535	; assembler added errata NOP
  3273  0003DC  EC43  F00F         	call	_SIM800xSDMRxAvailable	;wreg free
  3274  0003E0  5007               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  3275  0003E2  E104               	bnz	u2870
  3276  0003E4  0E10               	movlw	16
  3277  0003E6  5C06               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  3278  0003E8  A0D8               	btfss	status,0,c
  3279  0003EA  D7DB               	goto	l4054
  3280  0003EC                     u2870:
  3281                           
  3282                           ;SIM800x.c: 1711: };SIM800x.c: 1712: };SIM800x.c: 1714: int res = SIM800xSDMReadF1Pkt(st
      +                          r);
  3283  0003EC  0E41               	movlw	low SIM800xHTTPRead@str
  3284  0003EE  6E0A               	movwf	SIM800xSDMReadF1Pkt@data^0,c
  3285  0003F0  0E00               	movlw	high SIM800xHTTPRead@str
  3286  0003F2  6E0B               	movwf	(SIM800xSDMReadF1Pkt@data+1)^0,c
  3287  0003F4  EC0C  F009         	call	_SIM800xSDMReadF1Pkt	;wreg free
  3288  0003F8  C00A  F067         	movff	?_SIM800xSDMReadF1Pkt,SIM800xHTTPRead@res
  3289  0003FC  C00B  F068         	movff	?_SIM800xSDMReadF1Pkt+1,SIM800xHTTPRead@res+1
  3290                           
  3291                           ;SIM800x.c: 1715: if(res < 0)
  3292  000400  BE68               	btfsc	(SIM800xHTTPRead@res+1)^0,7,c
  3293  000402  D7E8               	goto	u2860
  3294                           
  3295                           ;SIM800x.c: 1719: else if((str[0] == '+') && (str[1] == 'H'))
  3296  000404  0E2B               	movlw	43
  3297  000406  1841               	xorwf	SIM800xHTTPRead@str^0,w,c
  3298  000408  A4D8               	btfss	status,2,c
  3299  00040A  D090               	goto	l4108
  3300  00040C  0E48               	movlw	72
  3301  00040E  1842               	xorwf	(SIM800xHTTPRead@str+1)^0,w,c
  3302  000410  A4D8               	btfss	status,2,c
  3303  000412  D08C               	goto	l4108
  3304                           
  3305                           ;SIM800x.c: 1720: {;SIM800x.c: 1722: str[(uint8_t)res] = '\0';
  3306  000414  0E41               	movlw	low SIM800xHTTPRead@str
  3307  000416  2467               	addwf	SIM800xHTTPRead@res^0,w,c
  3308  000418  6ED9               	movwf	fsr2l,c
  3309  00041A  6ADA               	clrf	fsr2h,c
  3310  00041C  0E00               	movlw	high SIM800xHTTPRead@str
  3311  00041E  22DA               	addwfc	fsr2h,f,c
  3312  000420  0E00               	movlw	0
  3313  000422  6EDF               	movwf	indf2,c
  3314                           
  3315                           ;SIM800x.c: 1723: *cnt = (uint16_t)StrToInt(str, 11, (uint16_t)(res - 1));
  3316  000424  0E41               	movlw	low SIM800xHTTPRead@str
  3317  000426  6E0D               	movwf	StrToInt@str^0,c
  3318  000428  0E00               	movlw	high SIM800xHTTPRead@str
  3319  00042A  6E0E               	movwf	(StrToInt@str+1)^0,c
  3320  00042C  0E0B               	movlw	11
  3321  00042E  6E0F               	movwf	StrToInt@start^0,c
  3322  000430  0467               	decf	SIM800xHTTPRead@res^0,w,c
  3323  000432  6E10               	movwf	StrToInt@stop^0,c
  3324  000434  ECA2  F007         	call	_StrToInt	;wreg free
  3325  000438  500D               	movf	?_StrToInt^0,w,c
  3326  00043A  6E3D               	movwf	??_SIM800xHTTPRead^0,c
  3327  00043C  500E               	movf	(?_StrToInt+1)^0,w,c
  3328  00043E  6E3E               	movwf	(??_SIM800xHTTPRead+1)^0,c
  3329  000440  6A3F               	clrf	(??_SIM800xHTTPRead+2)^0,c
  3330  000442  6A40               	clrf	(??_SIM800xHTTPRead+3)^0,c
  3331  000444  C039  FFD9         	movff	SIM800xHTTPRead@cnt,fsr2l
  3332  000448  C03A  FFDA         	movff	SIM800xHTTPRead@cnt+1,fsr2h
  3333  00044C  C03D  FFDE         	movff	??_SIM800xHTTPRead,postinc2
  3334  000450  C03E  FFDE         	movff	??_SIM800xHTTPRead+1,postinc2
  3335  000454  C03F  FFDE         	movff	??_SIM800xHTTPRead+2,postinc2
  3336  000458  C040  FFDE         	movff	??_SIM800xHTTPRead+3,postinc2
  3337                           
  3338                           ;SIM800x.c: 1725: uint32_t sz = *cnt;
  3339  00045C  C039  FFD9         	movff	SIM800xHTTPRead@cnt,fsr2l
  3340  000460  C03A  FFDA         	movff	SIM800xHTTPRead@cnt+1,fsr2h
  3341  000464  CFDE F05F          	movff	postinc2,SIM800xHTTPRead@sz
  3342  000468  CFDE F060          	movff	postinc2,SIM800xHTTPRead@sz+1
  3343  00046C  CFDE F061          	movff	postinc2,SIM800xHTTPRead@sz+2
  3344  000470  CFDE F062          	movff	postinc2,SIM800xHTTPRead@sz+3
  3345                           
  3346                           ;SIM800x.c: 1726: while((sz--) != 0)
  3347  000474  D017               	goto	l4090
  3348  000476                     l4082:
  3349  000476  FFFF               	dw	65535	; assembler added errata NOP
  3350                           
  3351                           ;SIM800x.c: 1727: {;SIM800x.c: 1728: if(SIM800xSDMRxAvailable())
  3352  000478  EC43  F00F         	call	_SIM800xSDMRxAvailable	;wreg free
  3353  00047C  5006               	movf	?_SIM800xSDMRxAvailable^0,w,c
  3354  00047E  1007               	iorwf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  3355  000480  B4D8               	btfsc	status,2,c
  3356  000482  D009               	goto	l4088
  3357                           
  3358                           ;SIM800x.c: 1729: {;SIM800x.c: 1730: *(data++) = SIM800xSDMReadByte();
  3359  000484  EC52  F00E         	call	_SIM800xSDMReadByte	;wreg free
  3360  000488  C02F  FFD9         	movff	SIM800xHTTPRead@data,fsr2l
  3361  00048C  C030  FFDA         	movff	SIM800xHTTPRead@data+1,fsr2h
  3362  000490  6EDF               	movwf	indf2,c
  3363  000492  4A2F               	infsnz	SIM800xHTTPRead@data^0,f,c
  3364  000494  2A30               	incf	(SIM800xHTTPRead@data+1)^0,f,c
  3365  000496                     l4088:
  3366  000496  FFFF               	dw	65535	; assembler added errata NOP
  3367                           
  3368                           ;SIM800x.c: 1731: };SIM800x.c: 1732: *data = '\0';
  3369  000498  C02F  FFD9         	movff	SIM800xHTTPRead@data,fsr2l
  3370  00049C  C030  FFDA         	movff	SIM800xHTTPRead@data+1,fsr2h
  3371  0004A0  0E00               	movlw	0
  3372  0004A2  6EDF               	movwf	indf2,c
  3373  0004A4                     l4090:
  3374  0004A4  FFFF               	dw	65535	; assembler added errata NOP
  3375  0004A6  065F               	decf	SIM800xHTTPRead@sz^0,f,c
  3376  0004A8  0E00               	movlw	0
  3377  0004AA  5A60               	subwfb	(SIM800xHTTPRead@sz+1)^0,f,c
  3378  0004AC  5A61               	subwfb	(SIM800xHTTPRead@sz+2)^0,f,c
  3379  0004AE  5A62               	subwfb	(SIM800xHTTPRead@sz+3)^0,f,c
  3380  0004B0  285F               	incf	SIM800xHTTPRead@sz^0,w,c
  3381  0004B2  E1E1               	bnz	l4082
  3382  0004B4  2860               	incf	(SIM800xHTTPRead@sz+1)^0,w,c
  3383  0004B6  E1DF               	bnz	l4082
  3384  0004B8  2861               	incf	(SIM800xHTTPRead@sz+2)^0,w,c
  3385  0004BA  E1DD               	bnz	l4082
  3386  0004BC  2862               	incf	(SIM800xHTTPRead@sz+3)^0,w,c
  3387  0004BE  A4D8               	btfss	status,2,c
  3388  0004C0  D7DA               	goto	l4082
  3389                           
  3390                           ;SIM800x.c: 1733: };SIM800x.c: 1735: time = Tick_ms();
  3391  0004C2  EC95  F00F         	call	_Tick_ms	;wreg free
  3392  0004C6  C001  F063         	movff	?_Tick_ms,SIM800xHTTPRead@time
  3393  0004CA  C002  F064         	movff	?_Tick_ms+1,SIM800xHTTPRead@time+1
  3394  0004CE  C003  F065         	movff	?_Tick_ms+2,SIM800xHTTPRead@time+2
  3395  0004D2  C004  F066         	movff	?_Tick_ms+3,SIM800xHTTPRead@time+3
  3396                           
  3397                           ;SIM800x.c: 1736: while(SIM800xSDMRxAvailable() < 6)
  3398  0004D6  D019               	goto	l4100
  3399  0004D8                     l4094:
  3400  0004D8  FFFF               	dw	65535	; assembler added errata NOP
  3401                           
  3402                           ;SIM800x.c: 1737: {;SIM800x.c: 1738: if((Tick_ms() - time) > Tout)
  3403  0004DA  EC95  F00F         	call	_Tick_ms	;wreg free
  3404  0004DE  5063               	movf	SIM800xHTTPRead@time^0,w,c
  3405  0004E0  5C01               	subwf	?_Tick_ms^0,w,c
  3406  0004E2  6E3D               	movwf	??_SIM800xHTTPRead^0,c
  3407  0004E4  5064               	movf	(SIM800xHTTPRead@time+1)^0,w,c
  3408  0004E6  5802               	subwfb	(?_Tick_ms+1)^0,w,c
  3409  0004E8  6E3E               	movwf	(??_SIM800xHTTPRead+1)^0,c
  3410  0004EA  5065               	movf	(SIM800xHTTPRead@time+2)^0,w,c
  3411  0004EC  5803               	subwfb	(?_Tick_ms+2)^0,w,c
  3412  0004EE  6E3F               	movwf	(??_SIM800xHTTPRead+2)^0,c
  3413  0004F0  5066               	movf	(SIM800xHTTPRead@time+3)^0,w,c
  3414  0004F2  5804               	subwfb	(?_Tick_ms+3)^0,w,c
  3415  0004F4  6E40               	movwf	(??_SIM800xHTTPRead+3)^0,c
  3416  0004F6  503D               	movf	??_SIM800xHTTPRead^0,w,c
  3417  0004F8  5C7A               	subwf	_Tout^0,w,c
  3418  0004FA  503E               	movf	(??_SIM800xHTTPRead+1)^0,w,c
  3419  0004FC  587B               	subwfb	(_Tout+1)^0,w,c
  3420  0004FE  503F               	movf	(??_SIM800xHTTPRead+2)^0,w,c
  3421  000500  587C               	subwfb	(_Tout+2)^0,w,c
  3422  000502  5040               	movf	(??_SIM800xHTTPRead+3)^0,w,c
  3423  000504  587D               	subwfb	(_Tout+3)^0,w,c
  3424  000506  A0D8               	btfss	status,0,c
  3425  000508  D765               	goto	u2860
  3426  00050A                     l4100:
  3427  00050A  FFFF               	dw	65535	; assembler added errata NOP
  3428  00050C  EC43  F00F         	call	_SIM800xSDMRxAvailable	;wreg free
  3429  000510  5007               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  3430  000512  E104               	bnz	u2940
  3431  000514  0E06               	movlw	6
  3432  000516  5C06               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  3433  000518  A0D8               	btfss	status,0,c
  3434  00051A  D7DE               	goto	l4094
  3435  00051C                     u2940:
  3436                           
  3437                           ;SIM800x.c: 1741: };SIM800x.c: 1742: };SIM800x.c: 1744: if(SIM800xSDMPeek(2) == 'O')
  3438  00051C  0E02               	movlw	2
  3439  00051E  ECE9  F00E         	call	_SIM800xSDMPeek
  3440  000522  0A4F               	xorlw	79
  3441  000524  A4D8               	btfss	status,2,c
  3442  000526  D706               	goto	u2840
  3443                           
  3444                           ;SIM800x.c: 1745: {;SIM800x.c: 1746: return SIM800X_OK;
  3445  000528  0E00               	movlw	0
  3446  00052A  D024               	goto	l825
  3447  00052C                     l4108:
  3448  00052C  FFFF               	dw	65535	; assembler added errata NOP
  3449                           
  3450                           ;SIM800x.c: 1750: else if((str[0] == '+') && (str[3] == 'E'))
  3451  00052E  0E2B               	movlw	43
  3452  000530  1841               	xorwf	SIM800xHTTPRead@str^0,w,c
  3453  000532  A4D8               	btfss	status,2,c
  3454  000534  D6FF               	goto	u2840
  3455  000536  0E45               	movlw	69
  3456  000538  1844               	xorwf	(SIM800xHTTPRead@str+3)^0,w,c
  3457  00053A  A4D8               	btfss	status,2,c
  3458  00053C  D6FB               	goto	u2840
  3459                           
  3460                           ;SIM800x.c: 1751: {;SIM800x.c: 1752: str[(uint8_t)res] = '\0';
  3461  00053E  0E41               	movlw	low SIM800xHTTPRead@str
  3462  000540  2467               	addwf	SIM800xHTTPRead@res^0,w,c
  3463  000542  6ED9               	movwf	fsr2l,c
  3464  000544  6ADA               	clrf	fsr2h,c
  3465  000546  0E00               	movlw	high SIM800xHTTPRead@str
  3466  000548  22DA               	addwfc	fsr2h,f,c
  3467  00054A  0E00               	movlw	0
  3468  00054C  6EDF               	movwf	indf2,c
  3469                           
  3470                           ;SIM800x.c: 1753: *errcode = (uint16_t)StrToInt(str, 12, (uint16_t)(res - 1));
  3471  00054E  0E41               	movlw	low SIM800xHTTPRead@str
  3472  000550  6E0D               	movwf	StrToInt@str^0,c
  3473  000552  0E00               	movlw	high SIM800xHTTPRead@str
  3474  000554  6E0E               	movwf	(StrToInt@str+1)^0,c
  3475  000556  0E0C               	movlw	12
  3476  000558  6E0F               	movwf	StrToInt@start^0,c
  3477  00055A  0467               	decf	SIM800xHTTPRead@res^0,w,c
  3478  00055C  6E10               	movwf	StrToInt@stop^0,c
  3479  00055E  ECA2  F007         	call	_StrToInt	;wreg free
  3480  000562  C03B  FFD9         	movff	SIM800xHTTPRead@errcode,fsr2l
  3481  000566  C03C  FFDA         	movff	SIM800xHTTPRead@errcode+1,fsr2h
  3482  00056A  C00D  FFDE         	movff	?_StrToInt,postinc2
  3483  00056E  C00E  FFDD         	movff	?_StrToInt+1,postdec2
  3484                           
  3485                           ;SIM800x.c: 1754: return SIM800X_CME_ERROR;
  3486  000572  0E02               	movlw	2
  3487  000574                     l825:
  3488  000574  FFFF               	dw	65535	; assembler added errata NOP
  3489  000576  0012               	return		;funcret
  3490  000578  FFFF               	dw	65535	; errata NOP
  3491  00057A                     __end_of_SIM800xHTTPRead:
  3492                           	callstack 0
  3493                           
  3494 ;; *************** function _SIM800xHTTPInputData *****************
  3495 ;; Defined at:
  3496 ;;		line 1570 in file "Src/SIM800x.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;  data            2   46[COMRAM] PTR unsigned char 
  3499 ;;		 -> txmessage(100), 
  3500 ;;  cnt             4   48[COMRAM] unsigned long 
  3501 ;;  timeout         4   52[COMRAM] unsigned long 
  3502 ;;  errcode         2   56[COMRAM] PTR unsigned int 
  3503 ;;		 -> SystemTask@errcode(2), 
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;  str            30   62[COMRAM] unsigned char [30]
  3506 ;;  time            4   96[COMRAM] unsigned long 
  3507 ;;  len             4   92[COMRAM] unsigned long 
  3508 ;;  res             2  100[COMRAM] int 
  3509 ;; Return value:  Size  Location     Type
  3510 ;;                  1    wreg      enum E2115
  3511 ;; Registers used:
  3512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3518 ;;      Params:        12       0       0       0       0       0       0
  3519 ;;      Locals:        40       0       0       0       0       0       0
  3520 ;;      Temps:          4       0       0       0       0       0       0
  3521 ;;      Totals:        56       0       0       0       0       0       0
  3522 ;;Total ram usage:       56 bytes
  3523 ;; Hardware stack levels used: 1
  3524 ;; Hardware stack levels required when called: 5
  3525 ;; This function calls:
  3526 ;;		_SIM800xSDMFlush
  3527 ;;		_SIM800xSDMPeek
  3528 ;;		_SIM800xSDMPrint
  3529 ;;		_SIM800xSDMReadF1Pkt
  3530 ;;		_SIM800xSDMRxAvailable
  3531 ;;		_SIM800xSDMSendBytes
  3532 ;;		_StrToInt
  3533 ;;		_Tick_ms
  3534 ;;		_sprintf
  3535 ;;		_strlen
  3536 ;; This function is called by:
  3537 ;;		_SystemTask
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           	psect	text6
  3542  0009F0                     __ptext6:
  3543                           	callstack 0
  3544  0009F0                     _SIM800xHTTPInputData:
  3545                           	callstack 0
  3546  0009F0  FFFF               	dw	65535	; assembler added errata NOP
  3547                           
  3548                           ;SIM800x.c: 1572: uint32_t len = strlen(data);
  3549                           
  3550                           ;incstack = 0
  3551  0009F2  C02F  F001         	movff	SIM800xHTTPInputData@data,strlen@s
  3552  0009F6  C030  F002         	movff	SIM800xHTTPInputData@data+1,strlen@s+1
  3553  0009FA  EC79  F00E         	call	_strlen	;wreg free
  3554  0009FE  C001  F05D         	movff	?_strlen,SIM800xHTTPInputData@len
  3555  000A02  C002  F05E         	movff	?_strlen+1,SIM800xHTTPInputData@len+1
  3556  000A06  6A5F               	clrf	(SIM800xHTTPInputData@len+2)^0,c
  3557  000A08  6A60               	clrf	(SIM800xHTTPInputData@len+3)^0,c
  3558                           
  3559                           ;SIM800x.c: 1574: if((cnt > 0x4E000) || (len > 0x4E000) || (timeout < 1000) || (timeout 
      +                          > 120000))
  3560  000A0A  5034               	movf	(SIM800xHTTPInputData@cnt+3)^0,w,c
  3561  000A0C  E106               	bnz	u2581
  3562  000A0E  0431               	decf	SIM800xHTTPInputData@cnt^0,w,c
  3563  000A10  0EE0               	movlw	224
  3564  000A12  5832               	subwfb	(SIM800xHTTPInputData@cnt+1)^0,w,c
  3565  000A14  0E04               	movlw	4
  3566  000A16  5833               	subwfb	(SIM800xHTTPInputData@cnt+2)^0,w,c
  3567  000A18  B0D8               	btfsc	status,0,c
  3568  000A1A                     u2581:
  3569  000A1A  D0E8               	goto	l779
  3570  000A1C  5060               	movf	(SIM800xHTTPInputData@len+3)^0,w,c
  3571  000A1E  E106               	bnz	u2591
  3572  000A20  045D               	decf	SIM800xHTTPInputData@len^0,w,c
  3573  000A22  0EE0               	movlw	224
  3574  000A24  585E               	subwfb	(SIM800xHTTPInputData@len+1)^0,w,c
  3575  000A26  0E04               	movlw	4
  3576  000A28  585F               	subwfb	(SIM800xHTTPInputData@len+2)^0,w,c
  3577  000A2A  B0D8               	btfsc	status,0,c
  3578  000A2C                     u2591:
  3579  000A2C  D0DF               	goto	l779
  3580  000A2E  5038               	movf	(SIM800xHTTPInputData@timeout+3)^0,w,c
  3581  000A30  1037               	iorwf	(SIM800xHTTPInputData@timeout+2)^0,w,c
  3582  000A32  E106               	bnz	u2600
  3583  000A34  0EE8               	movlw	232
  3584  000A36  5C35               	subwf	SIM800xHTTPInputData@timeout^0,w,c
  3585  000A38  0E03               	movlw	3
  3586  000A3A  5836               	subwfb	(SIM800xHTTPInputData@timeout+1)^0,w,c
  3587  000A3C  A0D8               	btfss	status,0,c
  3588  000A3E  D0D6               	goto	l779
  3589  000A40                     u2600:
  3590  000A40  5038               	movf	(SIM800xHTTPInputData@timeout+3)^0,w,c
  3591  000A42  E109               	bnz	u2610
  3592  000A44  0EC1               	movlw	193
  3593  000A46  5C35               	subwf	SIM800xHTTPInputData@timeout^0,w,c
  3594  000A48  0ED4               	movlw	212
  3595  000A4A  5836               	subwfb	(SIM800xHTTPInputData@timeout+1)^0,w,c
  3596  000A4C  0E01               	movlw	1
  3597  000A4E  5837               	subwfb	(SIM800xHTTPInputData@timeout+2)^0,w,c
  3598  000A50  B0D8               	btfsc	status,0,c
  3599  000A52  D0CC               	goto	l779
  3600  000A54  D001               	goto	l3896
  3601  000A56                     u2610:
  3602  000A56  D0CA               	goto	l779
  3603  000A58                     l3896:
  3604  000A58  FFFF               	dw	65535	; assembler added errata NOP
  3605                           
  3606                           ;SIM800x.c: 1577: char str[30] = {0, 0, 0, 0};
  3607  000A5A  EE20  F03F         	lfsr	2,SIM800xHTTPInputData@str
  3608  000A5E  0E1D               	movlw	29
  3609  000A60                     u2621:
  3610  000A60  6ADE               	clrf	postinc2,c
  3611  000A62  06E8               	decf	wreg,f,c
  3612  000A64  E2FD               	bc	u2621
  3613                           
  3614                           ;SIM800x.c: 1579: sprintf(str, "AT+HTTPDATA=%ld,%ld\r", cnt, timeout);
  3615  000A66  0E3F               	movlw	low SIM800xHTTPInputData@str
  3616  000A68  6E17               	movwf	sprintf@sp^0,c
  3617  000A6A  0E00               	movlw	high SIM800xHTTPInputData@str
  3618  000A6C  6E18               	movwf	(sprintf@sp+1)^0,c
  3619  000A6E  0EC5               	movlw	low STR_98
  3620  000A70  6E19               	movwf	sprintf@f^0,c
  3621  000A72  0E7C               	movlw	high STR_98
  3622  000A74  6E1A               	movwf	(sprintf@f+1)^0,c
  3623  000A76  C031  F01B         	movff	SIM800xHTTPInputData@cnt,?_sprintf+4
  3624  000A7A  C032  F01C         	movff	SIM800xHTTPInputData@cnt+1,?_sprintf+5
  3625  000A7E  C033  F01D         	movff	SIM800xHTTPInputData@cnt+2,?_sprintf+6
  3626  000A82  C034  F01E         	movff	SIM800xHTTPInputData@cnt+3,?_sprintf+7
  3627  000A86  C035  F01F         	movff	SIM800xHTTPInputData@timeout,?_sprintf+8
  3628  000A8A  C036  F020         	movff	SIM800xHTTPInputData@timeout+1,?_sprintf+9
  3629  000A8E  C037  F021         	movff	SIM800xHTTPInputData@timeout+2,?_sprintf+10
  3630  000A92  C038  F022         	movff	SIM800xHTTPInputData@timeout+3,?_sprintf+11
  3631  000A96  ECBD  F002         	call	_sprintf	;wreg free
  3632                           
  3633                           ;SIM800x.c: 1580: SIM800xSDMFlush();
  3634  000A9A  ECA0  F00F         	call	_SIM800xSDMFlush	;wreg free
  3635                           
  3636                           ;SIM800x.c: 1581: SIM800xSDMPrint(str);
  3637  000A9E  0E3F               	movlw	low SIM800xHTTPInputData@str
  3638  000AA0  6E02               	movwf	SIM800xSDMPrint@str^0,c
  3639  000AA2  0E00               	movlw	high SIM800xHTTPInputData@str
  3640  000AA4  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  3641  000AA6  EC4C  F00D         	call	_SIM800xSDMPrint	;wreg free
  3642                           
  3643                           ;SIM800x.c: 1583: uint32_t time = Tick_ms();
  3644  000AAA  EC95  F00F         	call	_Tick_ms	;wreg free
  3645  000AAE  C001  F061         	movff	?_Tick_ms,SIM800xHTTPInputData@time
  3646  000AB2  C002  F062         	movff	?_Tick_ms+1,SIM800xHTTPInputData@time+1
  3647  000AB6  C003  F063         	movff	?_Tick_ms+2,SIM800xHTTPInputData@time+2
  3648  000ABA  C004  F064         	movff	?_Tick_ms+3,SIM800xHTTPInputData@time+3
  3649                           
  3650                           ;SIM800x.c: 1584: while(SIM800xSDMRxAvailable() < 6)
  3651  000ABE  D019               	goto	l3910
  3652  000AC0                     l3906:
  3653  000AC0  FFFF               	dw	65535	; assembler added errata NOP
  3654                           
  3655                           ;SIM800x.c: 1585: {;SIM800x.c: 1586: if((Tick_ms() - time) > Tout)
  3656  000AC2  EC95  F00F         	call	_Tick_ms	;wreg free
  3657  000AC6  5061               	movf	SIM800xHTTPInputData@time^0,w,c
  3658  000AC8  5C01               	subwf	?_Tick_ms^0,w,c
  3659  000ACA  6E3B               	movwf	??_SIM800xHTTPInputData^0,c
  3660  000ACC  5062               	movf	(SIM800xHTTPInputData@time+1)^0,w,c
  3661  000ACE  5802               	subwfb	(?_Tick_ms+1)^0,w,c
  3662  000AD0  6E3C               	movwf	(??_SIM800xHTTPInputData+1)^0,c
  3663  000AD2  5063               	movf	(SIM800xHTTPInputData@time+2)^0,w,c
  3664  000AD4  5803               	subwfb	(?_Tick_ms+2)^0,w,c
  3665  000AD6  6E3D               	movwf	(??_SIM800xHTTPInputData+2)^0,c
  3666  000AD8  5064               	movf	(SIM800xHTTPInputData@time+3)^0,w,c
  3667  000ADA  5804               	subwfb	(?_Tick_ms+3)^0,w,c
  3668  000ADC  6E3E               	movwf	(??_SIM800xHTTPInputData+3)^0,c
  3669  000ADE  503B               	movf	??_SIM800xHTTPInputData^0,w,c
  3670  000AE0  5C7A               	subwf	_Tout^0,w,c
  3671  000AE2  503C               	movf	(??_SIM800xHTTPInputData+1)^0,w,c
  3672  000AE4  587B               	subwfb	(_Tout+1)^0,w,c
  3673  000AE6  503D               	movf	(??_SIM800xHTTPInputData+2)^0,w,c
  3674  000AE8  587C               	subwfb	(_Tout+2)^0,w,c
  3675  000AEA  503E               	movf	(??_SIM800xHTTPInputData+3)^0,w,c
  3676  000AEC  587D               	subwfb	(_Tout+3)^0,w,c
  3677  000AEE  A0D8               	btfss	status,0,c
  3678  000AF0  D07D               	goto	l779
  3679  000AF2                     l3910:
  3680  000AF2  FFFF               	dw	65535	; assembler added errata NOP
  3681  000AF4  EC43  F00F         	call	_SIM800xSDMRxAvailable	;wreg free
  3682  000AF8  5007               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  3683  000AFA  E104               	bnz	u2640
  3684  000AFC  0E06               	movlw	6
  3685  000AFE  5C06               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  3686  000B00  A0D8               	btfss	status,0,c
  3687  000B02  D7DE               	goto	l3906
  3688  000B04                     u2640:
  3689                           
  3690                           ;SIM800x.c: 1589: };SIM800x.c: 1590: };SIM800x.c: 1592: int res = SIM800xSDMReadF1Pkt(st
      +                          r);
  3691  000B04  0E3F               	movlw	low SIM800xHTTPInputData@str
  3692  000B06  6E0A               	movwf	SIM800xSDMReadF1Pkt@data^0,c
  3693  000B08  0E00               	movlw	high SIM800xHTTPInputData@str
  3694  000B0A  6E0B               	movwf	(SIM800xSDMReadF1Pkt@data+1)^0,c
  3695  000B0C  EC0C  F009         	call	_SIM800xSDMReadF1Pkt	;wreg free
  3696  000B10  C00A  F065         	movff	?_SIM800xSDMReadF1Pkt,SIM800xHTTPInputData@res
  3697  000B14  C00B  F066         	movff	?_SIM800xSDMReadF1Pkt+1,SIM800xHTTPInputData@res+1
  3698                           
  3699                           ;SIM800x.c: 1593: if(res < 0)
  3700  000B18  BE66               	btfsc	(SIM800xHTTPInputData@res+1)^0,7,c
  3701  000B1A  D068               	goto	l779
  3702                           
  3703                           ;SIM800x.c: 1597: else if(str[0] == 'D')
  3704  000B1C  0E44               	movlw	68
  3705  000B1E  183F               	xorwf	SIM800xHTTPInputData@str^0,w,c
  3706  000B20  A4D8               	btfss	status,2,c
  3707  000B22  D03D               	goto	l3938
  3708                           
  3709                           ;SIM800x.c: 1598: {;SIM800x.c: 1599: SIM800xSDMFlush();
  3710  000B24  ECA0  F00F         	call	_SIM800xSDMFlush	;wreg free
  3711                           
  3712                           ;SIM800x.c: 1601: SIM800xSDMSendBytes(data, cnt);
  3713  000B28  C02F  F001         	movff	SIM800xHTTPInputData@data,SIM800xSDMSendBytes@data
  3714  000B2C  C030  F002         	movff	SIM800xHTTPInputData@data+1,SIM800xSDMSendBytes@data+1
  3715  000B30  C031  F003         	movff	SIM800xHTTPInputData@cnt,SIM800xSDMSendBytes@cnt
  3716  000B34  C032  F004         	movff	SIM800xHTTPInputData@cnt+1,SIM800xSDMSendBytes@cnt+1
  3717  000B38  EC2A  F00F         	call	_SIM800xSDMSendBytes	;wreg free
  3718                           
  3719                           ;SIM800x.c: 1603: time = Tick_ms();
  3720  000B3C  EC95  F00F         	call	_Tick_ms	;wreg free
  3721  000B40  C001  F061         	movff	?_Tick_ms,SIM800xHTTPInputData@time
  3722  000B44  C002  F062         	movff	?_Tick_ms+1,SIM800xHTTPInputData@time+1
  3723  000B48  C003  F063         	movff	?_Tick_ms+2,SIM800xHTTPInputData@time+2
  3724  000B4C  C004  F064         	movff	?_Tick_ms+3,SIM800xHTTPInputData@time+3
  3725                           
  3726                           ;SIM800x.c: 1604: while(SIM800xSDMRxAvailable() < 6)
  3727  000B50  D019               	goto	l3932
  3728  000B52                     l3928:
  3729  000B52  FFFF               	dw	65535	; assembler added errata NOP
  3730                           
  3731                           ;SIM800x.c: 1605: {;SIM800x.c: 1606: if((Tick_ms() - time) > Tout)
  3732  000B54  EC95  F00F         	call	_Tick_ms	;wreg free
  3733  000B58  5061               	movf	SIM800xHTTPInputData@time^0,w,c
  3734  000B5A  5C01               	subwf	?_Tick_ms^0,w,c
  3735  000B5C  6E3B               	movwf	??_SIM800xHTTPInputData^0,c
  3736  000B5E  5062               	movf	(SIM800xHTTPInputData@time+1)^0,w,c
  3737  000B60  5802               	subwfb	(?_Tick_ms+1)^0,w,c
  3738  000B62  6E3C               	movwf	(??_SIM800xHTTPInputData+1)^0,c
  3739  000B64  5063               	movf	(SIM800xHTTPInputData@time+2)^0,w,c
  3740  000B66  5803               	subwfb	(?_Tick_ms+2)^0,w,c
  3741  000B68  6E3D               	movwf	(??_SIM800xHTTPInputData+2)^0,c
  3742  000B6A  5064               	movf	(SIM800xHTTPInputData@time+3)^0,w,c
  3743  000B6C  5804               	subwfb	(?_Tick_ms+3)^0,w,c
  3744  000B6E  6E3E               	movwf	(??_SIM800xHTTPInputData+3)^0,c
  3745  000B70  503B               	movf	??_SIM800xHTTPInputData^0,w,c
  3746  000B72  5C7A               	subwf	_Tout^0,w,c
  3747  000B74  503C               	movf	(??_SIM800xHTTPInputData+1)^0,w,c
  3748  000B76  587B               	subwfb	(_Tout+1)^0,w,c
  3749  000B78  503D               	movf	(??_SIM800xHTTPInputData+2)^0,w,c
  3750  000B7A  587C               	subwfb	(_Tout+2)^0,w,c
  3751  000B7C  503E               	movf	(??_SIM800xHTTPInputData+3)^0,w,c
  3752  000B7E  587D               	subwfb	(_Tout+3)^0,w,c
  3753  000B80  A0D8               	btfss	status,0,c
  3754  000B82  D034               	goto	l779
  3755  000B84                     l3932:
  3756  000B84  FFFF               	dw	65535	; assembler added errata NOP
  3757  000B86  EC43  F00F         	call	_SIM800xSDMRxAvailable	;wreg free
  3758  000B8A  5007               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  3759  000B8C  E104               	bnz	u2680
  3760  000B8E  0E06               	movlw	6
  3761  000B90  5C06               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  3762  000B92  A0D8               	btfss	status,0,c
  3763  000B94  D7DE               	goto	l3928
  3764  000B96                     u2680:
  3765                           
  3766                           ;SIM800x.c: 1609: };SIM800x.c: 1610: };SIM800x.c: 1612: if(SIM800xSDMPeek(2) == 'O')
  3767  000B96  0E02               	movlw	2
  3768  000B98  ECE9  F00E         	call	_SIM800xSDMPeek
  3769  000B9C  D027               	goto	l779
  3770  000B9E                     l3938:
  3771  000B9E  FFFF               	dw	65535	; assembler added errata NOP
  3772                           
  3773                           ;SIM800x.c: 1615: else if(str[0] == 'O')
  3774  000BA0  0E4F               	movlw	79
  3775  000BA2  183F               	xorwf	SIM800xHTTPInputData@str^0,w,c
  3776  000BA4  B4D8               	btfsc	status,2,c
  3777  000BA6  D022               	goto	l779
  3778                           
  3779                           ;SIM800x.c: 1619: else if(str[0] == 'E')
  3780  000BA8  0E45               	movlw	69
  3781  000BAA  183F               	xorwf	SIM800xHTTPInputData@str^0,w,c
  3782  000BAC  B4D8               	btfsc	status,2,c
  3783  000BAE  D01E               	goto	l779
  3784                           
  3785                           ;SIM800x.c: 1623: else if(str[0] == '+')
  3786  000BB0  0E2B               	movlw	43
  3787  000BB2  183F               	xorwf	SIM800xHTTPInputData@str^0,w,c
  3788  000BB4  A4D8               	btfss	status,2,c
  3789  000BB6  D01A               	goto	l779
  3790                           
  3791                           ;SIM800x.c: 1624: {;SIM800x.c: 1625: str[(uint8_t)res] = '\0';
  3792  000BB8  0E3F               	movlw	low SIM800xHTTPInputData@str
  3793  000BBA  2465               	addwf	SIM800xHTTPInputData@res^0,w,c
  3794  000BBC  6ED9               	movwf	fsr2l,c
  3795  000BBE  6ADA               	clrf	fsr2h,c
  3796  000BC0  0E00               	movlw	high SIM800xHTTPInputData@str
  3797  000BC2  22DA               	addwfc	fsr2h,f,c
  3798  000BC4  0E00               	movlw	0
  3799  000BC6  6EDF               	movwf	indf2,c
  3800                           
  3801                           ;SIM800x.c: 1626: *errcode = (uint16_t)StrToInt(str, 12, (uint16_t)(res - 1));
  3802  000BC8  0E3F               	movlw	low SIM800xHTTPInputData@str
  3803  000BCA  6E0D               	movwf	StrToInt@str^0,c
  3804  000BCC  0E00               	movlw	high SIM800xHTTPInputData@str
  3805  000BCE  6E0E               	movwf	(StrToInt@str+1)^0,c
  3806  000BD0  0E0C               	movlw	12
  3807  000BD2  6E0F               	movwf	StrToInt@start^0,c
  3808  000BD4  0465               	decf	SIM800xHTTPInputData@res^0,w,c
  3809  000BD6  6E10               	movwf	StrToInt@stop^0,c
  3810  000BD8  ECA2  F007         	call	_StrToInt	;wreg free
  3811  000BDC  C039  FFD9         	movff	SIM800xHTTPInputData@errcode,fsr2l
  3812  000BE0  C03A  FFDA         	movff	SIM800xHTTPInputData@errcode+1,fsr2h
  3813  000BE4  C00D  FFDE         	movff	?_StrToInt,postinc2
  3814  000BE8  C00E  FFDD         	movff	?_StrToInt+1,postdec2
  3815  000BEC                     l779:
  3816  000BEC  FFFF               	dw	65535	; assembler added errata NOP
  3817  000BEE  0012               	return		;funcret
  3818  000BF0  FFFF               	dw	65535	; errata NOP
  3819  000BF2                     __end_of_SIM800xHTTPInputData:
  3820                           	callstack 0
  3821                           
  3822 ;; *************** function _SIM800xSDMSendBytes *****************
  3823 ;; Defined at:
  3824 ;;		line 143 in file "Src/SIM800x_SDM.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;  data            2    0[COMRAM] PTR unsigned char 
  3827 ;;		 -> txmessage(100), 
  3828 ;;  cnt             2    2[COMRAM] unsigned int 
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;		None
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  1    wreg      void 
  3833 ;; Registers used:
  3834 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3840 ;;      Params:         4       0       0       0       0       0       0
  3841 ;;      Locals:         0       0       0       0       0       0       0
  3842 ;;      Temps:          0       0       0       0       0       0       0
  3843 ;;      Totals:         4       0       0       0       0       0       0
  3844 ;;Total ram usage:        4 bytes
  3845 ;; Hardware stack levels used: 1
  3846 ;; Hardware stack levels required when called: 2
  3847 ;; This function calls:
  3848 ;;		Nothing
  3849 ;; This function is called by:
  3850 ;;		_SIM800xHTTPInputData
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           	psect	text7
  3855  001E54                     __ptext7:
  3856                           	callstack 0
  3857  001E54                     _SIM800xSDMSendBytes:
  3858                           	callstack 0
  3859  001E54  FFFF               	dw	65535	; assembler added errata NOP
  3860                           
  3861                           ;SIM800x_SDM.c: 146: while((cnt--) != 0)
  3862                           
  3863                           ;incstack = 0
  3864  001E56  D00B               	goto	l3566
  3865  001E58                     l1027:
  3866  001E58  FFFF               	dw	65535	; assembler added errata NOP
  3867  001E5A  A2AC               	btfss	172,1,c	;volatile
  3868  001E5C  D7FD               	goto	l1027
  3869  001E5E  C001  FFD9         	movff	SIM800xSDMSendBytes@data,fsr2l
  3870  001E62  C002  FFDA         	movff	SIM800xSDMSendBytes@data+1,fsr2h
  3871  001E66  50DF               	movf	indf2,w,c
  3872  001E68  6EAD               	movwf	173,c	;volatile
  3873  001E6A  4A01               	infsnz	SIM800xSDMSendBytes@data^0,f,c
  3874  001E6C  2A02               	incf	(SIM800xSDMSendBytes@data+1)^0,f,c
  3875  001E6E                     l3566:
  3876  001E6E  FFFF               	dw	65535	; assembler added errata NOP
  3877  001E70  0603               	decf	SIM800xSDMSendBytes@cnt^0,f,c
  3878  001E72  A0D8               	btfss	status,0,c
  3879  001E74  0604               	decf	(SIM800xSDMSendBytes@cnt+1)^0,f,c
  3880  001E76  2803               	incf	SIM800xSDMSendBytes@cnt^0,w,c
  3881  001E78  E1EF               	bnz	l1027
  3882  001E7A  2804               	incf	(SIM800xSDMSendBytes@cnt+1)^0,w,c
  3883  001E7C  B4D8               	btfsc	status,2,c
  3884  001E7E  0012               	return		;funcret
  3885  001E80  FFFF               	dw	65535	; assembler added errata NOP
  3886  001E82  D7EA               	goto	l1027
  3887  001E84  FFFF               	dw	65535	; errata NOP
  3888  001E86                     __end_of_SIM800xSDMSendBytes:
  3889                           	callstack 0
  3890                           
  3891 ;; *************** function _SIM800xHTTPAction *****************
  3892 ;; Defined at:
  3893 ;;		line 1634 in file "Src/SIM800x.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  method          1    wreg     unsigned char 
  3896 ;;  statuscode      2   46[COMRAM] PTR unsigned int 
  3897 ;;		 -> SystemTask@scode(2), 
  3898 ;;  cnt             2   48[COMRAM] PTR unsigned long 
  3899 ;;		 -> SystemTask@cnt(4), 
  3900 ;;  tout            4   50[COMRAM] unsigned long 
  3901 ;;  errcode         2   54[COMRAM] PTR unsigned int 
  3902 ;;		 -> SystemTask@errcode(2), 
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;  method          1   94[COMRAM] unsigned char 
  3905 ;;  t               4   90[COMRAM] unsigned long 
  3906 ;;  str            30   60[COMRAM] unsigned char [30]
  3907 ;;  time            4   95[COMRAM] unsigned long 
  3908 ;;  res             2   99[COMRAM] int 
  3909 ;; Return value:  Size  Location     Type
  3910 ;;                  1    wreg      enum E2115
  3911 ;; Registers used:
  3912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3918 ;;      Params:        10       0       0       0       0       0       0
  3919 ;;      Locals:        41       0       0       0       0       0       0
  3920 ;;      Temps:          4       0       0       0       0       0       0
  3921 ;;      Totals:        55       0       0       0       0       0       0
  3922 ;;Total ram usage:       55 bytes
  3923 ;; Hardware stack levels used: 1
  3924 ;; Hardware stack levels required when called: 5
  3925 ;; This function calls:
  3926 ;;		_SIM800xSDMFlush
  3927 ;;		_SIM800xSDMPrint
  3928 ;;		_SIM800xSDMReadF1Pkt
  3929 ;;		_SIM800xSDMRxAvailable
  3930 ;;		_StrToInt
  3931 ;;		_Tick_ms
  3932 ;;		_sprintf
  3933 ;; This function is called by:
  3934 ;;		_SystemTask
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text8
  3939  0007DC                     __ptext8:
  3940                           	callstack 0
  3941  0007DC                     _SIM800xHTTPAction:
  3942                           	callstack 0
  3943  0007DC  FFFF               	dw	65535	; assembler added errata NOP
  3944                           
  3945                           ;incstack = 0
  3946                           ;SIM800xHTTPAction@method stored from wreg
  3947  0007DE  6E5F               	movwf	SIM800xHTTPAction@method^0,c
  3948                           
  3949                           ;SIM800x.c: 1637: if(method > 3)
  3950  0007E0  0E03               	movlw	3
  3951  0007E2  645F               	cpfsgt	SIM800xHTTPAction@method^0,c
  3952  0007E4  D003               	goto	l3964
  3953  0007E6                     u2720:
  3954  0007E6  FFFF               	dw	65535	; assembler added errata NOP
  3955                           
  3956                           ;SIM800x.c: 1638: return SIM800X_ERROR;
  3957  0007E8  0E01               	movlw	1
  3958  0007EA  D0FF               	goto	l803
  3959  0007EC                     l3964:
  3960  0007EC  FFFF               	dw	65535	; assembler added errata NOP
  3961                           
  3962                           ;SIM800x.c: 1640: char str[30] = {0, 0, 0, 0};
  3963  0007EE  EE20  F03D         	lfsr	2,SIM800xHTTPAction@str
  3964  0007F2  0E1D               	movlw	29
  3965  0007F4                     u2731:
  3966  0007F4  6ADE               	clrf	postinc2,c
  3967  0007F6  06E8               	decf	wreg,f,c
  3968  0007F8  E2FD               	bc	u2731
  3969                           
  3970                           ;SIM800x.c: 1642: sprintf(str, "AT+HTTPACTION=%u\r", (uint8_t)(method & 0x03));
  3971  0007FA  0E3D               	movlw	low SIM800xHTTPAction@str
  3972  0007FC  6E17               	movwf	sprintf@sp^0,c
  3973  0007FE  0E00               	movlw	high SIM800xHTTPAction@str
  3974  000800  6E18               	movwf	(sprintf@sp+1)^0,c
  3975  000802  0E67               	movlw	low STR_99
  3976  000804  6E19               	movwf	sprintf@f^0,c
  3977  000806  0E7D               	movlw	high STR_99
  3978  000808  6E1A               	movwf	(sprintf@f+1)^0,c
  3979  00080A  C05F  F039         	movff	SIM800xHTTPAction@method,??_SIM800xHTTPAction
  3980  00080E  0E03               	movlw	3
  3981  000810  1639               	andwf	??_SIM800xHTTPAction^0,f,c
  3982  000812  5039               	movf	??_SIM800xHTTPAction^0,w,c
  3983  000814  6E1B               	movwf	(?_sprintf+4)^0,c
  3984  000816  6A1C               	clrf	(?_sprintf+5)^0,c
  3985  000818  ECBD  F002         	call	_sprintf	;wreg free
  3986                           
  3987                           ;SIM800x.c: 1643: SIM800xSDMFlush();
  3988  00081C  ECA0  F00F         	call	_SIM800xSDMFlush	;wreg free
  3989                           
  3990                           ;SIM800x.c: 1644: SIM800xSDMPrint(str);
  3991  000820  0E3D               	movlw	low SIM800xHTTPAction@str
  3992  000822  6E02               	movwf	SIM800xSDMPrint@str^0,c
  3993  000824  0E00               	movlw	high SIM800xHTTPAction@str
  3994  000826  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  3995  000828  EC4C  F00D         	call	_SIM800xSDMPrint	;wreg free
  3996                           
  3997                           ;SIM800x.c: 1646: uint32_t time = Tick_ms();
  3998  00082C  EC95  F00F         	call	_Tick_ms	;wreg free
  3999  000830  C001  F060         	movff	?_Tick_ms,SIM800xHTTPAction@time
  4000  000834  C002  F061         	movff	?_Tick_ms+1,SIM800xHTTPAction@time+1
  4001  000838  C003  F062         	movff	?_Tick_ms+2,SIM800xHTTPAction@time+2
  4002  00083C  C004  F063         	movff	?_Tick_ms+3,SIM800xHTTPAction@time+3
  4003                           
  4004                           ;SIM800x.c: 1647: while(SIM800xSDMRxAvailable() < 6)
  4005  000840  D01C               	goto	l3980
  4006  000842                     l3974:
  4007  000842  FFFF               	dw	65535	; assembler added errata NOP
  4008                           
  4009                           ;SIM800x.c: 1648: {;SIM800x.c: 1649: if((Tick_ms() - time) > Tout)
  4010  000844  EC95  F00F         	call	_Tick_ms	;wreg free
  4011  000848  5060               	movf	SIM800xHTTPAction@time^0,w,c
  4012  00084A  5C01               	subwf	?_Tick_ms^0,w,c
  4013  00084C  6E39               	movwf	??_SIM800xHTTPAction^0,c
  4014  00084E  5061               	movf	(SIM800xHTTPAction@time+1)^0,w,c
  4015  000850  5802               	subwfb	(?_Tick_ms+1)^0,w,c
  4016  000852  6E3A               	movwf	(??_SIM800xHTTPAction+1)^0,c
  4017  000854  5062               	movf	(SIM800xHTTPAction@time+2)^0,w,c
  4018  000856  5803               	subwfb	(?_Tick_ms+2)^0,w,c
  4019  000858  6E3B               	movwf	(??_SIM800xHTTPAction+2)^0,c
  4020  00085A  5063               	movf	(SIM800xHTTPAction@time+3)^0,w,c
  4021  00085C  5804               	subwfb	(?_Tick_ms+3)^0,w,c
  4022  00085E  6E3C               	movwf	(??_SIM800xHTTPAction+3)^0,c
  4023  000860  5039               	movf	??_SIM800xHTTPAction^0,w,c
  4024  000862  5C7A               	subwf	_Tout^0,w,c
  4025  000864  503A               	movf	(??_SIM800xHTTPAction+1)^0,w,c
  4026  000866  587B               	subwfb	(_Tout+1)^0,w,c
  4027  000868  503B               	movf	(??_SIM800xHTTPAction+2)^0,w,c
  4028  00086A  587C               	subwfb	(_Tout+2)^0,w,c
  4029  00086C  503C               	movf	(??_SIM800xHTTPAction+3)^0,w,c
  4030  00086E  587D               	subwfb	(_Tout+3)^0,w,c
  4031  000870  B0D8               	btfsc	status,0,c
  4032  000872  D003               	goto	l3980
  4033  000874                     u2740:
  4034  000874  FFFF               	dw	65535	; assembler added errata NOP
  4035                           
  4036                           ;SIM800x.c: 1650: {;SIM800x.c: 1651: return SIM800X_TIME_OUT;
  4037  000876  0E05               	movlw	5
  4038  000878  D0B8               	goto	l803
  4039  00087A                     l3980:
  4040  00087A  FFFF               	dw	65535	; assembler added errata NOP
  4041  00087C  EC43  F00F         	call	_SIM800xSDMRxAvailable	;wreg free
  4042  000880  5007               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  4043  000882  E104               	bnz	u2750
  4044  000884  0E06               	movlw	6
  4045  000886  5C06               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  4046  000888  A0D8               	btfss	status,0,c
  4047  00088A  D7DB               	goto	l3974
  4048  00088C                     u2750:
  4049                           
  4050                           ;SIM800x.c: 1652: };SIM800x.c: 1653: };SIM800x.c: 1655: int res = SIM800xSDMReadF1Pkt(st
      +                          r);
  4051  00088C  0E3D               	movlw	low SIM800xHTTPAction@str
  4052  00088E  6E0A               	movwf	SIM800xSDMReadF1Pkt@data^0,c
  4053  000890  0E00               	movlw	high SIM800xHTTPAction@str
  4054  000892  6E0B               	movwf	(SIM800xSDMReadF1Pkt@data+1)^0,c
  4055  000894  EC0C  F009         	call	_SIM800xSDMReadF1Pkt	;wreg free
  4056  000898  C00A  F064         	movff	?_SIM800xSDMReadF1Pkt,SIM800xHTTPAction@res
  4057  00089C  C00B  F065         	movff	?_SIM800xSDMReadF1Pkt+1,SIM800xHTTPAction@res+1
  4058                           
  4059                           ;SIM800x.c: 1656: if(res < 0)
  4060  0008A0  BE65               	btfsc	(SIM800xHTTPAction@res+1)^0,7,c
  4061  0008A2  D7E8               	goto	u2740
  4062                           
  4063                           ;SIM800x.c: 1660: else if(str[0] == 'O')
  4064  0008A4  0E4F               	movlw	79
  4065  0008A6  183D               	xorwf	SIM800xHTTPAction@str^0,w,c
  4066  0008A8  A4D8               	btfss	status,2,c
  4067  0008AA  D07F               	goto	l4020
  4068                           
  4069                           ;SIM800x.c: 1661: {;SIM800x.c: 1663: uint32_t t = (uint32_t)(tout + 5000);
  4070  0008AC  0E88               	movlw	136
  4071  0008AE  2433               	addwf	SIM800xHTTPAction@tout^0,w,c
  4072  0008B0  6E5B               	movwf	SIM800xHTTPAction@t^0,c
  4073  0008B2  0E13               	movlw	19
  4074  0008B4  2034               	addwfc	(SIM800xHTTPAction@tout+1)^0,w,c
  4075  0008B6  6E5C               	movwf	(SIM800xHTTPAction@t+1)^0,c
  4076  0008B8  0E00               	movlw	0
  4077  0008BA  2035               	addwfc	(SIM800xHTTPAction@tout+2)^0,w,c
  4078  0008BC  6E5D               	movwf	(SIM800xHTTPAction@t+2)^0,c
  4079  0008BE  0E00               	movlw	0
  4080  0008C0  2036               	addwfc	(SIM800xHTTPAction@tout+3)^0,w,c
  4081  0008C2  6E5E               	movwf	(SIM800xHTTPAction@t+3)^0,c
  4082                           
  4083                           ;SIM800x.c: 1664: time = Tick_ms();
  4084  0008C4  EC95  F00F         	call	_Tick_ms	;wreg free
  4085  0008C8  C001  F060         	movff	?_Tick_ms,SIM800xHTTPAction@time
  4086  0008CC  C002  F061         	movff	?_Tick_ms+1,SIM800xHTTPAction@time+1
  4087  0008D0  C003  F062         	movff	?_Tick_ms+2,SIM800xHTTPAction@time+2
  4088  0008D4  C004  F063         	movff	?_Tick_ms+3,SIM800xHTTPAction@time+3
  4089                           
  4090                           ;SIM800x.c: 1665: while(SIM800xSDMRxAvailable() < 24)
  4091  0008D8  D019               	goto	l4004
  4092  0008DA                     l3998:
  4093  0008DA  FFFF               	dw	65535	; assembler added errata NOP
  4094                           
  4095                           ;SIM800x.c: 1666: {;SIM800x.c: 1667: if((Tick_ms() - time) > t)
  4096  0008DC  EC95  F00F         	call	_Tick_ms	;wreg free
  4097  0008E0  5060               	movf	SIM800xHTTPAction@time^0,w,c
  4098  0008E2  5C01               	subwf	?_Tick_ms^0,w,c
  4099  0008E4  6E39               	movwf	??_SIM800xHTTPAction^0,c
  4100  0008E6  5061               	movf	(SIM800xHTTPAction@time+1)^0,w,c
  4101  0008E8  5802               	subwfb	(?_Tick_ms+1)^0,w,c
  4102  0008EA  6E3A               	movwf	(??_SIM800xHTTPAction+1)^0,c
  4103  0008EC  5062               	movf	(SIM800xHTTPAction@time+2)^0,w,c
  4104  0008EE  5803               	subwfb	(?_Tick_ms+2)^0,w,c
  4105  0008F0  6E3B               	movwf	(??_SIM800xHTTPAction+2)^0,c
  4106  0008F2  5063               	movf	(SIM800xHTTPAction@time+3)^0,w,c
  4107  0008F4  5804               	subwfb	(?_Tick_ms+3)^0,w,c
  4108  0008F6  6E3C               	movwf	(??_SIM800xHTTPAction+3)^0,c
  4109  0008F8  5039               	movf	??_SIM800xHTTPAction^0,w,c
  4110  0008FA  5C5B               	subwf	SIM800xHTTPAction@t^0,w,c
  4111  0008FC  503A               	movf	(??_SIM800xHTTPAction+1)^0,w,c
  4112  0008FE  585C               	subwfb	(SIM800xHTTPAction@t+1)^0,w,c
  4113  000900  503B               	movf	(??_SIM800xHTTPAction+2)^0,w,c
  4114  000902  585D               	subwfb	(SIM800xHTTPAction@t+2)^0,w,c
  4115  000904  503C               	movf	(??_SIM800xHTTPAction+3)^0,w,c
  4116  000906  585E               	subwfb	(SIM800xHTTPAction@t+3)^0,w,c
  4117  000908  A0D8               	btfss	status,0,c
  4118  00090A  D7B4               	goto	u2740
  4119  00090C                     l4004:
  4120  00090C  FFFF               	dw	65535	; assembler added errata NOP
  4121  00090E  EC43  F00F         	call	_SIM800xSDMRxAvailable	;wreg free
  4122  000912  5007               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  4123  000914  E104               	bnz	u2790
  4124  000916  0E18               	movlw	24
  4125  000918  5C06               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  4126  00091A  A0D8               	btfss	status,0,c
  4127  00091C  D7DE               	goto	l3998
  4128  00091E                     u2790:
  4129                           
  4130                           ;SIM800x.c: 1670: };SIM800x.c: 1671: };SIM800x.c: 1673: res = SIM800xSDMReadF1Pkt(str);
  4131  00091E  0E3D               	movlw	low SIM800xHTTPAction@str
  4132  000920  6E0A               	movwf	SIM800xSDMReadF1Pkt@data^0,c
  4133  000922  0E00               	movlw	high SIM800xHTTPAction@str
  4134  000924  6E0B               	movwf	(SIM800xSDMReadF1Pkt@data+1)^0,c
  4135  000926  EC0C  F009         	call	_SIM800xSDMReadF1Pkt	;wreg free
  4136  00092A  C00A  F064         	movff	?_SIM800xSDMReadF1Pkt,SIM800xHTTPAction@res
  4137  00092E  C00B  F065         	movff	?_SIM800xSDMReadF1Pkt+1,SIM800xHTTPAction@res+1
  4138                           
  4139                           ;SIM800x.c: 1674: if(str[0] == '+')
  4140  000932  0E2B               	movlw	43
  4141  000934  183D               	xorwf	SIM800xHTTPAction@str^0,w,c
  4142  000936  A4D8               	btfss	status,2,c
  4143  000938  D756               	goto	u2720
  4144                           
  4145                           ;SIM800x.c: 1675: {;SIM800x.c: 1676: str[(uint8_t)res] = '\0';
  4146  00093A  0E3D               	movlw	low SIM800xHTTPAction@str
  4147  00093C  2464               	addwf	SIM800xHTTPAction@res^0,w,c
  4148  00093E  6ED9               	movwf	fsr2l,c
  4149  000940  6ADA               	clrf	fsr2h,c
  4150  000942  0E00               	movlw	high SIM800xHTTPAction@str
  4151  000944  22DA               	addwfc	fsr2h,f,c
  4152  000946  0E00               	movlw	0
  4153  000948  6EDF               	movwf	indf2,c
  4154                           
  4155                           ;SIM800x.c: 1677: *statuscode = (uint16_t)StrToInt(str, 15, 17);
  4156  00094A  0E3D               	movlw	low SIM800xHTTPAction@str
  4157  00094C  6E0D               	movwf	StrToInt@str^0,c
  4158  00094E  0E00               	movlw	high SIM800xHTTPAction@str
  4159  000950  6E0E               	movwf	(StrToInt@str+1)^0,c
  4160  000952  0E0F               	movlw	15
  4161  000954  6E0F               	movwf	StrToInt@start^0,c
  4162  000956  0E11               	movlw	17
  4163  000958  6E10               	movwf	StrToInt@stop^0,c
  4164  00095A  ECA2  F007         	call	_StrToInt	;wreg free
  4165  00095E  C02F  FFD9         	movff	SIM800xHTTPAction@statuscode,fsr2l
  4166  000962  C030  FFDA         	movff	SIM800xHTTPAction@statuscode+1,fsr2h
  4167  000966  C00D  FFDE         	movff	?_StrToInt,postinc2
  4168  00096A  C00E  FFDD         	movff	?_StrToInt+1,postdec2
  4169                           
  4170                           ;SIM800x.c: 1678: *cnt = (uint16_t)StrToInt(str, 19, (uint16_t)(res - 1));
  4171  00096E  0E3D               	movlw	low SIM800xHTTPAction@str
  4172  000970  6E0D               	movwf	StrToInt@str^0,c
  4173  000972  0E00               	movlw	high SIM800xHTTPAction@str
  4174  000974  6E0E               	movwf	(StrToInt@str+1)^0,c
  4175  000976  0E13               	movlw	19
  4176  000978  6E0F               	movwf	StrToInt@start^0,c
  4177  00097A  0464               	decf	SIM800xHTTPAction@res^0,w,c
  4178  00097C  6E10               	movwf	StrToInt@stop^0,c
  4179  00097E  ECA2  F007         	call	_StrToInt	;wreg free
  4180  000982  500D               	movf	?_StrToInt^0,w,c
  4181  000984  6E39               	movwf	??_SIM800xHTTPAction^0,c
  4182  000986  500E               	movf	(?_StrToInt+1)^0,w,c
  4183  000988  6E3A               	movwf	(??_SIM800xHTTPAction+1)^0,c
  4184  00098A  6A3B               	clrf	(??_SIM800xHTTPAction+2)^0,c
  4185  00098C  6A3C               	clrf	(??_SIM800xHTTPAction+3)^0,c
  4186  00098E  C031  FFD9         	movff	SIM800xHTTPAction@cnt,fsr2l
  4187  000992  C032  FFDA         	movff	SIM800xHTTPAction@cnt+1,fsr2h
  4188  000996  C039  FFDE         	movff	??_SIM800xHTTPAction,postinc2
  4189  00099A  C03A  FFDE         	movff	??_SIM800xHTTPAction+1,postinc2
  4190  00099E  C03B  FFDE         	movff	??_SIM800xHTTPAction+2,postinc2
  4191  0009A2  C03C  FFDE         	movff	??_SIM800xHTTPAction+3,postinc2
  4192                           
  4193                           ;SIM800x.c: 1679: return SIM800X_OK;
  4194  0009A6  0E00               	movlw	0
  4195  0009A8  D020               	goto	l803
  4196  0009AA                     l4020:
  4197  0009AA  FFFF               	dw	65535	; assembler added errata NOP
  4198                           
  4199                           ;SIM800x.c: 1682: else if(str[0] == '+')
  4200  0009AC  0E2B               	movlw	43
  4201  0009AE  183D               	xorwf	SIM800xHTTPAction@str^0,w,c
  4202  0009B0  A4D8               	btfss	status,2,c
  4203  0009B2  D719               	goto	u2720
  4204                           
  4205                           ;SIM800x.c: 1683: {;SIM800x.c: 1684: str[(uint8_t)res] = '\0';
  4206  0009B4  0E3D               	movlw	low SIM800xHTTPAction@str
  4207  0009B6  2464               	addwf	SIM800xHTTPAction@res^0,w,c
  4208  0009B8  6ED9               	movwf	fsr2l,c
  4209  0009BA  6ADA               	clrf	fsr2h,c
  4210  0009BC  0E00               	movlw	high SIM800xHTTPAction@str
  4211  0009BE  22DA               	addwfc	fsr2h,f,c
  4212  0009C0  0E00               	movlw	0
  4213  0009C2  6EDF               	movwf	indf2,c
  4214                           
  4215                           ;SIM800x.c: 1685: *errcode = (uint16_t)StrToInt(str, 12, (uint16_t)(res - 1));
  4216  0009C4  0E3D               	movlw	low SIM800xHTTPAction@str
  4217  0009C6  6E0D               	movwf	StrToInt@str^0,c
  4218  0009C8  0E00               	movlw	high SIM800xHTTPAction@str
  4219  0009CA  6E0E               	movwf	(StrToInt@str+1)^0,c
  4220  0009CC  0E0C               	movlw	12
  4221  0009CE  6E0F               	movwf	StrToInt@start^0,c
  4222  0009D0  0464               	decf	SIM800xHTTPAction@res^0,w,c
  4223  0009D2  6E10               	movwf	StrToInt@stop^0,c
  4224  0009D4  ECA2  F007         	call	_StrToInt	;wreg free
  4225  0009D8  C037  FFD9         	movff	SIM800xHTTPAction@errcode,fsr2l
  4226  0009DC  C038  FFDA         	movff	SIM800xHTTPAction@errcode+1,fsr2h
  4227  0009E0  C00D  FFDE         	movff	?_StrToInt,postinc2
  4228  0009E4  C00E  FFDD         	movff	?_StrToInt+1,postdec2
  4229                           
  4230                           ;SIM800x.c: 1686: return SIM800X_CME_ERROR;
  4231  0009E8  0E02               	movlw	2
  4232  0009EA                     l803:
  4233  0009EA  FFFF               	dw	65535	; assembler added errata NOP
  4234  0009EC  0012               	return		;funcret
  4235  0009EE  FFFF               	dw	65535	; errata NOP
  4236  0009F0                     __end_of_SIM800xHTTPAction:
  4237                           	callstack 0
  4238                           
  4239 ;; *************** function _SystemInit *****************
  4240 ;; Defined at:
  4241 ;;		line 34 in file "Src/ApplicationExample.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;		None
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;  ip             20   79[COMRAM] unsigned char [20]
  4246 ;;  err             2   99[COMRAM] unsigned int 
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  1    wreg      unsigned char 
  4249 ;; Registers used:
  4250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4256 ;;      Params:         0       0       0       0       0       0       0
  4257 ;;      Locals:        22       0       0       0       0       0       0
  4258 ;;      Temps:          0       0       0       0       0       0       0
  4259 ;;      Totals:        22       0       0       0       0       0       0
  4260 ;;Total ram usage:       22 bytes
  4261 ;; Hardware stack levels used: 1
  4262 ;; Hardware stack levels required when called: 7
  4263 ;; This function calls:
  4264 ;;		_AddEntryToJsonObject
  4265 ;;		_SIM800xHTTPInit
  4266 ;;		_SIM800xHTTPSetContent
  4267 ;;		_SIM800xHTTPSetURL
  4268 ;;		_SIM800xIPGetState
  4269 ;;		_SIM800xIPOpen
  4270 ;;		_SIM800xIPSetAPN
  4271 ;;		_SIM800xIPSetConnectionType
  4272 ;;		_SIM800xInit
  4273 ;;		_SoftUARTInit
  4274 ;;		_SoftUARTPrint
  4275 ;; This function is called by:
  4276 ;;		_main
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text9
  4281  000BF2                     __ptext9:
  4282                           	callstack 0
  4283  000BF2                     _SystemInit:
  4284                           	callstack 0
  4285  000BF2  FFFF               	dw	65535	; assembler added errata NOP
  4286                           
  4287                           ;ApplicationExample.c: 36: SoftUARTInit();
  4288                           
  4289                           ;incstack = 0
  4290  000BF4  ECAB  F00F         	call	_SoftUARTInit	;wreg free
  4291                           
  4292                           ;ApplicationExample.c: 38: if(SIM800xInit(9600) == SIM800X_OK)
  4293  000BF8  0E80               	movlw	128
  4294  000BFA  6E2F               	movwf	SIM800xInit@br^0,c
  4295  000BFC  0E25               	movlw	37
  4296  000BFE  6E30               	movwf	(SIM800xInit@br+1)^0,c
  4297  000C00  0E00               	movlw	0
  4298  000C02  6E31               	movwf	(SIM800xInit@br+2)^0,c
  4299  000C04  0E00               	movlw	0
  4300  000C06  6E32               	movwf	(SIM800xInit@br+3)^0,c
  4301  000C08  EC6D  F008         	call	_SIM800xInit	;wreg free
  4302  000C0C  0900               	iorlw	0
  4303  000C0E  A4D8               	btfss	status,2,c
  4304  000C10  D0C3               	goto	l50
  4305                           
  4306                           ;ApplicationExample.c: 39: {;ApplicationExample.c: 40: SoftUARTPrint("Modem Initialized.
      +                          \r\r");
  4307  000C12  0E04               	movlw	low STR_1
  4308  000C14  6E04               	movwf	SoftUARTPrint@str^0,c
  4309  000C16  0E7D               	movlw	high STR_1
  4310  000C18  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  4311  000C1A  EC1C  F00D         	call	_SoftUARTPrint	;wreg free
  4312                           
  4313                           ;ApplicationExample.c: 44: SoftUARTPrint("Setting IP configurations...\r");
  4314  000C1E  0E73               	movlw	low STR_2
  4315  000C20  6E04               	movwf	SoftUARTPrint@str^0,c
  4316  000C22  0E7B               	movlw	high STR_2
  4317  000C24  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  4318  000C26  EC1C  F00D         	call	_SoftUARTPrint	;wreg free
  4319                           
  4320                           ;ApplicationExample.c: 45: if(SIM800xIPSetConnectionType(1, "GPRS") == SIM800X_OK)
  4321  000C2A  0EE0               	movlw	low STR_3
  4322  000C2C  6E13               	movwf	SIM800xIPSetConnectionType@contype^0,c
  4323  000C2E  0E7F               	movlw	high STR_3
  4324  000C30  6E14               	movwf	(SIM800xIPSetConnectionType@contype+1)^0,c
  4325  000C32  0E01               	movlw	1
  4326  000C34  ECB0  F00C         	call	_SIM800xIPSetConnectionType
  4327  000C38  0900               	iorlw	0
  4328  000C3A  A4D8               	btfss	status,2,c
  4329  000C3C  D0AD               	goto	l50
  4330                           
  4331                           ;ApplicationExample.c: 46: {;ApplicationExample.c: 47: if(SIM800xIPSetAPN(1, "Internet")
      +                           == SIM800X_OK)
  4332  000C3E  0E6B               	movlw	low STR_4
  4333  000C40  6E13               	movwf	SIM800xIPSetAPN@apn^0,c
  4334  000C42  0E7F               	movlw	high STR_4
  4335  000C44  6E14               	movwf	(SIM800xIPSetAPN@apn+1)^0,c
  4336  000C46  0E01               	movlw	1
  4337  000C48  ECE6  F00C         	call	_SIM800xIPSetAPN
  4338  000C4C  0900               	iorlw	0
  4339  000C4E  A4D8               	btfss	status,2,c
  4340  000C50  D0A3               	goto	l50
  4341                           
  4342                           ;ApplicationExample.c: 48: {;ApplicationExample.c: 49: if(SIM800xIPOpen(1) == SIM800X_OK
      +                          )
  4343  000C52  0E01               	movlw	1
  4344  000C54  ECC4  F00E         	call	_SIM800xIPOpen
  4345  000C58  0900               	iorlw	0
  4346  000C5A  A4D8               	btfss	status,2,c
  4347  000C5C  D09D               	goto	l50
  4348                           
  4349                           ;ApplicationExample.c: 50: {;ApplicationExample.c: 51: char ip[20];;ApplicationExample.c
      +                          : 52: SoftUARTPrint("Done.\r\r");
  4350  000C5E  0EB4               	movlw	low STR_5
  4351  000C60  6E04               	movwf	SoftUARTPrint@str^0,c
  4352  000C62  0E7F               	movlw	high STR_5
  4353  000C64  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  4354  000C66  EC1C  F00D         	call	_SoftUARTPrint	;wreg free
  4355                           
  4356                           ;ApplicationExample.c: 53: SIM800xIPGetState(1, ip);
  4357  000C6A  0E50               	movlw	low SystemInit@ip
  4358  000C6C  6E24               	movwf	SIM800xIPGetState@ip^0,c
  4359  000C6E  0E00               	movlw	high SystemInit@ip
  4360  000C70  6E25               	movwf	(SIM800xIPGetState@ip+1)^0,c
  4361  000C72  0E01               	movlw	1
  4362  000C74  EC25  F00A         	call	_SIM800xIPGetState
  4363                           
  4364                           ;ApplicationExample.c: 54: SoftUARTPrint("Bearer profile Activated, IP: ");
  4365  000C78  0E54               	movlw	low STR_6
  4366  000C7A  6E04               	movwf	SoftUARTPrint@str^0,c
  4367  000C7C  0E7B               	movlw	high STR_6
  4368  000C7E  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  4369  000C80  EC1C  F00D         	call	_SoftUARTPrint	;wreg free
  4370                           
  4371                           ;ApplicationExample.c: 55: SoftUARTPrint(ip);
  4372  000C84  0E50               	movlw	low SystemInit@ip
  4373  000C86  6E04               	movwf	SoftUARTPrint@str^0,c
  4374  000C88  0E00               	movlw	high SystemInit@ip
  4375  000C8A  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  4376  000C8C  EC1C  F00D         	call	_SoftUARTPrint	;wreg free
  4377                           
  4378                           ;ApplicationExample.c: 56: SoftUARTPrint("\r\r");
  4379  000C90  0E31               	movlw	low (STR_21+29)
  4380  000C92  6E04               	movwf	SoftUARTPrint@str^0,c
  4381  000C94  0E7B               	movlw	high (STR_21+29)
  4382  000C96  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  4383  000C98  EC1C  F00D         	call	_SoftUARTPrint	;wreg free
  4384                           
  4385                           ;ApplicationExample.c: 57: uint16_t err;;ApplicationExample.c: 61: SoftUARTPrint("Settin
      +                          g HTTP configurations...\r");
  4386  000C9C  0E34               	movlw	low STR_8
  4387  000C9E  6E04               	movwf	SoftUARTPrint@str^0,c
  4388  000CA0  0E7B               	movlw	high STR_8
  4389  000CA2  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  4390  000CA4  EC1C  F00D         	call	_SoftUARTPrint	;wreg free
  4391                           
  4392                           ;ApplicationExample.c: 62: if(SIM800xHTTPInit(&err) == SIM800X_OK)
  4393  000CA8  0E64               	movlw	low SystemInit@err
  4394  000CAA  6E41               	movwf	SIM800xHTTPInit@errcode^0,c
  4395  000CAC  0E00               	movlw	high SystemInit@err
  4396  000CAE  6E42               	movwf	(SIM800xHTTPInit@errcode+1)^0,c
  4397  000CB0  EC84  F00F         	call	_SIM800xHTTPInit	;wreg free
  4398  000CB4  0900               	iorlw	0
  4399  000CB6  A4D8               	btfss	status,2,c
  4400  000CB8  D06F               	goto	l50
  4401                           
  4402                           ;ApplicationExample.c: 63: {;ApplicationExample.c: 64: if(SIM800xHTTPSetURL("http://back
      +                          end.thinger.io/v3/users/FirmwareEngineers/devices/SIM800L/callback/data?authorization=ey
      +                          JhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODAzNjA0NzAsImlhdCI6MTY4MDM1MzI3MCwicm9sZ
      +                          SI6InVzZXIiLCJ1c3IiOiJGaXJtd2FyZUVuZ2luZW
  4403  000CBA  0EB8               	movlw	low STR_9
  4404  000CBC  6E41               	movwf	SIM800xHTTPSetURL@url^0,c
  4405  000CBE  0E79               	movlw	high STR_9
  4406  000CC0  6E42               	movwf	(SIM800xHTTPSetURL@url+1)^0,c
  4407  000CC2  0E64               	movlw	low SystemInit@err
  4408  000CC4  6E43               	movwf	SIM800xHTTPSetURL@errcode^0,c
  4409  000CC6  0E00               	movlw	high SystemInit@err
  4410  000CC8  6E44               	movwf	(SIM800xHTTPSetURL@errcode+1)^0,c
  4411  000CCA  ECD6  F00D         	call	_SIM800xHTTPSetURL	;wreg free
  4412  000CCE  0900               	iorlw	0
  4413  000CD0  A4D8               	btfss	status,2,c
  4414  000CD2  D062               	goto	l50
  4415                           
  4416                           ;ApplicationExample.c: 65: {;ApplicationExample.c: 66: if(SIM800xHTTPSetContent("applica
      +                          tion/json", &err) == SIM800X_OK)
  4417  000CD4  0E9C               	movlw	low STR_10
  4418  000CD6  6E41               	movwf	SIM800xHTTPSetContent@content^0,c
  4419  000CD8  0E7D               	movlw	high STR_10
  4420  000CDA  6E42               	movwf	(SIM800xHTTPSetContent@content+1)^0,c
  4421  000CDC  0E64               	movlw	low SystemInit@err
  4422  000CDE  6E43               	movwf	SIM800xHTTPSetContent@errcode^0,c
  4423  000CE0  0E00               	movlw	high SystemInit@err
  4424  000CE2  6E44               	movwf	(SIM800xHTTPSetContent@errcode+1)^0,c
  4425  000CE4  EC00  F00E         	call	_SIM800xHTTPSetContent	;wreg free
  4426  000CE8  0900               	iorlw	0
  4427  000CEA  A4D8               	btfss	status,2,c
  4428  000CEC  D055               	goto	l50
  4429                           
  4430                           ;ApplicationExample.c: 67: {;ApplicationExample.c: 68: SoftUARTPrint("Done.\r\r");
  4431  000CEE  0EB4               	movlw	low STR_5
  4432  000CF0  6E04               	movwf	SoftUARTPrint@str^0,c
  4433  000CF2  0E7F               	movlw	high STR_5
  4434  000CF4  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  4435  000CF6  EC1C  F00D         	call	_SoftUARTPrint	;wreg free
  4436                           
  4437                           ;ApplicationExample.c: 73: AddEntryToJsonObject(txmessage, "Engine Temperature (C)", "30
      +                          ", &cpos);
  4438  000CFA  0E8C               	movlw	low _txmessage
  4439  000CFC  6E01               	movwf	AddEntryToJsonObject@JsonObject^0,c
  4440  000CFE  0E02               	movlw	high _txmessage
  4441  000D00  6E02               	movwf	(AddEntryToJsonObject@JsonObject+1)^0,c
  4442  000D02  0EAE               	movlw	low STR_12
  4443  000D04  6E03               	movwf	AddEntryToJsonObject@key^0,c
  4444  000D06  0E7C               	movlw	high STR_12
  4445  000D08  6E04               	movwf	(AddEntryToJsonObject@key+1)^0,c
  4446  000D0A  0EF3               	movlw	low STR_13
  4447  000D0C  6E05               	movwf	AddEntryToJsonObject@value^0,c
  4448  000D0E  0E7F               	movlw	high STR_13
  4449  000D10  6E06               	movwf	(AddEntryToJsonObject@value+1)^0,c
  4450  000D12  0E78               	movlw	low _cpos
  4451  000D14  6E07               	movwf	AddEntryToJsonObject@Cpos^0,c
  4452  000D16  0E00               	movlw	high _cpos
  4453  000D18  6E08               	movwf	(AddEntryToJsonObject@Cpos+1)^0,c
  4454  000D1A  EC0D  F000         	call	_AddEntryToJsonObject	;wreg free
  4455                           
  4456                           ;ApplicationExample.c: 74: AddEntryToJsonObject(txmessage, "RPM", "3500", &cpos);
  4457  000D1E  0E8C               	movlw	low _txmessage
  4458  000D20  6E01               	movwf	AddEntryToJsonObject@JsonObject^0,c
  4459  000D22  0E02               	movlw	high _txmessage
  4460  000D24  6E02               	movwf	(AddEntryToJsonObject@JsonObject+1)^0,c
  4461  000D26  0EE9               	movlw	low STR_14
  4462  000D28  6E03               	movwf	AddEntryToJsonObject@key^0,c
  4463  000D2A  0E7F               	movlw	high STR_14
  4464  000D2C  6E04               	movwf	(AddEntryToJsonObject@key+1)^0,c
  4465  000D2E  0EDB               	movlw	low STR_15
  4466  000D30  6E05               	movwf	AddEntryToJsonObject@value^0,c
  4467  000D32  0E7F               	movlw	high STR_15
  4468  000D34  6E06               	movwf	(AddEntryToJsonObject@value+1)^0,c
  4469  000D36  0E78               	movlw	low _cpos
  4470  000D38  6E07               	movwf	AddEntryToJsonObject@Cpos^0,c
  4471  000D3A  0E00               	movlw	high _cpos
  4472  000D3C  6E08               	movwf	(AddEntryToJsonObject@Cpos+1)^0,c
  4473  000D3E  EC0D  F000         	call	_AddEntryToJsonObject	;wreg free
  4474                           
  4475                           ;ApplicationExample.c: 75: AddEntryToJsonObject(txmessage, "Vehicle Speed (MPH)", "35", 
      +                          &cpos);
  4476  000D42  0E8C               	movlw	low _txmessage
  4477  000D44  6E01               	movwf	AddEntryToJsonObject@JsonObject^0,c
  4478  000D46  0E02               	movlw	high _txmessage
  4479  000D48  6E02               	movwf	(AddEntryToJsonObject@JsonObject+1)^0,c
  4480  000D4A  0E2D               	movlw	low STR_16
  4481  000D4C  6E03               	movwf	AddEntryToJsonObject@key^0,c
  4482  000D4E  0E7D               	movlw	high STR_16
  4483  000D50  6E04               	movwf	(AddEntryToJsonObject@key+1)^0,c
  4484  000D52  0EF9               	movlw	low STR_17
  4485  000D54  6E05               	movwf	AddEntryToJsonObject@value^0,c
  4486  000D56  0E7F               	movlw	high STR_17
  4487  000D58  6E06               	movwf	(AddEntryToJsonObject@value+1)^0,c
  4488  000D5A  0E78               	movlw	low _cpos
  4489  000D5C  6E07               	movwf	AddEntryToJsonObject@Cpos^0,c
  4490  000D5E  0E00               	movlw	high _cpos
  4491  000D60  6E08               	movwf	(AddEntryToJsonObject@Cpos+1)^0,c
  4492  000D62  EC0D  F000         	call	_AddEntryToJsonObject	;wreg free
  4493                           
  4494                           ;ApplicationExample.c: 76: AddEntryToJsonObject(txmessage, "Fuel Level (%)", "50", &cpos
      +                          );
  4495  000D66  0E8C               	movlw	low _txmessage
  4496  000D68  6E01               	movwf	AddEntryToJsonObject@JsonObject^0,c
  4497  000D6A  0E02               	movlw	high _txmessage
  4498  000D6C  6E02               	movwf	(AddEntryToJsonObject@JsonObject+1)^0,c
  4499  000D6E  0EEB               	movlw	low STR_18
  4500  000D70  6E03               	movwf	AddEntryToJsonObject@key^0,c
  4501  000D72  0E7D               	movlw	high STR_18
  4502  000D74  6E04               	movwf	(AddEntryToJsonObject@key+1)^0,c
  4503  000D76  0EF6               	movlw	low STR_19
  4504  000D78  6E05               	movwf	AddEntryToJsonObject@value^0,c
  4505  000D7A  0E7F               	movlw	high STR_19
  4506  000D7C  6E06               	movwf	(AddEntryToJsonObject@value+1)^0,c
  4507  000D7E  0E78               	movlw	low _cpos
  4508  000D80  6E07               	movwf	AddEntryToJsonObject@Cpos^0,c
  4509  000D82  0E00               	movlw	high _cpos
  4510  000D84  6E08               	movwf	(AddEntryToJsonObject@Cpos+1)^0,c
  4511  000D86  EC0D  F000         	call	_AddEntryToJsonObject	;wreg free
  4512                           
  4513                           ;ApplicationExample.c: 81: SoftUARTPrint("System Initialization completed.\r\r");
  4514  000D8A  0ECF               	movlw	low STR_20
  4515  000D8C  6E04               	movwf	SoftUARTPrint@str^0,c
  4516  000D8E  0E7A               	movlw	high STR_20
  4517  000D90  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  4518  000D92  EC1C  F00D         	call	_SoftUARTPrint	;wreg free
  4519  000D96  D007               	goto	l54
  4520  000D98                     l50:
  4521  000D98  FFFF               	dw	65535	; assembler added errata NOP
  4522                           
  4523                           ;ApplicationExample.c: 83: };ApplicationExample.c: 84: };ApplicationExample.c: 85: };App
      +                          licationExample.c: 86: };ApplicationExample.c: 87: };ApplicationExample.c: 88: };Applica
      +                          tionExample.c: 89: };ApplicationExample.c: 90: SoftUARTPrint("System Initialization fail
      +                          ed.\r\r");
  4524  000D9A  0E14               	movlw	low STR_21
  4525  000D9C  6E04               	movwf	SoftUARTPrint@str^0,c
  4526  000D9E  0E7B               	movlw	high STR_21
  4527  000DA0  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  4528  000DA2  EC1C  F00D         	call	_SoftUARTPrint	;wreg free
  4529  000DA6                     l54:
  4530  000DA6  FFFF               	dw	65535	; assembler added errata NOP
  4531  000DA8  0012               	return		;funcret
  4532  000DAA  FFFF               	dw	65535	; errata NOP
  4533  000DAC                     __end_of_SystemInit:
  4534                           	callstack 0
  4535                           
  4536 ;; *************** function _SoftUARTPrint *****************
  4537 ;; Defined at:
  4538 ;;		line 344 in file "Src/SoftwareUART.c"
  4539 ;; Parameters:    Size  Location     Type
  4540 ;;  str             2    3[COMRAM] PTR const unsigned char 
  4541 ;;		 -> STR_27(17), STR_26(3), STR_25(7), SystemTask@msg(20), 
  4542 ;;		 -> STR_22(34), STR_21(32), STR_20(35), STR_11(8), 
  4543 ;;		 -> STR_8(32), STR_7(3), STR_6(31), SystemInit@ip(20), 
  4544 ;;		 -> STR_5(8), STR_2(30), STR_1(21), 
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;		None
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  1    wreg      void 
  4549 ;; Registers used:
  4550 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4556 ;;      Params:         2       0       0       0       0       0       0
  4557 ;;      Locals:         0       0       0       0       0       0       0
  4558 ;;      Temps:          0       0       0       0       0       0       0
  4559 ;;      Totals:         2       0       0       0       0       0       0
  4560 ;;Total ram usage:        2 bytes
  4561 ;; Hardware stack levels used: 1
  4562 ;; Hardware stack levels required when called: 3
  4563 ;; This function calls:
  4564 ;;		_SoftUARTTransmitByte
  4565 ;; This function is called by:
  4566 ;;		_SystemInit
  4567 ;;		_SystemTask
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           	psect	text10
  4572  001A38                     __ptext10:
  4573                           	callstack 0
  4574  001A38                     _SoftUARTPrint:
  4575                           	callstack 0
  4576  001A38  FFFF               	dw	65535	; assembler added errata NOP
  4577                           
  4578                           ;SoftwareUART.c: 346: while(*str!='\0'){
  4579                           
  4580                           ;incstack = 0
  4581  001A3A  D016               	goto	l3676
  4582  001A3C                     l3672:
  4583  001A3C  FFFF               	dw	65535	; assembler added errata NOP
  4584                           
  4585                           ;SoftwareUART.c: 347: SoftUARTTransmitByte(*(str++));
  4586  001A3E  C004  FFF6         	movff	SoftUARTPrint@str,tblptrl
  4587  001A42  C005  FFF7         	movff	SoftUARTPrint@str+1,tblptrh
  4588  001A46  6AF8               	clrf	tblptru,c
  4589  001A48  0E05               	movlw	(high __ramtop+-1)
  4590  001A4A  64F7               	cpfsgt	tblptrh,c
  4591  001A4C  D004               	bra	u2377
  4592  001A4E  0008               	tblrd		*
  4593  001A50  FFFF               	dw	65535	; errata NOP
  4594  001A52  50F5               	movf	tablat,w,c
  4595  001A54  D005               	bra	u2370
  4596  001A56                     u2377:
  4597  001A56  CFF6 FFE1          	movff	tblptrl,fsr1l
  4598  001A5A  CFF7 FFE2          	movff	tblptrh,fsr1h
  4599  001A5E  50E7               	movf	indf1,w,c
  4600  001A60                     u2370:
  4601  001A60  ECAB  F00D         	call	_SoftUARTTransmitByte
  4602  001A64  4A04               	infsnz	SoftUARTPrint@str^0,f,c
  4603  001A66  2A05               	incf	(SoftUARTPrint@str+1)^0,f,c
  4604  001A68                     l3676:
  4605  001A68  FFFF               	dw	65535	; assembler added errata NOP
  4606  001A6A  C004  FFF6         	movff	SoftUARTPrint@str,tblptrl
  4607  001A6E  C005  FFF7         	movff	SoftUARTPrint@str+1,tblptrh
  4608  001A72  6AF8               	clrf	tblptru,c
  4609  001A74  0E05               	movlw	(high __ramtop+-1)
  4610  001A76  64F7               	cpfsgt	tblptrh,c
  4611  001A78  D004               	bra	u2387
  4612  001A7A  0008               	tblrd		*
  4613  001A7C  FFFF               	dw	65535	; errata NOP
  4614  001A7E  50F5               	movf	tablat,w,c
  4615  001A80  D005               	bra	u2380
  4616  001A82                     u2387:
  4617  001A82  CFF6 FFE1          	movff	tblptrl,fsr1l
  4618  001A86  CFF7 FFE2          	movff	tblptrh,fsr1h
  4619  001A8A  50E7               	movf	indf1,w,c
  4620  001A8C                     u2380:
  4621  001A8C  0900               	iorlw	0
  4622  001A8E  B4D8               	btfsc	status,2,c
  4623  001A90  0012               	return		;funcret
  4624  001A92  FFFF               	dw	65535	; assembler added errata NOP
  4625  001A94  D7D3               	goto	l3672
  4626  001A96  FFFF               	dw	65535	; errata NOP
  4627  001A98                     __end_of_SoftUARTPrint:
  4628                           	callstack 0
  4629                           
  4630 ;; *************** function _SoftUARTTransmitByte *****************
  4631 ;; Defined at:
  4632 ;;		line 301 in file "Src/SoftwareUART.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;  data            1    wreg     unsigned char 
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;  data            1    0[COMRAM] unsigned char 
  4637 ;;  k               1    2[COMRAM] unsigned char 
  4638 ;;  tmp             1    1[COMRAM] unsigned char 
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  1    wreg      void 
  4641 ;; Registers used:
  4642 ;;		wreg, status,2, status,0
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4648 ;;      Params:         0       0       0       0       0       0       0
  4649 ;;      Locals:         3       0       0       0       0       0       0
  4650 ;;      Temps:          0       0       0       0       0       0       0
  4651 ;;      Totals:         3       0       0       0       0       0       0
  4652 ;;Total ram usage:        3 bytes
  4653 ;; Hardware stack levels used: 1
  4654 ;; Hardware stack levels required when called: 2
  4655 ;; This function calls:
  4656 ;;		Nothing
  4657 ;; This function is called by:
  4658 ;;		_SoftUARTPrint
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text11
  4663  001B56                     __ptext11:
  4664                           	callstack 0
  4665  001B56                     _SoftUARTTransmitByte:
  4666                           	callstack 0
  4667  001B56  FFFF               	dw	65535	; assembler added errata NOP
  4668                           
  4669                           ;incstack = 0
  4670                           ;SoftUARTTransmitByte@data stored from wreg
  4671  001B58  6E01               	movwf	SoftUARTTransmitByte@data^0,c
  4672                           
  4673                           ;SoftwareUART.c: 304: uint8_t tmp;;SoftwareUART.c: 305: if(GIE)
  4674  001B5A  AEF2               	btfss	4082,7,c	;volatile
  4675  001B5C  D002               	goto	l3392
  4676                           
  4677                           ;SoftwareUART.c: 306: tmp = 1;
  4678  001B5E  0E01               	movlw	1
  4679  001B60  6E02               	movwf	SoftUARTTransmitByte@tmp^0,c
  4680  001B62                     l3392:
  4681  001B62  FFFF               	dw	65535	; assembler added errata NOP
  4682                           
  4683                           ;SoftwareUART.c: 307: (INTCONbits.GIE = 0);
  4684  001B64  9EF2               	bcf	242,7,c	;volatile
  4685                           
  4686                           ;SoftwareUART.c: 309: IO.Bytes[0x01 + 9] &= (~(1 << 0x3));
  4687  001B66  968A               	bcf	138,3,c	;volatile
  4688                           
  4689                           ;SoftwareUART.c: 310: _delay((unsigned long)(((1000000/9600))*((16 * 1000000)/4000000.0)
      +                          ));
  4690  001B68  0E68               	movlw	104
  4691  001B6A                     u3117:
  4692  001B6A  FFFF               	dw	65535	; errata NOP
  4693  001B6C  2EE8               	decfsz	wreg,f,c
  4694  001B6E  D7FD               	bra	u3117
  4695                           
  4696                           ;SoftwareUART.c: 312: for(uint8_t k = 0;k < 8;k++){
  4697  001B70  0E00               	movlw	0
  4698  001B72  6E03               	movwf	SoftUARTTransmitByte@k^0,c
  4699  001B74                     l223:
  4700  001B74  FFFF               	dw	65535	; assembler added errata NOP
  4701                           
  4702                           ;SoftwareUART.c: 314: if(data & 0x01)
  4703  001B76  A001               	btfss	SoftUARTTransmitByte@data^0,0,c
  4704  001B78  D002               	goto	l3406
  4705                           
  4706                           ;SoftwareUART.c: 315: IO.Bytes[0x01 + 9] |= (1 << 0x3);
  4707  001B7A  868A               	bsf	138,3,c	;volatile
  4708  001B7C  D002               	goto	l3408
  4709  001B7E                     l3406:
  4710  001B7E  FFFF               	dw	65535	; assembler added errata NOP
  4711                           
  4712                           ;SoftwareUART.c: 316: else;SoftwareUART.c: 317: IO.Bytes[0x01 + 9] &= (~(1 << 0x3));
  4713  001B80  968A               	bcf	138,3,c	;volatile
  4714  001B82                     l3408:
  4715  001B82  FFFF               	dw	65535	; assembler added errata NOP
  4716                           
  4717                           ;SoftwareUART.c: 318: data >>= 1;
  4718  001B84  90D8               	bcf	status,0,c
  4719  001B86  3201               	rrcf	SoftUARTTransmitByte@data^0,f,c
  4720                           
  4721                           ;SoftwareUART.c: 319: _delay((unsigned long)(((1000000/9600))*((16 * 1000000)/4000000.0)
      +                          ));
  4722  001B88  0E68               	movlw	104
  4723  001B8A                     u3127:
  4724  001B8A  FFFF               	dw	65535	; errata NOP
  4725  001B8C  2EE8               	decfsz	wreg,f,c
  4726  001B8E  D7FD               	bra	u3127
  4727  001B90  2A03               	incf	SoftUARTTransmitByte@k^0,f,c
  4728  001B92  0E07               	movlw	7
  4729  001B94  6403               	cpfsgt	SoftUARTTransmitByte@k^0,c
  4730  001B96  D7EE               	goto	l223
  4731                           
  4732                           ;SoftwareUART.c: 321: };SoftwareUART.c: 323: IO.Bytes[0x01 + 9] |= (1 << 0x3);
  4733  001B98  868A               	bsf	138,3,c	;volatile
  4734                           
  4735                           ;SoftwareUART.c: 324: _delay((unsigned long)(((1000000/9600))*((16 * 1000000)/4000000.0)
      +                          ));
  4736  001B9A  0E68               	movlw	104
  4737  001B9C                     u3137:
  4738  001B9C  FFFF               	dw	65535	; errata NOP
  4739  001B9E  2EE8               	decfsz	wreg,f,c
  4740  001BA0  D7FD               	bra	u3137
  4741                           
  4742                           ;SoftwareUART.c: 325: if(tmp)
  4743  001BA2  5002               	movf	SoftUARTTransmitByte@tmp^0,w,c
  4744  001BA4  A4D8               	btfss	status,2,c
  4745                           
  4746                           ;SoftwareUART.c: 326: (INTCONbits.GIE = 1);
  4747  001BA6  8EF2               	bsf	242,7,c	;volatile
  4748  001BA8  0012               	return		;funcret
  4749  001BAA  FFFF               	dw	65535	; errata NOP
  4750  001BAC                     __end_of_SoftUARTTransmitByte:
  4751                           	callstack 0
  4752                           
  4753 ;; *************** function _SoftUARTInit *****************
  4754 ;; Defined at:
  4755 ;;		line 275 in file "Src/SoftwareUART.c"
  4756 ;; Parameters:    Size  Location     Type
  4757 ;;		None
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;		None
  4760 ;; Return value:  Size  Location     Type
  4761 ;;                  1    wreg      void 
  4762 ;; Registers used:
  4763 ;;		wreg, status,2, status,0
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4769 ;;      Params:         0       0       0       0       0       0       0
  4770 ;;      Locals:         0       0       0       0       0       0       0
  4771 ;;      Temps:          0       0       0       0       0       0       0
  4772 ;;      Totals:         0       0       0       0       0       0       0
  4773 ;;Total ram usage:        0 bytes
  4774 ;; Hardware stack levels used: 1
  4775 ;; Hardware stack levels required when called: 2
  4776 ;; This function calls:
  4777 ;;		Nothing
  4778 ;; This function is called by:
  4779 ;;		_SystemInit
  4780 ;; This function uses a non-reentrant model
  4781 ;;
  4782                           
  4783                           	psect	text12
  4784  001F56                     __ptext12:
  4785                           	callstack 0
  4786  001F56                     _SoftUARTInit:
  4787                           	callstack 0
  4788  001F56  FFFF               	dw	65535	; assembler added errata NOP
  4789                           
  4790                           ;SoftwareUART.c: 277: IO.Bytes[0x01 + 9] |= (1 << 0x3);
  4791                           
  4792                           ;incstack = 0
  4793  001F58  868A               	bsf	138,3,c	;volatile
  4794                           
  4795                           ;SoftwareUART.c: 278: IO.Bytes[(uint8_t)0x01 + 18] &= ~(1 << 0x3);
  4796  001F5A  9693               	bcf	147,3,c	;volatile
  4797                           
  4798                           ;SoftwareUART.c: 281: INTCON2 &= 0xBF;
  4799  001F5C  9CF1               	bcf	241,6,c	;volatile
  4800                           
  4801                           ;SoftwareUART.c: 282: INTCON |= 0xD0;
  4802  001F5E  0ED0               	movlw	208
  4803  001F60  12F2               	iorwf	242,f,c	;volatile
  4804                           
  4805                           ;SoftwareUART.c: 283: (INTCONbits.GIE = 1);
  4806  001F62  8EF2               	bsf	242,7,c	;volatile
  4807                           
  4808                           ;SoftwareUART.c: 284: INT0IF = 0;
  4809  001F64  92F2               	bcf	4082,1,c	;volatile
  4810  001F66  0012               	return		;funcret
  4811  001F68  FFFF               	dw	65535	; errata NOP
  4812  001F6A                     __end_of_SoftUARTInit:
  4813                           	callstack 0
  4814                           
  4815 ;; *************** function _SIM800xInit *****************
  4816 ;; Defined at:
  4817 ;;		line 269 in file "Src/SIM800x.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;  br              4   46[COMRAM] unsigned long 
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;  str            15   50[COMRAM] unsigned char [15]
  4822 ;;  c               1   67[COMRAM] unsigned char 
  4823 ;;  tmp             2   65[COMRAM] unsigned int 
  4824 ;; Return value:  Size  Location     Type
  4825 ;;                  1    wreg      enum E2115
  4826 ;; Registers used:
  4827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4833 ;;      Params:         4       0       0       0       0       0       0
  4834 ;;      Locals:        18       0       0       0       0       0       0
  4835 ;;      Temps:          0       0       0       0       0       0       0
  4836 ;;      Totals:        22       0       0       0       0       0       0
  4837 ;;Total ram usage:       22 bytes
  4838 ;; Hardware stack levels used: 1
  4839 ;; Hardware stack levels required when called: 4
  4840 ;; This function calls:
  4841 ;;		_SIM800xSDMFlush
  4842 ;;		_SIM800xSDMInit
  4843 ;;		_SIM800xSDMPeek
  4844 ;;		_SIM800xSDMPrint
  4845 ;;		_SIM800xSDMReadByte
  4846 ;;		_SIM800xSDMRxAvailable
  4847 ;;		_Wait_ms
  4848 ;;		_sprintf
  4849 ;; This function is called by:
  4850 ;;		_SystemInit
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           	psect	text13
  4855  0010DA                     __ptext13:
  4856                           	callstack 0
  4857  0010DA                     _SIM800xInit:
  4858                           	callstack 0
  4859  0010DA  FFFF               	dw	65535	; assembler added errata NOP
  4860                           
  4861                           ;SIM800x.c: 272: SIM800xSDMInit(br);
  4862                           
  4863                           ;incstack = 0
  4864  0010DC  C02F  F00E         	movff	SIM800xInit@br,SIM800xSDMInit@br
  4865  0010E0  C030  F00F         	movff	SIM800xInit@br+1,SIM800xSDMInit@br+1
  4866  0010E4  C031  F010         	movff	SIM800xInit@br+2,SIM800xSDMInit@br+2
  4867  0010E8  C032  F011         	movff	SIM800xInit@br+3,SIM800xSDMInit@br+3
  4868  0010EC  EC3D  F00C         	call	_SIM800xSDMInit	;wreg free
  4869                           
  4870                           ;SIM800x.c: 318: Wait_ms(5000);
  4871  0010F0  0E88               	movlw	136
  4872  0010F2  6E01               	movwf	Wait_ms@value^0,c
  4873  0010F4  0E13               	movlw	19
  4874  0010F6  6E02               	movwf	(Wait_ms@value+1)^0,c
  4875  0010F8  0E00               	movlw	0
  4876  0010FA  6E03               	movwf	(Wait_ms@value+2)^0,c
  4877  0010FC  0E00               	movlw	0
  4878  0010FE  6E04               	movwf	(Wait_ms@value+3)^0,c
  4879  001100  EC77  F00C         	call	_Wait_ms	;wreg free
  4880                           
  4881                           ;SIM800x.c: 321: SIM800xSDMFlush();
  4882  001104  ECA0  F00F         	call	_SIM800xSDMFlush	;wreg free
  4883                           
  4884                           ;SIM800x.c: 322: SIM800xSDMPrint("AT\r");
  4885  001108  0EE5               	movlw	low STR_28
  4886  00110A  6E02               	movwf	SIM800xSDMPrint@str^0,c
  4887  00110C  0E7F               	movlw	high STR_28
  4888  00110E  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  4889  001110  EC4C  F00D         	call	_SIM800xSDMPrint	;wreg free
  4890                           
  4891                           ;SIM800x.c: 323: Wait_ms(500);
  4892  001114  0EF4               	movlw	244
  4893  001116  6E01               	movwf	Wait_ms@value^0,c
  4894  001118  0E01               	movlw	1
  4895  00111A  6E02               	movwf	(Wait_ms@value+1)^0,c
  4896  00111C  0E00               	movlw	0
  4897  00111E  6E03               	movwf	(Wait_ms@value+2)^0,c
  4898  001120  0E00               	movlw	0
  4899  001122  6E04               	movwf	(Wait_ms@value+3)^0,c
  4900  001124  EC77  F00C         	call	_Wait_ms	;wreg free
  4901                           
  4902                           ;SIM800x.c: 324: uint16_t tmp = SIM800xSDMRxAvailable();
  4903  001128  EC43  F00F         	call	_SIM800xSDMRxAvailable	;wreg free
  4904  00112C  C006  F042         	movff	?_SIM800xSDMRxAvailable,SIM800xInit@tmp
  4905  001130  C007  F043         	movff	?_SIM800xSDMRxAvailable+1,SIM800xInit@tmp+1
  4906                           
  4907                           ;SIM800x.c: 325: if(tmp > 5)
  4908  001134  5043               	movf	(SIM800xInit@tmp+1)^0,w,c
  4909  001136  E108               	bnz	l3628
  4910  001138  0E06               	movlw	6
  4911  00113A  5C42               	subwf	SIM800xInit@tmp^0,w,c
  4912  00113C  B0D8               	btfsc	status,0,c
  4913  00113E  D004               	goto	l3628
  4914  001140  D066               	goto	l3662
  4915  001142                     l3626:
  4916  001142  FFFF               	dw	65535	; assembler added errata NOP
  4917                           
  4918                           ;SIM800x.c: 328: {;SIM800x.c: 329: SIM800xSDMReadByte();
  4919  001144  EC52  F00E         	call	_SIM800xSDMReadByte	;wreg free
  4920  001148                     l3628:
  4921  001148  FFFF               	dw	65535	; assembler added errata NOP
  4922  00114A  EC43  F00F         	call	_SIM800xSDMRxAvailable	;wreg free
  4923  00114E  0E06               	movlw	6
  4924  001150  1806               	xorwf	?_SIM800xSDMRxAvailable^0,w,c
  4925  001152  1007               	iorwf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  4926  001154  A4D8               	btfss	status,2,c
  4927  001156  D7F5               	goto	l3626
  4928                           
  4929                           ;SIM800x.c: 330: };SIM800x.c: 333: if(SIM800xSDMPeek(2) == 'O')
  4930  001158  0E02               	movlw	2
  4931  00115A  ECE9  F00E         	call	_SIM800xSDMPeek
  4932  00115E  0A4F               	xorlw	79
  4933  001160  A4D8               	btfss	status,2,c
  4934  001162  D055               	goto	l3662
  4935                           
  4936                           ;SIM800x.c: 334: {;SIM800x.c: 335: SIM800xSDMPrint("ATE0\r");
  4937  001164  0ECA               	movlw	low STR_29
  4938  001166  6E02               	movwf	SIM800xSDMPrint@str^0,c
  4939  001168  0E7F               	movlw	high STR_29
  4940  00116A  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  4941  00116C  EC4C  F00D         	call	_SIM800xSDMPrint	;wreg free
  4942                           
  4943                           ;SIM800x.c: 336: Wait_ms(500);
  4944  001170  0EF4               	movlw	244
  4945  001172  6E01               	movwf	Wait_ms@value^0,c
  4946  001174  0E01               	movlw	1
  4947  001176  6E02               	movwf	(Wait_ms@value+1)^0,c
  4948  001178  0E00               	movlw	0
  4949  00117A  6E03               	movwf	(Wait_ms@value+2)^0,c
  4950  00117C  0E00               	movlw	0
  4951  00117E  6E04               	movwf	(Wait_ms@value+3)^0,c
  4952  001180  EC77  F00C         	call	_Wait_ms	;wreg free
  4953                           
  4954                           ;SIM800x.c: 338: char str[15];;SIM800x.c: 339: sprintf(str, "AT+IPR=%ld\r", br);
  4955  001184  0E33               	movlw	low SIM800xInit@str
  4956  001186  6E17               	movwf	sprintf@sp^0,c
  4957  001188  0E00               	movlw	high SIM800xInit@str
  4958  00118A  6E18               	movwf	(sprintf@sp+1)^0,c
  4959  00118C  0E7A               	movlw	low STR_30
  4960  00118E  6E19               	movwf	sprintf@f^0,c
  4961  001190  0E7E               	movlw	high STR_30
  4962  001192  6E1A               	movwf	(sprintf@f+1)^0,c
  4963  001194  C02F  F01B         	movff	SIM800xInit@br,?_sprintf+4
  4964  001198  C030  F01C         	movff	SIM800xInit@br+1,?_sprintf+5
  4965  00119C  C031  F01D         	movff	SIM800xInit@br+2,?_sprintf+6
  4966  0011A0  C032  F01E         	movff	SIM800xInit@br+3,?_sprintf+7
  4967  0011A4  ECBD  F002         	call	_sprintf	;wreg free
  4968                           
  4969                           ;SIM800x.c: 340: SIM800xSDMFlush();
  4970  0011A8  ECA0  F00F         	call	_SIM800xSDMFlush	;wreg free
  4971                           
  4972                           ;SIM800x.c: 341: SIM800xSDMPrint(str);
  4973  0011AC  0E33               	movlw	low SIM800xInit@str
  4974  0011AE  6E02               	movwf	SIM800xSDMPrint@str^0,c
  4975  0011B0  0E00               	movlw	high SIM800xInit@str
  4976  0011B2  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  4977  0011B4  EC4C  F00D         	call	_SIM800xSDMPrint	;wreg free
  4978                           
  4979                           ;SIM800x.c: 342: Wait_ms(500);
  4980  0011B8  0EF4               	movlw	244
  4981  0011BA  6E01               	movwf	Wait_ms@value^0,c
  4982  0011BC  0E01               	movlw	1
  4983  0011BE  6E02               	movwf	(Wait_ms@value+1)^0,c
  4984  0011C0  0E00               	movlw	0
  4985  0011C2  6E03               	movwf	(Wait_ms@value+2)^0,c
  4986  0011C4  0E00               	movlw	0
  4987  0011C6  6E04               	movwf	(Wait_ms@value+3)^0,c
  4988  0011C8  EC77  F00C         	call	_Wait_ms	;wreg free
  4989                           
  4990                           ;SIM800x.c: 343: char c = SIM800xSDMPeek(2);
  4991  0011CC  0E02               	movlw	2
  4992  0011CE  ECE9  F00E         	call	_SIM800xSDMPeek
  4993  0011D2  6E44               	movwf	SIM800xInit@c^0,c
  4994                           
  4995                           ;SIM800x.c: 344: if(c == 'O')
  4996  0011D4  0E4F               	movlw	79
  4997  0011D6  1844               	xorwf	SIM800xInit@c^0,w,c
  4998  0011D8  A4D8               	btfss	status,2,c
  4999  0011DA  D012               	goto	l3656
  5000                           
  5001                           ;SIM800x.c: 345: {;SIM800x.c: 346: SIM800xSDMPrint("AT&W\r");
  5002  0011DC  0ED0               	movlw	low STR_31
  5003  0011DE  6E02               	movwf	SIM800xSDMPrint@str^0,c
  5004  0011E0  0E7F               	movlw	high STR_31
  5005  0011E2  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  5006  0011E4  EC4C  F00D         	call	_SIM800xSDMPrint	;wreg free
  5007                           
  5008                           ;SIM800x.c: 347: Wait_ms(100);
  5009  0011E8  0E64               	movlw	100
  5010  0011EA  6E01               	movwf	Wait_ms@value^0,c
  5011  0011EC  0E00               	movlw	0
  5012  0011EE  6E02               	movwf	(Wait_ms@value+1)^0,c
  5013  0011F0  0E00               	movlw	0
  5014  0011F2  6E03               	movwf	(Wait_ms@value+2)^0,c
  5015  0011F4  0E00               	movlw	0
  5016  0011F6  6E04               	movwf	(Wait_ms@value+3)^0,c
  5017  0011F8  EC77  F00C         	call	_Wait_ms	;wreg free
  5018                           
  5019                           ;SIM800x.c: 348: return SIM800X_OK;
  5020  0011FC  0E00               	movlw	0
  5021  0011FE  D009               	goto	l406
  5022  001200                     l3656:
  5023  001200  FFFF               	dw	65535	; assembler added errata NOP
  5024                           
  5025                           ;SIM800x.c: 349: };SIM800x.c: 351: if(c == 'E')
  5026  001202  0E45               	movlw	69
  5027  001204  1844               	xorwf	SIM800xInit@c^0,w,c
  5028  001206  A4D8               	btfss	status,2,c
  5029  001208  D002               	goto	l3662
  5030                           
  5031                           ;SIM800x.c: 352: return SIM800X_BR_ERROR;
  5032  00120A  0E04               	movlw	4
  5033  00120C  D002               	goto	l406
  5034  00120E                     l3662:
  5035  00120E  FFFF               	dw	65535	; assembler added errata NOP
  5036                           
  5037                           ;SIM800x.c: 354: return SIM800X_TIME_OUT;
  5038  001210  0E05               	movlw	5
  5039  001212                     l406:
  5040  001212  FFFF               	dw	65535	; assembler added errata NOP
  5041  001214  0012               	return		;funcret
  5042  001216  FFFF               	dw	65535	; errata NOP
  5043  001218                     __end_of_SIM800xInit:
  5044                           	callstack 0
  5045                           
  5046 ;; *************** function _sprintf *****************
  5047 ;; Defined at:
  5048 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  5049 ;; Parameters:    Size  Location     Type
  5050 ;;  sp              2   22[COMRAM] PTR unsigned char 
  5051 ;;		 -> SIM800xHTTPRead@str(30), SIM800xHTTPAction@str(30), SIM800xHTTPInputData@str(30), SIM800xHTTPSetTimeout@str(30),
      + 
  5052 ;;		 -> SIM800xHTTPSetBreakEnd@str(30), SIM800xHTTPSetBreak@str(30), SIM800xHTTPSetRedir@str(25), SIM800xHTTPSetPort@str
      +(30), 
  5053 ;;		 -> SIM800xGPRSGetAddress@str(40), SIM800xGPRSSetDataMode@str(20), SIM800xGPRSSetQoSRequest@str(40), SIM800xGPRSSetQ
      +oSMin@str(40), 
  5054 ;;		 -> SIM800xIPGetParameters@str(30), SIM800xIPSetRate@str(8), SIM800xSetBaudRate@str(15), SIM800xInit@str(15), 
  5055 ;;		 -> SystemTask@msg(20), 
  5056 ;;  f               2   24[COMRAM] PTR const unsigned char 
  5057 ;;		 -> STR_100(21), STR_99(18), STR_98(21), STR_95(26), 
  5058 ;;		 -> STR_94(28), STR_93(25), STR_92(24), STR_91(26), 
  5059 ;;		 -> STR_71(15), STR_70(20), STR_66(29), STR_65(29), 
  5060 ;;		 -> STR_59(15), STR_53(4), STR_33(12), STR_30(12), 
  5061 ;;		 -> STR_24(27), STR_23(24), 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;  val             4   38[COMRAM] unsigned long 
  5064 ;;  tmpval          4    0        struct .
  5065 ;;  cp              3    0        PTR const unsigned char 
  5066 ;;  ap              2   42[COMRAM] PTR void [1]
  5067 ;;		 -> ?_sprintf(2), 
  5068 ;;  prec            2   36[COMRAM] int 
  5069 ;;  len             2    0        unsigned int 
  5070 ;;  c               1   45[COMRAM] unsigned char 
  5071 ;;  flag            1   44[COMRAM] unsigned char 
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  2   22[COMRAM] int 
  5074 ;; Registers used:
  5075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5081 ;;      Params:        12       0       0       0       0       0       0
  5082 ;;      Locals:        10       0       0       0       0       0       0
  5083 ;;      Temps:          2       0       0       0       0       0       0
  5084 ;;      Totals:        24       0       0       0       0       0       0
  5085 ;;Total ram usage:       24 bytes
  5086 ;; Hardware stack levels used: 1
  5087 ;; Hardware stack levels required when called: 3
  5088 ;; This function calls:
  5089 ;;		___lldiv
  5090 ;;		___llmod
  5091 ;; This function is called by:
  5092 ;;		_SystemTask
  5093 ;;		_SIM800xInit
  5094 ;;		_SIM800xHTTPInputData
  5095 ;;		_SIM800xHTTPAction
  5096 ;;		_SIM800xHTTPRead
  5097 ;; This function uses a non-reentrant model
  5098 ;;
  5099                           
  5100                           	psect	text14
  5101  00057A                     __ptext14:
  5102                           	callstack 0
  5103  00057A                     _sprintf:
  5104                           	callstack 0
  5105  00057A  FFFF               	dw	65535	; assembler added errata NOP
  5106                           
  5107                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 517: int prec;;doprnt.c: 52
      +                          5: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;doprnt.c:
      +                           542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long val;;doprnt.c:
      +                           546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_start();
  5108                           
  5109                           ;incstack = 0
  5110  00057C  0E1B               	movlw	low (?_sprintf+4)
  5111  00057E  6E2B               	movwf	sprintf@ap^0,c
  5112  000580  0E00               	movlw	high (?_sprintf+4)
  5113  000582  6E2C               	movwf	(sprintf@ap+1)^0,c
  5114                           
  5115                           ;doprnt.c: 553: while((c = *f++)) {
  5116  000584  D114               	goto	u1930
  5117  000586                     l3302:
  5118  000586  FFFF               	dw	65535	; assembler added errata NOP
  5119                           
  5120                           ;doprnt.c: 555: if(c != '%')
  5121  000588  0E25               	movlw	37
  5122  00058A  182E               	xorwf	sprintf@c^0,w,c
  5123  00058C  B4D8               	btfsc	status,2,c
  5124  00058E  D009               	goto	l3308
  5125                           
  5126                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  5127  000590  C017  FFD9         	movff	sprintf@sp,fsr2l
  5128  000594  C018  FFDA         	movff	sprintf@sp+1,fsr2h
  5129  000598  C02E  FFDF         	movff	sprintf@c,indf2
  5130  00059C  4A17               	infsnz	sprintf@sp^0,f,c
  5131  00059E  2A18               	incf	(sprintf@sp+1)^0,f,c
  5132                           
  5133                           ;doprnt.c: 559: continue;
  5134  0005A0  D106               	goto	u1930
  5135  0005A2                     l3308:
  5136  0005A2  FFFF               	dw	65535	; assembler added errata NOP
  5137                           
  5138                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  5139  0005A4  0E00               	movlw	0
  5140  0005A6  6E2D               	movwf	sprintf@flag^0,c
  5141  0005A8  D006               	goto	l3316
  5142  0005AA                     l3310:
  5143  0005AA  FFFF               	dw	65535	; assembler added errata NOP
  5144                           
  5145                           ;doprnt.c: 669: flag |= 0x10;
  5146  0005AC  882D               	bsf	sprintf@flag^0,4,c
  5147                           
  5148                           ;doprnt.c: 670: goto loop;
  5149  0005AE  D003               	goto	l3316
  5150  0005B0                     l3312:
  5151  0005B0  FFFF               	dw	65535	; assembler added errata NOP
  5152                           
  5153                           ;doprnt.c: 844: flag |= 0x40;
  5154  0005B2  8C2D               	bsf	sprintf@flag^0,6,c
  5155                           
  5156                           ;doprnt.c: 845: break;
  5157  0005B4  D01C               	goto	l1216
  5158  0005B6                     l3316:
  5159  0005B6  FFFF               	dw	65535	; assembler added errata NOP
  5160  0005B8  C019  FFF6         	movff	sprintf@f,tblptrl
  5161  0005BC  C01A  FFF7         	movff	sprintf@f+1,tblptrh
  5162  0005C0  4A19               	infsnz	sprintf@f^0,f,c
  5163  0005C2  2A1A               	incf	(sprintf@f+1)^0,f,c
  5164  0005C4                     	if	0	;tblptru may be non-zero
  5165  0005C4                     	endif
  5166  0005C4                     	if	0	;tblptru may be non-zero
  5167  0005C4                     	endif
  5168  0005C4  0008               	tblrd		*
  5169  0005C6  FFFF               	dw	65535	; errata NOP
  5170  0005C8  CFF5 F02E          	movff	tablat,sprintf@c
  5171  0005CC  502E               	movf	sprintf@c^0,w,c
  5172                           
  5173                           ; Switch size 1, requested type "simple"
  5174                           ; Number of cases is 5, Range of values is 0 to 117
  5175                           ; switch strategies available:
  5176                           ; Name         Instructions Cycles
  5177                           ; simple_byte           16     9 (average)
  5178                           ;	Chosen strategy is simple_byte
  5179  0005CE  0A00               	xorlw	0	; case 0
  5180  0005D0  B4D8               	btfsc	status,2,c
  5181  0005D2  D0FB               	goto	u1940
  5182  0005D4  0A64               	xorlw	100	; case 100
  5183  0005D6  B4D8               	btfsc	status,2,c
  5184  0005D8  D00A               	goto	l1216
  5185  0005DA  0A0D               	xorlw	13	; case 105
  5186  0005DC  B4D8               	btfsc	status,2,c
  5187  0005DE  D007               	goto	l1216
  5188  0005E0  0A05               	xorlw	5	; case 108
  5189  0005E2  B4D8               	btfsc	status,2,c
  5190  0005E4  D7E2               	goto	l3310
  5191  0005E6  0A19               	xorlw	25	; case 117
  5192  0005E8  B4D8               	btfsc	status,2,c
  5193  0005EA  D7E2               	goto	l3312
  5194  0005EC  D0E0               	goto	u1930
  5195  0005EE                     l1216:
  5196  0005EE  FFFF               	dw	65535	; assembler added errata NOP
  5197                           
  5198                           ;doprnt.c: 1277: if((flag & 0x40) == 0x00)
  5199  0005F0  BC2D               	btfsc	sprintf@flag^0,6,c
  5200  0005F2  D030               	goto	l1219
  5201                           
  5202                           ;doprnt.c: 1279: {;doprnt.c: 1281: if(flag & 0x10)
  5203  0005F4  A82D               	btfss	sprintf@flag^0,4,c
  5204  0005F6  D00E               	goto	l3324
  5205                           
  5206                           ;doprnt.c: 1282: val = (unsigned long)(*(long *)__va_arg((*(long **)ap), (long)0));
  5207  0005F8  C02B  FFD9         	movff	sprintf@ap,fsr2l
  5208  0005FC  C02C  FFDA         	movff	sprintf@ap+1,fsr2h
  5209  000600  CFDE F027          	movff	postinc2,sprintf@val
  5210  000604  CFDE F028          	movff	postinc2,sprintf@val+1
  5211  000608  CFDE F029          	movff	postinc2,sprintf@val+2
  5212  00060C  CFDE F02A          	movff	postinc2,sprintf@val+3
  5213  000610  0E04               	movlw	4
  5214  000612  D00F               	goto	L1
  5215  000614                     l3324:
  5216  000614  FFFF               	dw	65535	; assembler added errata NOP
  5217                           
  5218                           ;doprnt.c: 1283: else;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)a
      +                          p), (int)0));
  5219  000616  C02B  FFD9         	movff	sprintf@ap,fsr2l
  5220  00061A  C02C  FFDA         	movff	sprintf@ap+1,fsr2h
  5221  00061E  CFDE F027          	movff	postinc2,sprintf@val
  5222  000622  CFDD F028          	movff	postdec2,sprintf@val+1
  5223  000626  0E00               	movlw	0
  5224  000628  BE28               	btfsc	(sprintf@val+1)^0,7,c
  5225  00062A  0EFF               	movlw	-1
  5226  00062C  6E29               	movwf	(sprintf@val+2)^0,c
  5227  00062E  6E2A               	movwf	(sprintf@val+3)^0,c
  5228  000630  0E02               	movlw	2
  5229  000632                     L1:
  5230  000632  FFFF               	dw	65535	; assembler added errata NOP
  5231  000634  262B               	addwf	sprintf@ap^0,f,c
  5232  000636  0E00               	movlw	0
  5233  000638  222C               	addwfc	(sprintf@ap+1)^0,f,c
  5234                           
  5235                           ;doprnt.c: 1287: if((long)val < 0) {
  5236  00063A  AE2A               	btfss	(sprintf@val+3)^0,7,c
  5237  00063C  D030               	goto	l3342
  5238                           
  5239                           ;doprnt.c: 1288: flag |= 0x03;
  5240  00063E  0E03               	movlw	3
  5241  000640  122D               	iorwf	sprintf@flag^0,f,c
  5242                           
  5243                           ;doprnt.c: 1289: val = -val;
  5244  000642  1E2A               	comf	(sprintf@val+3)^0,f,c
  5245  000644  1E29               	comf	(sprintf@val+2)^0,f,c
  5246  000646  1E28               	comf	(sprintf@val+1)^0,f,c
  5247  000648  6C27               	negf	sprintf@val^0,c
  5248  00064A  0E00               	movlw	0
  5249  00064C  2228               	addwfc	(sprintf@val+1)^0,f,c
  5250  00064E  2229               	addwfc	(sprintf@val+2)^0,f,c
  5251  000650  222A               	addwfc	(sprintf@val+3)^0,f,c
  5252  000652  D025               	goto	l3342
  5253  000654                     l1219:
  5254  000654  FFFF               	dw	65535	; assembler added errata NOP
  5255                           
  5256                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
  5257  000656  A82D               	btfss	sprintf@flag^0,4,c
  5258  000658  D00E               	goto	l3338
  5259                           
  5260                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  5261  00065A  C02B  FFD9         	movff	sprintf@ap,fsr2l
  5262  00065E  C02C  FFDA         	movff	sprintf@ap+1,fsr2h
  5263  000662  CFDE F027          	movff	postinc2,sprintf@val
  5264  000666  CFDE F028          	movff	postinc2,sprintf@val+1
  5265  00066A  CFDE F029          	movff	postinc2,sprintf@val+2
  5266  00066E  CFDE F02A          	movff	postinc2,sprintf@val+3
  5267  000672  0E04               	movlw	4
  5268  000674  D010               	goto	L2
  5269  000676                     l3338:
  5270  000676  FFFF               	dw	65535	; assembler added errata NOP
  5271                           
  5272                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  5273  000678  C02B  FFD9         	movff	sprintf@ap,fsr2l
  5274  00067C  C02C  FFDA         	movff	sprintf@ap+1,fsr2h
  5275  000680  CFDE F023          	movff	postinc2,??_sprintf
  5276  000684  CFDD F024          	movff	postdec2,??_sprintf+1
  5277  000688  C023  F027         	movff	??_sprintf,sprintf@val
  5278  00068C  C024  F028         	movff	??_sprintf+1,sprintf@val+1
  5279  000690  6A29               	clrf	(sprintf@val+2)^0,c
  5280  000692  6A2A               	clrf	(sprintf@val+3)^0,c
  5281  000694  0E02               	movlw	2
  5282  000696                     L2:
  5283  000696  FFFF               	dw	65535	; assembler added errata NOP
  5284  000698  262B               	addwf	sprintf@ap^0,f,c
  5285  00069A  0E00               	movlw	0
  5286  00069C  222C               	addwfc	(sprintf@ap+1)^0,f,c
  5287  00069E                     l3342:
  5288  00069E  FFFF               	dw	65535	; assembler added errata NOP
  5289                           
  5290                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  5291  0006A0  0E01               	movlw	1
  5292  0006A2  6E2E               	movwf	sprintf@c^0,c
  5293  0006A4                     l3348:
  5294  0006A4  FFFF               	dw	65535	; assembler added errata NOP
  5295                           
  5296                           ;doprnt.c: 1332: if(val < dpowers[c])
  5297  0006A6  502E               	movf	sprintf@c^0,w,c
  5298  0006A8  0D04               	mullw	4
  5299  0006AA  0E8F               	movlw	low _dpowers
  5300  0006AC  24F3               	addwf	243,w,c
  5301  0006AE  6EF6               	movwf	tblptrl,c
  5302  0006B0  0E79               	movlw	high _dpowers
  5303  0006B2  20F4               	addwfc	244,w,c
  5304  0006B4  6EF7               	movwf	tblptrh,c
  5305  0006B6                     	if	0	;There are less than 3 active tblptr bytes
  5306  0006B6                     	endif
  5307  0006B6  0009               	tblrd		*+
  5308  0006B8  FFFF               	dw	65535	; errata NOP
  5309  0006BA  50F5               	movf	tablat,w,c
  5310  0006BC  5C27               	subwf	sprintf@val^0,w,c
  5311  0006BE  0009               	tblrd		*+
  5312  0006C0  FFFF               	dw	65535	; errata NOP
  5313  0006C2  50F5               	movf	tablat,w,c
  5314  0006C4  5828               	subwfb	(sprintf@val+1)^0,w,c
  5315  0006C6  0009               	tblrd		*+
  5316  0006C8  FFFF               	dw	65535	; errata NOP
  5317  0006CA  50F5               	movf	tablat,w,c
  5318  0006CC  5829               	subwfb	(sprintf@val+2)^0,w,c
  5319  0006CE  0009               	tblrd		*+
  5320  0006D0  FFFF               	dw	65535	; errata NOP
  5321  0006D2  50F5               	movf	tablat,w,c
  5322  0006D4  582A               	subwfb	(sprintf@val+3)^0,w,c
  5323  0006D6  A0D8               	btfss	status,0,c
  5324  0006D8  D005               	goto	u1910
  5325  0006DA  2A2E               	incf	sprintf@c^0,f,c
  5326  0006DC  0E0A               	movlw	10
  5327  0006DE  182E               	xorwf	sprintf@c^0,w,c
  5328  0006E0  A4D8               	btfss	status,2,c
  5329  0006E2  D7E0               	goto	l3348
  5330  0006E4                     u1910:
  5331  0006E4  FFFF               	dw	65535	; assembler added errata NOP
  5332                           
  5333                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  5334  0006E6  C02D  F023         	movff	sprintf@flag,??_sprintf
  5335  0006EA  0E03               	movlw	3
  5336  0006EC  1623               	andwf	??_sprintf^0,f,c
  5337  0006EE  B4D8               	btfsc	status,2,c
  5338  0006F0  D008               	goto	l3362
  5339                           
  5340                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  5341  0006F2  C017  FFD9         	movff	sprintf@sp,fsr2l
  5342  0006F6  C018  FFDA         	movff	sprintf@sp+1,fsr2h
  5343  0006FA  0E2D               	movlw	45
  5344  0006FC  6EDF               	movwf	indf2,c
  5345  0006FE  4A17               	infsnz	sprintf@sp^0,f,c
  5346  000700  2A18               	incf	(sprintf@sp+1)^0,f,c
  5347  000702                     l3362:
  5348  000702  FFFF               	dw	65535	; assembler added errata NOP
  5349                           
  5350                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  5351  000704  C02E  F025         	movff	sprintf@c,sprintf@prec
  5352  000708  6A26               	clrf	(sprintf@prec+1)^0,c
  5353                           
  5354                           ;doprnt.c: 1500: while(prec--) {
  5355  00070A  D048               	goto	l3370
  5356  00070C                     l3364:
  5357  00070C  FFFF               	dw	65535	; assembler added errata NOP
  5358                           
  5359                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  5360  00070E  C025  F023         	movff	sprintf@prec,??_sprintf
  5361  000712  C026  F024         	movff	sprintf@prec+1,??_sprintf+1
  5362  000716  90D8               	bcf	status,0,c
  5363  000718  3623               	rlcf	??_sprintf^0,f,c
  5364  00071A  3624               	rlcf	(??_sprintf+1)^0,f,c
  5365  00071C  90D8               	bcf	status,0,c
  5366  00071E  3623               	rlcf	??_sprintf^0,f,c
  5367  000720  3624               	rlcf	(??_sprintf+1)^0,f,c
  5368  000722  0E8F               	movlw	low _dpowers
  5369  000724  2423               	addwf	??_sprintf^0,w,c
  5370  000726  6EF6               	movwf	tblptrl,c
  5371  000728  0E79               	movlw	high _dpowers
  5372  00072A  2024               	addwfc	(??_sprintf+1)^0,w,c
  5373  00072C  6EF7               	movwf	tblptrh,c
  5374  00072E                     	if	0	;There are less than 3 active tblptr bytes
  5375  00072E                     	endif
  5376  00072E  0009               	tblrd		*+
  5377  000730  FFFF               	dw	65535	; errata NOP
  5378  000732  CFF5 F005          	movff	tablat,___lldiv@divisor
  5379  000736  0009               	tblrd		*+
  5380  000738  FFFF               	dw	65535	; errata NOP
  5381  00073A  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  5382  00073E  0009               	tblrd		*+
  5383  000740  FFFF               	dw	65535	; errata NOP
  5384  000742  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  5385  000746  000A               	tblrd		*-
  5386  000748  FFFF               	dw	65535	; errata NOP
  5387  00074A  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  5388  00074E  C027  F001         	movff	sprintf@val,___lldiv@dividend
  5389  000752  C028  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  5390  000756  C029  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  5391  00075A  C02A  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  5392  00075E  ECF5  F00A         	call	___lldiv	;wreg free
  5393  000762  C001  F00E         	movff	?___lldiv,___llmod@dividend
  5394  000766  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  5395  00076A  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  5396  00076E  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  5397  000772  0E0A               	movlw	10
  5398  000774  6E12               	movwf	___llmod@divisor^0,c
  5399  000776  0E00               	movlw	0
  5400  000778  6E13               	movwf	(___llmod@divisor+1)^0,c
  5401  00077A  0E00               	movlw	0
  5402  00077C  6E14               	movwf	(___llmod@divisor+2)^0,c
  5403  00077E  0E00               	movlw	0
  5404  000780  6E15               	movwf	(___llmod@divisor+3)^0,c
  5405  000782  EC03  F00C         	call	___llmod	;wreg free
  5406  000786  500E               	movf	?___llmod^0,w,c
  5407  000788  0F30               	addlw	48
  5408  00078A  6E2E               	movwf	sprintf@c^0,c
  5409                           
  5410                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  5411  00078C  C017  FFD9         	movff	sprintf@sp,fsr2l
  5412  000790  C018  FFDA         	movff	sprintf@sp+1,fsr2h
  5413  000794  C02E  FFDF         	movff	sprintf@c,indf2
  5414  000798  4A17               	infsnz	sprintf@sp^0,f,c
  5415  00079A  2A18               	incf	(sprintf@sp+1)^0,f,c
  5416  00079C                     l3370:
  5417  00079C  FFFF               	dw	65535	; assembler added errata NOP
  5418  00079E  0625               	decf	sprintf@prec^0,f,c
  5419  0007A0  A0D8               	btfss	status,0,c
  5420  0007A2  0626               	decf	(sprintf@prec+1)^0,f,c
  5421  0007A4  2825               	incf	sprintf@prec^0,w,c
  5422  0007A6  E1B2               	bnz	l3364
  5423  0007A8  2826               	incf	(sprintf@prec+1)^0,w,c
  5424  0007AA  A4D8               	btfss	status,2,c
  5425  0007AC  D7AF               	goto	l3364
  5426  0007AE                     u1930:
  5427  0007AE  FFFF               	dw	65535	; assembler added errata NOP
  5428  0007B0  C019  FFF6         	movff	sprintf@f,tblptrl
  5429  0007B4  C01A  FFF7         	movff	sprintf@f+1,tblptrh
  5430  0007B8  4A19               	infsnz	sprintf@f^0,f,c
  5431  0007BA  2A1A               	incf	(sprintf@f+1)^0,f,c
  5432  0007BC                     	if	0	;tblptru may be non-zero
  5433  0007BC                     	endif
  5434  0007BC                     	if	0	;tblptru may be non-zero
  5435  0007BC                     	endif
  5436  0007BC  0008               	tblrd		*
  5437  0007BE  FFFF               	dw	65535	; errata NOP
  5438  0007C0  CFF5 F02E          	movff	tablat,sprintf@c
  5439  0007C4  502E               	movf	sprintf@c^0,w,c
  5440  0007C6  A4D8               	btfss	status,2,c
  5441  0007C8  D6DE               	goto	l3302
  5442  0007CA                     u1940:
  5443  0007CA  FFFF               	dw	65535	; assembler added errata NOP
  5444                           
  5445                           ;doprnt.c: 1564: *sp = 0;
  5446  0007CC  C017  FFD9         	movff	sprintf@sp,fsr2l
  5447  0007D0  C018  FFDA         	movff	sprintf@sp+1,fsr2h
  5448  0007D4  0E00               	movlw	0
  5449  0007D6  6EDF               	movwf	indf2,c
  5450  0007D8  0012               	return		;funcret
  5451  0007DA  FFFF               	dw	65535	; errata NOP
  5452  0007DC                     __end_of_sprintf:
  5453                           	callstack 0
  5454                           
  5455 ;; *************** function ___llmod *****************
  5456 ;; Defined at:
  5457 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\llmod.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;  dividend        4   13[COMRAM] unsigned long 
  5460 ;;  divisor         4   17[COMRAM] unsigned long 
  5461 ;; Auto vars:     Size  Location     Type
  5462 ;;  counter         1   21[COMRAM] unsigned char 
  5463 ;; Return value:  Size  Location     Type
  5464 ;;                  4   13[COMRAM] unsigned long 
  5465 ;; Registers used:
  5466 ;;		wreg, status,2, status,0
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5472 ;;      Params:         8       0       0       0       0       0       0
  5473 ;;      Locals:         1       0       0       0       0       0       0
  5474 ;;      Temps:          0       0       0       0       0       0       0
  5475 ;;      Totals:         9       0       0       0       0       0       0
  5476 ;;Total ram usage:        9 bytes
  5477 ;; Hardware stack levels used: 1
  5478 ;; Hardware stack levels required when called: 2
  5479 ;; This function calls:
  5480 ;;		Nothing
  5481 ;; This function is called by:
  5482 ;;		_sprintf
  5483 ;; This function uses a non-reentrant model
  5484 ;;
  5485                           
  5486                           	psect	text15
  5487  001806                     __ptext15:
  5488                           	callstack 0
  5489  001806                     ___llmod:
  5490                           	callstack 0
  5491  001806  FFFF               	dw	65535	; assembler added errata NOP
  5492                           
  5493                           ;incstack = 0
  5494  001808  5012               	movf	___llmod@divisor^0,w,c
  5495  00180A  1013               	iorwf	(___llmod@divisor+1)^0,w,c
  5496  00180C  1014               	iorwf	(___llmod@divisor+2)^0,w,c
  5497  00180E  1015               	iorwf	(___llmod@divisor+3)^0,w,c
  5498  001810  B4D8               	btfsc	status,2,c
  5499  001812  D028               	goto	l1645
  5500  001814  0E01               	movlw	1
  5501  001816  6E16               	movwf	___llmod@counter^0,c
  5502  001818  D007               	goto	l3290
  5503  00181A                     l3288:
  5504  00181A  FFFF               	dw	65535	; assembler added errata NOP
  5505  00181C  90D8               	bcf	status,0,c
  5506  00181E  3612               	rlcf	___llmod@divisor^0,f,c
  5507  001820  3613               	rlcf	(___llmod@divisor+1)^0,f,c
  5508  001822  3614               	rlcf	(___llmod@divisor+2)^0,f,c
  5509  001824  3615               	rlcf	(___llmod@divisor+3)^0,f,c
  5510  001826  2A16               	incf	___llmod@counter^0,f,c
  5511  001828                     l3290:
  5512  001828  FFFF               	dw	65535	; assembler added errata NOP
  5513  00182A  AE15               	btfss	(___llmod@divisor+3)^0,7,c
  5514  00182C  D7F6               	goto	l3288
  5515  00182E                     u1830:
  5516  00182E  FFFF               	dw	65535	; assembler added errata NOP
  5517  001830  5012               	movf	___llmod@divisor^0,w,c
  5518  001832  5C0E               	subwf	___llmod@dividend^0,w,c
  5519  001834  5013               	movf	(___llmod@divisor+1)^0,w,c
  5520  001836  580F               	subwfb	(___llmod@dividend+1)^0,w,c
  5521  001838  5014               	movf	(___llmod@divisor+2)^0,w,c
  5522  00183A  5810               	subwfb	(___llmod@dividend+2)^0,w,c
  5523  00183C  5015               	movf	(___llmod@divisor+3)^0,w,c
  5524  00183E  5811               	subwfb	(___llmod@dividend+3)^0,w,c
  5525  001840  A0D8               	btfss	status,0,c
  5526  001842  D008               	goto	l3296
  5527  001844  5012               	movf	___llmod@divisor^0,w,c
  5528  001846  5E0E               	subwf	___llmod@dividend^0,f,c
  5529  001848  5013               	movf	(___llmod@divisor+1)^0,w,c
  5530  00184A  5A0F               	subwfb	(___llmod@dividend+1)^0,f,c
  5531  00184C  5014               	movf	(___llmod@divisor+2)^0,w,c
  5532  00184E  5A10               	subwfb	(___llmod@dividend+2)^0,f,c
  5533  001850  5015               	movf	(___llmod@divisor+3)^0,w,c
  5534  001852  5A11               	subwfb	(___llmod@dividend+3)^0,f,c
  5535  001854                     l3296:
  5536  001854  FFFF               	dw	65535	; assembler added errata NOP
  5537  001856  90D8               	bcf	status,0,c
  5538  001858  3215               	rrcf	(___llmod@divisor+3)^0,f,c
  5539  00185A  3214               	rrcf	(___llmod@divisor+2)^0,f,c
  5540  00185C  3213               	rrcf	(___llmod@divisor+1)^0,f,c
  5541  00185E  3212               	rrcf	___llmod@divisor^0,f,c
  5542  001860  2E16               	decfsz	___llmod@counter^0,f,c
  5543  001862  D7E5               	goto	u1830
  5544  001864                     l1645:
  5545  001864  FFFF               	dw	65535	; assembler added errata NOP
  5546  001866  C00E  F00E         	movff	___llmod@dividend,?___llmod
  5547  00186A  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  5548  00186E  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  5549  001872  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  5550  001876  0012               	return		;funcret
  5551  001878  FFFF               	dw	65535	; errata NOP
  5552  00187A                     __end_of___llmod:
  5553                           	callstack 0
  5554                           
  5555 ;; *************** function _Wait_ms *****************
  5556 ;; Defined at:
  5557 ;;		line 103 in file "Src/SystemTime.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;  value           4    0[COMRAM] unsigned long 
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;  x               4    8[COMRAM] unsigned long 
  5562 ;; Return value:  Size  Location     Type
  5563 ;;                  1    wreg      void 
  5564 ;; Registers used:
  5565 ;;		wreg, status,2, status,0
  5566 ;; Tracked objects:
  5567 ;;		On entry : 0/0
  5568 ;;		On exit  : 0/0
  5569 ;;		Unchanged: 0/0
  5570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5571 ;;      Params:         4       0       0       0       0       0       0
  5572 ;;      Locals:         4       0       0       0       0       0       0
  5573 ;;      Temps:          4       0       0       0       0       0       0
  5574 ;;      Totals:        12       0       0       0       0       0       0
  5575 ;;Total ram usage:       12 bytes
  5576 ;; Hardware stack levels used: 1
  5577 ;; Hardware stack levels required when called: 2
  5578 ;; This function calls:
  5579 ;;		Nothing
  5580 ;; This function is called by:
  5581 ;;		_SIM800xInit
  5582 ;; This function uses a non-reentrant model
  5583 ;;
  5584                           
  5585                           	psect	text16
  5586  0018EE                     __ptext16:
  5587                           	callstack 0
  5588  0018EE                     _Wait_ms:
  5589                           	callstack 0
  5590  0018EE  FFFF               	dw	65535	; assembler added errata NOP
  5591                           
  5592                           ;SystemTime.c: 106: uint32_t x = IncVar;
  5593                           
  5594                           ;incstack = 0
  5595  0018F0  C06B  F009         	movff	_IncVar,Wait_ms@x	;volatile
  5596  0018F4  C06C  F00A         	movff	_IncVar+1,Wait_ms@x+1	;volatile
  5597  0018F8  C06D  F00B         	movff	_IncVar+2,Wait_ms@x+2	;volatile
  5598  0018FC  C06E  F00C         	movff	_IncVar+3,Wait_ms@x+3	;volatile
  5599                           
  5600                           ;SystemTime.c: 108: while((value != 0)){
  5601  001900  D025               	goto	u2020
  5602  001902                     l3422:
  5603  001902  FFFF               	dw	65535	; assembler added errata NOP
  5604                           
  5605                           ;SystemTime.c: 111: --value;
  5606  001904  0601               	decf	Wait_ms@value^0,f,c
  5607  001906  0E00               	movlw	0
  5608  001908  5A02               	subwfb	(Wait_ms@value+1)^0,f,c
  5609  00190A  5A03               	subwfb	(Wait_ms@value+2)^0,f,c
  5610  00190C  5A04               	subwfb	(Wait_ms@value+3)^0,f,c
  5611                           
  5612                           ;SystemTime.c: 112: x+=1;
  5613  00190E  0E01               	movlw	1
  5614  001910  2609               	addwf	Wait_ms@x^0,f,c
  5615  001912  0E00               	movlw	0
  5616  001914  220A               	addwfc	(Wait_ms@x+1)^0,f,c
  5617  001916  220B               	addwfc	(Wait_ms@x+2)^0,f,c
  5618  001918  220C               	addwfc	(Wait_ms@x+3)^0,f,c
  5619  00191A                     l286:
  5620  00191A  FFFF               	dw	65535	; assembler added errata NOP
  5621  00191C  5001               	movf	Wait_ms@value^0,w,c
  5622  00191E  1002               	iorwf	(Wait_ms@value+1)^0,w,c
  5623  001920  1003               	iorwf	(Wait_ms@value+2)^0,w,c
  5624  001922  1004               	iorwf	(Wait_ms@value+3)^0,w,c
  5625  001924  B4D8               	btfsc	status,2,c
  5626  001926  D012               	goto	u2020
  5627  001928  5009               	movf	Wait_ms@x^0,w,c
  5628  00192A  5C6B               	subwf	_IncVar^0,w,c	;volatile
  5629  00192C  6E05               	movwf	??_Wait_ms^0,c
  5630  00192E  500A               	movf	(Wait_ms@x+1)^0,w,c
  5631  001930  586C               	subwfb	(_IncVar+1)^0,w,c	;volatile
  5632  001932  6E06               	movwf	(??_Wait_ms+1)^0,c
  5633  001934  500B               	movf	(Wait_ms@x+2)^0,w,c
  5634  001936  586D               	subwfb	(_IncVar+2)^0,w,c	;volatile
  5635  001938  6E07               	movwf	(??_Wait_ms+2)^0,c
  5636  00193A  500C               	movf	(Wait_ms@x+3)^0,w,c
  5637  00193C  586E               	subwfb	(_IncVar+3)^0,w,c	;volatile
  5638  00193E  6E08               	movwf	(??_Wait_ms+3)^0,c
  5639  001940  5005               	movf	??_Wait_ms^0,w,c
  5640  001942  1006               	iorwf	(??_Wait_ms+1)^0,w,c
  5641  001944  1007               	iorwf	(??_Wait_ms+2)^0,w,c
  5642  001946  1008               	iorwf	(??_Wait_ms+3)^0,w,c
  5643  001948  A4D8               	btfss	status,2,c
  5644  00194A  D7DB               	goto	l3422
  5645  00194C                     u2020:
  5646  00194C  FFFF               	dw	65535	; assembler added errata NOP
  5647  00194E  5001               	movf	Wait_ms@value^0,w,c
  5648  001950  1002               	iorwf	(Wait_ms@value+1)^0,w,c
  5649  001952  1003               	iorwf	(Wait_ms@value+2)^0,w,c
  5650  001954  1004               	iorwf	(Wait_ms@value+3)^0,w,c
  5651  001956  B4D8               	btfsc	status,2,c
  5652  001958  0012               	return		;funcret
  5653  00195A  FFFF               	dw	65535	; assembler added errata NOP
  5654  00195C  D7DE               	goto	l286
  5655  00195E  FFFF               	dw	65535	; errata NOP
  5656  001960                     __end_of_Wait_ms:
  5657                           	callstack 0
  5658                           
  5659 ;; *************** function _SIM800xSDMInit *****************
  5660 ;; Defined at:
  5661 ;;		line 48 in file "Src/SIM800x_SDM.c"
  5662 ;; Parameters:    Size  Location     Type
  5663 ;;  br              4   13[COMRAM] unsigned long 
  5664 ;; Auto vars:     Size  Location     Type
  5665 ;;  val             4   21[COMRAM] unsigned long 
  5666 ;; Return value:  Size  Location     Type
  5667 ;;                  1    wreg      void 
  5668 ;; Registers used:
  5669 ;;		wreg, status,2, status,0, cstack
  5670 ;; Tracked objects:
  5671 ;;		On entry : 0/0
  5672 ;;		On exit  : 0/0
  5673 ;;		Unchanged: 0/0
  5674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5675 ;;      Params:         4       0       0       0       0       0       0
  5676 ;;      Locals:         4       0       0       0       0       0       0
  5677 ;;      Temps:          4       0       0       0       0       0       0
  5678 ;;      Totals:        12       0       0       0       0       0       0
  5679 ;;Total ram usage:       12 bytes
  5680 ;; Hardware stack levels used: 1
  5681 ;; Hardware stack levels required when called: 3
  5682 ;; This function calls:
  5683 ;;		_SystimeInit
  5684 ;;		_USARTAsyncInit
  5685 ;;		___lldiv
  5686 ;; This function is called by:
  5687 ;;		_SIM800xInit
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           
  5691                           	psect	text17
  5692  00187A                     __ptext17:
  5693                           	callstack 0
  5694  00187A                     _SIM800xSDMInit:
  5695                           	callstack 0
  5696  00187A  FFFF               	dw	65535	; assembler added errata NOP
  5697                           
  5698                           ;SIM800x_SDM.c: 53: uint32_t val = ((16 * 1000000/(16 * br)) - 1);
  5699                           
  5700                           ;incstack = 0
  5701  00187C  0E00               	movlw	0
  5702  00187E  6E01               	movwf	___lldiv@dividend^0,c
  5703  001880  0E24               	movlw	36
  5704  001882  6E02               	movwf	(___lldiv@dividend+1)^0,c
  5705  001884  0EF4               	movlw	244
  5706  001886  6E03               	movwf	(___lldiv@dividend+2)^0,c
  5707  001888  0E00               	movlw	0
  5708  00188A  6E04               	movwf	(___lldiv@dividend+3)^0,c
  5709  00188C  C00E  F012         	movff	SIM800xSDMInit@br,??_SIM800xSDMInit
  5710  001890  C00F  F013         	movff	SIM800xSDMInit@br+1,??_SIM800xSDMInit+1
  5711  001894  C010  F014         	movff	SIM800xSDMInit@br+2,??_SIM800xSDMInit+2
  5712  001898  C011  F015         	movff	SIM800xSDMInit@br+3,??_SIM800xSDMInit+3
  5713  00189C  0E04               	movlw	4
  5714  00189E                     u2205:
  5715  00189E  FFFF               	dw	65535	; assembler added errata NOP
  5716  0018A0  90D8               	bcf	status,0,c
  5717  0018A2  3612               	rlcf	??_SIM800xSDMInit^0,f,c
  5718  0018A4  3613               	rlcf	(??_SIM800xSDMInit+1)^0,f,c
  5719  0018A6  3614               	rlcf	(??_SIM800xSDMInit+2)^0,f,c
  5720  0018A8  3615               	rlcf	(??_SIM800xSDMInit+3)^0,f,c
  5721  0018AA  2EE8               	decfsz	wreg,f,c
  5722  0018AC  D7F8               	goto	u2205
  5723  0018AE  C012  F005         	movff	??_SIM800xSDMInit,___lldiv@divisor
  5724  0018B2  C013  F006         	movff	??_SIM800xSDMInit+1,___lldiv@divisor+1
  5725  0018B6  C014  F007         	movff	??_SIM800xSDMInit+2,___lldiv@divisor+2
  5726  0018BA  C015  F008         	movff	??_SIM800xSDMInit+3,___lldiv@divisor+3
  5727  0018BE  ECF5  F00A         	call	___lldiv	;wreg free
  5728  0018C2  0EFF               	movlw	255
  5729  0018C4  2401               	addwf	?___lldiv^0,w,c
  5730  0018C6  6E16               	movwf	SIM800xSDMInit@val^0,c
  5731  0018C8  0EFF               	movlw	255
  5732  0018CA  2002               	addwfc	(?___lldiv+1)^0,w,c
  5733  0018CC  6E17               	movwf	(SIM800xSDMInit@val+1)^0,c
  5734  0018CE  0EFF               	movlw	255
  5735  0018D0  2003               	addwfc	(?___lldiv+2)^0,w,c
  5736  0018D2  6E18               	movwf	(SIM800xSDMInit@val+2)^0,c
  5737  0018D4  0EFF               	movlw	255
  5738  0018D6  2004               	addwfc	(?___lldiv+3)^0,w,c
  5739  0018D8  6E19               	movwf	(SIM800xSDMInit@val+3)^0,c
  5740                           
  5741                           ;SIM800x_SDM.c: 57: USARTAsyncInit((uint8_t)val);
  5742  0018DA  5016               	movf	SIM800xSDMInit@val^0,w,c
  5743  0018DC  ECB5  F00F         	call	_USARTAsyncInit
  5744                           
  5745                           ;SIM800x_SDM.c: 60: INTCON |= 0xC0;
  5746  0018E0  0EC0               	movlw	192
  5747  0018E2  12F2               	iorwf	242,f,c	;volatile
  5748                           
  5749                           ;SIM800x_SDM.c: 61: PIE1 |= 0x20;
  5750  0018E4  8A9D               	bsf	157,5,c	;volatile
  5751                           
  5752                           ;SIM800x_SDM.c: 63: SystimeInit();
  5753  0018E6  EC73  F00F         	call	_SystimeInit	;wreg free
  5754  0018EA  0012               	return		;funcret
  5755  0018EC  FFFF               	dw	65535	; errata NOP
  5756  0018EE                     __end_of_SIM800xSDMInit:
  5757                           	callstack 0
  5758                           
  5759 ;; *************** function ___lldiv *****************
  5760 ;; Defined at:
  5761 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;  dividend        4    0[COMRAM] unsigned long 
  5764 ;;  divisor         4    4[COMRAM] unsigned long 
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;  quotient        4    8[COMRAM] unsigned long 
  5767 ;;  counter         1   12[COMRAM] unsigned char 
  5768 ;; Return value:  Size  Location     Type
  5769 ;;                  4    0[COMRAM] unsigned long 
  5770 ;; Registers used:
  5771 ;;		wreg, status,2, status,0
  5772 ;; Tracked objects:
  5773 ;;		On entry : 0/0
  5774 ;;		On exit  : 0/0
  5775 ;;		Unchanged: 0/0
  5776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5777 ;;      Params:         8       0       0       0       0       0       0
  5778 ;;      Locals:         5       0       0       0       0       0       0
  5779 ;;      Temps:          0       0       0       0       0       0       0
  5780 ;;      Totals:        13       0       0       0       0       0       0
  5781 ;;Total ram usage:       13 bytes
  5782 ;; Hardware stack levels used: 1
  5783 ;; Hardware stack levels required when called: 2
  5784 ;; This function calls:
  5785 ;;		Nothing
  5786 ;; This function is called by:
  5787 ;;		_SIM800xSDMInit
  5788 ;;		_sprintf
  5789 ;; This function uses a non-reentrant model
  5790 ;;
  5791                           
  5792                           	psect	text18
  5793  0015EA                     __ptext18:
  5794                           	callstack 0
  5795  0015EA                     ___lldiv:
  5796                           	callstack 0
  5797  0015EA  FFFF               	dw	65535	; assembler added errata NOP
  5798                           
  5799                           ;incstack = 0
  5800  0015EC  0E00               	movlw	0
  5801  0015EE  6E09               	movwf	___lldiv@quotient^0,c
  5802  0015F0  0E00               	movlw	0
  5803  0015F2  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  5804  0015F4  0E00               	movlw	0
  5805  0015F6  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  5806  0015F8  0E00               	movlw	0
  5807  0015FA  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  5808  0015FC  5005               	movf	___lldiv@divisor^0,w,c
  5809  0015FE  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  5810  001600  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  5811  001602  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  5812  001604  B4D8               	btfsc	status,2,c
  5813  001606  D02E               	goto	l1264
  5814  001608  0E01               	movlw	1
  5815  00160A  6E0D               	movwf	___lldiv@counter^0,c
  5816  00160C  D007               	goto	l3270
  5817  00160E                     l3268:
  5818  00160E  FFFF               	dw	65535	; assembler added errata NOP
  5819  001610  90D8               	bcf	status,0,c
  5820  001612  3605               	rlcf	___lldiv@divisor^0,f,c
  5821  001614  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  5822  001616  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  5823  001618  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  5824  00161A  2A0D               	incf	___lldiv@counter^0,f,c
  5825  00161C                     l3270:
  5826  00161C  FFFF               	dw	65535	; assembler added errata NOP
  5827  00161E  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  5828  001620  D7F6               	goto	l3268
  5829  001622                     u1800:
  5830  001622  FFFF               	dw	65535	; assembler added errata NOP
  5831  001624  90D8               	bcf	status,0,c
  5832  001626  3609               	rlcf	___lldiv@quotient^0,f,c
  5833  001628  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  5834  00162A  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  5835  00162C  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  5836  00162E  5005               	movf	___lldiv@divisor^0,w,c
  5837  001630  5C01               	subwf	___lldiv@dividend^0,w,c
  5838  001632  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5839  001634  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  5840  001636  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5841  001638  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  5842  00163A  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5843  00163C  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  5844  00163E  A0D8               	btfss	status,0,c
  5845  001640  D009               	goto	l3280
  5846  001642  5005               	movf	___lldiv@divisor^0,w,c
  5847  001644  5E01               	subwf	___lldiv@dividend^0,f,c
  5848  001646  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5849  001648  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  5850  00164A  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5851  00164C  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  5852  00164E  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5853  001650  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  5854  001652  8009               	bsf	___lldiv@quotient^0,0,c
  5855  001654                     l3280:
  5856  001654  FFFF               	dw	65535	; assembler added errata NOP
  5857  001656  90D8               	bcf	status,0,c
  5858  001658  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  5859  00165A  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  5860  00165C  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  5861  00165E  3205               	rrcf	___lldiv@divisor^0,f,c
  5862  001660  2E0D               	decfsz	___lldiv@counter^0,f,c
  5863  001662  D7DF               	goto	u1800
  5864  001664                     l1264:
  5865  001664  FFFF               	dw	65535	; assembler added errata NOP
  5866  001666  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5867  00166A  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5868  00166E  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5869  001672  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5870  001676  0012               	return		;funcret
  5871  001678  FFFF               	dw	65535	; errata NOP
  5872  00167A                     __end_of___lldiv:
  5873                           	callstack 0
  5874                           
  5875 ;; *************** function _USARTAsyncInit *****************
  5876 ;; Defined at:
  5877 ;;		line 62 in file "C:/EmbeddedDevOps/M8M_APIs/PIC18.X/Src/USART.c"
  5878 ;; Parameters:    Size  Location     Type
  5879 ;;  bgr             1    wreg     unsigned char 
  5880 ;; Auto vars:     Size  Location     Type
  5881 ;;  bgr             1    0[COMRAM] unsigned char 
  5882 ;; Return value:  Size  Location     Type
  5883 ;;                  1    wreg      void 
  5884 ;; Registers used:
  5885 ;;		wreg, status,2
  5886 ;; Tracked objects:
  5887 ;;		On entry : 0/0
  5888 ;;		On exit  : 0/0
  5889 ;;		Unchanged: 0/0
  5890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5891 ;;      Params:         0       0       0       0       0       0       0
  5892 ;;      Locals:         1       0       0       0       0       0       0
  5893 ;;      Temps:          0       0       0       0       0       0       0
  5894 ;;      Totals:         1       0       0       0       0       0       0
  5895 ;;Total ram usage:        1 bytes
  5896 ;; Hardware stack levels used: 1
  5897 ;; Hardware stack levels required when called: 2
  5898 ;; This function calls:
  5899 ;;		Nothing
  5900 ;; This function is called by:
  5901 ;;		_SIM800xSDMInit
  5902 ;; This function uses a non-reentrant model
  5903 ;;
  5904                           
  5905                           	psect	text19
  5906  001F6A                     __ptext19:
  5907                           	callstack 0
  5908  001F6A                     _USARTAsyncInit:
  5909                           	callstack 0
  5910  001F6A  FFFF               	dw	65535	; assembler added errata NOP
  5911                           
  5912                           ;incstack = 0
  5913                           ;USARTAsyncInit@bgr stored from wreg
  5914  001F6C  6E01               	movwf	USARTAsyncInit@bgr^0,c
  5915                           
  5916                           ;USART.c: 65: TXSTA = 0x24;
  5917  001F6E  0E24               	movlw	36
  5918  001F70  6EAC               	movwf	172,c	;volatile
  5919                           
  5920                           ;USART.c: 66: RCSTA = 0x90;
  5921  001F72  0E90               	movlw	144
  5922  001F74  6EAB               	movwf	171,c	;volatile
  5923                           
  5924                           ;USART.c: 67: SPBRG = bgr;
  5925  001F76  C001  FFAF         	movff	USARTAsyncInit@bgr,4015	;volatile
  5926  001F7A  0012               	return		;funcret
  5927  001F7C  FFFF               	dw	65535	; errata NOP
  5928  001F7E                     __end_of_USARTAsyncInit:
  5929                           	callstack 0
  5930                           
  5931 ;; *************** function _SystimeInit *****************
  5932 ;; Defined at:
  5933 ;;		line 55 in file "Src/SystemTime.c"
  5934 ;; Parameters:    Size  Location     Type
  5935 ;;		None
  5936 ;; Auto vars:     Size  Location     Type
  5937 ;;		None
  5938 ;; Return value:  Size  Location     Type
  5939 ;;                  1    wreg      void 
  5940 ;; Registers used:
  5941 ;;		wreg, status,2, status,0
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5947 ;;      Params:         0       0       0       0       0       0       0
  5948 ;;      Locals:         0       0       0       0       0       0       0
  5949 ;;      Temps:          0       0       0       0       0       0       0
  5950 ;;      Totals:         0       0       0       0       0       0       0
  5951 ;;Total ram usage:        0 bytes
  5952 ;; Hardware stack levels used: 1
  5953 ;; Hardware stack levels required when called: 2
  5954 ;; This function calls:
  5955 ;;		Nothing
  5956 ;; This function is called by:
  5957 ;;		_SIM800xSDMInit
  5958 ;; This function uses a non-reentrant model
  5959 ;;
  5960                           
  5961                           	psect	text20
  5962  001EE6                     __ptext20:
  5963                           	callstack 0
  5964  001EE6                     _SystimeInit:
  5965                           	callstack 0
  5966  001EE6  FFFF               	dw	65535	; assembler added errata NOP
  5967                           
  5968                           ;incstack = 0
  5969  001EE8  0EFC               	movlw	252
  5970  001EEA  6E74               	movwf	(_val+1)^0,c	;volatile
  5971  001EEC  0E1A               	movlw	26
  5972  001EEE  6E73               	movwf	_val^0,c	;volatile
  5973                           
  5974                           ;SystemTime.c: 64: };SystemTime.c: 66: INTCON |= 0xC0;
  5975                           
  5976                           ;SystemTime.c: 60: }
  5977  001EF0  0EC0               	movlw	192
  5978  001EF2  12F2               	iorwf	242,f,c	;volatile
  5979                           
  5980                           ;SystemTime.c: 68: T0CON = 0x81;
  5981  001EF4  0E81               	movlw	129
  5982  001EF6  6ED5               	movwf	213,c	;volatile
  5983                           
  5984                           ;SystemTime.c: 69: TMR0 = val;
  5985  001EF8  C073  FFD6         	movff	_val,4054	;volatile
  5986  001EFC  C074  FFD7         	movff	_val+1,4055	;volatile
  5987                           
  5988                           ;SystemTime.c: 70: TMR0IF = 0;
  5989  001F00  94F2               	bcf	4082,2,c	;volatile
  5990                           
  5991                           ;SystemTime.c: 71: TMR0IE = 1;
  5992  001F02  8AF2               	bsf	4082,5,c	;volatile
  5993  001F04  0012               	return		;funcret
  5994  001F06  FFFF               	dw	65535	; errata NOP
  5995  001F08                     __end_of_SystimeInit:
  5996                           	callstack 0
  5997                           
  5998 ;; *************** function _SIM800xIPSetConnectionType *****************
  5999 ;; Defined at:
  6000 ;;		line 657 in file "Src/SIM800x.c"
  6001 ;; Parameters:    Size  Location     Type
  6002 ;;  cid             1    wreg     unsigned char 
  6003 ;;  contype         2   18[COMRAM] PTR const unsigned char 
  6004 ;;		 -> STR_3(5), 
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;  cid             1   20[COMRAM] unsigned char 
  6007 ;; Return value:  Size  Location     Type
  6008 ;;                  1    wreg      enum E2115
  6009 ;; Registers used:
  6010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6011 ;; Tracked objects:
  6012 ;;		On entry : 0/0
  6013 ;;		On exit  : 0/0
  6014 ;;		Unchanged: 0/0
  6015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6016 ;;      Params:         2       0       0       0       0       0       0
  6017 ;;      Locals:         1       0       0       0       0       0       0
  6018 ;;      Temps:          0       0       0       0       0       0       0
  6019 ;;      Totals:         3       0       0       0       0       0       0
  6020 ;;Total ram usage:        3 bytes
  6021 ;; Hardware stack levels used: 1
  6022 ;; Hardware stack levels required when called: 5
  6023 ;; This function calls:
  6024 ;;		_ProcessResp1
  6025 ;;		_SIM800xSDMFlush
  6026 ;;		_SIM800xSDMPrint
  6027 ;;		_SIM800xSDMSendByte
  6028 ;;		_strlen
  6029 ;; This function is called by:
  6030 ;;		_SystemInit
  6031 ;; This function uses a non-reentrant model
  6032 ;;
  6033                           
  6034                           	psect	text21
  6035  001960                     __ptext21:
  6036                           	callstack 0
  6037  001960                     _SIM800xIPSetConnectionType:
  6038                           	callstack 0
  6039  001960  FFFF               	dw	65535	; assembler added errata NOP
  6040                           
  6041                           ;incstack = 0
  6042                           ;SIM800xIPSetConnectionType@cid stored from wreg
  6043  001962  6E15               	movwf	SIM800xIPSetConnectionType@cid^0,c
  6044                           
  6045                           ;SIM800x.c: 660: if((cid == 0) || (strlen(contype) > 4))
  6046  001964  5015               	movf	SIM800xIPSetConnectionType@cid^0,w,c
  6047  001966  B4D8               	btfsc	status,2,c
  6048  001968  D00C               	goto	u2410
  6049  00196A  C013  F001         	movff	SIM800xIPSetConnectionType@contype,strlen@s
  6050  00196E  C014  F002         	movff	SIM800xIPSetConnectionType@contype+1,strlen@s+1
  6051  001972  EC79  F00E         	call	_strlen	;wreg free
  6052  001976  5002               	movf	(?_strlen+1)^0,w,c
  6053  001978  E104               	bnz	u2410
  6054  00197A  0E05               	movlw	5
  6055  00197C  5C01               	subwf	?_strlen^0,w,c
  6056  00197E  A0D8               	btfss	status,0,c
  6057  001980  D003               	goto	l3686
  6058  001982                     u2410:
  6059  001982  FFFF               	dw	65535	; assembler added errata NOP
  6060                           
  6061                           ;SIM800x.c: 661: return SIM800X_ERROR;
  6062  001984  0E01               	movlw	1
  6063  001986  D01F               	goto	l509
  6064  001988                     l3686:
  6065  001988  FFFF               	dw	65535	; assembler added errata NOP
  6066                           
  6067                           ;SIM800x.c: 663: SIM800xSDMFlush();
  6068  00198A  ECA0  F00F         	call	_SIM800xSDMFlush	;wreg free
  6069                           
  6070                           ;SIM800x.c: 664: SIM800xSDMPrint("AT+SAPBR=3,");
  6071  00198E  0ECE               	movlw	low STR_43
  6072  001990  6E02               	movwf	SIM800xSDMPrint@str^0,c
  6073  001992  0E7E               	movlw	high STR_43
  6074  001994  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6075  001996  EC4C  F00D         	call	_SIM800xSDMPrint	;wreg free
  6076                           
  6077                           ;SIM800x.c: 665: SIM800xSDMSendByte((uint8_t)((cid & 0x03) + 48));
  6078  00199A  5015               	movf	SIM800xIPSetConnectionType@cid^0,w,c
  6079  00199C  0B03               	andlw	3
  6080  00199E  0F30               	addlw	48
  6081  0019A0  ECBF  F00F         	call	_SIM800xSDMSendByte
  6082                           
  6083                           ;SIM800x.c: 666: SIM800xSDMPrint(",\"CONTYPE\",");
  6084  0019A4  0E86               	movlw	low STR_44
  6085  0019A6  6E02               	movwf	SIM800xSDMPrint@str^0,c
  6086  0019A8  0E7E               	movlw	high STR_44
  6087  0019AA  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6088  0019AC  EC4C  F00D         	call	_SIM800xSDMPrint	;wreg free
  6089                           
  6090                           ;SIM800x.c: 667: SIM800xSDMPrint(contype);
  6091  0019B0  C013  F002         	movff	SIM800xIPSetConnectionType@contype,SIM800xSDMPrint@str
  6092  0019B4  C014  F003         	movff	SIM800xIPSetConnectionType@contype+1,SIM800xSDMPrint@str+1
  6093  0019B8  EC4C  F00D         	call	_SIM800xSDMPrint	;wreg free
  6094                           
  6095                           ;SIM800x.c: 668: SIM800xSDMSendByte('\r');
  6096  0019BC  0E0D               	movlw	13
  6097  0019BE  ECBF  F00F         	call	_SIM800xSDMSendByte
  6098                           
  6099                           ;SIM800x.c: 670: return ProcessResp1();
  6100  0019C2  ECC4  F00B         	call	_ProcessResp1	;wreg free
  6101  0019C6                     l509:
  6102  0019C6  FFFF               	dw	65535	; assembler added errata NOP
  6103  0019C8  0012               	return		;funcret
  6104  0019CA  FFFF               	dw	65535	; errata NOP
  6105  0019CC                     __end_of_SIM800xIPSetConnectionType:
  6106                           	callstack 0
  6107                           
  6108 ;; *************** function _SIM800xIPSetAPN *****************
  6109 ;; Defined at:
  6110 ;;		line 675 in file "Src/SIM800x.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;  cid             1    wreg     unsigned char 
  6113 ;;  apn             2   18[COMRAM] PTR const unsigned char 
  6114 ;;		 -> STR_4(9), 
  6115 ;; Auto vars:     Size  Location     Type
  6116 ;;  cid             1   20[COMRAM] unsigned char 
  6117 ;; Return value:  Size  Location     Type
  6118 ;;                  1    wreg      enum E2115
  6119 ;; Registers used:
  6120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6121 ;; Tracked objects:
  6122 ;;		On entry : 0/0
  6123 ;;		On exit  : 0/0
  6124 ;;		Unchanged: 0/0
  6125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6126 ;;      Params:         2       0       0       0       0       0       0
  6127 ;;      Locals:         1       0       0       0       0       0       0
  6128 ;;      Temps:          0       0       0       0       0       0       0
  6129 ;;      Totals:         3       0       0       0       0       0       0
  6130 ;;Total ram usage:        3 bytes
  6131 ;; Hardware stack levels used: 1
  6132 ;; Hardware stack levels required when called: 5
  6133 ;; This function calls:
  6134 ;;		_ProcessResp1
  6135 ;;		_SIM800xSDMFlush
  6136 ;;		_SIM800xSDMPrint
  6137 ;;		_SIM800xSDMSendByte
  6138 ;;		_strlen
  6139 ;; This function is called by:
  6140 ;;		_SystemInit
  6141 ;; This function uses a non-reentrant model
  6142 ;;
  6143                           
  6144                           	psect	text22
  6145  0019CC                     __ptext22:
  6146                           	callstack 0
  6147  0019CC                     _SIM800xIPSetAPN:
  6148                           	callstack 0
  6149  0019CC  FFFF               	dw	65535	; assembler added errata NOP
  6150                           
  6151                           ;incstack = 0
  6152                           ;SIM800xIPSetAPN@cid stored from wreg
  6153  0019CE  6E15               	movwf	SIM800xIPSetAPN@cid^0,c
  6154                           
  6155                           ;SIM800x.c: 678: if((cid == 0) || (strlen(apn) > 64))
  6156  0019D0  5015               	movf	SIM800xIPSetAPN@cid^0,w,c
  6157  0019D2  B4D8               	btfsc	status,2,c
  6158  0019D4  D00C               	goto	u2430
  6159  0019D6  C013  F001         	movff	SIM800xIPSetAPN@apn,strlen@s
  6160  0019DA  C014  F002         	movff	SIM800xIPSetAPN@apn+1,strlen@s+1
  6161  0019DE  EC79  F00E         	call	_strlen	;wreg free
  6162  0019E2  5002               	movf	(?_strlen+1)^0,w,c
  6163  0019E4  E104               	bnz	u2430
  6164  0019E6  0E41               	movlw	65
  6165  0019E8  5C01               	subwf	?_strlen^0,w,c
  6166  0019EA  A0D8               	btfss	status,0,c
  6167  0019EC  D003               	goto	l3710
  6168  0019EE                     u2430:
  6169  0019EE  FFFF               	dw	65535	; assembler added errata NOP
  6170                           
  6171                           ;SIM800x.c: 679: return SIM800X_ERROR;
  6172  0019F0  0E01               	movlw	1
  6173  0019F2  D01F               	goto	l515
  6174  0019F4                     l3710:
  6175  0019F4  FFFF               	dw	65535	; assembler added errata NOP
  6176                           
  6177                           ;SIM800x.c: 681: SIM800xSDMFlush();
  6178  0019F6  ECA0  F00F         	call	_SIM800xSDMFlush	;wreg free
  6179                           
  6180                           ;SIM800x.c: 682: SIM800xSDMPrint("AT+SAPBR=3,");
  6181  0019FA  0ECE               	movlw	low STR_43
  6182  0019FC  6E02               	movwf	SIM800xSDMPrint@str^0,c
  6183  0019FE  0E7E               	movlw	high STR_43
  6184  001A00  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6185  001A02  EC4C  F00D         	call	_SIM800xSDMPrint	;wreg free
  6186                           
  6187                           ;SIM800x.c: 683: SIM800xSDMSendByte((uint8_t)((cid & 0x03) + 48));
  6188  001A06  5015               	movf	SIM800xIPSetAPN@cid^0,w,c
  6189  001A08  0B03               	andlw	3
  6190  001A0A  0F30               	addlw	48
  6191  001A0C  ECBF  F00F         	call	_SIM800xSDMSendByte
  6192                           
  6193                           ;SIM800x.c: 684: SIM800xSDMPrint(",\"APN\",");
  6194  001A10  0EAC               	movlw	low STR_46
  6195  001A12  6E02               	movwf	SIM800xSDMPrint@str^0,c
  6196  001A14  0E7F               	movlw	high STR_46
  6197  001A16  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6198  001A18  EC4C  F00D         	call	_SIM800xSDMPrint	;wreg free
  6199                           
  6200                           ;SIM800x.c: 685: SIM800xSDMPrint(apn);
  6201  001A1C  C013  F002         	movff	SIM800xIPSetAPN@apn,SIM800xSDMPrint@str
  6202  001A20  C014  F003         	movff	SIM800xIPSetAPN@apn+1,SIM800xSDMPrint@str+1
  6203  001A24  EC4C  F00D         	call	_SIM800xSDMPrint	;wreg free
  6204                           
  6205                           ;SIM800x.c: 686: SIM800xSDMSendByte('\r');
  6206  001A28  0E0D               	movlw	13
  6207  001A2A  ECBF  F00F         	call	_SIM800xSDMSendByte
  6208                           
  6209                           ;SIM800x.c: 688: return ProcessResp1();
  6210  001A2E  ECC4  F00B         	call	_ProcessResp1	;wreg free
  6211  001A32                     l515:
  6212  001A32  FFFF               	dw	65535	; assembler added errata NOP
  6213  001A34  0012               	return		;funcret
  6214  001A36  FFFF               	dw	65535	; errata NOP
  6215  001A38                     __end_of_SIM800xIPSetAPN:
  6216                           	callstack 0
  6217                           
  6218 ;; *************** function _SIM800xIPOpen *****************
  6219 ;; Defined at:
  6220 ;;		line 770 in file "Src/SIM800x.c"
  6221 ;; Parameters:    Size  Location     Type
  6222 ;;  cid             1    wreg     unsigned char 
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;  cid             1   18[COMRAM] unsigned char 
  6225 ;; Return value:  Size  Location     Type
  6226 ;;                  1    wreg      enum E2115
  6227 ;; Registers used:
  6228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6229 ;; Tracked objects:
  6230 ;;		On entry : 0/0
  6231 ;;		On exit  : 0/0
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6234 ;;      Params:         0       0       0       0       0       0       0
  6235 ;;      Locals:         1       0       0       0       0       0       0
  6236 ;;      Temps:          0       0       0       0       0       0       0
  6237 ;;      Totals:         1       0       0       0       0       0       0
  6238 ;;Total ram usage:        1 bytes
  6239 ;; Hardware stack levels used: 1
  6240 ;; Hardware stack levels required when called: 5
  6241 ;; This function calls:
  6242 ;;		_ProcessResp1
  6243 ;;		_SIM800xSDMFlush
  6244 ;;		_SIM800xSDMPrint
  6245 ;;		_SIM800xSDMSendByte
  6246 ;; This function is called by:
  6247 ;;		_SystemInit
  6248 ;; This function uses a non-reentrant model
  6249 ;;
  6250                           
  6251                           	psect	text23
  6252  001D88                     __ptext23:
  6253                           	callstack 0
  6254  001D88                     _SIM800xIPOpen:
  6255                           	callstack 0
  6256  001D88  FFFF               	dw	65535	; assembler added errata NOP
  6257                           
  6258                           ;incstack = 0
  6259                           ;SIM800xIPOpen@cid stored from wreg
  6260  001D8A  6E13               	movwf	SIM800xIPOpen@cid^0,c
  6261                           
  6262                           ;SIM800x.c: 773: if(cid == 0)
  6263  001D8C  5013               	movf	SIM800xIPOpen@cid^0,w,c
  6264  001D8E  A4D8               	btfss	status,2,c
  6265  001D90  D002               	goto	l3732
  6266                           
  6267                           ;SIM800x.c: 774: return SIM800X_ERROR;
  6268  001D92  0E01               	movlw	1
  6269  001D94  D01B               	goto	l543
  6270  001D96                     l3732:
  6271  001D96  FFFF               	dw	65535	; assembler added errata NOP
  6272                           
  6273                           ;SIM800x.c: 776: SIM800xSDMFlush();
  6274  001D98  ECA0  F00F         	call	_SIM800xSDMFlush	;wreg free
  6275                           
  6276                           ;SIM800x.c: 777: SIM800xSDMPrint("AT+SAPBR=1,");
  6277  001D9C  0EAA               	movlw	low STR_56
  6278  001D9E  6E02               	movwf	SIM800xSDMPrint@str^0,c
  6279  001DA0  0E7E               	movlw	high STR_56
  6280  001DA2  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6281  001DA4  EC4C  F00D         	call	_SIM800xSDMPrint	;wreg free
  6282                           
  6283                           ;SIM800x.c: 778: SIM800xSDMSendByte((uint8_t)((cid & 0x03) + 48));
  6284  001DA8  5013               	movf	SIM800xIPOpen@cid^0,w,c
  6285  001DAA  0B03               	andlw	3
  6286  001DAC  0F30               	addlw	48
  6287  001DAE  ECBF  F00F         	call	_SIM800xSDMSendByte
  6288                           
  6289                           ;SIM800x.c: 779: SIM800xSDMSendByte('\r');
  6290  001DB2  0E0D               	movlw	13
  6291  001DB4  ECBF  F00F         	call	_SIM800xSDMSendByte
  6292                           
  6293                           ;SIM800x.c: 781: Tout = 85000;
  6294  001DB8  0E08               	movlw	8
  6295  001DBA  6E7A               	movwf	_Tout^0,c
  6296  001DBC  0E4C               	movlw	76
  6297  001DBE  6E7B               	movwf	(_Tout+1)^0,c
  6298  001DC0  0E01               	movlw	1
  6299  001DC2  6E7C               	movwf	(_Tout+2)^0,c
  6300  001DC4  0E00               	movlw	0
  6301  001DC6  6E7D               	movwf	(_Tout+3)^0,c
  6302                           
  6303                           ;SIM800x.c: 782: return ProcessResp1();
  6304  001DC8  ECC4  F00B         	call	_ProcessResp1	;wreg free
  6305  001DCC                     l543:
  6306  001DCC  FFFF               	dw	65535	; assembler added errata NOP
  6307  001DCE  0012               	return		;funcret
  6308  001DD0  FFFF               	dw	65535	; errata NOP
  6309  001DD2                     __end_of_SIM800xIPOpen:
  6310                           	callstack 0
  6311                           
  6312 ;; *************** function _ProcessResp1 *****************
  6313 ;; Defined at:
  6314 ;;		line 165 in file "Src/SIM800x.c"
  6315 ;; Parameters:    Size  Location     Type
  6316 ;;		None
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;  time            4   13[COMRAM] unsigned long 
  6319 ;;  c               1   17[COMRAM] unsigned char 
  6320 ;; Return value:  Size  Location     Type
  6321 ;;                  1    wreg      enum E2114
  6322 ;; Registers used:
  6323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6324 ;; Tracked objects:
  6325 ;;		On entry : 0/0
  6326 ;;		On exit  : 0/0
  6327 ;;		Unchanged: 0/0
  6328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6329 ;;      Params:         0       0       0       0       0       0       0
  6330 ;;      Locals:         5       0       0       0       0       0       0
  6331 ;;      Temps:          4       0       0       0       0       0       0
  6332 ;;      Totals:         9       0       0       0       0       0       0
  6333 ;;Total ram usage:        9 bytes
  6334 ;; Hardware stack levels used: 1
  6335 ;; Hardware stack levels required when called: 4
  6336 ;; This function calls:
  6337 ;;		_SIM800xSDMPeek
  6338 ;;		_SIM800xSDMRxAvailable
  6339 ;;		_Tick_ms
  6340 ;; This function is called by:
  6341 ;;		_SIM800xIPSetConnectionType
  6342 ;;		_SIM800xIPSetAPN
  6343 ;;		_SIM800xIPOpen
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           
  6347                           	psect	text24
  6348  001788                     __ptext24:
  6349                           	callstack 0
  6350  001788                     _ProcessResp1:
  6351                           	callstack 0
  6352  001788  FFFF               	dw	65535	; assembler added errata NOP
  6353                           
  6354                           ;SIM800x.c: 167: uint32_t time = Tick_ms();
  6355                           
  6356                           ;incstack = 0
  6357  00178A  EC95  F00F         	call	_Tick_ms	;wreg free
  6358  00178E  C001  F00E         	movff	?_Tick_ms,ProcessResp1@time
  6359  001792  C002  F00F         	movff	?_Tick_ms+1,ProcessResp1@time+1
  6360  001796  C003  F010         	movff	?_Tick_ms+2,ProcessResp1@time+2
  6361  00179A  C004  F011         	movff	?_Tick_ms+3,ProcessResp1@time+3
  6362                           
  6363                           ;SIM800x.c: 168: while(SIM800xSDMRxAvailable() < 6)
  6364  00179E  D01B               	goto	l3436
  6365  0017A0                     l3430:
  6366  0017A0  FFFF               	dw	65535	; assembler added errata NOP
  6367                           
  6368                           ;SIM800x.c: 169: {;SIM800x.c: 170: if((Tick_ms() - time) > Tout)
  6369  0017A2  EC95  F00F         	call	_Tick_ms	;wreg free
  6370  0017A6  500E               	movf	ProcessResp1@time^0,w,c
  6371  0017A8  5C01               	subwf	?_Tick_ms^0,w,c
  6372  0017AA  6E0A               	movwf	??_ProcessResp1^0,c
  6373  0017AC  500F               	movf	(ProcessResp1@time+1)^0,w,c
  6374  0017AE  5802               	subwfb	(?_Tick_ms+1)^0,w,c
  6375  0017B0  6E0B               	movwf	(??_ProcessResp1+1)^0,c
  6376  0017B2  5010               	movf	(ProcessResp1@time+2)^0,w,c
  6377  0017B4  5803               	subwfb	(?_Tick_ms+2)^0,w,c
  6378  0017B6  6E0C               	movwf	(??_ProcessResp1+2)^0,c
  6379  0017B8  5011               	movf	(ProcessResp1@time+3)^0,w,c
  6380  0017BA  5804               	subwfb	(?_Tick_ms+3)^0,w,c
  6381  0017BC  6E0D               	movwf	(??_ProcessResp1+3)^0,c
  6382  0017BE  500A               	movf	??_ProcessResp1^0,w,c
  6383  0017C0  5C7A               	subwf	_Tout^0,w,c
  6384  0017C2  500B               	movf	(??_ProcessResp1+1)^0,w,c
  6385  0017C4  587B               	subwfb	(_Tout+1)^0,w,c
  6386  0017C6  500C               	movf	(??_ProcessResp1+2)^0,w,c
  6387  0017C8  587C               	subwfb	(_Tout+2)^0,w,c
  6388  0017CA  500D               	movf	(??_ProcessResp1+3)^0,w,c
  6389  0017CC  587D               	subwfb	(_Tout+3)^0,w,c
  6390  0017CE  B0D8               	btfsc	status,0,c
  6391  0017D0  D002               	goto	l3436
  6392                           
  6393                           ;SIM800x.c: 171: {;SIM800x.c: 172: return SIM800X_TIME_OUT;
  6394  0017D2  0E05               	movlw	5
  6395  0017D4  D015               	goto	l361
  6396  0017D6                     l3436:
  6397  0017D6  FFFF               	dw	65535	; assembler added errata NOP
  6398  0017D8  EC43  F00F         	call	_SIM800xSDMRxAvailable	;wreg free
  6399  0017DC  5007               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  6400  0017DE  E104               	bnz	u2050
  6401  0017E0  0E06               	movlw	6
  6402  0017E2  5C06               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  6403  0017E4  A0D8               	btfss	status,0,c
  6404  0017E6  D7DC               	goto	l3430
  6405  0017E8                     u2050:
  6406                           
  6407                           ;SIM800x.c: 173: };SIM800x.c: 174: };SIM800x.c: 175: char c = SIM800xSDMPeek(2);
  6408  0017E8  0E02               	movlw	2
  6409  0017EA  ECE9  F00E         	call	_SIM800xSDMPeek
  6410  0017EE  6E12               	movwf	ProcessResp1@c^0,c
  6411                           
  6412                           ;SIM800x.c: 176: if(c == 'O')
  6413  0017F0  0E4F               	movlw	79
  6414  0017F2  1812               	xorwf	ProcessResp1@c^0,w,c
  6415  0017F4  A4D8               	btfss	status,2,c
  6416  0017F6  D002               	goto	l3446
  6417                           
  6418                           ;SIM800x.c: 177: return SIM800X_OK;
  6419  0017F8  0E00               	movlw	0
  6420  0017FA  D002               	goto	l361
  6421  0017FC                     l3446:
  6422  0017FC  FFFF               	dw	65535	; assembler added errata NOP
  6423                           
  6424                           ;SIM800x.c: 178: return SIM800X_ERROR;
  6425  0017FE  0E01               	movlw	1
  6426  001800                     l361:
  6427  001800  FFFF               	dw	65535	; assembler added errata NOP
  6428  001802  0012               	return		;funcret
  6429  001804  FFFF               	dw	65535	; errata NOP
  6430  001806                     __end_of_ProcessResp1:
  6431                           	callstack 0
  6432                           
  6433 ;; *************** function _SIM800xIPGetState *****************
  6434 ;; Defined at:
  6435 ;;		line 814 in file "Src/SIM800x.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;  cid             1    wreg     unsigned char 
  6438 ;;  ip              2   35[COMRAM] PTR unsigned char 
  6439 ;;		 -> SystemInit@ip(20), 
  6440 ;; Auto vars:     Size  Location     Type
  6441 ;;  cid             1   76[COMRAM] unsigned char 
  6442 ;;  i               1   78[COMRAM] unsigned char 
  6443 ;;  len             1   77[COMRAM] unsigned char 
  6444 ;;  str            30   41[COMRAM] unsigned char [30]
  6445 ;;  time1           4   71[COMRAM] unsigned long 
  6446 ;;  res             1   75[COMRAM] enum E2114
  6447 ;;  res1            1    0        enum E2260
  6448 ;; Return value:  Size  Location     Type
  6449 ;;                  1    wreg      enum E2261
  6450 ;; Registers used:
  6451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6452 ;; Tracked objects:
  6453 ;;		On entry : 0/0
  6454 ;;		On exit  : 0/0
  6455 ;;		Unchanged: 0/0
  6456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6457 ;;      Params:         2       0       0       0       0       0       0
  6458 ;;      Locals:        38       0       0       0       0       0       0
  6459 ;;      Temps:          4       0       0       0       0       0       0
  6460 ;;      Totals:        44       0       0       0       0       0       0
  6461 ;;Total ram usage:       44 bytes
  6462 ;; Hardware stack levels used: 1
  6463 ;; Hardware stack levels required when called: 6
  6464 ;; This function calls:
  6465 ;;		_ProcessResp2
  6466 ;;		_SIM800xSDMFlush
  6467 ;;		_SIM800xSDMPrint
  6468 ;;		_SIM800xSDMRxAvailable
  6469 ;;		_SIM800xSDMSendByte
  6470 ;;		_Tick_ms
  6471 ;;		_strlen
  6472 ;; This function is called by:
  6473 ;;		_SystemInit
  6474 ;; This function uses a non-reentrant model
  6475 ;;
  6476                           
  6477                           	psect	text25
  6478  00144A                     __ptext25:
  6479                           	callstack 0
  6480  00144A                     _SIM800xIPGetState:
  6481                           	callstack 0
  6482  00144A  FFFF               	dw	65535	; assembler added errata NOP
  6483                           
  6484                           ;incstack = 0
  6485                           ;SIM800xIPGetState@cid stored from wreg
  6486  00144C  6E4D               	movwf	SIM800xIPGetState@cid^0,c
  6487                           
  6488                           ;SIM800x.c: 817: if(cid == 0)
  6489  00144E  504D               	movf	SIM800xIPGetState@cid^0,w,c
  6490  001450  B4D8               	btfsc	status,2,c
  6491  001452  D079               	goto	l558
  6492                           
  6493                           ;SIM800x.c: 820: char str[30];;SIM800x.c: 821: SIM800xSDMFlush();
  6494  001454  ECA0  F00F         	call	_SIM800xSDMFlush	;wreg free
  6495                           
  6496                           ;SIM800x.c: 822: SIM800xSDMPrint("AT+SAPBR=2,");
  6497  001458  0EC2               	movlw	low STR_58
  6498  00145A  6E02               	movwf	SIM800xSDMPrint@str^0,c
  6499  00145C  0E7E               	movlw	high STR_58
  6500  00145E  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6501  001460  EC4C  F00D         	call	_SIM800xSDMPrint	;wreg free
  6502                           
  6503                           ;SIM800x.c: 823: SIM800xSDMSendByte((uint8_t)((cid & 0x03) + 48));
  6504  001464  504D               	movf	SIM800xIPGetState@cid^0,w,c
  6505  001466  0B03               	andlw	3
  6506  001468  0F30               	addlw	48
  6507  00146A  ECBF  F00F         	call	_SIM800xSDMSendByte
  6508                           
  6509                           ;SIM800x.c: 824: SIM800xSDMSendByte('\r');
  6510  00146E  0E0D               	movlw	13
  6511  001470  ECBF  F00F         	call	_SIM800xSDMSendByte
  6512                           
  6513                           ;SIM800x.c: 825: SIM800xIPStatusType res1;;SIM800x.c: 827: uint32_t time1 = Tick_ms();
  6514  001474  EC95  F00F         	call	_Tick_ms	;wreg free
  6515  001478  C001  F048         	movff	?_Tick_ms,SIM800xIPGetState@time1
  6516  00147C  C002  F049         	movff	?_Tick_ms+1,SIM800xIPGetState@time1+1
  6517  001480  C003  F04A         	movff	?_Tick_ms+2,SIM800xIPGetState@time1+2
  6518  001484  C004  F04B         	movff	?_Tick_ms+3,SIM800xIPGetState@time1+3
  6519                           
  6520                           ;SIM800x.c: 828: while(SIM800xSDMRxAvailable() < 25)
  6521  001488  D019               	goto	l3764
  6522  00148A                     l3760:
  6523  00148A  FFFF               	dw	65535	; assembler added errata NOP
  6524                           
  6525                           ;SIM800x.c: 829: {;SIM800x.c: 830: if((Tick_ms() - time1) > Tout)
  6526  00148C  EC95  F00F         	call	_Tick_ms	;wreg free
  6527  001490  5048               	movf	SIM800xIPGetState@time1^0,w,c
  6528  001492  5C01               	subwf	?_Tick_ms^0,w,c
  6529  001494  6E26               	movwf	??_SIM800xIPGetState^0,c
  6530  001496  5049               	movf	(SIM800xIPGetState@time1+1)^0,w,c
  6531  001498  5802               	subwfb	(?_Tick_ms+1)^0,w,c
  6532  00149A  6E27               	movwf	(??_SIM800xIPGetState+1)^0,c
  6533  00149C  504A               	movf	(SIM800xIPGetState@time1+2)^0,w,c
  6534  00149E  5803               	subwfb	(?_Tick_ms+2)^0,w,c
  6535  0014A0  6E28               	movwf	(??_SIM800xIPGetState+2)^0,c
  6536  0014A2  504B               	movf	(SIM800xIPGetState@time1+3)^0,w,c
  6537  0014A4  5804               	subwfb	(?_Tick_ms+3)^0,w,c
  6538  0014A6  6E29               	movwf	(??_SIM800xIPGetState+3)^0,c
  6539  0014A8  5026               	movf	??_SIM800xIPGetState^0,w,c
  6540  0014AA  5C7A               	subwf	_Tout^0,w,c
  6541  0014AC  5027               	movf	(??_SIM800xIPGetState+1)^0,w,c
  6542  0014AE  587B               	subwfb	(_Tout+1)^0,w,c
  6543  0014B0  5028               	movf	(??_SIM800xIPGetState+2)^0,w,c
  6544  0014B2  587C               	subwfb	(_Tout+2)^0,w,c
  6545  0014B4  5029               	movf	(??_SIM800xIPGetState+3)^0,w,c
  6546  0014B6  587D               	subwfb	(_Tout+3)^0,w,c
  6547  0014B8  A0D8               	btfss	status,0,c
  6548  0014BA  D045               	goto	l558
  6549  0014BC                     l3764:
  6550  0014BC  FFFF               	dw	65535	; assembler added errata NOP
  6551  0014BE  EC43  F00F         	call	_SIM800xSDMRxAvailable	;wreg free
  6552  0014C2  5007               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  6553  0014C4  E104               	bnz	u2470
  6554  0014C6  0E19               	movlw	25
  6555  0014C8  5C06               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  6556  0014CA  A0D8               	btfss	status,0,c
  6557  0014CC  D7DE               	goto	l3760
  6558  0014CE                     u2470:
  6559                           
  6560                           ;SIM800x.c: 832: };SIM800x.c: 833: SIM800x_APIStatusType res = ProcessResp2(str);
  6561  0014CE  0E2A               	movlw	low SIM800xIPGetState@str
  6562  0014D0  6E18               	movwf	ProcessResp2@str^0,c
  6563  0014D2  0E00               	movlw	high SIM800xIPGetState@str
  6564  0014D4  6E19               	movwf	(ProcessResp2@str+1)^0,c
  6565  0014D6  ECA6  F00A         	call	_ProcessResp2	;wreg free
  6566  0014DA  6E4C               	movwf	SIM800xIPGetState@res^0,c
  6567                           
  6568                           ;SIM800x.c: 834: if(res == SIM800X_OK)
  6569  0014DC  504C               	movf	SIM800xIPGetState@res^0,w,c
  6570  0014DE  A4D8               	btfss	status,2,c
  6571  0014E0  D032               	goto	l558
  6572                           
  6573                           ;SIM800x.c: 835: {;SIM800x.c: 836: uint8_t len = (uint8_t)(strlen(str) - 1);
  6574  0014E2  0E2A               	movlw	low SIM800xIPGetState@str
  6575  0014E4  6E01               	movwf	strlen@s^0,c
  6576  0014E6  0E00               	movlw	high SIM800xIPGetState@str
  6577  0014E8  6E02               	movwf	(strlen@s+1)^0,c
  6578  0014EA  EC79  F00E         	call	_strlen	;wreg free
  6579  0014EE  0401               	decf	?_strlen^0,w,c
  6580  0014F0  6E4E               	movwf	SIM800xIPGetState@len^0,c
  6581                           
  6582                           ;SIM800x.c: 838: for(uint8_t i = 13; i < len; i++)
  6583  0014F2  0E0D               	movlw	13
  6584  0014F4  6E4F               	movwf	SIM800xIPGetState@i^0,c
  6585  0014F6  D016               	goto	l3780
  6586  0014F8                     l3776:
  6587  0014F8  FFFF               	dw	65535	; assembler added errata NOP
  6588                           
  6589                           ;SIM800x.c: 839: {;SIM800x.c: 840: ip[i - 13] = str[i];
  6590  0014FA  0E2A               	movlw	low SIM800xIPGetState@str
  6591  0014FC  244F               	addwf	SIM800xIPGetState@i^0,w,c
  6592  0014FE  6ED9               	movwf	fsr2l,c
  6593  001500  6ADA               	clrf	fsr2h,c
  6594  001502  0E00               	movlw	high SIM800xIPGetState@str
  6595  001504  22DA               	addwfc	fsr2h,f,c
  6596  001506  504F               	movf	SIM800xIPGetState@i^0,w,c
  6597  001508  2424               	addwf	SIM800xIPGetState@ip^0,w,c
  6598  00150A  6E26               	movwf	??_SIM800xIPGetState^0,c
  6599  00150C  0E00               	movlw	0
  6600  00150E  2025               	addwfc	(SIM800xIPGetState@ip+1)^0,w,c
  6601  001510  6E27               	movwf	(??_SIM800xIPGetState+1)^0,c
  6602  001512  0EF3               	movlw	243
  6603  001514  2426               	addwf	??_SIM800xIPGetState^0,w,c
  6604  001516  6EE1               	movwf	fsr1l,c
  6605  001518  0EFF               	movlw	255
  6606  00151A  2027               	addwfc	(??_SIM800xIPGetState+1)^0,w,c
  6607  00151C  6EE2               	movwf	fsr1h,c
  6608  00151E  CFDF FFE7          	movff	indf2,indf1
  6609  001522  2A4F               	incf	SIM800xIPGetState@i^0,f,c
  6610  001524                     l3780:
  6611  001524  FFFF               	dw	65535	; assembler added errata NOP
  6612  001526  504E               	movf	SIM800xIPGetState@len^0,w,c
  6613  001528  5C4F               	subwf	SIM800xIPGetState@i^0,w,c
  6614  00152A  A0D8               	btfss	status,0,c
  6615  00152C  D7E5               	goto	l3776
  6616                           
  6617                           ;SIM800x.c: 841: };SIM800x.c: 842: ip[(uint8_t)(len - 13)] = '\0';
  6618  00152E  C04E  F026         	movff	SIM800xIPGetState@len,??_SIM800xIPGetState
  6619  001532  0EF3               	movlw	243
  6620  001534  2626               	addwf	??_SIM800xIPGetState^0,f,c
  6621  001536  5026               	movf	??_SIM800xIPGetState^0,w,c
  6622  001538  2424               	addwf	SIM800xIPGetState@ip^0,w,c
  6623  00153A  6ED9               	movwf	fsr2l,c
  6624  00153C  0E00               	movlw	0
  6625  00153E  2025               	addwfc	(SIM800xIPGetState@ip+1)^0,w,c
  6626  001540  6EDA               	movwf	fsr2h,c
  6627  001542  0E00               	movlw	0
  6628  001544  6EDF               	movwf	indf2,c
  6629  001546                     l558:
  6630  001546  FFFF               	dw	65535	; assembler added errata NOP
  6631  001548  0012               	return		;funcret
  6632  00154A  FFFF               	dw	65535	; errata NOP
  6633  00154C                     __end_of_SIM800xIPGetState:
  6634                           	callstack 0
  6635                           
  6636 ;; *************** function _ProcessResp2 *****************
  6637 ;; Defined at:
  6638 ;;		line 182 in file "Src/SIM800x.c"
  6639 ;; Parameters:    Size  Location     Type
  6640 ;;  str             2   23[COMRAM] PTR unsigned char 
  6641 ;;		 -> SIM800xGPRSGetAddress@str(40), SIM800xIPGetState@str(30), SIM800xGetSoftwareRevisionID@str(30), 
  6642 ;; Auto vars:     Size  Location     Type
  6643 ;;  time            4   29[COMRAM] unsigned long 
  6644 ;;  res             2   33[COMRAM] int 
  6645 ;; Return value:  Size  Location     Type
  6646 ;;                  1    wreg      enum E2114
  6647 ;; Registers used:
  6648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6649 ;; Tracked objects:
  6650 ;;		On entry : 0/0
  6651 ;;		On exit  : 0/0
  6652 ;;		Unchanged: 0/0
  6653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6654 ;;      Params:         2       0       0       0       0       0       0
  6655 ;;      Locals:         6       0       0       0       0       0       0
  6656 ;;      Temps:          4       0       0       0       0       0       0
  6657 ;;      Totals:        12       0       0       0       0       0       0
  6658 ;;Total ram usage:       12 bytes
  6659 ;; Hardware stack levels used: 1
  6660 ;; Hardware stack levels required when called: 5
  6661 ;; This function calls:
  6662 ;;		_SIM800xSDMPeek
  6663 ;;		_SIM800xSDMReadF1Pkt
  6664 ;;		_Tick_ms
  6665 ;; This function is called by:
  6666 ;;		_SIM800xIPGetState
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           	psect	text26
  6671  00154C                     __ptext26:
  6672                           	callstack 0
  6673  00154C                     _ProcessResp2:
  6674                           	callstack 0
  6675  00154C  FFFF               	dw	65535	; assembler added errata NOP
  6676                           
  6677                           ;SIM800x.c: 185: int res = SIM800xSDMReadF1Pkt((char*)str);
  6678                           
  6679                           ;incstack = 0
  6680  00154E  C018  F00A         	movff	ProcessResp2@str,SIM800xSDMReadF1Pkt@data
  6681  001552  C019  F00B         	movff	ProcessResp2@str+1,SIM800xSDMReadF1Pkt@data+1
  6682  001556  EC0C  F009         	call	_SIM800xSDMReadF1Pkt	;wreg free
  6683  00155A  C00A  F022         	movff	?_SIM800xSDMReadF1Pkt,ProcessResp2@res
  6684  00155E  C00B  F023         	movff	?_SIM800xSDMReadF1Pkt+1,ProcessResp2@res+1
  6685                           
  6686                           ;SIM800x.c: 186: if(res < 0)
  6687  001562  AE23               	btfss	(ProcessResp2@res+1)^0,7,c
  6688  001564  D002               	goto	l3460
  6689                           
  6690                           ;SIM800x.c: 187: {;SIM800x.c: 188: return SIM800X_TIME_OUT;
  6691  001566  0E05               	movlw	5
  6692  001568  D03D               	goto	l367
  6693  00156A                     l3460:
  6694  00156A  FFFF               	dw	65535	; assembler added errata NOP
  6695                           
  6696                           ;SIM800x.c: 190: else if(res == 0)
  6697  00156C  5022               	movf	ProcessResp2@res^0,w,c
  6698  00156E  1023               	iorwf	(ProcessResp2@res+1)^0,w,c
  6699  001570  A4D8               	btfss	status,2,c
  6700  001572  D003               	goto	l3466
  6701  001574                     u2080:
  6702  001574  FFFF               	dw	65535	; assembler added errata NOP
  6703                           
  6704                           ;SIM800x.c: 191: {;SIM800x.c: 192: return SIM800X_INVALID_RESPONSE;
  6705  001576  0E08               	movlw	8
  6706  001578  D035               	goto	l367
  6707  00157A                     l3466:
  6708  00157A  FFFF               	dw	65535	; assembler added errata NOP
  6709                           
  6710                           ;SIM800x.c: 193: };SIM800x.c: 194: str[res] = '\0';
  6711  00157C  5022               	movf	ProcessResp2@res^0,w,c
  6712  00157E  2418               	addwf	ProcessResp2@str^0,w,c
  6713  001580  6ED9               	movwf	fsr2l,c
  6714  001582  5023               	movf	(ProcessResp2@res+1)^0,w,c
  6715  001584  2019               	addwfc	(ProcessResp2@str+1)^0,w,c
  6716  001586  6EDA               	movwf	fsr2h,c
  6717  001588  0E00               	movlw	0
  6718  00158A  6EDF               	movwf	indf2,c
  6719                           
  6720                           ;SIM800x.c: 196: uint32_t time = Tick_ms();
  6721  00158C  EC95  F00F         	call	_Tick_ms	;wreg free
  6722  001590  C001  F01E         	movff	?_Tick_ms,ProcessResp2@time
  6723  001594  C002  F01F         	movff	?_Tick_ms+1,ProcessResp2@time+1
  6724  001598  C003  F020         	movff	?_Tick_ms+2,ProcessResp2@time+2
  6725  00159C  C004  F021         	movff	?_Tick_ms+3,ProcessResp2@time+3
  6726                           
  6727                           ;SIM800x.c: 197: while(SIM800xSDMPeek(2) != 'O')
  6728  0015A0  D019               	goto	l3476
  6729  0015A2                     l3470:
  6730  0015A2  FFFF               	dw	65535	; assembler added errata NOP
  6731                           
  6732                           ;SIM800x.c: 198: {;SIM800x.c: 199: if((Tick_ms() - time) > Tout)
  6733  0015A4  EC95  F00F         	call	_Tick_ms	;wreg free
  6734  0015A8  501E               	movf	ProcessResp2@time^0,w,c
  6735  0015AA  5C01               	subwf	?_Tick_ms^0,w,c
  6736  0015AC  6E1A               	movwf	??_ProcessResp2^0,c
  6737  0015AE  501F               	movf	(ProcessResp2@time+1)^0,w,c
  6738  0015B0  5802               	subwfb	(?_Tick_ms+1)^0,w,c
  6739  0015B2  6E1B               	movwf	(??_ProcessResp2+1)^0,c
  6740  0015B4  5020               	movf	(ProcessResp2@time+2)^0,w,c
  6741  0015B6  5803               	subwfb	(?_Tick_ms+2)^0,w,c
  6742  0015B8  6E1C               	movwf	(??_ProcessResp2+2)^0,c
  6743  0015BA  5021               	movf	(ProcessResp2@time+3)^0,w,c
  6744  0015BC  5804               	subwfb	(?_Tick_ms+3)^0,w,c
  6745  0015BE  6E1D               	movwf	(??_ProcessResp2+3)^0,c
  6746  0015C0  501A               	movf	??_ProcessResp2^0,w,c
  6747  0015C2  5C7A               	subwf	_Tout^0,w,c
  6748  0015C4  501B               	movf	(??_ProcessResp2+1)^0,w,c
  6749  0015C6  587B               	subwfb	(_Tout+1)^0,w,c
  6750  0015C8  501C               	movf	(??_ProcessResp2+2)^0,w,c
  6751  0015CA  587C               	subwfb	(_Tout+2)^0,w,c
  6752  0015CC  501D               	movf	(??_ProcessResp2+3)^0,w,c
  6753  0015CE  587D               	subwfb	(_Tout+3)^0,w,c
  6754  0015D0  A0D8               	btfss	status,0,c
  6755  0015D2  D7D0               	goto	u2080
  6756  0015D4                     l3476:
  6757  0015D4  FFFF               	dw	65535	; assembler added errata NOP
  6758  0015D6  0E02               	movlw	2
  6759  0015D8  ECE9  F00E         	call	_SIM800xSDMPeek
  6760  0015DC  0A4F               	xorlw	79
  6761  0015DE  A4D8               	btfss	status,2,c
  6762  0015E0  D7E0               	goto	l3470
  6763                           
  6764                           ;SIM800x.c: 202: };SIM800x.c: 203: };SIM800x.c: 204: return SIM800X_OK;
  6765  0015E2  0E00               	movlw	0
  6766  0015E4                     l367:
  6767  0015E4  FFFF               	dw	65535	; assembler added errata NOP
  6768  0015E6  0012               	return		;funcret
  6769  0015E8  FFFF               	dw	65535	; errata NOP
  6770  0015EA                     __end_of_ProcessResp2:
  6771                           	callstack 0
  6772                           
  6773 ;; *************** function _SIM800xSDMPeek *****************
  6774 ;; Defined at:
  6775 ;;		line 217 in file "Src/SIM800x_SDM.c"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;  idx             1    wreg     unsigned char 
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;  idx             1    2[COMRAM] unsigned char 
  6780 ;; Return value:  Size  Location     Type
  6781 ;;                  1    wreg      unsigned char 
  6782 ;; Registers used:
  6783 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6784 ;; Tracked objects:
  6785 ;;		On entry : 0/0
  6786 ;;		On exit  : 0/0
  6787 ;;		Unchanged: 0/0
  6788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6789 ;;      Params:         0       0       0       0       0       0       0
  6790 ;;      Locals:         1       0       0       0       0       0       0
  6791 ;;      Temps:          2       0       0       0       0       0       0
  6792 ;;      Totals:         3       0       0       0       0       0       0
  6793 ;;Total ram usage:        3 bytes
  6794 ;; Hardware stack levels used: 1
  6795 ;; Hardware stack levels required when called: 2
  6796 ;; This function calls:
  6797 ;;		Nothing
  6798 ;; This function is called by:
  6799 ;;		_ProcessResp1
  6800 ;;		_ProcessResp2
  6801 ;;		_SIM800xInit
  6802 ;;		_SIM800xHTTPInputData
  6803 ;;		_SIM800xHTTPRead
  6804 ;; This function uses a non-reentrant model
  6805 ;;
  6806                           
  6807                           	psect	text27
  6808  001DD2                     __ptext27:
  6809                           	callstack 0
  6810  001DD2                     _SIM800xSDMPeek:
  6811                           	callstack 0
  6812  001DD2  FFFF               	dw	65535	; assembler added errata NOP
  6813                           
  6814                           ;incstack = 0
  6815                           ;SIM800xSDMPeek@idx stored from wreg
  6816  001DD4  6E03               	movwf	SIM800xSDMPeek@idx^0,c
  6817                           
  6818                           ;SIM800x_SDM.c: 220: if((Rxfifoptr + idx) >= Rxfifocurrent)
  6819  001DD6  5003               	movf	SIM800xSDMPeek@idx^0,w,c
  6820  001DD8  2471               	addwf	_Rxfifoptr@SIM800x_SDM$F1159^0,w,c	;volatile
  6821  001DDA  6E01               	movwf	??_SIM800xSDMPeek^0,c
  6822  001DDC  0E00               	movlw	0
  6823  001DDE  2072               	addwfc	(_Rxfifoptr@SIM800x_SDM$F1159+1)^0,w,c	;volatile
  6824  001DE0  6E02               	movwf	(??_SIM800xSDMPeek+1)^0,c
  6825  001DE2  506F               	movf	_Rxfifocurrent@SIM800x_SDM$F1160^0,w,c	;volatile
  6826  001DE4  5C01               	subwf	??_SIM800xSDMPeek^0,w,c
  6827  001DE6  5070               	movf	(_Rxfifocurrent@SIM800x_SDM$F1160+1)^0,w,c	;volatile
  6828  001DE8  5802               	subwfb	(??_SIM800xSDMPeek+1)^0,w,c
  6829  001DEA  A0D8               	btfss	status,0,c
  6830  001DEC  D002               	goto	l3202
  6831                           
  6832                           ;SIM800x_SDM.c: 221: return 0xFF;
  6833  001DEE  0EFF               	movlw	255
  6834  001DF0  D010               	goto	l1053
  6835  001DF2                     l3202:
  6836  001DF2  FFFF               	dw	65535	; assembler added errata NOP
  6837                           
  6838                           ;SIM800x_SDM.c: 222: return RxFIFO[Rxfifoptr + idx];
  6839  001DF4  0E00               	movlw	low _RxFIFO@SIM800x_SDM$F1158
  6840  001DF6  6E01               	movwf	??_SIM800xSDMPeek^0,c
  6841  001DF8  0E03               	movlw	high _RxFIFO@SIM800x_SDM$F1158
  6842  001DFA  6E02               	movwf	(??_SIM800xSDMPeek+1)^0,c
  6843  001DFC  5003               	movf	SIM800xSDMPeek@idx^0,w,c
  6844  001DFE  2601               	addwf	??_SIM800xSDMPeek^0,f,c
  6845  001E00  0E00               	movlw	0
  6846  001E02  2202               	addwfc	(??_SIM800xSDMPeek+1)^0,f,c
  6847  001E04  5071               	movf	_Rxfifoptr@SIM800x_SDM$F1159^0,w,c	;volatile
  6848  001E06  2401               	addwf	??_SIM800xSDMPeek^0,w,c
  6849  001E08  6ED9               	movwf	fsr2l,c
  6850  001E0A  5072               	movf	(_Rxfifoptr@SIM800x_SDM$F1159+1)^0,w,c	;volatile
  6851  001E0C  2002               	addwfc	(??_SIM800xSDMPeek+1)^0,w,c
  6852  001E0E  6EDA               	movwf	fsr2h,c
  6853  001E10  50DF               	movf	indf2,w,c
  6854  001E12                     l1053:
  6855  001E12  FFFF               	dw	65535	; assembler added errata NOP
  6856  001E14  0012               	return		;funcret
  6857  001E16  FFFF               	dw	65535	; errata NOP
  6858  001E18                     __end_of_SIM800xSDMPeek:
  6859                           	callstack 0
  6860                           
  6861 ;; *************** function _SIM800xHTTPSetURL *****************
  6862 ;; Defined at:
  6863 ;;		line 1421 in file "Src/SIM800x.c"
  6864 ;; Parameters:    Size  Location     Type
  6865 ;;  url             2   64[COMRAM] PTR const unsigned char 
  6866 ;;		 -> STR_9(279), 
  6867 ;;  errcode         2   66[COMRAM] PTR unsigned int 
  6868 ;;		 -> SystemInit@err(2), 
  6869 ;; Auto vars:     Size  Location     Type
  6870 ;;		None
  6871 ;; Return value:  Size  Location     Type
  6872 ;;                  1    wreg      enum E2115
  6873 ;; Registers used:
  6874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6875 ;; Tracked objects:
  6876 ;;		On entry : 0/0
  6877 ;;		On exit  : 0/0
  6878 ;;		Unchanged: 0/0
  6879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6880 ;;      Params:         4       0       0       0       0       0       0
  6881 ;;      Locals:         0       0       0       0       0       0       0
  6882 ;;      Temps:          0       0       0       0       0       0       0
  6883 ;;      Totals:         4       0       0       0       0       0       0
  6884 ;;Total ram usage:        4 bytes
  6885 ;; Hardware stack levels used: 1
  6886 ;; Hardware stack levels required when called: 6
  6887 ;; This function calls:
  6888 ;;		_ProcessResp4
  6889 ;;		_SIM800xSDMFlush
  6890 ;;		_SIM800xSDMPrint
  6891 ;;		_SIM800xSDMSendByte
  6892 ;;		_strlen
  6893 ;; This function is called by:
  6894 ;;		_SystemInit
  6895 ;; This function uses a non-reentrant model
  6896 ;;
  6897                           
  6898                           	psect	text28
  6899  001BAC                     __ptext28:
  6900                           	callstack 0
  6901  001BAC                     _SIM800xHTTPSetURL:
  6902                           	callstack 0
  6903  001BAC  FFFF               	dw	65535	; assembler added errata NOP
  6904                           
  6905                           ;SIM800x.c: 1424: if(strlen(url) > 500)
  6906                           
  6907                           ;incstack = 0
  6908  001BAE  C041  F001         	movff	SIM800xHTTPSetURL@url,strlen@s
  6909  001BB2  C042  F002         	movff	SIM800xHTTPSetURL@url+1,strlen@s+1
  6910  001BB6  EC79  F00E         	call	_strlen	;wreg free
  6911  001BBA  0EF5               	movlw	245
  6912  001BBC  5C01               	subwf	?_strlen^0,w,c
  6913  001BBE  0E01               	movlw	1
  6914  001BC0  5802               	subwfb	(?_strlen+1)^0,w,c
  6915  001BC2  A0D8               	btfss	status,0,c
  6916  001BC4  D002               	goto	l3800
  6917                           
  6918                           ;SIM800x.c: 1425: return SIM800X_ERROR;
  6919  001BC6  0E01               	movlw	1
  6920  001BC8  D018               	goto	l737
  6921  001BCA                     l3800:
  6922  001BCA  FFFF               	dw	65535	; assembler added errata NOP
  6923                           
  6924                           ;SIM800x.c: 1427: SIM800xSDMFlush();
  6925  001BCC  ECA0  F00F         	call	_SIM800xSDMFlush	;wreg free
  6926                           
  6927                           ;SIM800x.c: 1428: SIM800xSDMPrint("AT+HTTPPARA=\"URL\",");
  6928  001BD0  0E54               	movlw	low STR_88
  6929  001BD2  6E02               	movwf	SIM800xSDMPrint@str^0,c
  6930  001BD4  0E7D               	movlw	high STR_88
  6931  001BD6  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6932  001BD8  EC4C  F00D         	call	_SIM800xSDMPrint	;wreg free
  6933                           
  6934                           ;SIM800x.c: 1429: SIM800xSDMPrint(url);
  6935  001BDC  C041  F002         	movff	SIM800xHTTPSetURL@url,SIM800xSDMPrint@str
  6936  001BE0  C042  F003         	movff	SIM800xHTTPSetURL@url+1,SIM800xSDMPrint@str+1
  6937  001BE4  EC4C  F00D         	call	_SIM800xSDMPrint	;wreg free
  6938                           
  6939                           ;SIM800x.c: 1430: SIM800xSDMSendByte('\r');
  6940  001BE8  0E0D               	movlw	13
  6941  001BEA  ECBF  F00F         	call	_SIM800xSDMSendByte
  6942                           
  6943                           ;SIM800x.c: 1432: return ProcessResp4(errcode);
  6944  001BEE  C043  F021         	movff	SIM800xHTTPSetURL@errcode,ProcessResp4@ec
  6945  001BF2  C044  F022         	movff	SIM800xHTTPSetURL@errcode+1,ProcessResp4@ec+1
  6946  001BF6  ECA3  F009         	call	_ProcessResp4	;wreg free
  6947  001BFA                     l737:
  6948  001BFA  FFFF               	dw	65535	; assembler added errata NOP
  6949  001BFC  0012               	return		;funcret
  6950  001BFE  FFFF               	dw	65535	; errata NOP
  6951  001C00                     __end_of_SIM800xHTTPSetURL:
  6952                           	callstack 0
  6953                           
  6954 ;; *************** function _SIM800xHTTPSetContent *****************
  6955 ;; Defined at:
  6956 ;;		line 1538 in file "Src/SIM800x.c"
  6957 ;; Parameters:    Size  Location     Type
  6958 ;;  content         2   64[COMRAM] PTR const unsigned char 
  6959 ;;		 -> STR_10(17), 
  6960 ;;  errcode         2   66[COMRAM] PTR unsigned int 
  6961 ;;		 -> SystemInit@err(2), 
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;		None
  6964 ;; Return value:  Size  Location     Type
  6965 ;;                  1    wreg      enum E2115
  6966 ;; Registers used:
  6967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6968 ;; Tracked objects:
  6969 ;;		On entry : 0/0
  6970 ;;		On exit  : 0/0
  6971 ;;		Unchanged: 0/0
  6972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6973 ;;      Params:         4       0       0       0       0       0       0
  6974 ;;      Locals:         0       0       0       0       0       0       0
  6975 ;;      Temps:          0       0       0       0       0       0       0
  6976 ;;      Totals:         4       0       0       0       0       0       0
  6977 ;;Total ram usage:        4 bytes
  6978 ;; Hardware stack levels used: 1
  6979 ;; Hardware stack levels required when called: 6
  6980 ;; This function calls:
  6981 ;;		_ProcessResp4
  6982 ;;		_SIM800xSDMFlush
  6983 ;;		_SIM800xSDMPrint
  6984 ;;		_SIM800xSDMSendByte
  6985 ;;		_strlen
  6986 ;; This function is called by:
  6987 ;;		_SystemInit
  6988 ;; This function uses a non-reentrant model
  6989 ;;
  6990                           
  6991                           	psect	text29
  6992  001C00                     __ptext29:
  6993                           	callstack 0
  6994  001C00                     _SIM800xHTTPSetContent:
  6995                           	callstack 0
  6996  001C00  FFFF               	dw	65535	; assembler added errata NOP
  6997                           
  6998                           ;SIM800x.c: 1541: if(strlen(content) > 80)
  6999                           
  7000                           ;incstack = 0
  7001  001C02  C041  F001         	movff	SIM800xHTTPSetContent@content,strlen@s
  7002  001C06  C042  F002         	movff	SIM800xHTTPSetContent@content+1,strlen@s+1
  7003  001C0A  EC79  F00E         	call	_strlen	;wreg free
  7004  001C0E  5002               	movf	(?_strlen+1)^0,w,c
  7005  001C10  E104               	bnz	u2510
  7006  001C12  0E51               	movlw	81
  7007  001C14  5C01               	subwf	?_strlen^0,w,c
  7008  001C16  A0D8               	btfss	status,0,c
  7009  001C18  D002               	goto	l3818
  7010  001C1A                     u2510:
  7011                           
  7012                           ;SIM800x.c: 1542: return SIM800X_ERROR;
  7013  001C1A  0E01               	movlw	1
  7014  001C1C  D018               	goto	l769
  7015  001C1E                     l3818:
  7016  001C1E  FFFF               	dw	65535	; assembler added errata NOP
  7017                           
  7018                           ;SIM800x.c: 1544: SIM800xSDMFlush();
  7019  001C20  ECA0  F00F         	call	_SIM800xSDMFlush	;wreg free
  7020                           
  7021                           ;SIM800x.c: 1545: SIM800xSDMPrint("AT+HTTPPARA=\"CONTENT\",");
  7022  001C24  0E97               	movlw	low STR_96
  7023  001C26  6E02               	movwf	SIM800xSDMPrint@str^0,c
  7024  001C28  0E7C               	movlw	high STR_96
  7025  001C2A  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  7026  001C2C  EC4C  F00D         	call	_SIM800xSDMPrint	;wreg free
  7027                           
  7028                           ;SIM800x.c: 1546: SIM800xSDMPrint(content);
  7029  001C30  C041  F002         	movff	SIM800xHTTPSetContent@content,SIM800xSDMPrint@str
  7030  001C34  C042  F003         	movff	SIM800xHTTPSetContent@content+1,SIM800xSDMPrint@str+1
  7031  001C38  EC4C  F00D         	call	_SIM800xSDMPrint	;wreg free
  7032                           
  7033                           ;SIM800x.c: 1547: SIM800xSDMSendByte('\r');
  7034  001C3C  0E0D               	movlw	13
  7035  001C3E  ECBF  F00F         	call	_SIM800xSDMSendByte
  7036                           
  7037                           ;SIM800x.c: 1549: return ProcessResp4(errcode);
  7038  001C42  C043  F021         	movff	SIM800xHTTPSetContent@errcode,ProcessResp4@ec
  7039  001C46  C044  F022         	movff	SIM800xHTTPSetContent@errcode+1,ProcessResp4@ec+1
  7040  001C4A  ECA3  F009         	call	_ProcessResp4	;wreg free
  7041  001C4E                     l769:
  7042  001C4E  FFFF               	dw	65535	; assembler added errata NOP
  7043  001C50  0012               	return		;funcret
  7044  001C52  FFFF               	dw	65535	; errata NOP
  7045  001C54                     __end_of_SIM800xHTTPSetContent:
  7046                           	callstack 0
  7047                           
  7048 ;; *************** function _strlen *****************
  7049 ;; Defined at:
  7050 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\strlen.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7053 ;;		 -> SIM800xGPRSGetAddress@str(40), SIM800xIPGetParameters@str(30), SIM800xIPGetState@str(30), txmessage(100), 
  7054 ;;		 -> STR_10(17), STR_9(279), STR_4(9), STR_3(5), 
  7055 ;; Auto vars:     Size  Location     Type
  7056 ;;  cp              2    2[COMRAM] PTR const unsigned char 
  7057 ;;		 -> SIM800xGPRSGetAddress@str(40), SIM800xIPGetParameters@str(30), SIM800xIPGetState@str(30), txmessage(100), 
  7058 ;;		 -> STR_10(17), STR_9(279), STR_4(9), STR_3(5), 
  7059 ;; Return value:  Size  Location     Type
  7060 ;;                  2    0[COMRAM] unsigned int 
  7061 ;; Registers used:
  7062 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7063 ;; Tracked objects:
  7064 ;;		On entry : 0/0
  7065 ;;		On exit  : 0/0
  7066 ;;		Unchanged: 0/0
  7067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7068 ;;      Params:         2       0       0       0       0       0       0
  7069 ;;      Locals:         2       0       0       0       0       0       0
  7070 ;;      Temps:          0       0       0       0       0       0       0
  7071 ;;      Totals:         4       0       0       0       0       0       0
  7072 ;;Total ram usage:        4 bytes
  7073 ;; Hardware stack levels used: 1
  7074 ;; Hardware stack levels required when called: 2
  7075 ;; This function calls:
  7076 ;;		Nothing
  7077 ;; This function is called by:
  7078 ;;		_SIM800xIPSetConnectionType
  7079 ;;		_SIM800xIPSetAPN
  7080 ;;		_SIM800xIPGetState
  7081 ;;		_SIM800xHTTPSetURL
  7082 ;;		_SIM800xHTTPSetContent
  7083 ;;		_SIM800xHTTPInputData
  7084 ;; This function uses a non-reentrant model
  7085 ;;
  7086                           
  7087                           	psect	text30
  7088  001CF2                     __ptext30:
  7089                           	callstack 0
  7090  001CF2                     _strlen:
  7091                           	callstack 0
  7092  001CF2  FFFF               	dw	65535	; assembler added errata NOP
  7093                           
  7094                           ;incstack = 0
  7095  001CF4  C001  F003         	movff	strlen@s,strlen@cp
  7096  001CF8  C002  F004         	movff	strlen@s+1,strlen@cp+1
  7097  001CFC  D003               	goto	l3382
  7098  001CFE                     l3380:
  7099  001CFE  FFFF               	dw	65535	; assembler added errata NOP
  7100  001D00  4A03               	infsnz	strlen@cp^0,f,c
  7101  001D02  2A04               	incf	(strlen@cp+1)^0,f,c
  7102  001D04                     l3382:
  7103  001D04  FFFF               	dw	65535	; assembler added errata NOP
  7104  001D06  C003  FFF6         	movff	strlen@cp,tblptrl
  7105  001D0A  C004  FFF7         	movff	strlen@cp+1,tblptrh
  7106  001D0E  6AF8               	clrf	tblptru,c
  7107  001D10  0E05               	movlw	(high __ramtop+-1)
  7108  001D12  64F7               	cpfsgt	tblptrh,c
  7109  001D14  D004               	bra	u1957
  7110  001D16  0008               	tblrd		*
  7111  001D18  FFFF               	dw	65535	; errata NOP
  7112  001D1A  50F5               	movf	tablat,w,c
  7113  001D1C  D005               	bra	u1950
  7114  001D1E                     u1957:
  7115  001D1E  CFF6 FFE1          	movff	tblptrl,fsr1l
  7116  001D22  CFF7 FFE2          	movff	tblptrh,fsr1h
  7117  001D26  50E7               	movf	indf1,w,c
  7118  001D28                     u1950:
  7119  001D28  0900               	iorlw	0
  7120  001D2A  A4D8               	btfss	status,2,c
  7121  001D2C  D7E8               	goto	l3380
  7122  001D2E  5001               	movf	strlen@s^0,w,c
  7123  001D30  5C03               	subwf	strlen@cp^0,w,c
  7124  001D32  6E01               	movwf	?_strlen^0,c
  7125  001D34  5002               	movf	(strlen@s+1)^0,w,c
  7126  001D36  5804               	subwfb	(strlen@cp+1)^0,w,c
  7127  001D38  6E02               	movwf	(?_strlen+1)^0,c
  7128  001D3A  0012               	return		;funcret
  7129  001D3C  FFFF               	dw	65535	; errata NOP
  7130  001D3E                     __end_of_strlen:
  7131                           	callstack 0
  7132                           
  7133 ;; *************** function _SIM800xHTTPInit *****************
  7134 ;; Defined at:
  7135 ;;		line 1385 in file "Src/SIM800x.c"
  7136 ;; Parameters:    Size  Location     Type
  7137 ;;  errcode         2   64[COMRAM] PTR unsigned int 
  7138 ;;		 -> SystemInit@err(2), 
  7139 ;; Auto vars:     Size  Location     Type
  7140 ;;		None
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  1    wreg      enum E2115
  7143 ;; Registers used:
  7144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7145 ;; Tracked objects:
  7146 ;;		On entry : 0/0
  7147 ;;		On exit  : 0/0
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7150 ;;      Params:         2       0       0       0       0       0       0
  7151 ;;      Locals:         0       0       0       0       0       0       0
  7152 ;;      Temps:          0       0       0       0       0       0       0
  7153 ;;      Totals:         2       0       0       0       0       0       0
  7154 ;;Total ram usage:        2 bytes
  7155 ;; Hardware stack levels used: 1
  7156 ;; Hardware stack levels required when called: 6
  7157 ;; This function calls:
  7158 ;;		_ProcessResp4
  7159 ;;		_SIM800xSDMFlush
  7160 ;;		_SIM800xSDMPrint
  7161 ;; This function is called by:
  7162 ;;		_SystemInit
  7163 ;; This function uses a non-reentrant model
  7164 ;;
  7165                           
  7166                           	psect	text31
  7167  001F08                     __ptext31:
  7168                           	callstack 0
  7169  001F08                     _SIM800xHTTPInit:
  7170                           	callstack 0
  7171  001F08  FFFF               	dw	65535	; assembler added errata NOP
  7172                           
  7173                           ;SIM800x.c: 1388: SIM800xSDMFlush();
  7174                           
  7175                           ;incstack = 0
  7176  001F0A  ECA0  F00F         	call	_SIM800xSDMFlush	;wreg free
  7177                           
  7178                           ;SIM800x.c: 1389: SIM800xSDMPrint("AT+HTTPINIT\r");
  7179  001F0E  0E3C               	movlw	low STR_85
  7180  001F10  6E02               	movwf	SIM800xSDMPrint@str^0,c
  7181  001F12  0E7E               	movlw	high STR_85
  7182  001F14  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  7183  001F16  EC4C  F00D         	call	_SIM800xSDMPrint	;wreg free
  7184                           
  7185                           ;SIM800x.c: 1390: return ProcessResp4(errcode);
  7186  001F1A  C041  F021         	movff	SIM800xHTTPInit@errcode,ProcessResp4@ec
  7187  001F1E  C042  F022         	movff	SIM800xHTTPInit@errcode+1,ProcessResp4@ec+1
  7188  001F22  ECA3  F009         	call	_ProcessResp4	;wreg free
  7189  001F26  0012               	return		;funcret
  7190  001F28  FFFF               	dw	65535	; errata NOP
  7191  001F2A                     __end_of_SIM800xHTTPInit:
  7192                           	callstack 0
  7193                           
  7194 ;; *************** function _SIM800xSDMPrint *****************
  7195 ;; Defined at:
  7196 ;;		line 166 in file "Src/SIM800x_SDM.c"
  7197 ;; Parameters:    Size  Location     Type
  7198 ;;  str             2    1[COMRAM] PTR const unsigned char 
  7199 ;;		 -> STR_107(9), STR_106(8), STR_105(10), STR_104(16), 
  7200 ;;		 -> STR_103(13), STR_102(16), STR_101(14), SIM800xHTTPRead@str(30), 
  7201 ;;		 -> SIM800xHTTPAction@str(30), SIM800xHTTPInputData@str(30), STR_97(24), STR_96(23), 
  7202 ;;		 -> SIM800xHTTPSetTimeout@str(30), SIM800xHTTPSetBreakEnd@str(30), SIM800xHTTPSetBreak@str(30), SIM800xHTTPSetRedir@
      +str(25), 
  7203 ;;		 -> SIM800xHTTPSetPort@str(30), STR_90(21), STR_89(18), STR_88(19), 
  7204 ;;		 -> STR_87(19), STR_86(13), STR_85(13), STR_84(10), 
  7205 ;;		 -> STR_83(11), STR_82(6), STR_81(10), STR_80(11), 
  7206 ;;		 -> STR_79(11), STR_78(12), STR_77(12), STR_76(2), 
  7207 ;;		 -> STR_75(3), STR_74(3), STR_73(2), STR_72(13), 
  7208 ;;		 -> SIM800xGPRSGetAddress@str(40), SIM800xGPRSSetDataMode@str(20), STR_69(12), STR_68(12), 
  7209 ;;		 -> STR_67(11), SIM800xGPRSSetQoSRequest@str(40), SIM800xGPRSSetQoSMin@str(40), STR_64(7), 
  7210 ;;		 -> STR_63(12), STR_62(12), STR_61(12), STR_60(11), 
  7211 ;;		 -> SIM800xIPGetParameters@str(30), STR_58(12), STR_57(12), STR_56(12), 
  7212 ;;		 -> STR_55(9), STR_54(12), SIM800xIPSetRate@str(8), STR_52(13), 
  7213 ;;		 -> STR_51(12), STR_50(8), STR_49(12), STR_48(9), 
  7214 ;;		 -> STR_47(12), STR_46(8), STR_45(12), STR_44(12), 
  7215 ;;		 -> STR_43(12), STR_42(9), STR_41(5), STR_40(8), 
  7216 ;;		 -> STR_39(8), STR_38(8), STR_37(8), STR_36(8), 
  7217 ;;		 -> STR_35(4), STR_34(6), SIM800xSetBaudRate@str(15), STR_32(13), 
  7218 ;;		 -> STR_31(6), SIM800xInit@str(15), STR_29(6), STR_28(4), 
  7219 ;;		 -> STR_10(17), STR_9(279), STR_4(9), STR_3(5), 
  7220 ;; Auto vars:     Size  Location     Type
  7221 ;;		None
  7222 ;; Return value:  Size  Location     Type
  7223 ;;                  1    wreg      void 
  7224 ;; Registers used:
  7225 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7226 ;; Tracked objects:
  7227 ;;		On entry : 0/0
  7228 ;;		On exit  : 0/0
  7229 ;;		Unchanged: 0/0
  7230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7231 ;;      Params:         2       0       0       0       0       0       0
  7232 ;;      Locals:         0       0       0       0       0       0       0
  7233 ;;      Temps:          0       0       0       0       0       0       0
  7234 ;;      Totals:         2       0       0       0       0       0       0
  7235 ;;Total ram usage:        2 bytes
  7236 ;; Hardware stack levels used: 1
  7237 ;; Hardware stack levels required when called: 3
  7238 ;; This function calls:
  7239 ;;		_SIM800xSDMSendByte
  7240 ;; This function is called by:
  7241 ;;		_SIM800xInit
  7242 ;;		_SIM800xIPSetConnectionType
  7243 ;;		_SIM800xIPSetAPN
  7244 ;;		_SIM800xIPOpen
  7245 ;;		_SIM800xIPGetState
  7246 ;;		_SIM800xHTTPInit
  7247 ;;		_SIM800xHTTPSetURL
  7248 ;;		_SIM800xHTTPSetContent
  7249 ;;		_SIM800xHTTPInputData
  7250 ;;		_SIM800xHTTPAction
  7251 ;;		_SIM800xHTTPRead
  7252 ;; This function uses a non-reentrant model
  7253 ;;
  7254                           
  7255                           	psect	text32
  7256  001A98                     __ptext32:
  7257                           	callstack 0
  7258  001A98                     _SIM800xSDMPrint:
  7259                           	callstack 0
  7260  001A98  FFFF               	dw	65535	; assembler added errata NOP
  7261                           
  7262                           ;SIM800x_SDM.c: 168: while(*str!='\0')
  7263                           
  7264                           ;incstack = 0
  7265  001A9A  D016               	goto	l3558
  7266  001A9C                     l3554:
  7267  001A9C  FFFF               	dw	65535	; assembler added errata NOP
  7268                           
  7269                           ;SIM800x_SDM.c: 169: {;SIM800x_SDM.c: 170: SIM800xSDMSendByte(*(str++));
  7270  001A9E  C002  FFF6         	movff	SIM800xSDMPrint@str,tblptrl
  7271  001AA2  C003  FFF7         	movff	SIM800xSDMPrint@str+1,tblptrh
  7272  001AA6  6AF8               	clrf	tblptru,c
  7273  001AA8  0E05               	movlw	(high __ramtop+-1)
  7274  001AAA  64F7               	cpfsgt	tblptrh,c
  7275  001AAC  D004               	bra	u2217
  7276  001AAE  0008               	tblrd		*
  7277  001AB0  FFFF               	dw	65535	; errata NOP
  7278  001AB2  50F5               	movf	tablat,w,c
  7279  001AB4  D005               	bra	u2210
  7280  001AB6                     u2217:
  7281  001AB6  CFF6 FFE1          	movff	tblptrl,fsr1l
  7282  001ABA  CFF7 FFE2          	movff	tblptrh,fsr1h
  7283  001ABE  50E7               	movf	indf1,w,c
  7284  001AC0                     u2210:
  7285  001AC0  ECBF  F00F         	call	_SIM800xSDMSendByte
  7286  001AC4  4A02               	infsnz	SIM800xSDMPrint@str^0,f,c
  7287  001AC6  2A03               	incf	(SIM800xSDMPrint@str+1)^0,f,c
  7288  001AC8                     l3558:
  7289  001AC8  FFFF               	dw	65535	; assembler added errata NOP
  7290  001ACA  C002  FFF6         	movff	SIM800xSDMPrint@str,tblptrl
  7291  001ACE  C003  FFF7         	movff	SIM800xSDMPrint@str+1,tblptrh
  7292  001AD2  6AF8               	clrf	tblptru,c
  7293  001AD4  0E05               	movlw	(high __ramtop+-1)
  7294  001AD6  64F7               	cpfsgt	tblptrh,c
  7295  001AD8  D004               	bra	u2227
  7296  001ADA  0008               	tblrd		*
  7297  001ADC  FFFF               	dw	65535	; errata NOP
  7298  001ADE  50F5               	movf	tablat,w,c
  7299  001AE0  D005               	bra	u2220
  7300  001AE2                     u2227:
  7301  001AE2  CFF6 FFE1          	movff	tblptrl,fsr1l
  7302  001AE6  CFF7 FFE2          	movff	tblptrh,fsr1h
  7303  001AEA  50E7               	movf	indf1,w,c
  7304  001AEC                     u2220:
  7305  001AEC  0900               	iorlw	0
  7306  001AEE  B4D8               	btfsc	status,2,c
  7307  001AF0  0012               	return		;funcret
  7308  001AF2  FFFF               	dw	65535	; assembler added errata NOP
  7309  001AF4  D7D3               	goto	l3554
  7310  001AF6  FFFF               	dw	65535	; errata NOP
  7311  001AF8                     __end_of_SIM800xSDMPrint:
  7312                           	callstack 0
  7313                           
  7314 ;; *************** function _SIM800xSDMSendByte *****************
  7315 ;; Defined at:
  7316 ;;		line 126 in file "Src/SIM800x_SDM.c"
  7317 ;; Parameters:    Size  Location     Type
  7318 ;;  data            1    wreg     unsigned char 
  7319 ;; Auto vars:     Size  Location     Type
  7320 ;;  data            1    0[COMRAM] unsigned char 
  7321 ;; Return value:  Size  Location     Type
  7322 ;;                  1    wreg      void 
  7323 ;; Registers used:
  7324 ;;		wreg
  7325 ;; Tracked objects:
  7326 ;;		On entry : 0/0
  7327 ;;		On exit  : 0/0
  7328 ;;		Unchanged: 0/0
  7329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7330 ;;      Params:         0       0       0       0       0       0       0
  7331 ;;      Locals:         1       0       0       0       0       0       0
  7332 ;;      Temps:          0       0       0       0       0       0       0
  7333 ;;      Totals:         1       0       0       0       0       0       0
  7334 ;;Total ram usage:        1 bytes
  7335 ;; Hardware stack levels used: 1
  7336 ;; Hardware stack levels required when called: 2
  7337 ;; This function calls:
  7338 ;;		Nothing
  7339 ;; This function is called by:
  7340 ;;		_SIM800xIPSetConnectionType
  7341 ;;		_SIM800xIPSetAPN
  7342 ;;		_SIM800xIPOpen
  7343 ;;		_SIM800xIPGetState
  7344 ;;		_SIM800xHTTPSetURL
  7345 ;;		_SIM800xHTTPSetContent
  7346 ;;		_SIM800xSDMPrint
  7347 ;; This function uses a non-reentrant model
  7348 ;;
  7349                           
  7350                           	psect	text33
  7351  001F7E                     __ptext33:
  7352                           	callstack 0
  7353  001F7E                     _SIM800xSDMSendByte:
  7354                           	callstack 0
  7355  001F7E  FFFF               	dw	65535	; assembler added errata NOP
  7356                           
  7357                           ;incstack = 0
  7358                           ;SIM800xSDMSendByte@data stored from wreg
  7359  001F80  6E01               	movwf	SIM800xSDMSendByte@data^0,c
  7360  001F82  FFFF               	dw	65535	; assembler added errata NOP
  7361                           
  7362                           ;SIM800x_SDM.c: 136: while(TXSTAbits.TRMT == 0); TXREG = data;;
  7363  001F84  A2AC               	btfss	172,1,c	;volatile
  7364  001F86  D7FD               	goto	l3254
  7365  001F88  C001  FFAD         	movff	SIM800xSDMSendByte@data,4013	;volatile
  7366  001F8C  0012               	return		;funcret
  7367  001F8E  FFFF               	dw	65535	; errata NOP
  7368  001F90                     __end_of_SIM800xSDMSendByte:
  7369                           	callstack 0
  7370                           
  7371 ;; *************** function _ProcessResp4 *****************
  7372 ;; Defined at:
  7373 ;;		line 227 in file "Src/SIM800x.c"
  7374 ;; Parameters:    Size  Location     Type
  7375 ;;  ec              2   32[COMRAM] PTR unsigned int 
  7376 ;;		 -> SystemInit@err(2), 
  7377 ;; Auto vars:     Size  Location     Type
  7378 ;;  str            20   38[COMRAM] unsigned char [20]
  7379 ;;  time            4   58[COMRAM] unsigned long 
  7380 ;;  res             2   62[COMRAM] int 
  7381 ;; Return value:  Size  Location     Type
  7382 ;;                  1    wreg      enum E2114
  7383 ;; Registers used:
  7384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7385 ;; Tracked objects:
  7386 ;;		On entry : 0/0
  7387 ;;		On exit  : 0/0
  7388 ;;		Unchanged: 0/0
  7389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7390 ;;      Params:         2       0       0       0       0       0       0
  7391 ;;      Locals:        26       0       0       0       0       0       0
  7392 ;;      Temps:          4       0       0       0       0       0       0
  7393 ;;      Totals:        32       0       0       0       0       0       0
  7394 ;;Total ram usage:       32 bytes
  7395 ;; Hardware stack levels used: 1
  7396 ;; Hardware stack levels required when called: 5
  7397 ;; This function calls:
  7398 ;;		_SIM800xSDMReadF1Pkt
  7399 ;;		_SIM800xSDMRxAvailable
  7400 ;;		_StrToInt
  7401 ;;		_Tick_ms
  7402 ;; This function is called by:
  7403 ;;		_SIM800xHTTPInit
  7404 ;;		_SIM800xHTTPSetURL
  7405 ;;		_SIM800xHTTPSetContent
  7406 ;; This function uses a non-reentrant model
  7407 ;;
  7408                           
  7409                           	psect	text34
  7410  001346                     __ptext34:
  7411                           	callstack 0
  7412  001346                     _ProcessResp4:
  7413                           	callstack 0
  7414  001346  FFFF               	dw	65535	; assembler added errata NOP
  7415                           
  7416                           ;SIM800x.c: 229: uint32_t time = Tick_ms();
  7417                           
  7418                           ;incstack = 0
  7419  001348  EC95  F00F         	call	_Tick_ms	;wreg free
  7420  00134C  C001  F03B         	movff	?_Tick_ms,ProcessResp4@time
  7421  001350  C002  F03C         	movff	?_Tick_ms+1,ProcessResp4@time+1
  7422  001354  C003  F03D         	movff	?_Tick_ms+2,ProcessResp4@time+2
  7423  001358  C004  F03E         	movff	?_Tick_ms+3,ProcessResp4@time+3
  7424                           
  7425                           ;SIM800x.c: 230: while(SIM800xSDMRxAvailable() < 6)
  7426  00135C  D01C               	goto	l3490
  7427  00135E                     l3484:
  7428  00135E  FFFF               	dw	65535	; assembler added errata NOP
  7429                           
  7430                           ;SIM800x.c: 231: {;SIM800x.c: 232: if((Tick_ms() - time) > Tout)
  7431  001360  EC95  F00F         	call	_Tick_ms	;wreg free
  7432  001364  503B               	movf	ProcessResp4@time^0,w,c
  7433  001366  5C01               	subwf	?_Tick_ms^0,w,c
  7434  001368  6E23               	movwf	??_ProcessResp4^0,c
  7435  00136A  503C               	movf	(ProcessResp4@time+1)^0,w,c
  7436  00136C  5802               	subwfb	(?_Tick_ms+1)^0,w,c
  7437  00136E  6E24               	movwf	(??_ProcessResp4+1)^0,c
  7438  001370  503D               	movf	(ProcessResp4@time+2)^0,w,c
  7439  001372  5803               	subwfb	(?_Tick_ms+2)^0,w,c
  7440  001374  6E25               	movwf	(??_ProcessResp4+2)^0,c
  7441  001376  503E               	movf	(ProcessResp4@time+3)^0,w,c
  7442  001378  5804               	subwfb	(?_Tick_ms+3)^0,w,c
  7443  00137A  6E26               	movwf	(??_ProcessResp4+3)^0,c
  7444  00137C  5023               	movf	??_ProcessResp4^0,w,c
  7445  00137E  5C7A               	subwf	_Tout^0,w,c
  7446  001380  5024               	movf	(??_ProcessResp4+1)^0,w,c
  7447  001382  587B               	subwfb	(_Tout+1)^0,w,c
  7448  001384  5025               	movf	(??_ProcessResp4+2)^0,w,c
  7449  001386  587C               	subwfb	(_Tout+2)^0,w,c
  7450  001388  5026               	movf	(??_ProcessResp4+3)^0,w,c
  7451  00138A  587D               	subwfb	(_Tout+3)^0,w,c
  7452  00138C  B0D8               	btfsc	status,0,c
  7453  00138E  D003               	goto	l3490
  7454  001390                     u2110:
  7455  001390  FFFF               	dw	65535	; assembler added errata NOP
  7456                           
  7457                           ;SIM800x.c: 233: {;SIM800x.c: 234: return SIM800X_TIME_OUT;
  7458  001392  0E05               	movlw	5
  7459  001394  D057               	goto	l385
  7460  001396                     l3490:
  7461  001396  FFFF               	dw	65535	; assembler added errata NOP
  7462  001398  EC43  F00F         	call	_SIM800xSDMRxAvailable	;wreg free
  7463  00139C  5007               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  7464  00139E  E104               	bnz	u2120
  7465  0013A0  0E06               	movlw	6
  7466  0013A2  5C06               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  7467  0013A4  A0D8               	btfss	status,0,c
  7468  0013A6  D7DB               	goto	l3484
  7469  0013A8                     u2120:
  7470                           
  7471                           ;SIM800x.c: 235: };SIM800x.c: 236: };SIM800x.c: 237: char str[20] = {0, 0, 0, 0};
  7472  0013A8  EE20  F027         	lfsr	2,ProcessResp4@str
  7473  0013AC  0E13               	movlw	19
  7474  0013AE                     u2131:
  7475  0013AE  6ADE               	clrf	postinc2,c
  7476  0013B0  06E8               	decf	wreg,f,c
  7477  0013B2  E2FD               	bc	u2131
  7478                           
  7479                           ;SIM800x.c: 240: int res = SIM800xSDMReadF1Pkt(str);
  7480  0013B4  0E27               	movlw	low ProcessResp4@str
  7481  0013B6  6E0A               	movwf	SIM800xSDMReadF1Pkt@data^0,c
  7482  0013B8  0E00               	movlw	high ProcessResp4@str
  7483  0013BA  6E0B               	movwf	(SIM800xSDMReadF1Pkt@data+1)^0,c
  7484  0013BC  EC0C  F009         	call	_SIM800xSDMReadF1Pkt	;wreg free
  7485  0013C0  C00A  F03F         	movff	?_SIM800xSDMReadF1Pkt,ProcessResp4@res
  7486  0013C4  C00B  F040         	movff	?_SIM800xSDMReadF1Pkt+1,ProcessResp4@res+1
  7487                           
  7488                           ;SIM800x.c: 241: if(res < 0)
  7489  0013C8  BE40               	btfsc	(ProcessResp4@res+1)^0,7,c
  7490  0013CA  D7E2               	goto	u2110
  7491                           
  7492                           ;SIM800x.c: 245: else if(str[0] == 'O')
  7493  0013CC  0E4F               	movlw	79
  7494  0013CE  1827               	xorwf	ProcessResp4@str^0,w,c
  7495  0013D0  A4D8               	btfss	status,2,c
  7496  0013D2  D002               	goto	l3512
  7497                           
  7498                           ;SIM800x.c: 246: {;SIM800x.c: 247: return SIM800X_OK;
  7499  0013D4  0E00               	movlw	0
  7500  0013D6  D036               	goto	l385
  7501  0013D8                     l3512:
  7502  0013D8  FFFF               	dw	65535	; assembler added errata NOP
  7503                           
  7504                           ;SIM800x.c: 249: else if(str[0] == 'E')
  7505  0013DA  0E45               	movlw	69
  7506  0013DC  1827               	xorwf	ProcessResp4@str^0,w,c
  7507  0013DE  A4D8               	btfss	status,2,c
  7508  0013E0  D002               	goto	l3520
  7509                           
  7510                           ;SIM800x.c: 250: {;SIM800x.c: 251: return SIM800X_ERROR;
  7511  0013E2  0E01               	movlw	1
  7512  0013E4  D02F               	goto	l385
  7513  0013E6                     l3520:
  7514  0013E6  FFFF               	dw	65535	; assembler added errata NOP
  7515                           
  7516                           ;SIM800x.c: 253: else if(str[0] == '+')
  7517  0013E8  0E2B               	movlw	43
  7518  0013EA  1827               	xorwf	ProcessResp4@str^0,w,c
  7519  0013EC  A4D8               	btfss	status,2,c
  7520  0013EE  D01A               	goto	l392
  7521                           
  7522                           ;SIM800x.c: 254: {;SIM800x.c: 255: str[(uint8_t)res] = '\0';
  7523  0013F0  0E27               	movlw	low ProcessResp4@str
  7524  0013F2  243F               	addwf	ProcessResp4@res^0,w,c
  7525  0013F4  6ED9               	movwf	fsr2l,c
  7526  0013F6  6ADA               	clrf	fsr2h,c
  7527  0013F8  0E00               	movlw	high ProcessResp4@str
  7528  0013FA  22DA               	addwfc	fsr2h,f,c
  7529  0013FC  0E00               	movlw	0
  7530  0013FE  6EDF               	movwf	indf2,c
  7531                           
  7532                           ;SIM800x.c: 256: *ec = (uint16_t)StrToInt(str, 12, (uint16_t)(res - 1));
  7533  001400  0E27               	movlw	low ProcessResp4@str
  7534  001402  6E0D               	movwf	StrToInt@str^0,c
  7535  001404  0E00               	movlw	high ProcessResp4@str
  7536  001406  6E0E               	movwf	(StrToInt@str+1)^0,c
  7537  001408  0E0C               	movlw	12
  7538  00140A  6E0F               	movwf	StrToInt@start^0,c
  7539  00140C  043F               	decf	ProcessResp4@res^0,w,c
  7540  00140E  6E10               	movwf	StrToInt@stop^0,c
  7541  001410  ECA2  F007         	call	_StrToInt	;wreg free
  7542  001414  C021  FFD9         	movff	ProcessResp4@ec,fsr2l
  7543  001418  C022  FFDA         	movff	ProcessResp4@ec+1,fsr2h
  7544  00141C  C00D  FFDE         	movff	?_StrToInt,postinc2
  7545  001420  C00E  FFDD         	movff	?_StrToInt+1,postdec2
  7546  001424                     l392:
  7547  001424  FFFF               	dw	65535	; assembler added errata NOP
  7548                           
  7549                           ;SIM800x.c: 257: };SIM800x.c: 259: if(str[3] == 'E')
  7550  001426  0E45               	movlw	69
  7551  001428  182A               	xorwf	(ProcessResp4@str+3)^0,w,c
  7552  00142A  A4D8               	btfss	status,2,c
  7553  00142C  D002               	goto	l3532
  7554                           
  7555                           ;SIM800x.c: 260: return SIM800X_CME_ERROR;
  7556  00142E  0E02               	movlw	2
  7557  001430  D009               	goto	l385
  7558  001432                     l3532:
  7559  001432  FFFF               	dw	65535	; assembler added errata NOP
  7560                           
  7561                           ;SIM800x.c: 261: if(str[3] == 'S')
  7562  001434  0E53               	movlw	83
  7563  001436  182A               	xorwf	(ProcessResp4@str+3)^0,w,c
  7564  001438  A4D8               	btfss	status,2,c
  7565  00143A  D002               	goto	l3538
  7566                           
  7567                           ;SIM800x.c: 262: return SIM800X_CMS_ERROR;
  7568  00143C  0E03               	movlw	3
  7569  00143E  D002               	goto	l385
  7570  001440                     l3538:
  7571  001440  FFFF               	dw	65535	; assembler added errata NOP
  7572                           
  7573                           ;SIM800x.c: 264: return SIM800X_INVALID_RESPONSE;
  7574  001442  0E08               	movlw	8
  7575  001444                     l385:
  7576  001444  FFFF               	dw	65535	; assembler added errata NOP
  7577  001446  0012               	return		;funcret
  7578  001448  FFFF               	dw	65535	; errata NOP
  7579  00144A                     __end_of_ProcessResp4:
  7580                           	callstack 0
  7581                           
  7582 ;; *************** function _StrToInt *****************
  7583 ;; Defined at:
  7584 ;;		line 131 in file "Src/SIM800x.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;  str             2   12[COMRAM] PTR const unsigned char 
  7587 ;;		 -> SIM800x3GPPGetSubscriberNumber@str(40), SIM800x3GPPGetSignalQuality@str(20), SIM800x3GPPGetOperatorName@str(40),
      + SIM800xHTTPReadHeader@str(30), 
  7588 ;;		 -> SIM800xHTTPReadState@str(30), SIM800xHTTPRead@str(30), SIM800xHTTPAction@str(30), SIM800xHTTPInputData@str(30), 
  7589 ;;		 -> SIM800xGPRSGetNRegState@str(20), SIM800xGPRSSetDataMode@str(20), SIM800xGetIMSI@str(20), ProcessResp4@str(20), 
  7590 ;;  start           1   14[COMRAM] unsigned char 
  7591 ;;  stop            1   15[COMRAM] unsigned char 
  7592 ;; Auto vars:     Size  Location     Type
  7593 ;;  j               1   25[COMRAM] unsigned char 
  7594 ;;  i               1   31[COMRAM] unsigned char 
  7595 ;;  po              4   27[COMRAM] unsigned long 
  7596 ;;  val             4   21[COMRAM] unsigned long 
  7597 ;;  ctrl            1   26[COMRAM] unsigned char 
  7598 ;; Return value:  Size  Location     Type
  7599 ;;                  4   12[COMRAM] unsigned long 
  7600 ;; Registers used:
  7601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7602 ;; Tracked objects:
  7603 ;;		On entry : 0/0
  7604 ;;		On exit  : 0/0
  7605 ;;		Unchanged: 0/0
  7606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7607 ;;      Params:         4       0       0       0       0       0       0
  7608 ;;      Locals:        11       0       0       0       0       0       0
  7609 ;;      Temps:          5       0       0       0       0       0       0
  7610 ;;      Totals:        20       0       0       0       0       0       0
  7611 ;;Total ram usage:       20 bytes
  7612 ;; Hardware stack levels used: 1
  7613 ;; Hardware stack levels required when called: 3
  7614 ;; This function calls:
  7615 ;;		___lmul
  7616 ;; This function is called by:
  7617 ;;		_ProcessResp4
  7618 ;;		_SIM800xHTTPInputData
  7619 ;;		_SIM800xHTTPAction
  7620 ;;		_SIM800xHTTPRead
  7621 ;; This function uses a non-reentrant model
  7622 ;;
  7623                           
  7624                           	psect	text35
  7625  000F44                     __ptext35:
  7626                           	callstack 0
  7627  000F44                     _StrToInt:
  7628                           	callstack 0
  7629  000F44  FFFF               	dw	65535	; assembler added errata NOP
  7630                           
  7631                           ;SIM800x.c: 134: uint32_t val = 0, po = 1;
  7632                           
  7633                           ;incstack = 0
  7634  000F46  0E00               	movlw	0
  7635  000F48  6E16               	movwf	StrToInt@val^0,c
  7636  000F4A  0E00               	movlw	0
  7637  000F4C  6E17               	movwf	(StrToInt@val+1)^0,c
  7638  000F4E  0E00               	movlw	0
  7639  000F50  6E18               	movwf	(StrToInt@val+2)^0,c
  7640  000F52  0E00               	movlw	0
  7641  000F54  6E19               	movwf	(StrToInt@val+3)^0,c
  7642  000F56  0E01               	movlw	1
  7643  000F58  6E1C               	movwf	StrToInt@po^0,c
  7644  000F5A  0E00               	movlw	0
  7645  000F5C  6E1D               	movwf	(StrToInt@po+1)^0,c
  7646  000F5E  0E00               	movlw	0
  7647  000F60  6E1E               	movwf	(StrToInt@po+2)^0,c
  7648  000F62  0E00               	movlw	0
  7649  000F64  6E1F               	movwf	(StrToInt@po+3)^0,c
  7650                           
  7651                           ;SIM800x.c: 135: uint8_t ctrl = 0;
  7652  000F66  0E00               	movlw	0
  7653  000F68  6E1B               	movwf	StrToInt@ctrl^0,c
  7654                           
  7655                           ;SIM800x.c: 137: for(uint8_t i = start;i < stop + 1; i++)
  7656  000F6A  C00F  F020         	movff	StrToInt@start,StrToInt@i
  7657  000F6E  D095               	goto	l3194
  7658  000F70                     l3164:
  7659  000F70  FFFF               	dw	65535	; assembler added errata NOP
  7660                           
  7661                           ;SIM800x.c: 138: {;SIM800x.c: 140: if((str[i] >= '0' && str[i] <= '9'))
  7662  000F72  5020               	movf	StrToInt@i^0,w,c
  7663  000F74  240D               	addwf	StrToInt@str^0,w,c
  7664  000F76  6ED9               	movwf	fsr2l,c
  7665  000F78  0E00               	movlw	0
  7666  000F7A  200E               	addwfc	(StrToInt@str+1)^0,w,c
  7667  000F7C  6EDA               	movwf	fsr2h,c
  7668  000F7E  0E2F               	movlw	47
  7669  000F80  64DF               	cpfsgt	indf2,c
  7670  000F82  D072               	goto	l3182
  7671  000F84  5020               	movf	StrToInt@i^0,w,c
  7672  000F86  240D               	addwf	StrToInt@str^0,w,c
  7673  000F88  6ED9               	movwf	fsr2l,c
  7674  000F8A  0E00               	movlw	0
  7675  000F8C  200E               	addwfc	(StrToInt@str+1)^0,w,c
  7676  000F8E  6EDA               	movwf	fsr2h,c
  7677  000F90  0E3A               	movlw	58
  7678  000F92  60DF               	cpfslt	indf2,c
  7679  000F94  D069               	goto	l3182
  7680                           
  7681                           ;SIM800x.c: 141: {;SIM800x.c: 143: ctrl = 1;
  7682  000F96  0E01               	movlw	1
  7683  000F98  6E1B               	movwf	StrToInt@ctrl^0,c
  7684                           
  7685                           ;SIM800x.c: 145: for(uint8_t j = 0;j < stop - i;j++)
  7686  000F9A  0E00               	movlw	0
  7687  000F9C  6E1A               	movwf	StrToInt@j^0,c
  7688  000F9E  D01C               	goto	l3174
  7689  000FA0                     l3170:
  7690  000FA0  FFFF               	dw	65535	; assembler added errata NOP
  7691                           
  7692                           ;SIM800x.c: 146: po = po * 10;
  7693  000FA2  C01C  F001         	movff	StrToInt@po,___lmul@multiplier
  7694  000FA6  C01D  F002         	movff	StrToInt@po+1,___lmul@multiplier+1
  7695  000FAA  C01E  F003         	movff	StrToInt@po+2,___lmul@multiplier+2
  7696  000FAE  C01F  F004         	movff	StrToInt@po+3,___lmul@multiplier+3
  7697  000FB2  0E0A               	movlw	10
  7698  000FB4  6E05               	movwf	___lmul@multiplicand^0,c
  7699  000FB6  0E00               	movlw	0
  7700  000FB8  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  7701  000FBA  0E00               	movlw	0
  7702  000FBC  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  7703  000FBE  0E00               	movlw	0
  7704  000FC0  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  7705  000FC2  EC7C  F00D         	call	___lmul	;wreg free
  7706  000FC6  C001  F01C         	movff	?___lmul,StrToInt@po
  7707  000FCA  C002  F01D         	movff	?___lmul+1,StrToInt@po+1
  7708  000FCE  C003  F01E         	movff	?___lmul+2,StrToInt@po+2
  7709  000FD2  C004  F01F         	movff	?___lmul+3,StrToInt@po+3
  7710  000FD6  2A1A               	incf	StrToInt@j^0,f,c
  7711  000FD8                     l3174:
  7712  000FD8  FFFF               	dw	65535	; assembler added errata NOP
  7713  000FDA  5020               	movf	StrToInt@i^0,w,c
  7714  000FDC  C010  F011         	movff	StrToInt@stop,??_StrToInt
  7715  000FE0  6A12               	clrf	(??_StrToInt+1)^0,c
  7716  000FE2  5E11               	subwf	??_StrToInt^0,f,c
  7717  000FE4  0E00               	movlw	0
  7718  000FE6  5A12               	subwfb	(??_StrToInt+1)^0,f,c
  7719  000FE8  501A               	movf	StrToInt@j^0,w,c
  7720  000FEA  6E13               	movwf	(??_StrToInt+2)^0,c
  7721  000FEC  6A14               	clrf	(??_StrToInt+3)^0,c
  7722  000FEE  5011               	movf	??_StrToInt^0,w,c
  7723  000FF0  5C13               	subwf	(??_StrToInt+2)^0,w,c
  7724  000FF2  5014               	movf	(??_StrToInt+3)^0,w,c
  7725  000FF4  0A80               	xorlw	128
  7726  000FF6  6E15               	movwf	(??_StrToInt+4)^0,c
  7727  000FF8  5012               	movf	(??_StrToInt+1)^0,w,c
  7728  000FFA  0A80               	xorlw	128
  7729  000FFC  5815               	subwfb	(??_StrToInt+4)^0,w,c
  7730  000FFE  A0D8               	btfss	status,0,c
  7731  001000  D7CF               	goto	l3170
  7732                           
  7733                           ;SIM800x.c: 148: if(str[i] >= '0' && str[i] <= '9')
  7734  001002  5020               	movf	StrToInt@i^0,w,c
  7735  001004  240D               	addwf	StrToInt@str^0,w,c
  7736  001006  6ED9               	movwf	fsr2l,c
  7737  001008  0E00               	movlw	0
  7738  00100A  200E               	addwfc	(StrToInt@str+1)^0,w,c
  7739  00100C  6EDA               	movwf	fsr2h,c
  7740  00100E  0E2F               	movlw	47
  7741  001010  64DF               	cpfsgt	indf2,c
  7742  001012  D02A               	goto	l3182
  7743  001014  5020               	movf	StrToInt@i^0,w,c
  7744  001016  240D               	addwf	StrToInt@str^0,w,c
  7745  001018  6ED9               	movwf	fsr2l,c
  7746  00101A  0E00               	movlw	0
  7747  00101C  200E               	addwfc	(StrToInt@str+1)^0,w,c
  7748  00101E  6EDA               	movwf	fsr2h,c
  7749  001020  0E3A               	movlw	58
  7750  001022  60DF               	cpfslt	indf2,c
  7751  001024  D021               	goto	l3182
  7752                           
  7753                           ;SIM800x.c: 149: val += (uint32_t)((uint8_t)(str[i] - 48) * po);
  7754  001026  5020               	movf	StrToInt@i^0,w,c
  7755  001028  240D               	addwf	StrToInt@str^0,w,c
  7756  00102A  6ED9               	movwf	fsr2l,c
  7757  00102C  0E00               	movlw	0
  7758  00102E  200E               	addwfc	(StrToInt@str+1)^0,w,c
  7759  001030  6EDA               	movwf	fsr2h,c
  7760  001032  50DF               	movf	indf2,w,c
  7761  001034  6E11               	movwf	??_StrToInt^0,c
  7762  001036  0ED0               	movlw	208
  7763  001038  2611               	addwf	??_StrToInt^0,f,c
  7764  00103A  5011               	movf	??_StrToInt^0,w,c
  7765  00103C  6E01               	movwf	___lmul@multiplier^0,c
  7766  00103E  6A02               	clrf	(___lmul@multiplier+1)^0,c
  7767  001040  6A03               	clrf	(___lmul@multiplier+2)^0,c
  7768  001042  6A04               	clrf	(___lmul@multiplier+3)^0,c
  7769  001044  C01C  F005         	movff	StrToInt@po,___lmul@multiplicand
  7770  001048  C01D  F006         	movff	StrToInt@po+1,___lmul@multiplicand+1
  7771  00104C  C01E  F007         	movff	StrToInt@po+2,___lmul@multiplicand+2
  7772  001050  C01F  F008         	movff	StrToInt@po+3,___lmul@multiplicand+3
  7773  001054  EC7C  F00D         	call	___lmul	;wreg free
  7774  001058  5001               	movf	?___lmul^0,w,c
  7775  00105A  2616               	addwf	StrToInt@val^0,f,c
  7776  00105C  5002               	movf	(?___lmul+1)^0,w,c
  7777  00105E  2217               	addwfc	(StrToInt@val+1)^0,f,c
  7778  001060  5003               	movf	(?___lmul+2)^0,w,c
  7779  001062  2218               	addwfc	(StrToInt@val+2)^0,f,c
  7780  001064  5004               	movf	(?___lmul+3)^0,w,c
  7781  001066  2219               	addwfc	(StrToInt@val+3)^0,f,c
  7782  001068                     l3182:
  7783  001068  FFFF               	dw	65535	; assembler added errata NOP
  7784                           
  7785                           ;SIM800x.c: 151: };SIM800x.c: 153: po = 1;
  7786  00106A  0E01               	movlw	1
  7787  00106C  6E1C               	movwf	StrToInt@po^0,c
  7788  00106E  0E00               	movlw	0
  7789  001070  6E1D               	movwf	(StrToInt@po+1)^0,c
  7790  001072  0E00               	movlw	0
  7791  001074  6E1E               	movwf	(StrToInt@po+2)^0,c
  7792  001076  0E00               	movlw	0
  7793  001078  6E1F               	movwf	(StrToInt@po+3)^0,c
  7794                           
  7795                           ;SIM800x.c: 155: if(!ctrl)
  7796  00107A  501B               	movf	StrToInt@ctrl^0,w,c
  7797  00107C  A4D8               	btfss	status,2,c
  7798  00107E  D009               	goto	l3190
  7799                           
  7800                           ;SIM800x.c: 156: return 0;
  7801  001080  0E00               	movlw	0
  7802  001082  6E0D               	movwf	?_StrToInt^0,c
  7803  001084  0E00               	movlw	0
  7804  001086  6E0E               	movwf	(?_StrToInt+1)^0,c
  7805  001088  0E00               	movlw	0
  7806  00108A  6E0F               	movwf	(?_StrToInt+2)^0,c
  7807  00108C  0E00               	movlw	0
  7808  00108E  6E10               	movwf	(?_StrToInt+3)^0,c
  7809  001090  D021               	goto	l354
  7810  001092                     l3190:
  7811  001092  FFFF               	dw	65535	; assembler added errata NOP
  7812                           
  7813                           ;SIM800x.c: 158: ctrl = 0;
  7814  001094  0E00               	movlw	0
  7815  001096  6E1B               	movwf	StrToInt@ctrl^0,c
  7816  001098  2A20               	incf	StrToInt@i^0,f,c
  7817  00109A                     l3194:
  7818  00109A  FFFF               	dw	65535	; assembler added errata NOP
  7819  00109C  5010               	movf	StrToInt@stop^0,w,c
  7820  00109E  6E11               	movwf	??_StrToInt^0,c
  7821  0010A0  6A12               	clrf	(??_StrToInt+1)^0,c
  7822  0010A2  0E01               	movlw	1
  7823  0010A4  2611               	addwf	??_StrToInt^0,f,c
  7824  0010A6  0E00               	movlw	0
  7825  0010A8  2212               	addwfc	(??_StrToInt+1)^0,f,c
  7826  0010AA  5020               	movf	StrToInt@i^0,w,c
  7827  0010AC  6E13               	movwf	(??_StrToInt+2)^0,c
  7828  0010AE  6A14               	clrf	(??_StrToInt+3)^0,c
  7829  0010B0  5011               	movf	??_StrToInt^0,w,c
  7830  0010B2  5C13               	subwf	(??_StrToInt+2)^0,w,c
  7831  0010B4  5014               	movf	(??_StrToInt+3)^0,w,c
  7832  0010B6  0A80               	xorlw	128
  7833  0010B8  6E15               	movwf	(??_StrToInt+4)^0,c
  7834  0010BA  5012               	movf	(??_StrToInt+1)^0,w,c
  7835  0010BC  0A80               	xorlw	128
  7836  0010BE  5815               	subwfb	(??_StrToInt+4)^0,w,c
  7837  0010C0  A0D8               	btfss	status,0,c
  7838  0010C2  D756               	goto	l3164
  7839                           
  7840                           ;SIM800x.c: 160: };SIM800x.c: 161: return val;
  7841  0010C4  C016  F00D         	movff	StrToInt@val,?_StrToInt
  7842  0010C8  C017  F00E         	movff	StrToInt@val+1,?_StrToInt+1
  7843  0010CC  C018  F00F         	movff	StrToInt@val+2,?_StrToInt+2
  7844  0010D0  C019  F010         	movff	StrToInt@val+3,?_StrToInt+3
  7845  0010D4                     l354:
  7846  0010D4  FFFF               	dw	65535	; assembler added errata NOP
  7847  0010D6  0012               	return		;funcret
  7848  0010D8  FFFF               	dw	65535	; errata NOP
  7849  0010DA                     __end_of_StrToInt:
  7850                           	callstack 0
  7851                           
  7852 ;; *************** function ___lmul *****************
  7853 ;; Defined at:
  7854 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul32.c"
  7855 ;; Parameters:    Size  Location     Type
  7856 ;;  multiplier      4    0[COMRAM] unsigned long 
  7857 ;;  multiplicand    4    4[COMRAM] unsigned long 
  7858 ;; Auto vars:     Size  Location     Type
  7859 ;;  product         4    8[COMRAM] unsigned long 
  7860 ;; Return value:  Size  Location     Type
  7861 ;;                  4    0[COMRAM] unsigned long 
  7862 ;; Registers used:
  7863 ;;		wreg, status,2, status,0
  7864 ;; Tracked objects:
  7865 ;;		On entry : 0/0
  7866 ;;		On exit  : 0/0
  7867 ;;		Unchanged: 0/0
  7868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7869 ;;      Params:         8       0       0       0       0       0       0
  7870 ;;      Locals:         4       0       0       0       0       0       0
  7871 ;;      Temps:          0       0       0       0       0       0       0
  7872 ;;      Totals:        12       0       0       0       0       0       0
  7873 ;;Total ram usage:       12 bytes
  7874 ;; Hardware stack levels used: 1
  7875 ;; Hardware stack levels required when called: 2
  7876 ;; This function calls:
  7877 ;;		Nothing
  7878 ;; This function is called by:
  7879 ;;		_StrToInt
  7880 ;; This function uses a non-reentrant model
  7881 ;;
  7882                           
  7883                           	psect	text36
  7884  001AF8                     __ptext36:
  7885                           	callstack 0
  7886  001AF8                     ___lmul:
  7887                           	callstack 0
  7888  001AF8  FFFF               	dw	65535	; assembler added errata NOP
  7889                           
  7890                           ;incstack = 0
  7891  001AFA  0E00               	movlw	0
  7892  001AFC  6E09               	movwf	___lmul@product^0,c
  7893  001AFE  0E00               	movlw	0
  7894  001B00  6E0A               	movwf	(___lmul@product+1)^0,c
  7895  001B02  0E00               	movlw	0
  7896  001B04  6E0B               	movwf	(___lmul@product+2)^0,c
  7897  001B06  0E00               	movlw	0
  7898  001B08  6E0C               	movwf	(___lmul@product+3)^0,c
  7899  001B0A                     l3138:
  7900  001B0A  FFFF               	dw	65535	; assembler added errata NOP
  7901  001B0C  A001               	btfss	___lmul@multiplier^0,0,c
  7902  001B0E  D008               	goto	l3142
  7903  001B10  5005               	movf	___lmul@multiplicand^0,w,c
  7904  001B12  2609               	addwf	___lmul@product^0,f,c
  7905  001B14  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  7906  001B16  220A               	addwfc	(___lmul@product+1)^0,f,c
  7907  001B18  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  7908  001B1A  220B               	addwfc	(___lmul@product+2)^0,f,c
  7909  001B1C  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  7910  001B1E  220C               	addwfc	(___lmul@product+3)^0,f,c
  7911  001B20                     l3142:
  7912  001B20  FFFF               	dw	65535	; assembler added errata NOP
  7913  001B22  90D8               	bcf	status,0,c
  7914  001B24  3605               	rlcf	___lmul@multiplicand^0,f,c
  7915  001B26  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  7916  001B28  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  7917  001B2A  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  7918  001B2C  90D8               	bcf	status,0,c
  7919  001B2E  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  7920  001B30  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  7921  001B32  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  7922  001B34  3201               	rrcf	___lmul@multiplier^0,f,c
  7923  001B36  5001               	movf	___lmul@multiplier^0,w,c
  7924  001B38  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  7925  001B3A  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  7926  001B3C  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  7927  001B3E  A4D8               	btfss	status,2,c
  7928  001B40  D7E4               	goto	l3138
  7929  001B42  C009  F001         	movff	___lmul@product,?___lmul
  7930  001B46  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  7931  001B4A  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  7932  001B4E  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  7933  001B52  0012               	return		;funcret
  7934  001B54  FFFF               	dw	65535	; errata NOP
  7935  001B56                     __end_of___lmul:
  7936                           	callstack 0
  7937                           
  7938 ;; *************** function _SIM800xSDMReadF1Pkt *****************
  7939 ;; Defined at:
  7940 ;;		line 236 in file "Src/SIM800x_SDM.c"
  7941 ;; Parameters:    Size  Location     Type
  7942 ;;  data            2    9[COMRAM] PTR unsigned char 
  7943 ;;		 -> SIM800x3GPPGetSubscriberNumber@str(40), SIM800x3GPPGetSignalQuality@str(20), SIM800x3GPPGetOperatorName@str(40),
      + SIM800xHTTPReadHeader@str(30), 
  7944 ;;		 -> SIM800xHTTPReadState@str(30), SIM800xHTTPRead@str(30), SIM800xHTTPAction@str(30), SIM800xHTTPInputData@str(30), 
  7945 ;;		 -> SIM800xGPRSGetNRegState@str(20), SIM800xGPRSGetAddress@str(40), SIM800xGPRSSetDataMode@str(20), SIM800xIPGetStat
      +e@str(30), 
  7946 ;;		 -> SIM800xGetIMSI@str(20), SIM800xGetSoftwareRevisionID@str(30), ProcessResp4@str(20), 
  7947 ;; Auto vars:     Size  Location     Type
  7948 ;;  time            4   18[COMRAM] unsigned long 
  7949 ;;  val             2   15[COMRAM] unsigned int 
  7950 ;;  tmp             1   22[COMRAM] unsigned char 
  7951 ;;  i               1   17[COMRAM] unsigned char 
  7952 ;; Return value:  Size  Location     Type
  7953 ;;                  2    9[COMRAM] int 
  7954 ;; Registers used:
  7955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7956 ;; Tracked objects:
  7957 ;;		On entry : 0/0
  7958 ;;		On exit  : 0/0
  7959 ;;		Unchanged: 0/0
  7960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7961 ;;      Params:         2       0       0       0       0       0       0
  7962 ;;      Locals:         8       0       0       0       0       0       0
  7963 ;;      Temps:          4       0       0       0       0       0       0
  7964 ;;      Totals:        14       0       0       0       0       0       0
  7965 ;;Total ram usage:       14 bytes
  7966 ;; Hardware stack levels used: 1
  7967 ;; Hardware stack levels required when called: 4
  7968 ;; This function calls:
  7969 ;;		_SIM800xSDMFlush
  7970 ;;		_SIM800xSDMReadByte
  7971 ;;		_SIM800xSDMRxAvailable
  7972 ;;		_Tick_ms
  7973 ;; This function is called by:
  7974 ;;		_ProcessResp2
  7975 ;;		_ProcessResp4
  7976 ;;		_SIM800xHTTPInputData
  7977 ;;		_SIM800xHTTPAction
  7978 ;;		_SIM800xHTTPRead
  7979 ;; This function uses a non-reentrant model
  7980 ;;
  7981                           
  7982                           	psect	text37
  7983  001218                     __ptext37:
  7984                           	callstack 0
  7985  001218                     _SIM800xSDMReadF1Pkt:
  7986                           	callstack 0
  7987  001218  FFFF               	dw	65535	; assembler added errata NOP
  7988                           
  7989                           ;SIM800x_SDM.c: 239: uint8_t i = 0, tmp = 0;
  7990                           
  7991                           ;incstack = 0
  7992  00121A  0E00               	movlw	0
  7993  00121C  6E12               	movwf	SIM800xSDMReadF1Pkt@i^0,c
  7994                           
  7995                           ;SIM800x_SDM.c: 240: uint16_t val = SIM800xSDMRxAvailable();
  7996  00121E  EC43  F00F         	call	_SIM800xSDMRxAvailable	;wreg free
  7997  001222  C006  F010         	movff	?_SIM800xSDMRxAvailable,SIM800xSDMReadF1Pkt@val
  7998  001226  C007  F011         	movff	?_SIM800xSDMRxAvailable+1,SIM800xSDMReadF1Pkt@val+1
  7999                           
  8000                           ;SIM800x_SDM.c: 242: if(val > 5)
  8001  00122A  5011               	movf	(SIM800xSDMReadF1Pkt@val+1)^0,w,c
  8002  00122C  E104               	bnz	u1700
  8003  00122E  0E06               	movlw	6
  8004  001230  5C10               	subwf	SIM800xSDMReadF1Pkt@val^0,w,c
  8005  001232  A0D8               	btfss	status,0,c
  8006  001234  D081               	goto	u1770
  8007  001236                     u1700:
  8008                           
  8009                           ;SIM800x_SDM.c: 243: {;SIM800x_SDM.c: 245: tmp = SIM800xSDMReadByte();
  8010  001236  EC52  F00E         	call	_SIM800xSDMReadByte	;wreg free
  8011  00123A  6E17               	movwf	SIM800xSDMReadF1Pkt@tmp^0,c
  8012                           
  8013                           ;SIM800x_SDM.c: 251: if(tmp == 0x0D)
  8014  00123C  0E0D               	movlw	13
  8015  00123E  1817               	xorwf	SIM800xSDMReadF1Pkt@tmp^0,w,c
  8016  001240  A4D8               	btfss	status,2,c
  8017  001242  D07A               	goto	u1770
  8018                           
  8019                           ;SIM800x_SDM.c: 252: {;SIM800x_SDM.c: 254: tmp = SIM800xSDMReadByte();
  8020  001244  EC52  F00E         	call	_SIM800xSDMReadByte	;wreg free
  8021  001248  6E17               	movwf	SIM800xSDMReadF1Pkt@tmp^0,c
  8022                           
  8023                           ;SIM800x_SDM.c: 256: if(tmp == 0x0A)
  8024  00124A  0E0A               	movlw	10
  8025  00124C  1817               	xorwf	SIM800xSDMReadF1Pkt@tmp^0,w,c
  8026  00124E  A4D8               	btfss	status,2,c
  8027  001250  D073               	goto	u1770
  8028                           
  8029                           ;SIM800x_SDM.c: 257: {;SIM800x_SDM.c: 259: uint32_t time = Tick_ms();
  8030  001252  EC95  F00F         	call	_Tick_ms	;wreg free
  8031  001256  C001  F013         	movff	?_Tick_ms,SIM800xSDMReadF1Pkt@time
  8032  00125A  C002  F014         	movff	?_Tick_ms+1,SIM800xSDMReadF1Pkt@time+1
  8033  00125E  C003  F015         	movff	?_Tick_ms+2,SIM800xSDMReadF1Pkt@time+2
  8034  001262  C004  F016         	movff	?_Tick_ms+3,SIM800xSDMReadF1Pkt@time+3
  8035                           
  8036                           ;SIM800x_SDM.c: 261: while((tmp = SIM800xSDMReadByte()) != 0x0D)
  8037  001266  D035               	goto	l3240
  8038  001268                     l3222:
  8039  001268  FFFF               	dw	65535	; assembler added errata NOP
  8040                           
  8041                           ;SIM800x_SDM.c: 262: {;SIM800x_SDM.c: 264: if(tmp != 0xFF)
  8042  00126A  2817               	incf	SIM800xSDMReadF1Pkt@tmp^0,w,c
  8043  00126C  B4D8               	btfsc	status,2,c
  8044  00126E  D013               	goto	l3232
  8045                           
  8046                           ;SIM800x_SDM.c: 265: {;SIM800x_SDM.c: 272: *(data++) = tmp;
  8047  001270  C00A  FFD9         	movff	SIM800xSDMReadF1Pkt@data,fsr2l
  8048  001274  C00B  FFDA         	movff	SIM800xSDMReadF1Pkt@data+1,fsr2h
  8049  001278  C017  FFDF         	movff	SIM800xSDMReadF1Pkt@tmp,indf2
  8050  00127C  4A0A               	infsnz	SIM800xSDMReadF1Pkt@data^0,f,c
  8051  00127E  2A0B               	incf	(SIM800xSDMReadF1Pkt@data+1)^0,f,c
  8052                           
  8053                           ;SIM800x_SDM.c: 273: ++i;
  8054  001280  2A12               	incf	SIM800xSDMReadF1Pkt@i^0,f,c
  8055                           
  8056                           ;SIM800x_SDM.c: 274: time = Tick_ms();
  8057  001282  EC95  F00F         	call	_Tick_ms	;wreg free
  8058  001286  C001  F013         	movff	?_Tick_ms,SIM800xSDMReadF1Pkt@time
  8059  00128A  C002  F014         	movff	?_Tick_ms+1,SIM800xSDMReadF1Pkt@time+1
  8060  00128E  C003  F015         	movff	?_Tick_ms+2,SIM800xSDMReadF1Pkt@time+2
  8061  001292  C004  F016         	movff	?_Tick_ms+3,SIM800xSDMReadF1Pkt@time+3
  8062  001296                     l3232:
  8063  001296  FFFF               	dw	65535	; assembler added errata NOP
  8064                           
  8065                           ;SIM800x_SDM.c: 275: };SIM800x_SDM.c: 277: if((Tick_ms() - time) > Tout)
  8066  001298  EC95  F00F         	call	_Tick_ms	;wreg free
  8067  00129C  5013               	movf	SIM800xSDMReadF1Pkt@time^0,w,c
  8068  00129E  5C01               	subwf	?_Tick_ms^0,w,c
  8069  0012A0  6E0C               	movwf	??_SIM800xSDMReadF1Pkt^0,c
  8070  0012A2  5014               	movf	(SIM800xSDMReadF1Pkt@time+1)^0,w,c
  8071  0012A4  5802               	subwfb	(?_Tick_ms+1)^0,w,c
  8072  0012A6  6E0D               	movwf	(??_SIM800xSDMReadF1Pkt+1)^0,c
  8073  0012A8  5015               	movf	(SIM800xSDMReadF1Pkt@time+2)^0,w,c
  8074  0012AA  5803               	subwfb	(?_Tick_ms+2)^0,w,c
  8075  0012AC  6E0E               	movwf	(??_SIM800xSDMReadF1Pkt+2)^0,c
  8076  0012AE  5016               	movf	(SIM800xSDMReadF1Pkt@time+3)^0,w,c
  8077  0012B0  5804               	subwfb	(?_Tick_ms+3)^0,w,c
  8078  0012B2  6E0F               	movwf	(??_SIM800xSDMReadF1Pkt+3)^0,c
  8079  0012B4  500F               	movf	(??_SIM800xSDMReadF1Pkt+3)^0,w,c
  8080  0012B6  100E               	iorwf	(??_SIM800xSDMReadF1Pkt+2)^0,w,c
  8081  0012B8  E106               	bnz	u1740
  8082  0012BA  0ED1               	movlw	209
  8083  0012BC  5C0C               	subwf	??_SIM800xSDMReadF1Pkt^0,w,c
  8084  0012BE  0E07               	movlw	7
  8085  0012C0  580D               	subwfb	(??_SIM800xSDMReadF1Pkt+1)^0,w,c
  8086  0012C2  A0D8               	btfss	status,0,c
  8087  0012C4  D006               	goto	l3240
  8088  0012C6                     u1740:
  8089  0012C6  FFFF               	dw	65535	; assembler added errata NOP
  8090  0012C8                     l3234:
  8091                           
  8092                           ;SIM800x_SDM.c: 278: {;SIM800x_SDM.c: 279: SIM800xSDMFlush();
  8093  0012C8  ECA0  F00F         	call	_SIM800xSDMFlush	;wreg free
  8094                           
  8095                           ;SIM800x_SDM.c: 280: return -1;
  8096  0012CC  680A               	setf	?_SIM800xSDMReadF1Pkt^0,c
  8097  0012CE  680B               	setf	(?_SIM800xSDMReadF1Pkt+1)^0,c
  8098  0012D0  D037               	goto	l1066
  8099  0012D2                     l3240:
  8100  0012D2  FFFF               	dw	65535	; assembler added errata NOP
  8101  0012D4  EC52  F00E         	call	_SIM800xSDMReadByte	;wreg free
  8102  0012D8  6E17               	movwf	SIM800xSDMReadF1Pkt@tmp^0,c
  8103  0012DA  0E0D               	movlw	13
  8104  0012DC  1817               	xorwf	SIM800xSDMReadF1Pkt@tmp^0,w,c
  8105  0012DE  A4D8               	btfss	status,2,c
  8106  0012E0  D7C3               	goto	l3222
  8107                           
  8108                           ;SIM800x_SDM.c: 281: };SIM800x_SDM.c: 283: };SIM800x_SDM.c: 285: time = Tick_ms();
  8109  0012E2  EC95  F00F         	call	_Tick_ms	;wreg free
  8110  0012E6  C001  F013         	movff	?_Tick_ms,SIM800xSDMReadF1Pkt@time
  8111  0012EA  C002  F014         	movff	?_Tick_ms+1,SIM800xSDMReadF1Pkt@time+1
  8112  0012EE  C003  F015         	movff	?_Tick_ms+2,SIM800xSDMReadF1Pkt@time+2
  8113  0012F2  C004  F016         	movff	?_Tick_ms+3,SIM800xSDMReadF1Pkt@time+3
  8114                           
  8115                           ;SIM800x_SDM.c: 287: while((tmp = SIM800xSDMReadByte()) != 0x0A)
  8116  0012F6  D018               	goto	l3252
  8117  0012F8                     l3244:
  8118  0012F8  FFFF               	dw	65535	; assembler added errata NOP
  8119                           
  8120                           ;SIM800x_SDM.c: 288: {;SIM800x_SDM.c: 290: if((Tick_ms() - time) > Tout)
  8121  0012FA  EC95  F00F         	call	_Tick_ms	;wreg free
  8122  0012FE  5013               	movf	SIM800xSDMReadF1Pkt@time^0,w,c
  8123  001300  5C01               	subwf	?_Tick_ms^0,w,c
  8124  001302  6E0C               	movwf	??_SIM800xSDMReadF1Pkt^0,c
  8125  001304  5014               	movf	(SIM800xSDMReadF1Pkt@time+1)^0,w,c
  8126  001306  5802               	subwfb	(?_Tick_ms+1)^0,w,c
  8127  001308  6E0D               	movwf	(??_SIM800xSDMReadF1Pkt+1)^0,c
  8128  00130A  5015               	movf	(SIM800xSDMReadF1Pkt@time+2)^0,w,c
  8129  00130C  5803               	subwfb	(?_Tick_ms+2)^0,w,c
  8130  00130E  6E0E               	movwf	(??_SIM800xSDMReadF1Pkt+2)^0,c
  8131  001310  5016               	movf	(SIM800xSDMReadF1Pkt@time+3)^0,w,c
  8132  001312  5804               	subwfb	(?_Tick_ms+3)^0,w,c
  8133  001314  6E0F               	movwf	(??_SIM800xSDMReadF1Pkt+3)^0,c
  8134  001316  500F               	movf	(??_SIM800xSDMReadF1Pkt+3)^0,w,c
  8135  001318  100E               	iorwf	(??_SIM800xSDMReadF1Pkt+2)^0,w,c
  8136  00131A  E1D6               	bnz	l3234
  8137  00131C  0ED1               	movlw	209
  8138  00131E  5C0C               	subwf	??_SIM800xSDMReadF1Pkt^0,w,c
  8139  001320  0E07               	movlw	7
  8140  001322  580D               	subwfb	(??_SIM800xSDMReadF1Pkt+1)^0,w,c
  8141  001324  B0D8               	btfsc	status,0,c
  8142  001326  D7CF               	goto	u1740
  8143  001328                     l3252:
  8144  001328  FFFF               	dw	65535	; assembler added errata NOP
  8145  00132A  EC52  F00E         	call	_SIM800xSDMReadByte	;wreg free
  8146  00132E  6E17               	movwf	SIM800xSDMReadF1Pkt@tmp^0,c
  8147  001330  0E0A               	movlw	10
  8148  001332  1817               	xorwf	SIM800xSDMReadF1Pkt@tmp^0,w,c
  8149  001334  A4D8               	btfss	status,2,c
  8150  001336  D7E0               	goto	l3244
  8151  001338                     u1770:
  8152  001338  FFFF               	dw	65535	; assembler added errata NOP
  8153                           
  8154                           ;SIM800x_SDM.c: 294: };SIM800x_SDM.c: 296: };SIM800x_SDM.c: 297: };SIM800x_SDM.c: 298: }
      +                          ;SIM800x_SDM.c: 304: };SIM800x_SDM.c: 306: return i;
  8155  00133A  C012  F00A         	movff	SIM800xSDMReadF1Pkt@i,?_SIM800xSDMReadF1Pkt
  8156  00133E  6A0B               	clrf	(?_SIM800xSDMReadF1Pkt+1)^0,c
  8157  001340                     l1066:
  8158  001340  FFFF               	dw	65535	; assembler added errata NOP
  8159  001342  0012               	return		;funcret
  8160  001344  FFFF               	dw	65535	; errata NOP
  8161  001346                     __end_of_SIM800xSDMReadF1Pkt:
  8162                           	callstack 0
  8163                           
  8164 ;; *************** function _Tick_ms *****************
  8165 ;; Defined at:
  8166 ;;		line 76 in file "Src/SystemTime.c"
  8167 ;; Parameters:    Size  Location     Type
  8168 ;;		None
  8169 ;; Auto vars:     Size  Location     Type
  8170 ;;		None
  8171 ;; Return value:  Size  Location     Type
  8172 ;;                  4    0[COMRAM] unsigned long 
  8173 ;; Registers used:
  8174 ;;		None
  8175 ;; Tracked objects:
  8176 ;;		On entry : 0/0
  8177 ;;		On exit  : 0/0
  8178 ;;		Unchanged: 0/0
  8179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8180 ;;      Params:         4       0       0       0       0       0       0
  8181 ;;      Locals:         0       0       0       0       0       0       0
  8182 ;;      Temps:          0       0       0       0       0       0       0
  8183 ;;      Totals:         4       0       0       0       0       0       0
  8184 ;;Total ram usage:        4 bytes
  8185 ;; Hardware stack levels used: 1
  8186 ;; Hardware stack levels required when called: 2
  8187 ;; This function calls:
  8188 ;;		Nothing
  8189 ;; This function is called by:
  8190 ;;		_ProcessResp1
  8191 ;;		_ProcessResp2
  8192 ;;		_ProcessResp4
  8193 ;;		_SIM800xIPGetState
  8194 ;;		_SIM800xHTTPInputData
  8195 ;;		_SIM800xHTTPAction
  8196 ;;		_SIM800xHTTPRead
  8197 ;;		_SIM800xSDMReadF1Pkt
  8198 ;; This function uses a non-reentrant model
  8199 ;;
  8200                           
  8201                           	psect	text38
  8202  001F2A                     __ptext38:
  8203                           	callstack 0
  8204  001F2A                     _Tick_ms:
  8205                           	callstack 0
  8206  001F2A  FFFF               	dw	65535	; assembler added errata NOP
  8207                           
  8208                           ;SystemTime.c: 79: return IncVar;
  8209                           
  8210                           ;incstack = 0
  8211  001F2C  C06B  F001         	movff	_IncVar,?_Tick_ms	;volatile
  8212  001F30  C06C  F002         	movff	_IncVar+1,?_Tick_ms+1	;volatile
  8213  001F34  C06D  F003         	movff	_IncVar+2,?_Tick_ms+2	;volatile
  8214  001F38  C06E  F004         	movff	_IncVar+3,?_Tick_ms+3	;volatile
  8215  001F3C  0012               	return		;funcret
  8216  001F3E  FFFF               	dw	65535	; errata NOP
  8217  001F40                     __end_of_Tick_ms:
  8218                           	callstack 0
  8219                           
  8220 ;; *************** function _SIM800xSDMRxAvailable *****************
  8221 ;; Defined at:
  8222 ;;		line 118 in file "Src/SIM800x_SDM.c"
  8223 ;; Parameters:    Size  Location     Type
  8224 ;;		None
  8225 ;; Auto vars:     Size  Location     Type
  8226 ;;		None
  8227 ;; Return value:  Size  Location     Type
  8228 ;;                  2    5[COMRAM] unsigned int 
  8229 ;; Registers used:
  8230 ;;		wreg, status,2, status,0, cstack
  8231 ;; Tracked objects:
  8232 ;;		On entry : 0/0
  8233 ;;		On exit  : 0/0
  8234 ;;		Unchanged: 0/0
  8235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8236 ;;      Params:         2       0       0       0       0       0       0
  8237 ;;      Locals:         0       0       0       0       0       0       0
  8238 ;;      Temps:          2       0       0       0       0       0       0
  8239 ;;      Totals:         4       0       0       0       0       0       0
  8240 ;;Total ram usage:        4 bytes
  8241 ;; Hardware stack levels used: 1
  8242 ;; Hardware stack levels required when called: 3
  8243 ;; This function calls:
  8244 ;;		___lwmod
  8245 ;; This function is called by:
  8246 ;;		_ProcessResp1
  8247 ;;		_ProcessResp4
  8248 ;;		_SIM800xInit
  8249 ;;		_SIM800xIPGetState
  8250 ;;		_SIM800xHTTPInputData
  8251 ;;		_SIM800xHTTPAction
  8252 ;;		_SIM800xHTTPRead
  8253 ;;		_SIM800xSDMReadF1Pkt
  8254 ;; This function uses a non-reentrant model
  8255 ;;
  8256                           
  8257                           	psect	text39
  8258  001E86                     __ptext39:
  8259                           	callstack 0
  8260  001E86                     _SIM800xSDMRxAvailable:
  8261                           	callstack 0
  8262  001E86  FFFF               	dw	65535	; assembler added errata NOP
  8263                           
  8264                           ;SIM800x_SDM.c: 121: return (uint16_t)((Rxfifocurrent + 200 - Rxfifoptr) % 200);
  8265                           
  8266                           ;incstack = 0
  8267  001E88  5071               	movf	_Rxfifoptr@SIM800x_SDM$F1159^0,w,c	;volatile
  8268  001E8A  5C6F               	subwf	_Rxfifocurrent@SIM800x_SDM$F1160^0,w,c	;volatile
  8269  001E8C  6E08               	movwf	??_SIM800xSDMRxAvailable^0,c
  8270  001E8E  5072               	movf	(_Rxfifoptr@SIM800x_SDM$F1159+1)^0,w,c	;volatile
  8271  001E90  5870               	subwfb	(_Rxfifocurrent@SIM800x_SDM$F1160+1)^0,w,c	;volatile
  8272  001E92  6E09               	movwf	(??_SIM800xSDMRxAvailable+1)^0,c
  8273  001E94  0EC8               	movlw	200
  8274  001E96  2408               	addwf	??_SIM800xSDMRxAvailable^0,w,c
  8275  001E98  6E01               	movwf	___lwmod@dividend^0,c
  8276  001E9A  0E00               	movlw	0
  8277  001E9C  2009               	addwfc	(??_SIM800xSDMRxAvailable+1)^0,w,c
  8278  001E9E  6E02               	movwf	(___lwmod@dividend+1)^0,c
  8279  001EA0  0E00               	movlw	0
  8280  001EA2  6E04               	movwf	(___lwmod@divisor+1)^0,c
  8281  001EA4  0EC8               	movlw	200
  8282  001EA6  6E03               	movwf	___lwmod@divisor^0,c
  8283  001EA8  EC2A  F00E         	call	___lwmod	;wreg free
  8284  001EAC  C001  F006         	movff	?___lwmod,?_SIM800xSDMRxAvailable
  8285  001EB0  C002  F007         	movff	?___lwmod+1,?_SIM800xSDMRxAvailable+1
  8286  001EB4  0012               	return		;funcret
  8287  001EB6  FFFF               	dw	65535	; errata NOP
  8288  001EB8                     __end_of_SIM800xSDMRxAvailable:
  8289                           	callstack 0
  8290                           
  8291 ;; *************** function _SIM800xSDMReadByte *****************
  8292 ;; Defined at:
  8293 ;;		line 175 in file "Src/SIM800x_SDM.c"
  8294 ;; Parameters:    Size  Location     Type
  8295 ;;		None
  8296 ;; Auto vars:     Size  Location     Type
  8297 ;;  data            1    5[COMRAM] unsigned char 
  8298 ;; Return value:  Size  Location     Type
  8299 ;;                  1    wreg      unsigned char 
  8300 ;; Registers used:
  8301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8302 ;; Tracked objects:
  8303 ;;		On entry : 0/0
  8304 ;;		On exit  : 0/0
  8305 ;;		Unchanged: 0/0
  8306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8307 ;;      Params:         0       0       0       0       0       0       0
  8308 ;;      Locals:         1       0       0       0       0       0       0
  8309 ;;      Temps:          0       0       0       0       0       0       0
  8310 ;;      Totals:         1       0       0       0       0       0       0
  8311 ;;Total ram usage:        1 bytes
  8312 ;; Hardware stack levels used: 1
  8313 ;; Hardware stack levels required when called: 3
  8314 ;; This function calls:
  8315 ;;		___lwmod
  8316 ;; This function is called by:
  8317 ;;		_SIM800xInit
  8318 ;;		_SIM800xHTTPRead
  8319 ;;		_SIM800xSDMReadF1Pkt
  8320 ;; This function uses a non-reentrant model
  8321 ;;
  8322                           
  8323                           	psect	text40
  8324  001CA4                     __ptext40:
  8325                           	callstack 0
  8326  001CA4                     _SIM800xSDMReadByte:
  8327                           	callstack 0
  8328  001CA4  FFFF               	dw	65535	; assembler added errata NOP
  8329                           
  8330                           ;SIM800x_SDM.c: 178: if(Rxfifocurrent == Rxfifoptr)
  8331                           
  8332                           ;incstack = 0
  8333  001CA6  5071               	movf	_Rxfifoptr@SIM800x_SDM$F1159^0,w,c	;volatile
  8334  001CA8  186F               	xorwf	_Rxfifocurrent@SIM800x_SDM$F1160^0,w,c	;volatile
  8335  001CAA  E106               	bnz	l3128
  8336  001CAC  5072               	movf	(_Rxfifoptr@SIM800x_SDM$F1159+1)^0,w,c	;volatile
  8337  001CAE  1870               	xorwf	(_Rxfifocurrent@SIM800x_SDM$F1160+1)^0,w,c	;volatile
  8338  001CB0  A4D8               	btfss	status,2,c
  8339  001CB2  D002               	goto	l3128
  8340                           
  8341                           ;SIM800x_SDM.c: 179: return 0xFF;
  8342  001CB4  0EFF               	movlw	255
  8343  001CB6  D01A               	goto	l1041
  8344  001CB8                     l3128:
  8345  001CB8  FFFF               	dw	65535	; assembler added errata NOP
  8346                           
  8347                           ;SIM800x_SDM.c: 181: uint8_t data = RxFIFO[Rxfifoptr];
  8348  001CBA  0E00               	movlw	low _RxFIFO@SIM800x_SDM$F1158
  8349  001CBC  2471               	addwf	_Rxfifoptr@SIM800x_SDM$F1159^0,w,c	;volatile
  8350  001CBE  6ED9               	movwf	fsr2l,c
  8351  001CC0  0E03               	movlw	high _RxFIFO@SIM800x_SDM$F1158
  8352  001CC2  2072               	addwfc	(_Rxfifoptr@SIM800x_SDM$F1159+1)^0,w,c	;volatile
  8353  001CC4  6EDA               	movwf	fsr2h,c
  8354  001CC6  50DF               	movf	indf2,w,c
  8355  001CC8  6E06               	movwf	SIM800xSDMReadByte@data^0,c
  8356                           
  8357                           ;SIM800x_SDM.c: 182: Rxfifoptr = (uint16_t)((Rxfifoptr + 1) % 200);
  8358  001CCA  0E01               	movlw	1
  8359  001CCC  2471               	addwf	_Rxfifoptr@SIM800x_SDM$F1159^0,w,c	;volatile
  8360  001CCE  6E01               	movwf	___lwmod@dividend^0,c
  8361  001CD0  0E00               	movlw	0
  8362  001CD2  2072               	addwfc	(_Rxfifoptr@SIM800x_SDM$F1159+1)^0,w,c	;volatile
  8363  001CD4  6E02               	movwf	(___lwmod@dividend+1)^0,c
  8364  001CD6  0E00               	movlw	0
  8365  001CD8  6E04               	movwf	(___lwmod@divisor+1)^0,c
  8366  001CDA  0EC8               	movlw	200
  8367  001CDC  6E03               	movwf	___lwmod@divisor^0,c
  8368  001CDE  EC2A  F00E         	call	___lwmod	;wreg free
  8369  001CE2  C001  F071         	movff	?___lwmod,_Rxfifoptr@SIM800x_SDM$F1159	;volatile
  8370  001CE6  C002  F072         	movff	?___lwmod+1,_Rxfifoptr@SIM800x_SDM$F1159+1	;volatile
  8371                           
  8372                           ;SIM800x_SDM.c: 184: return data;
  8373  001CEA  5006               	movf	SIM800xSDMReadByte@data^0,w,c
  8374  001CEC                     l1041:
  8375  001CEC  FFFF               	dw	65535	; assembler added errata NOP
  8376  001CEE  0012               	return		;funcret
  8377  001CF0  FFFF               	dw	65535	; errata NOP
  8378  001CF2                     __end_of_SIM800xSDMReadByte:
  8379                           	callstack 0
  8380                           
  8381 ;; *************** function ___lwmod *****************
  8382 ;; Defined at:
  8383 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  8384 ;; Parameters:    Size  Location     Type
  8385 ;;  dividend        2    0[COMRAM] unsigned int 
  8386 ;;  divisor         2    2[COMRAM] unsigned int 
  8387 ;; Auto vars:     Size  Location     Type
  8388 ;;  counter         1    4[COMRAM] unsigned char 
  8389 ;; Return value:  Size  Location     Type
  8390 ;;                  2    0[COMRAM] unsigned int 
  8391 ;; Registers used:
  8392 ;;		wreg, status,2, status,0
  8393 ;; Tracked objects:
  8394 ;;		On entry : 0/0
  8395 ;;		On exit  : 0/0
  8396 ;;		Unchanged: 0/0
  8397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8398 ;;      Params:         4       0       0       0       0       0       0
  8399 ;;      Locals:         1       0       0       0       0       0       0
  8400 ;;      Temps:          0       0       0       0       0       0       0
  8401 ;;      Totals:         5       0       0       0       0       0       0
  8402 ;;Total ram usage:        5 bytes
  8403 ;; Hardware stack levels used: 1
  8404 ;; Hardware stack levels required when called: 2
  8405 ;; This function calls:
  8406 ;;		Nothing
  8407 ;; This function is called by:
  8408 ;;		_SIM800xSDMRxAvailable
  8409 ;;		_SIM800xSDMReadByte
  8410 ;; This function uses a non-reentrant model
  8411 ;;
  8412                           
  8413                           	psect	text41
  8414  001C54                     __ptext41:
  8415                           	callstack 0
  8416  001C54                     ___lwmod:
  8417                           	callstack 0
  8418  001C54  FFFF               	dw	65535	; assembler added errata NOP
  8419                           
  8420                           ;incstack = 0
  8421  001C56  5003               	movf	___lwmod@divisor^0,w,c
  8422  001C58  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  8423  001C5A  B4D8               	btfsc	status,2,c
  8424  001C5C  D01C               	goto	l1726
  8425  001C5E  0E01               	movlw	1
  8426  001C60  6E05               	movwf	___lwmod@counter^0,c
  8427  001C62  D005               	goto	l3104
  8428  001C64                     l3102:
  8429  001C64  FFFF               	dw	65535	; assembler added errata NOP
  8430  001C66  90D8               	bcf	status,0,c
  8431  001C68  3603               	rlcf	___lwmod@divisor^0,f,c
  8432  001C6A  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  8433  001C6C  2A05               	incf	___lwmod@counter^0,f,c
  8434  001C6E                     l3104:
  8435  001C6E  FFFF               	dw	65535	; assembler added errata NOP
  8436  001C70  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  8437  001C72  D7F8               	goto	l3102
  8438  001C74                     u1570:
  8439  001C74  FFFF               	dw	65535	; assembler added errata NOP
  8440  001C76  5003               	movf	___lwmod@divisor^0,w,c
  8441  001C78  5C01               	subwf	___lwmod@dividend^0,w,c
  8442  001C7A  5004               	movf	(___lwmod@divisor+1)^0,w,c
  8443  001C7C  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  8444  001C7E  A0D8               	btfss	status,0,c
  8445  001C80  D004               	goto	l3110
  8446  001C82  5003               	movf	___lwmod@divisor^0,w,c
  8447  001C84  5E01               	subwf	___lwmod@dividend^0,f,c
  8448  001C86  5004               	movf	(___lwmod@divisor+1)^0,w,c
  8449  001C88  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  8450  001C8A                     l3110:
  8451  001C8A  FFFF               	dw	65535	; assembler added errata NOP
  8452  001C8C  90D8               	bcf	status,0,c
  8453  001C8E  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  8454  001C90  3203               	rrcf	___lwmod@divisor^0,f,c
  8455  001C92  2E05               	decfsz	___lwmod@counter^0,f,c
  8456  001C94  D7EF               	goto	u1570
  8457  001C96                     l1726:
  8458  001C96  FFFF               	dw	65535	; assembler added errata NOP
  8459  001C98  C001  F001         	movff	___lwmod@dividend,?___lwmod
  8460  001C9C  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  8461  001CA0  0012               	return		;funcret
  8462  001CA2  FFFF               	dw	65535	; errata NOP
  8463  001CA4                     __end_of___lwmod:
  8464                           	callstack 0
  8465                           
  8466 ;; *************** function _SIM800xSDMFlush *****************
  8467 ;; Defined at:
  8468 ;;		line 227 in file "Src/SIM800x_SDM.c"
  8469 ;; Parameters:    Size  Location     Type
  8470 ;;		None
  8471 ;; Auto vars:     Size  Location     Type
  8472 ;;		None
  8473 ;; Return value:  Size  Location     Type
  8474 ;;                  1    wreg      void 
  8475 ;; Registers used:
  8476 ;;		wreg, status,2
  8477 ;; Tracked objects:
  8478 ;;		On entry : 0/0
  8479 ;;		On exit  : 0/0
  8480 ;;		Unchanged: 0/0
  8481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8482 ;;      Params:         0       0       0       0       0       0       0
  8483 ;;      Locals:         0       0       0       0       0       0       0
  8484 ;;      Temps:          0       0       0       0       0       0       0
  8485 ;;      Totals:         0       0       0       0       0       0       0
  8486 ;;Total ram usage:        0 bytes
  8487 ;; Hardware stack levels used: 1
  8488 ;; Hardware stack levels required when called: 2
  8489 ;; This function calls:
  8490 ;;		Nothing
  8491 ;; This function is called by:
  8492 ;;		_SIM800xInit
  8493 ;;		_SIM800xIPSetConnectionType
  8494 ;;		_SIM800xIPSetAPN
  8495 ;;		_SIM800xIPOpen
  8496 ;;		_SIM800xIPGetState
  8497 ;;		_SIM800xHTTPInit
  8498 ;;		_SIM800xHTTPSetURL
  8499 ;;		_SIM800xHTTPSetContent
  8500 ;;		_SIM800xHTTPInputData
  8501 ;;		_SIM800xHTTPAction
  8502 ;;		_SIM800xHTTPRead
  8503 ;;		_SIM800xSDMReadF1Pkt
  8504 ;; This function uses a non-reentrant model
  8505 ;;
  8506                           
  8507                           	psect	text42
  8508  001F40                     __ptext42:
  8509                           	callstack 0
  8510  001F40                     _SIM800xSDMFlush:
  8511                           	callstack 0
  8512  001F40  FFFF               	dw	65535	; assembler added errata NOP
  8513                           
  8514                           ;SIM800x_SDM.c: 230: Rxfifoptr = 0;
  8515                           
  8516                           ;incstack = 0
  8517  001F42  0E00               	movlw	0
  8518  001F44  6E72               	movwf	(_Rxfifoptr@SIM800x_SDM$F1159+1)^0,c	;volatile
  8519  001F46  0E00               	movlw	0
  8520  001F48  6E71               	movwf	_Rxfifoptr@SIM800x_SDM$F1159^0,c	;volatile
  8521                           
  8522                           ;SIM800x_SDM.c: 231: Rxfifocurrent = 0;
  8523  001F4A  0E00               	movlw	0
  8524  001F4C  6E70               	movwf	(_Rxfifocurrent@SIM800x_SDM$F1160+1)^0,c	;volatile
  8525  001F4E  0E00               	movlw	0
  8526  001F50  6E6F               	movwf	_Rxfifocurrent@SIM800x_SDM$F1160^0,c	;volatile
  8527  001F52  0012               	return		;funcret
  8528  001F54  FFFF               	dw	65535	; errata NOP
  8529  001F56                     __end_of_SIM800xSDMFlush:
  8530                           	callstack 0
  8531                           
  8532 ;; *************** function _AddEntryToJsonObject *****************
  8533 ;; Defined at:
  8534 ;;		line 54 in file "Src/JSON.c"
  8535 ;; Parameters:    Size  Location     Type
  8536 ;;  JsonObject      2    0[COMRAM] PTR unsigned char 
  8537 ;;		 -> txmessage(100), 
  8538 ;;  key             2    2[COMRAM] PTR const unsigned char 
  8539 ;;		 -> STR_18(15), STR_16(20), STR_14(4), STR_12(23), 
  8540 ;;  value           2    4[COMRAM] PTR const unsigned char 
  8541 ;;		 -> STR_19(3), STR_17(3), STR_15(5), STR_13(3), 
  8542 ;;  Cpos            2    6[COMRAM] PTR unsigned int 
  8543 ;;		 -> cpos(2), 
  8544 ;; Auto vars:     Size  Location     Type
  8545 ;;  offset          1   12[COMRAM] unsigned char 
  8546 ;; Return value:  Size  Location     Type
  8547 ;;                  1    wreg      unsigned char 
  8548 ;; Registers used:
  8549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8550 ;; Tracked objects:
  8551 ;;		On entry : 0/0
  8552 ;;		On exit  : 0/0
  8553 ;;		Unchanged: 0/0
  8554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8555 ;;      Params:         8       0       0       0       0       0       0
  8556 ;;      Locals:         1       0       0       0       0       0       0
  8557 ;;      Temps:          4       0       0       0       0       0       0
  8558 ;;      Totals:        13       0       0       0       0       0       0
  8559 ;;Total ram usage:       13 bytes
  8560 ;; Hardware stack levels used: 1
  8561 ;; Hardware stack levels required when called: 2
  8562 ;; This function calls:
  8563 ;;		Nothing
  8564 ;; This function is called by:
  8565 ;;		_SystemInit
  8566 ;; This function uses a non-reentrant model
  8567 ;;
  8568                           
  8569                           	psect	text43
  8570  00001A                     __ptext43:
  8571                           	callstack 0
  8572  00001A                     _AddEntryToJsonObject:
  8573                           	callstack 0
  8574  00001A  FFFF               	dw	65535	; assembler added errata NOP
  8575                           
  8576                           ;Src/JSON.c: 54: unsigned char AddEntryToJsonObject(char * JsonObject, const char * key,
      +                           const char * value, unsigned int *Cpos);Src/JSON.c: 55: {;Src/JSON.c: 57:  unsigned cha
      +                          r offset = 0;
  8577                           
  8578                           ;incstack = 0
  8579  00001C  0E00               	movlw	0
  8580  00001E  6E0D               	movwf	AddEntryToJsonObject@offset^0,c
  8581                           
  8582                           ;Src/JSON.c: 59:  if (!*Cpos)
  8583  000020  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8584  000024  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8585  000028  50DE               	movf	postinc2,w,c
  8586  00002A  10DE               	iorwf	postinc2,w,c
  8587  00002C  A4D8               	btfss	status,2,c
  8588  00002E  D009               	goto	l3838
  8589                           
  8590                           ;Src/JSON.c: 60:     {;Src/JSON.c: 61:   JsonObject[0] = '{';
  8591  000030  C001  FFD9         	movff	AddEntryToJsonObject@JsonObject,fsr2l
  8592  000034  C002  FFDA         	movff	AddEntryToJsonObject@JsonObject+1,fsr2h
  8593  000038  0E7B               	movlw	123
  8594  00003A  6EDF               	movwf	indf2,c
  8595                           
  8596                           ;Src/JSON.c: 62:   offset = 1;
  8597  00003C  0E01               	movlw	1
  8598  00003E  6E0D               	movwf	AddEntryToJsonObject@offset^0,c
  8599                           
  8600                           ;Src/JSON.c: 63:  }else
  8601  000040  D025               	goto	l104
  8602  000042                     l3838:
  8603  000042  FFFF               	dw	65535	; assembler added errata NOP
  8604                           
  8605                           ;Src/JSON.c: 64:  {;Src/JSON.c: 65:   JsonObject[*Cpos] = ',';
  8606  000044  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8607  000048  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8608  00004C  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8609  000050  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8610  000054  5009               	movf	??_AddEntryToJsonObject^0,w,c
  8611  000056  2401               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8612  000058  6ED9               	movwf	fsr2l,c
  8613  00005A  500A               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8614  00005C  2002               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8615  00005E  6EDA               	movwf	fsr2h,c
  8616  000060  0E2C               	movlw	44
  8617  000062  6EDF               	movwf	indf2,c
  8618                           
  8619                           ;Src/JSON.c: 66:   *Cpos = *Cpos + 1;
  8620  000064  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8621  000068  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8622  00006C  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8623  000070  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8624  000074  0E01               	movlw	1
  8625  000076  2609               	addwf	??_AddEntryToJsonObject^0,f,c
  8626  000078  0E00               	movlw	0
  8627  00007A  220A               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8628  00007C  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8629  000080  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8630  000084  C009  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8631  000088  C00A  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8632  00008C                     l104:
  8633  00008C  FFFF               	dw	65535	; assembler added errata NOP
  8634                           
  8635                           ;Src/JSON.c: 69:     JsonObject[*Cpos + offset] = '\"';
  8636  00008E  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8637  000092  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8638  000096  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8639  00009A  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8640  00009E  500D               	movf	AddEntryToJsonObject@offset^0,w,c
  8641  0000A0  2401               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8642  0000A2  6E0B               	movwf	(??_AddEntryToJsonObject+2)^0,c
  8643  0000A4  0E00               	movlw	0
  8644  0000A6  2002               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8645  0000A8  6E0C               	movwf	(??_AddEntryToJsonObject+3)^0,c
  8646  0000AA  5009               	movf	??_AddEntryToJsonObject^0,w,c
  8647  0000AC  240B               	addwf	(??_AddEntryToJsonObject+2)^0,w,c
  8648  0000AE  6ED9               	movwf	fsr2l,c
  8649  0000B0  500A               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8650  0000B2  200C               	addwfc	(??_AddEntryToJsonObject+3)^0,w,c
  8651  0000B4  6EDA               	movwf	fsr2h,c
  8652  0000B6  0E22               	movlw	34
  8653  0000B8  6EDF               	movwf	indf2,c
  8654  0000BA  D01F               	goto	l3844
  8655  0000BC                     l3840:
  8656  0000BC  FFFF               	dw	65535	; assembler added errata NOP
  8657                           
  8658                           ;Src/JSON.c: 73:  {;Src/JSON.c: 74:   JsonObject[*Cpos + offset] = *key;
  8659  0000BE  C003  FFF6         	movff	AddEntryToJsonObject@key,tblptrl
  8660  0000C2  C004  FFF7         	movff	AddEntryToJsonObject@key+1,tblptrh
  8661  0000C6                     	if	0	;tblptru may be non-zero
  8662  0000C6                     	endif
  8663  0000C6                     	if	0	;tblptru may be non-zero
  8664  0000C6                     	endif
  8665  0000C6  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8666  0000CA  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8667  0000CE  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8668  0000D2  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8669  0000D6  500D               	movf	AddEntryToJsonObject@offset^0,w,c
  8670  0000D8  2401               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8671  0000DA  6E0B               	movwf	(??_AddEntryToJsonObject+2)^0,c
  8672  0000DC  0E00               	movlw	0
  8673  0000DE  2002               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8674  0000E0  6E0C               	movwf	(??_AddEntryToJsonObject+3)^0,c
  8675  0000E2  5009               	movf	??_AddEntryToJsonObject^0,w,c
  8676  0000E4  240B               	addwf	(??_AddEntryToJsonObject+2)^0,w,c
  8677  0000E6  6ED9               	movwf	fsr2l,c
  8678  0000E8  500A               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8679  0000EA  200C               	addwfc	(??_AddEntryToJsonObject+3)^0,w,c
  8680  0000EC  6EDA               	movwf	fsr2h,c
  8681  0000EE  0008               	tblrd		*
  8682  0000F0  FFFF               	dw	65535	; errata NOP
  8683  0000F2  CFF5 FFDF          	movff	tablat,indf2
  8684                           
  8685                           ;Src/JSON.c: 75:   key++;
  8686  0000F6  4A03               	infsnz	AddEntryToJsonObject@key^0,f,c
  8687  0000F8  2A04               	incf	(AddEntryToJsonObject@key+1)^0,f,c
  8688  0000FA                     l3844:
  8689  0000FA  FFFF               	dw	65535	; assembler added errata NOP
  8690                           
  8691                           ;Src/JSON.c: 76:   *Cpos = *Cpos + 1;
  8692  0000FC  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8693  000100  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8694  000104  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8695  000108  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8696  00010C  0E01               	movlw	1
  8697  00010E  2609               	addwf	??_AddEntryToJsonObject^0,f,c
  8698  000110  0E00               	movlw	0
  8699  000112  220A               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8700  000114  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8701  000118  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8702  00011C  C009  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8703  000120  C00A  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8704                           
  8705                           ;Src/JSON.c: 72:  while (*key != 0)
  8706  000124  C003  FFF6         	movff	AddEntryToJsonObject@key,tblptrl
  8707  000128  C004  FFF7         	movff	AddEntryToJsonObject@key+1,tblptrh
  8708  00012C                     	if	0	;tblptru may be non-zero
  8709  00012C                     	endif
  8710  00012C                     	if	0	;tblptru may be non-zero
  8711  00012C                     	endif
  8712  00012C  0008               	tblrd		*
  8713  00012E  FFFF               	dw	65535	; errata NOP
  8714  000130  50F5               	movf	tablat,w,c
  8715  000132  0900               	iorlw	0
  8716  000134  A4D8               	btfss	status,2,c
  8717  000136  D7C2               	goto	l3840
  8718                           
  8719                           ;Src/JSON.c: 79:     JsonObject[*Cpos + offset] = '\"';
  8720  000138  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8721  00013C  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8722  000140  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8723  000144  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8724  000148  500D               	movf	AddEntryToJsonObject@offset^0,w,c
  8725  00014A  2401               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8726  00014C  6E0B               	movwf	(??_AddEntryToJsonObject+2)^0,c
  8727  00014E  0E00               	movlw	0
  8728  000150  2002               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8729  000152  6E0C               	movwf	(??_AddEntryToJsonObject+3)^0,c
  8730  000154  5009               	movf	??_AddEntryToJsonObject^0,w,c
  8731  000156  240B               	addwf	(??_AddEntryToJsonObject+2)^0,w,c
  8732  000158  6ED9               	movwf	fsr2l,c
  8733  00015A  500A               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8734  00015C  200C               	addwfc	(??_AddEntryToJsonObject+3)^0,w,c
  8735  00015E  6EDA               	movwf	fsr2h,c
  8736  000160  0E22               	movlw	34
  8737  000162  6EDF               	movwf	indf2,c
  8738                           
  8739                           ;Src/JSON.c: 80:     *Cpos = *Cpos + 1;
  8740  000164  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8741  000168  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8742  00016C  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8743  000170  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8744  000174  0E01               	movlw	1
  8745  000176  2609               	addwf	??_AddEntryToJsonObject^0,f,c
  8746  000178  0E00               	movlw	0
  8747  00017A  220A               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8748  00017C  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8749  000180  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8750  000184  C009  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8751  000188  C00A  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8752                           
  8753                           ;Src/JSON.c: 82:  if(offset)
  8754  00018C  500D               	movf	AddEntryToJsonObject@offset^0,w,c
  8755  00018E  B4D8               	btfsc	status,2,c
  8756  000190  D025               	goto	l3854
  8757                           
  8758                           ;Src/JSON.c: 83:  {;Src/JSON.c: 84:   *Cpos = *Cpos + 1;
  8759  000192  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8760  000196  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8761  00019A  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8762  00019E  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8763  0001A2  0E01               	movlw	1
  8764  0001A4  2609               	addwf	??_AddEntryToJsonObject^0,f,c
  8765  0001A6  0E00               	movlw	0
  8766  0001A8  220A               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8767  0001AA  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8768  0001AE  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8769  0001B2  C009  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8770  0001B6  C00A  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8771                           
  8772                           ;Src/JSON.c: 85:   JsonObject[*Cpos] = ':';
  8773  0001BA  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8774  0001BE  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8775  0001C2  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8776  0001C6  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8777  0001CA  5009               	movf	??_AddEntryToJsonObject^0,w,c
  8778  0001CC  2401               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8779  0001CE  6ED9               	movwf	fsr2l,c
  8780  0001D0  500A               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8781  0001D2  2002               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8782  0001D4  6EDA               	movwf	fsr2h,c
  8783  0001D6  0E3A               	movlw	58
  8784  0001D8  6EDF               	movwf	indf2,c
  8785                           
  8786                           ;Src/JSON.c: 86:  }else
  8787  0001DA  D046               	goto	l3862
  8788  0001DC                     l3854:
  8789  0001DC  FFFF               	dw	65535	; assembler added errata NOP
  8790                           
  8791                           ;Src/JSON.c: 87:  {;Src/JSON.c: 88:   JsonObject[*Cpos] = ':';
  8792  0001DE  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8793  0001E2  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8794  0001E6  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8795  0001EA  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8796  0001EE  5009               	movf	??_AddEntryToJsonObject^0,w,c
  8797  0001F0  2401               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8798  0001F2  6ED9               	movwf	fsr2l,c
  8799  0001F4  500A               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8800  0001F6  2002               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8801  0001F8  6EDA               	movwf	fsr2h,c
  8802  0001FA  0E3A               	movlw	58
  8803  0001FC  6EDF               	movwf	indf2,c
  8804  0001FE  D01F               	goto	l3860
  8805  000200                     l3856:
  8806  000200  FFFF               	dw	65535	; assembler added errata NOP
  8807                           
  8808                           ;Src/JSON.c: 93:  {;Src/JSON.c: 94:   JsonObject[*Cpos + offset] = *value;
  8809  000202  C005  FFF6         	movff	AddEntryToJsonObject@value,tblptrl
  8810  000206  C006  FFF7         	movff	AddEntryToJsonObject@value+1,tblptrh
  8811  00020A                     	if	0	;tblptru may be non-zero
  8812  00020A                     	endif
  8813  00020A                     	if	0	;tblptru may be non-zero
  8814  00020A                     	endif
  8815  00020A  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8816  00020E  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8817  000212  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8818  000216  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8819  00021A  500D               	movf	AddEntryToJsonObject@offset^0,w,c
  8820  00021C  2401               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8821  00021E  6E0B               	movwf	(??_AddEntryToJsonObject+2)^0,c
  8822  000220  0E00               	movlw	0
  8823  000222  2002               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8824  000224  6E0C               	movwf	(??_AddEntryToJsonObject+3)^0,c
  8825  000226  5009               	movf	??_AddEntryToJsonObject^0,w,c
  8826  000228  240B               	addwf	(??_AddEntryToJsonObject+2)^0,w,c
  8827  00022A  6ED9               	movwf	fsr2l,c
  8828  00022C  500A               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8829  00022E  200C               	addwfc	(??_AddEntryToJsonObject+3)^0,w,c
  8830  000230  6EDA               	movwf	fsr2h,c
  8831  000232  0008               	tblrd		*
  8832  000234  FFFF               	dw	65535	; errata NOP
  8833  000236  CFF5 FFDF          	movff	tablat,indf2
  8834                           
  8835                           ;Src/JSON.c: 95:   value++;
  8836  00023A  4A05               	infsnz	AddEntryToJsonObject@value^0,f,c
  8837  00023C  2A06               	incf	(AddEntryToJsonObject@value+1)^0,f,c
  8838  00023E                     l3860:
  8839  00023E  FFFF               	dw	65535	; assembler added errata NOP
  8840                           
  8841                           ;Src/JSON.c: 96:   *Cpos = *Cpos + 1;
  8842  000240  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8843  000244  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8844  000248  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8845  00024C  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8846  000250  0E01               	movlw	1
  8847  000252  2609               	addwf	??_AddEntryToJsonObject^0,f,c
  8848  000254  0E00               	movlw	0
  8849  000256  220A               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8850  000258  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8851  00025C  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8852  000260  C009  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8853  000264  C00A  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8854  000268                     l3862:
  8855  000268  FFFF               	dw	65535	; assembler added errata NOP
  8856                           
  8857                           ;Src/JSON.c: 92:  while (*value != 0)
  8858  00026A  C005  FFF6         	movff	AddEntryToJsonObject@value,tblptrl
  8859  00026E  C006  FFF7         	movff	AddEntryToJsonObject@value+1,tblptrh
  8860  000272                     	if	0	;tblptru may be non-zero
  8861  000272                     	endif
  8862  000272                     	if	0	;tblptru may be non-zero
  8863  000272                     	endif
  8864  000272  0008               	tblrd		*
  8865  000274  FFFF               	dw	65535	; errata NOP
  8866  000276  50F5               	movf	tablat,w,c
  8867  000278  0900               	iorlw	0
  8868  00027A  A4D8               	btfss	status,2,c
  8869  00027C  D7C1               	goto	l3856
  8870                           
  8871                           ;Src/JSON.c: 99:  if(offset != 0)
  8872  00027E  500D               	movf	AddEntryToJsonObject@offset^0,w,c
  8873  000280  B4D8               	btfsc	status,2,c
  8874  000282  D014               	goto	l113
  8875                           
  8876                           ;Src/JSON.c: 100:   *Cpos = *Cpos + 1;
  8877  000284  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8878  000288  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8879  00028C  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8880  000290  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8881  000294  0E01               	movlw	1
  8882  000296  2609               	addwf	??_AddEntryToJsonObject^0,f,c
  8883  000298  0E00               	movlw	0
  8884  00029A  220A               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8885  00029C  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8886  0002A0  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8887  0002A4  C009  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8888  0002A8  C00A  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8889  0002AC                     l113:
  8890  0002AC  FFFF               	dw	65535	; assembler added errata NOP
  8891                           
  8892                           ;Src/JSON.c: 101:  JsonObject[*Cpos] = '}';
  8893  0002AE  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8894  0002B2  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8895  0002B6  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8896  0002BA  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8897  0002BE  5009               	movf	??_AddEntryToJsonObject^0,w,c
  8898  0002C0  2401               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8899  0002C2  6ED9               	movwf	fsr2l,c
  8900  0002C4  500A               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8901  0002C6  2002               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8902  0002C8  6EDA               	movwf	fsr2h,c
  8903  0002CA  0E7D               	movlw	125
  8904  0002CC  6EDF               	movwf	indf2,c
  8905                           
  8906                           ;Src/JSON.c: 102:  JsonObject[*Cpos + 1] = 0;
  8907  0002CE  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8908  0002D2  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8909  0002D6  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8910  0002DA  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8911  0002DE  C001  F00B         	movff	AddEntryToJsonObject@JsonObject,??_AddEntryToJsonObject+2
  8912  0002E2  C002  F00C         	movff	AddEntryToJsonObject@JsonObject+1,??_AddEntryToJsonObject+3
  8913  0002E6  5009               	movf	??_AddEntryToJsonObject^0,w,c
  8914  0002E8  260B               	addwf	(??_AddEntryToJsonObject+2)^0,f,c
  8915  0002EA  500A               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8916  0002EC  220C               	addwfc	(??_AddEntryToJsonObject+3)^0,f,c
  8917  0002EE  0E01               	movlw	1
  8918  0002F0  240B               	addwf	(??_AddEntryToJsonObject+2)^0,w,c
  8919  0002F2  6ED9               	movwf	fsr2l,c
  8920  0002F4  0E00               	movlw	0
  8921  0002F6  200C               	addwfc	(??_AddEntryToJsonObject+3)^0,w,c
  8922  0002F8  6EDA               	movwf	fsr2h,c
  8923  0002FA  0E00               	movlw	0
  8924  0002FC  6EDF               	movwf	indf2,c
  8925  0002FE  0012               	return		;funcret
  8926  000300  FFFF               	dw	65535	; errata NOP
  8927  000302                     __end_of_AddEntryToJsonObject:
  8928                           	callstack 0
  8929                           
  8930 ;; *************** function _Isr *****************
  8931 ;; Defined at:
  8932 ;;		line 65 in file "C:/EmbeddedDevOps/M8M_APIs/PIC18.X/Src/ISR.c"
  8933 ;; Parameters:    Size  Location     Type
  8934 ;;		None
  8935 ;; Auto vars:     Size  Location     Type
  8936 ;;		None
  8937 ;; Return value:  Size  Location     Type
  8938 ;;                  1    wreg      void 
  8939 ;; Registers used:
  8940 ;;		wreg, status,2, status,0, cstack
  8941 ;; Tracked objects:
  8942 ;;		On entry : 0/0
  8943 ;;		On exit  : 0/0
  8944 ;;		Unchanged: 0/0
  8945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8946 ;;      Params:         0       0       0       0       0       0       0
  8947 ;;      Locals:         0       0       0       0       0       0       0
  8948 ;;      Temps:          0       0       0       0       0       0       0
  8949 ;;      Totals:         0       0       0       0       0       0       0
  8950 ;;Total ram usage:        0 bytes
  8951 ;; Hardware stack levels used: 1
  8952 ;; Hardware stack levels required when called: 1
  8953 ;; This function calls:
  8954 ;;		_SysTimeCallBack
  8955 ;; This function is called by:
  8956 ;;		Interrupt level 2
  8957 ;; This function uses a non-reentrant model
  8958 ;;
  8959                           
  8960                           	psect	intcode
  8961  000008                     __pintcode:
  8962                           	callstack 0
  8963  000008                     _Isr:
  8964                           	callstack 0
  8965  000008  FFFF               	dw	65535	; assembler added errata NOP
  8966                           
  8967                           ;incstack = 0
  8968  00000A  827E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8969                           
  8970                           ;ISR.c: 67: SysTimeCallBack();
  8971  00000C  EC0C  F00F         	call	_SysTimeCallBack	;wreg free
  8972  000010  927E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8973  000012  0011               	retfie		f
  8974  000014  FFFF               	dw	65535	; errata NOP
  8975  000016                     __end_of_Isr:
  8976                           	callstack 0
  8977                           
  8978 ;; *************** function _SysTimeCallBack *****************
  8979 ;; Defined at:
  8980 ;;		line 137 in file "Src/SystemTime.c"
  8981 ;; Parameters:    Size  Location     Type
  8982 ;;		None
  8983 ;; Auto vars:     Size  Location     Type
  8984 ;;		None
  8985 ;; Return value:  Size  Location     Type
  8986 ;;                  1    wreg      void 
  8987 ;; Registers used:
  8988 ;;		wreg, status,2, status,0
  8989 ;; Tracked objects:
  8990 ;;		On entry : 0/0
  8991 ;;		On exit  : 0/0
  8992 ;;		Unchanged: 0/0
  8993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8994 ;;      Params:         0       0       0       0       0       0       0
  8995 ;;      Locals:         0       0       0       0       0       0       0
  8996 ;;      Temps:          0       0       0       0       0       0       0
  8997 ;;      Totals:         0       0       0       0       0       0       0
  8998 ;;Total ram usage:        0 bytes
  8999 ;; Hardware stack levels used: 1
  9000 ;; This function calls:
  9001 ;;		Nothing
  9002 ;; This function is called by:
  9003 ;;		_Isr
  9004 ;; This function uses a non-reentrant model
  9005 ;;
  9006                           
  9007                           	psect	text45
  9008  001E18                     __ptext45:
  9009                           	callstack 0
  9010  001E18                     _SysTimeCallBack:
  9011                           	callstack 0
  9012  001E18  FFFF               	dw	65535	; assembler added errata NOP
  9013                           
  9014                           ;SystemTime.c: 140: if(TMR0IF)
  9015                           
  9016                           ;incstack = 0
  9017  001E1A  A4F2               	btfss	4082,2,c	;volatile
  9018  001E1C  D018               	goto	i2l303
  9019                           
  9020                           ;SystemTime.c: 141: {;SystemTime.c: 142: if(DecVar != 0)
  9021  001E1E  0100               	movlb	0	; () banked
  9022  001E20  51BC               	movf	_DecVar& (0+255),w,b	;volatile
  9023  001E22  11BD               	iorwf	(_DecVar+1)& (0+255),w,b	;volatile
  9024  001E24  11BE               	iorwf	(_DecVar+2)& (0+255),w,b	;volatile
  9025  001E26  11BF               	iorwf	(_DecVar+3)& (0+255),w,b	;volatile
  9026  001E28  B4D8               	btfsc	status,2,c
  9027  001E2A  D005               	goto	i2l302
  9028                           
  9029                           ; BSR set to: 0
  9030                           ;SystemTime.c: 143: --DecVar;
  9031  001E2C  07BC               	decf	_DecVar& (0+255),f,b	;volatile
  9032  001E2E  0E00               	movlw	0
  9033  001E30  5BBD               	subwfb	(_DecVar+1)& (0+255),f,b	;volatile
  9034  001E32  5BBE               	subwfb	(_DecVar+2)& (0+255),f,b	;volatile
  9035  001E34  5BBF               	subwfb	(_DecVar+3)& (0+255),f,b	;volatile
  9036  001E36                     i2l302:
  9037  001E36  FFFF               	dw	65535	; assembler added errata NOP
  9038                           
  9039                           ; BSR set to: 0
  9040                           ;SystemTime.c: 145: ++IncVar;
  9041  001E38  0E01               	movlw	1
  9042  001E3A  266B               	addwf	_IncVar^0,f,c	;volatile
  9043  001E3C  0E00               	movlw	0
  9044  001E3E  226C               	addwfc	(_IncVar+1)^0,f,c	;volatile
  9045  001E40  226D               	addwfc	(_IncVar+2)^0,f,c	;volatile
  9046  001E42  226E               	addwfc	(_IncVar+3)^0,f,c	;volatile
  9047                           
  9048                           ; BSR set to: 0
  9049                           ;SystemTime.c: 147: TMR0IF = 0;
  9050  001E44  94F2               	bcf	4082,2,c	;volatile
  9051                           
  9052                           ; BSR set to: 0
  9053                           ;SystemTime.c: 148: TMR0 = val;
  9054  001E46  C073  FFD6         	movff	_val,4054	;volatile
  9055  001E4A  C074  FFD7         	movff	_val+1,4055	;volatile
  9056  001E4E                     i2l303:
  9057  001E4E  FFFF               	dw	65535	; assembler added errata NOP
  9058  001E50  0012               	return		;funcret
  9059  001E52  FFFF               	dw	65535	; errata NOP
  9060  001E54                     __end_of_SysTimeCallBack:
  9061                           	callstack 0
  9062                           
  9063                           	psect	rparam
  9064  0000                     
  9065                           	psect	temp
  9066  00007E                     btemp:
  9067                           	callstack 0
  9068  00007E                     	ds	1
  9069  0000                     int$flags	set	btemp
  9070  0000                     wtemp8	set	btemp+1
  9071  0000                     ttemp5	set	btemp+1
  9072  0000                     ttemp6	set	btemp+4
  9073  0000                     ttemp7	set	btemp+8
  9074                           
  9075                           	psect	idloc
  9076                           
  9077                           ;Config register IDLOC0 @ 0x200000
  9078                           ;	unspecified, using default values
  9079  200000                     	org	2097152
  9080  200000  FF                 	db	255
  9081                           
  9082                           ;Config register IDLOC1 @ 0x200001
  9083                           ;	unspecified, using default values
  9084  200001                     	org	2097153
  9085  200001  FF                 	db	255
  9086                           
  9087                           ;Config register IDLOC2 @ 0x200002
  9088                           ;	unspecified, using default values
  9089  200002                     	org	2097154
  9090  200002  FF                 	db	255
  9091                           
  9092                           ;Config register IDLOC3 @ 0x200003
  9093                           ;	unspecified, using default values
  9094  200003                     	org	2097155
  9095  200003  FF                 	db	255
  9096                           
  9097                           ;Config register IDLOC4 @ 0x200004
  9098                           ;	unspecified, using default values
  9099  200004                     	org	2097156
  9100  200004  FF                 	db	255
  9101                           
  9102                           ;Config register IDLOC5 @ 0x200005
  9103                           ;	unspecified, using default values
  9104  200005                     	org	2097157
  9105  200005  FF                 	db	255
  9106                           
  9107                           ;Config register IDLOC6 @ 0x200006
  9108                           ;	unspecified, using default values
  9109  200006                     	org	2097158
  9110  200006  FF                 	db	255
  9111                           
  9112                           ;Config register IDLOC7 @ 0x200007
  9113                           ;	unspecified, using default values
  9114  200007                     	org	2097159
  9115  200007  FF                 	db	255
  9116                           
  9117                           	psect	config
  9118                           
  9119                           ; Padding undefined space
  9120  300000                     	org	3145728
  9121  300000  FF                 	db	255
  9122                           
  9123                           ;Config register CONFIG1H @ 0x300001
  9124                           ;	Oscillator Selection bits
  9125                           ;	OSC = HS, HS oscillator
  9126                           ;	Oscillator System Clock Switch Enable bit
  9127                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  9128  300001                     	org	3145729
  9129  300001  22                 	db	34
  9130                           
  9131                           ;Config register CONFIG2L @ 0x300002
  9132                           ;	Power-up Timer Enable bit
  9133                           ;	PWRT = OFF, PWRT disabled
  9134                           ;	Brown-out Reset Enable bit
  9135                           ;	BOR = ON, Brown-out Reset enabled
  9136                           ;	Brown-out Reset Voltage bits
  9137                           ;	BORV = 20, VBOR set to 2.0V
  9138  300002                     	org	3145730
  9139  300002  0F                 	db	15
  9140                           
  9141                           ;Config register CONFIG2H @ 0x300003
  9142                           ;	Watchdog Timer Enable bit
  9143                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9144                           ;	Watchdog Timer Postscale Select bits
  9145                           ;	WDTPS = 128, 1:128
  9146  300003                     	org	3145731
  9147  300003  0E                 	db	14
  9148                           
  9149                           ; Padding undefined space
  9150  300004                     	org	3145732
  9151  300004  FF                 	db	255
  9152                           
  9153                           ;Config register CONFIG3H @ 0x300005
  9154                           ;	CCP2 Mux bit
  9155                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
  9156  300005                     	org	3145733
  9157  300005  01                 	db	1
  9158                           
  9159                           ;Config register CONFIG4L @ 0x300006
  9160                           ;	Stack Full/Underflow Reset Enable bit
  9161                           ;	STVR = OFF, Stack Full/Underflow will not cause RESET
  9162                           ;	Low Voltage ICSP Enable bit
  9163                           ;	LVP = OFF, Low Voltage ICSP disabled
  9164                           ;	Background Debugger Enable bit
  9165                           ;	DEBUG = 0x1, unprogrammed default
  9166  300006                     	org	3145734
  9167  300006  80                 	db	128
  9168                           
  9169                           ; Padding undefined space
  9170  300007                     	org	3145735
  9171  300007  FF                 	db	255
  9172                           
  9173                           ;Config register CONFIG5L @ 0x300008
  9174                           ;	Code Protection bit
  9175                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  9176                           ;	Code Protection bit
  9177                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  9178                           ;	Code Protection bit
  9179                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  9180                           ;	Code Protection bit
  9181                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  9182  300008                     	org	3145736
  9183  300008  0F                 	db	15
  9184                           
  9185                           ;Config register CONFIG5H @ 0x300009
  9186                           ;	Boot Block Code Protection bit
  9187                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  9188                           ;	Data EEPROM Code Protection bit
  9189                           ;	CPD = OFF, Data EEPROM not code protected
  9190  300009                     	org	3145737
  9191  300009  C0                 	db	192
  9192                           
  9193                           ;Config register CONFIG6L @ 0x30000A
  9194                           ;	Write Protection bit
  9195                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  9196                           ;	Write Protection bit
  9197                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  9198                           ;	Write Protection bit
  9199                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  9200                           ;	Write Protection bit
  9201                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  9202  30000A                     	org	3145738
  9203  30000A  0F                 	db	15
  9204                           
  9205                           ;Config register CONFIG6H @ 0x30000B
  9206                           ;	Configuration Register Write Protection bit
  9207                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  9208                           ;	Boot Block Write Protection bit
  9209                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  9210                           ;	Data EEPROM Write Protection bit
  9211                           ;	WRTD = OFF, Data EEPROM not write protected
  9212  30000B                     	org	3145739
  9213  30000B  E0                 	db	224
  9214                           
  9215                           ;Config register CONFIG7L @ 0x30000C
  9216                           ;	Table Read Protection bit
  9217                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  9218                           ;	Table Read Protection bit
  9219                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  9220                           ;	Table Read Protection bit
  9221                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  9222                           ;	Table Read Protection bit
  9223                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  9224  30000C                     	org	3145740
  9225  30000C  0F                 	db	15
  9226                           
  9227                           ;Config register CONFIG7H @ 0x30000D
  9228                           ;	Boot Block Table Read Protection bit
  9229                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  9230  30000D                     	org	3145741
  9231  30000D  40                 	db	64
  9232                           tosu	equ	0xFFF
  9233                           tosh	equ	0xFFE
  9234                           tosl	equ	0xFFD
  9235                           stkptr	equ	0xFFC
  9236                           pclatu	equ	0xFFB
  9237                           pclath	equ	0xFFA
  9238                           pcl	equ	0xFF9
  9239                           tblptru	equ	0xFF8
  9240                           tblptrh	equ	0xFF7
  9241                           tblptrl	equ	0xFF6
  9242                           tablat	equ	0xFF5
  9243                           prodh	equ	0xFF4
  9244                           prodl	equ	0xFF3
  9245                           indf0	equ	0xFEF
  9246                           postinc0	equ	0xFEE
  9247                           postdec0	equ	0xFED
  9248                           preinc0	equ	0xFEC
  9249                           plusw0	equ	0xFEB
  9250                           fsr0h	equ	0xFEA
  9251                           fsr0l	equ	0xFE9
  9252                           wreg	equ	0xFE8
  9253                           indf1	equ	0xFE7
  9254                           postinc1	equ	0xFE6
  9255                           postdec1	equ	0xFE5
  9256                           preinc1	equ	0xFE4
  9257                           plusw1	equ	0xFE3
  9258                           fsr1h	equ	0xFE2
  9259                           fsr1l	equ	0xFE1
  9260                           bsr	equ	0xFE0
  9261                           indf2	equ	0xFDF
  9262                           postinc2	equ	0xFDE
  9263                           postdec2	equ	0xFDD
  9264                           preinc2	equ	0xFDC
  9265                           plusw2	equ	0xFDB
  9266                           fsr2h	equ	0xFDA
  9267                           fsr2l	equ	0xFD9
  9268                           status	equ	0xFD8

Data Sizes:
    Strings     1606
    Constant    41
    Data        8
    BSS         743
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    106     125
    BANK0           128     29     101
    BANK1           256      0     220
    BANK2           256      0     240
    BANK3           256      0     200
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 279
		 -> SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xIPGetParameters@str(COMRAM[30]), SIM800xIPGetState@str(COMRAM[30]), txmessage(BANK2[100]), 
		 -> STR_10(CODE[17]), STR_9(CODE[279]), STR_4(CODE[9]), STR_3(CODE[5]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 279
		 -> SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xIPGetParameters@str(COMRAM[30]), SIM800xIPGetState@str(COMRAM[30]), txmessage(BANK2[100]), 
		 -> STR_10(CODE[17]), STR_9(CODE[279]), STR_4(CODE[9]), STR_3(CODE[5]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_100(CODE[21]), STR_99(CODE[18]), STR_98(CODE[21]), STR_95(CODE[26]), 
		 -> STR_94(CODE[28]), STR_93(CODE[25]), STR_92(CODE[24]), STR_91(CODE[26]), 
		 -> STR_71(CODE[15]), STR_70(CODE[20]), STR_66(CODE[29]), STR_65(CODE[29]), 
		 -> STR_59(CODE[15]), STR_53(CODE[4]), STR_33(CODE[12]), STR_30(CODE[12]), 
		 -> STR_24(CODE[27]), STR_23(CODE[24]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 40
		 -> SIM800xHTTPRead@str(COMRAM[30]), SIM800xHTTPAction@str(COMRAM[30]), SIM800xHTTPInputData@str(COMRAM[30]), SIM800xHTTPSetTimeout@str(COMRAM[30]), 
		 -> SIM800xHTTPSetBreakEnd@str(COMRAM[30]), SIM800xHTTPSetBreak@str(COMRAM[30]), SIM800xHTTPSetRedir@str(COMRAM[25]), SIM800xHTTPSetPort@str(COMRAM[30]), 
		 -> SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xGPRSSetDataMode@str(COMRAM[20]), SIM800xGPRSSetQoSRequest@str(COMRAM[40]), SIM800xGPRSSetQoSMin@str(COMRAM[40]), 
		 -> SIM800xIPGetParameters@str(COMRAM[30]), SIM800xIPSetRate@str(COMRAM[8]), SIM800xSetBaudRate@str(COMRAM[15]), SIM800xInit@str(COMRAM[15]), 
		 -> SystemTask@msg(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    SIM800xSDMReadF1Pkt@data	PTR unsigned char  size(2) Largest target is 40
		 -> SIM800x3GPPGetSubscriberNumber@str(COMRAM[40]), SIM800x3GPPGetSignalQuality@str(COMRAM[20]), SIM800x3GPPGetOperatorName@str(COMRAM[40]), SIM800xHTTPReadHeader@str(COMRAM[30]), 
		 -> SIM800xHTTPReadState@str(COMRAM[30]), SIM800xHTTPRead@str(COMRAM[30]), SIM800xHTTPAction@str(COMRAM[30]), SIM800xHTTPInputData@str(COMRAM[30]), 
		 -> SIM800xGPRSGetNRegState@str(COMRAM[20]), SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xGPRSSetDataMode@str(COMRAM[20]), SIM800xIPGetState@str(COMRAM[30]), 
		 -> SIM800xGetIMSI@str(COMRAM[20]), SIM800xGetSoftwareRevisionID@str(COMRAM[30]), ProcessResp4@str(COMRAM[20]), 

    SIM800xSDMPrint@str	PTR const unsigned char  size(2) Largest target is 279
		 -> STR_107(CODE[9]), STR_106(CODE[8]), STR_105(CODE[10]), STR_104(CODE[16]), 
		 -> STR_103(CODE[13]), STR_102(CODE[16]), STR_101(CODE[14]), SIM800xHTTPRead@str(COMRAM[30]), 
		 -> SIM800xHTTPAction@str(COMRAM[30]), SIM800xHTTPInputData@str(COMRAM[30]), STR_97(CODE[24]), STR_96(CODE[23]), 
		 -> SIM800xHTTPSetTimeout@str(COMRAM[30]), SIM800xHTTPSetBreakEnd@str(COMRAM[30]), SIM800xHTTPSetBreak@str(COMRAM[30]), SIM800xHTTPSetRedir@str(COMRAM[25]), 
		 -> SIM800xHTTPSetPort@str(COMRAM[30]), STR_90(CODE[21]), STR_89(CODE[18]), STR_88(CODE[19]), 
		 -> STR_87(CODE[19]), STR_86(CODE[13]), STR_85(CODE[13]), STR_84(CODE[10]), 
		 -> STR_83(CODE[11]), STR_82(CODE[6]), STR_81(CODE[10]), STR_80(CODE[11]), 
		 -> STR_79(CODE[11]), STR_78(CODE[12]), STR_77(CODE[12]), STR_76(CODE[2]), 
		 -> STR_75(CODE[3]), STR_74(CODE[3]), STR_73(CODE[2]), STR_72(CODE[13]), 
		 -> SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xGPRSSetDataMode@str(COMRAM[20]), STR_69(CODE[12]), STR_68(CODE[12]), 
		 -> STR_67(CODE[11]), SIM800xGPRSSetQoSRequest@str(COMRAM[40]), SIM800xGPRSSetQoSMin@str(COMRAM[40]), STR_64(CODE[7]), 
		 -> STR_63(CODE[12]), STR_62(CODE[12]), STR_61(CODE[12]), STR_60(CODE[11]), 
		 -> SIM800xIPGetParameters@str(COMRAM[30]), STR_58(CODE[12]), STR_57(CODE[12]), STR_56(CODE[12]), 
		 -> STR_55(CODE[9]), STR_54(CODE[12]), SIM800xIPSetRate@str(COMRAM[8]), STR_52(CODE[13]), 
		 -> STR_51(CODE[12]), STR_50(CODE[8]), STR_49(CODE[12]), STR_48(CODE[9]), 
		 -> STR_47(CODE[12]), STR_46(CODE[8]), STR_45(CODE[12]), STR_44(CODE[12]), 
		 -> STR_43(CODE[12]), STR_42(CODE[9]), STR_41(CODE[5]), STR_40(CODE[8]), 
		 -> STR_39(CODE[8]), STR_38(CODE[8]), STR_37(CODE[8]), STR_36(CODE[8]), 
		 -> STR_35(CODE[4]), STR_34(CODE[6]), SIM800xSetBaudRate@str(COMRAM[15]), STR_32(CODE[13]), 
		 -> STR_31(CODE[6]), SIM800xInit@str(COMRAM[15]), STR_29(CODE[6]), STR_28(CODE[4]), 
		 -> STR_10(CODE[17]), STR_9(CODE[279]), STR_4(CODE[9]), STR_3(CODE[5]), 

    SIM800xSDMSendBytes@data	PTR unsigned char  size(2) Largest target is 100
		 -> txmessage(BANK2[100]), 

    SIM800xHTTPRead@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemTask@errcode(BANK0[2]), 

    SIM800xHTTPRead@data	PTR unsigned char  size(2) Largest target is 30
		 -> rxmessage(BANK1[30]), 

    SIM800xHTTPRead@cnt	PTR unsigned long  size(2) Largest target is 4
		 -> SystemTask@cnt(BANK0[4]), 

    SIM800xHTTPAction@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemTask@errcode(BANK0[2]), 

    SIM800xHTTPAction@cnt	PTR unsigned long  size(2) Largest target is 4
		 -> SystemTask@cnt(BANK0[4]), 

    SIM800xHTTPAction@statuscode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemTask@scode(BANK0[2]), 

    SIM800xHTTPInputData@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemTask@errcode(BANK0[2]), 

    SIM800xHTTPInputData@data	PTR unsigned char  size(2) Largest target is 100
		 -> txmessage(BANK2[100]), 

    SIM800xHTTPSetContent@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemInit@err(COMRAM[2]), 

    SIM800xHTTPSetContent@content	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_10(CODE[17]), 

    SIM800xHTTPSetURL@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemInit@err(COMRAM[2]), 

    SIM800xHTTPSetURL@url	PTR const unsigned char  size(2) Largest target is 279
		 -> STR_9(CODE[279]), 

    SIM800xHTTPInit@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemInit@err(COMRAM[2]), 

    SIM800xIPGetState@ip	PTR unsigned char  size(2) Largest target is 20
		 -> SystemInit@ip(COMRAM[20]), 

    SIM800xIPSetAPN@apn	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_4(CODE[9]), 

    SIM800xIPSetConnectionType@contype	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 0

    ProcessResp4@ec	PTR unsigned int  size(2) Largest target is 2
		 -> SystemInit@err(COMRAM[2]), 

    ProcessResp2@str	PTR unsigned char  size(2) Largest target is 40
		 -> SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xIPGetState@str(COMRAM[30]), SIM800xGetSoftwareRevisionID@str(COMRAM[30]), 

    StrToInt@str	PTR const unsigned char  size(2) Largest target is 40
		 -> SIM800x3GPPGetSubscriberNumber@str(COMRAM[40]), SIM800x3GPPGetSignalQuality@str(COMRAM[20]), SIM800x3GPPGetOperatorName@str(COMRAM[40]), SIM800xHTTPReadHeader@str(COMRAM[30]), 
		 -> SIM800xHTTPReadState@str(COMRAM[30]), SIM800xHTTPRead@str(COMRAM[30]), SIM800xHTTPAction@str(COMRAM[30]), SIM800xHTTPInputData@str(COMRAM[30]), 
		 -> SIM800xGPRSGetNRegState@str(COMRAM[20]), SIM800xGPRSSetDataMode@str(COMRAM[20]), SIM800xGetIMSI@str(COMRAM[20]), ProcessResp4@str(COMRAM[20]), 

    SoftUARTPrint@str	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_27(CODE[17]), STR_26(CODE[3]), STR_25(CODE[7]), SystemTask@msg(BANK0[20]), 
		 -> STR_22(CODE[34]), STR_21(CODE[32]), STR_20(CODE[35]), STR_11(CODE[8]), 
		 -> STR_8(CODE[32]), STR_7(CODE[3]), STR_6(CODE[31]), SystemInit@ip(COMRAM[20]), 
		 -> STR_5(CODE[8]), STR_2(CODE[30]), STR_1(CODE[21]), 

    AddEntryToJsonObject@value	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_19(CODE[3]), STR_17(CODE[3]), STR_15(CODE[5]), STR_13(CODE[3]), 

    AddEntryToJsonObject@key	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_18(CODE[15]), STR_16(CODE[20]), STR_14(CODE[4]), STR_12(CODE[23]), 

    AddEntryToJsonObject@JsonObject	PTR unsigned char  size(2) Largest target is 100
		 -> txmessage(BANK2[100]), 

    AddEntryToJsonObject@Cpos	PTR unsigned int  size(2) Largest target is 2
		 -> cpos(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_SystemTask
    _SystemTask->_SIM800xHTTPRead
    _SoftUARTRxAvailable->___awmod
    _SoftUARTReceiveByte->___awmod
    _SIM800xHTTPRead->_sprintf
    _SIM800xHTTPInputData->_sprintf
    _SIM800xHTTPAction->_sprintf
    _SystemInit->_SIM800xIPGetState
    _SoftUARTPrint->_SoftUARTTransmitByte
    _SIM800xInit->_sprintf
    _sprintf->___llmod
    ___llmod->___lldiv
    _SIM800xSDMInit->___lldiv
    _SIM800xIPSetConnectionType->_ProcessResp1
    _SIM800xIPSetAPN->_ProcessResp1
    _SIM800xIPOpen->_ProcessResp1
    _ProcessResp1->_SIM800xSDMRxAvailable
    _SIM800xIPGetState->_ProcessResp2
    _ProcessResp2->_SIM800xSDMReadF1Pkt
    _SIM800xHTTPSetURL->_ProcessResp4
    _SIM800xHTTPSetContent->_ProcessResp4
    _SIM800xHTTPInit->_ProcessResp4
    _SIM800xSDMPrint->_SIM800xSDMSendByte
    _ProcessResp4->_StrToInt
    _StrToInt->___lmul
    _SIM800xSDMReadF1Pkt->_SIM800xSDMRxAvailable
    _SIM800xSDMRxAvailable->___lwmod
    _SIM800xSDMReadByte->___lwmod

Critical Paths under _Isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_SystemTask

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  165277
                         _SystemInit
                         _SystemTask
 ---------------------------------------------------------------------------------
 (1) _SystemTask                                          31    31      0   64988
                                            104 COMRAM     2     2      0
                                              0 BANK0     29    29      0
                  _SIM800xHTTPAction
               _SIM800xHTTPInputData
                    _SIM800xHTTPRead
                      _SoftUARTPrint
                _SoftUARTReceiveByte
                _SoftUARTRxAvailable
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _SoftUARTRxAvailable                                  2     2      0     726
                                              6 COMRAM     2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _SoftUARTReceiveByte                                  3     1      2     749
                                              6 COMRAM     3     1      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     726
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPRead                                     58    44     14   19253
                                             46 COMRAM    58    44     14
                    _SIM800xSDMFlush
                     _SIM800xSDMPeek
                    _SIM800xSDMPrint
                 _SIM800xSDMReadByte
                _SIM800xSDMReadF1Pkt
              _SIM800xSDMRxAvailable
                           _StrToInt
                            _Tick_ms
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPInputData                                56    44     12   20075
                                             46 COMRAM    56    44     12
                    _SIM800xSDMFlush
                     _SIM800xSDMPeek
                    _SIM800xSDMPrint
                _SIM800xSDMReadF1Pkt
              _SIM800xSDMRxAvailable
                _SIM800xSDMSendBytes
                           _StrToInt
                            _Tick_ms
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMSendBytes                                  4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPAction                                   55    45     10   18453
                                             46 COMRAM    55    45     10
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                _SIM800xSDMReadF1Pkt
              _SIM800xSDMRxAvailable
                           _StrToInt
                            _Tick_ms
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                          22    22      0  100289
                                             79 COMRAM    22    22      0
               _AddEntryToJsonObject
                    _SIM800xHTTPInit
              _SIM800xHTTPSetContent
                  _SIM800xHTTPSetURL
                  _SIM800xIPGetState
                      _SIM800xIPOpen
                    _SIM800xIPSetAPN
         _SIM800xIPSetConnectionType
                        _SIM800xInit
                       _SoftUARTInit
                      _SoftUARTPrint
 ---------------------------------------------------------------------------------
 (2) _SoftUARTPrint                                        2     0      2    1429
                                              3 COMRAM     2     0      2
               _SoftUARTTransmitByte
 ---------------------------------------------------------------------------------
 (3) _SoftUARTTransmitByte                                 3     3      0      92
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _SoftUARTInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIM800xInit                                         22    18      4   12549
                                             46 COMRAM    22    18      4
                    _SIM800xSDMFlush
                     _SIM800xSDMInit
                     _SIM800xSDMPeek
                    _SIM800xSDMPrint
                 _SIM800xSDMReadByte
              _SIM800xSDMRxAvailable
                            _Wait_ms
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             33    21     12    3944
                                             22 COMRAM    24    12     12
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     311
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _Wait_ms                                             12     8      4     512
                                              0 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMInit                                      12     8      4     735
                                             13 COMRAM    12     8      4
                        _SystimeInit
                     _USARTAsyncInit
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     592
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _USARTAsyncInit                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _SystimeInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIM800xIPSetConnectionType                           3     1      2    8164
                                             18 COMRAM     3     1      2
                       _ProcessResp1
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                 _SIM800xSDMSendByte
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _SIM800xIPSetAPN                                      3     1      2    8164
                                             18 COMRAM     3     1      2
                       _ProcessResp1
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                 _SIM800xSDMSendByte
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _SIM800xIPOpen                                        1     1      0    6616
                                             18 COMRAM     1     1      0
                       _ProcessResp1
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                 _SIM800xSDMSendByte
 ---------------------------------------------------------------------------------
 (3) _ProcessResp1                                         9     9      0     679
                                              9 COMRAM     9     9      0
                     _SIM800xSDMPeek
              _SIM800xSDMRxAvailable
                            _Tick_ms
 ---------------------------------------------------------------------------------
 (2) _SIM800xIPGetState                                   45    43      2   11401
                                             35 COMRAM    44    42      2
                       _ProcessResp2
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
              _SIM800xSDMRxAvailable
                 _SIM800xSDMSendByte
                            _Tick_ms
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _ProcessResp2                                        12    10      2    3066
                                             23 COMRAM    12    10      2
                     _SIM800xSDMPeek
                _SIM800xSDMReadF1Pkt
                            _Tick_ms
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMPeek                                       3     3      0      44
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPSetURL                                    4     0      4   17062
                                             64 COMRAM     4     0      4
                       _ProcessResp4
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                 _SIM800xSDMSendByte
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPSetContent                                4     0      4   17062
                                             64 COMRAM     4     0      4
                       _ProcessResp4
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                 _SIM800xSDMSendByte
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2    1428
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPInit                                      2     0      2   15492
                                             64 COMRAM     2     0      2
                       _ProcessResp4
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMPrint                                      2     0      2    5871
                                              1 COMRAM     2     0      2
                 _SIM800xSDMSendByte
 ---------------------------------------------------------------------------------
 (4) _SIM800xSDMSendByte                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ProcessResp4                                        32    30      2    9523
                                             32 COMRAM    32    30      2
                _SIM800xSDMReadF1Pkt
              _SIM800xSDMRxAvailable
                           _StrToInt
                            _Tick_ms
 ---------------------------------------------------------------------------------
 (3) _StrToInt                                            20    16      4    4775
                                             12 COMRAM    20    16      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     648
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMReadF1Pkt                                 14    12      2    2371
                                              9 COMRAM    14    12      2
                    _SIM800xSDMFlush
                 _SIM800xSDMReadByte
              _SIM800xSDMRxAvailable
                            _Tick_ms
 ---------------------------------------------------------------------------------
 (3) _Tick_ms                                              4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMRxAvailable                                4     2      2     589
                                              5 COMRAM     4     2      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) _SIM800xSDMReadByte                                   1     1      0     612
                                              5 COMRAM     1     1      0
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     589
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _SIM800xSDMFlush                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AddEntryToJsonObject                                13     5      8    2232
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Isr                                                  0     0      0       0
                    _SysTimeCallBack
 ---------------------------------------------------------------------------------
 (8) _SysTimeCallBack                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SystemInit
     _AddEntryToJsonObject
     _SIM800xHTTPInit
       _ProcessResp4
         _SIM800xSDMReadF1Pkt
           _SIM800xSDMFlush
           _SIM800xSDMReadByte
             ___lwmod
           _SIM800xSDMRxAvailable
             ___lwmod
           _Tick_ms
         _SIM800xSDMRxAvailable
         _StrToInt
           ___lmul
         _Tick_ms
       _SIM800xSDMFlush
       _SIM800xSDMPrint
         _SIM800xSDMSendByte
     _SIM800xHTTPSetContent
       _ProcessResp4
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMSendByte
       _strlen
     _SIM800xHTTPSetURL
       _ProcessResp4
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMSendByte
       _strlen
     _SIM800xIPGetState
       _ProcessResp2
         _SIM800xSDMPeek
         _SIM800xSDMReadF1Pkt
         _Tick_ms
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMRxAvailable
       _SIM800xSDMSendByte
       _Tick_ms
       _strlen
     _SIM800xIPOpen
       _ProcessResp1
         _SIM800xSDMPeek
         _SIM800xSDMRxAvailable
         _Tick_ms
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMSendByte
     _SIM800xIPSetAPN
       _ProcessResp1
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMSendByte
       _strlen
     _SIM800xIPSetConnectionType
       _ProcessResp1
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMSendByte
       _strlen
     _SIM800xInit
       _SIM800xSDMFlush
       _SIM800xSDMInit
         _SystimeInit
         _USARTAsyncInit
         ___lldiv
       _SIM800xSDMPeek
       _SIM800xSDMPrint
       _SIM800xSDMReadByte
       _SIM800xSDMRxAvailable
       _Wait_ms
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
     _SoftUARTInit
     _SoftUARTPrint
       _SoftUARTTransmitByte
   _SystemTask
     _SIM800xHTTPAction
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMReadF1Pkt
       _SIM800xSDMRxAvailable
       _StrToInt
       _Tick_ms
       _sprintf
     _SIM800xHTTPInputData
       _SIM800xSDMFlush
       _SIM800xSDMPeek
       _SIM800xSDMPrint
       _SIM800xSDMReadF1Pkt
       _SIM800xSDMRxAvailable
       _SIM800xSDMSendBytes
       _StrToInt
       _Tick_ms
       _sprintf
       _strlen
     _SIM800xHTTPRead
       _SIM800xSDMFlush
       _SIM800xSDMPeek
       _SIM800xSDMPrint
       _SIM800xSDMReadByte
       _SIM800xSDMReadF1Pkt
       _SIM800xSDMRxAvailable
       _StrToInt
       _Tick_ms
       _sprintf
     _SoftUARTPrint
     _SoftUARTReceiveByte
       ___awmod
     _SoftUARTRxAvailable
       ___awmod
     _sprintf

 _Isr (ROOT)
   _SysTimeCallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      DC       7       85.9%
BITBANK0            80      0       0       4        0.0%
BANK0               80     1D      65       5       78.9%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     6A      7D       1       99.2%
BITBIGSFRllhhh      25      0       0      18        0.0%
BITBIGSFRlh         19      0       0      17        0.0%
BITBIGSFRh           D      0       0      16        0.0%
BITBIGSFRllhl        C      0       0      19        0.0%
BITBIGSFRlll         6      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     376      21        0.0%
DATA                 0      0     376       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Apr 29 12:15:43 2023

                                     SIM800xSDMReadF1Pkt@time 0013  
                                         ?_SIM800xSDMSendByte 0001  
                                                          l50 0D98  
                                                          l54 0DA6  
                                                          l75 1F96  
                                                          _IO 000F80  
                                        ?_SIM800xSDMSendBytes 0001  
                                                         l104 008C  
                                                         l113 02AC  
                                                         l223 1B74  
                                                         l406 1212  
                                                         l247 1D82  
                                                         l361 1800  
                                                         l354 10D4  
                                                         l515 1A32  
                                                         l509 19C6  
                                                         l286 191A  
                                                         l367 15E4  
                                                         l543 1DCC  
                                   __end_of_SIM800xHTTPAction 09F0  
                                                         l392 1424  
                                                         l385 1444  
                                                         l803 09EA  
                                                         l558 1546  
                                                         l737 1BFA  
                                                         l825 0574  
                                                         l769 1C4E  
                                                         l779 0BEC  
                                                         _GIE 007F97  
                                                         _Isr 0008  
                                                         _val 0073  
                                                ___awmod@sign 0006  
                                        ??_SIM800xSDMReadByte 0006  
                                   __end_of_SIM800xHTTPSetURL 1C00  
                                                         wreg 000FE8  
                                   __end_of_SIM800xIPGetState 154C  
                                         SIM800xHTTPRead@data 002F  
                                                StrToInt@ctrl 001B  
                                         SIM800xHTTPRead@time 0063  
                                         SIM800xHTTPRead@size 0035  
                                                StrToInt@stop 0010  
                                        ??_SIM800xSDMSendByte 0001  
                                             ?_USARTAsyncInit 0001  
                                                        ?_Isr 0001  
                                                        l1041 1CEC  
                                                        l1027 1E58  
                                                        l1053 1E12  
                                                        l1216 05EE  
                                                        l1066 1340  
                                                        l1219 0654  
                                                        l3110 1C8A  
                                                        l3102 1C64  
                                                        l3104 1C6E  
                                                        l1264 1664  
                                                        l3202 1DF2  
                                                        l4004 090C  
                                                        l4020 09AA  
                                                        l4100 050A  
                                                        l3222 1268  
                                                        l3142 1B20  
                                                        l3310 05AA  
                                                        l3302 0586  
                                                        l3128 1CB8  
                                                        l3232 1296  
                                                        l3240 12D2  
                                                        l3312 05B0  
                                                        l4040 0336  
                                                        l3234 12C8  
                                                        l3138 1B0A  
                                                        l3170 0FA0  
                                                        l3244 12F8  
                                                        l3252 1328  
                                                        l3164 0F70  
                                                        l3324 0614  
                                                        l3316 05B6  
                                                        l3308 05A2  
                                                        l4108 052C  
                                                        l4060 03DA  
                                                        l4044 033A  
                                                        l1645 1864  
                                                        l1726 1C96  
                                                        l3190 1092  
                                                        l3174 0FD8  
                                                        l3182 1068  
                                                        l3254 1F82  
                                                        l3430 17A0  
                                                        l3270 161C  
                                                        l3422 1902  
                                                        l3342 069E  
                                                        l3406 1B7E  
                                                        l4054 03A2  
                                                        l3520 13E6  
                                                        l3512 13D8  
                                                        l3280 1654  
                                                        l3408 1B82  
                                                        l3600 177A  
                                                        l3194 109A  
                                                        l3290 1828  
                                                        l3370 079C  
                                                        l3362 0702  
                                                        l3338 0676  
                                                        l4082 0476  
                                                        l4090 04A4  
                                                        l3532 1432  
                                                        l3380 1CFE  
                                                        l3460 156A  
                                                        l3436 17D6  
                                                        l3268 160E  
                                                        l3364 070C  
                                                        l3348 06A4  
                                                        l3382 1D04  
                                                        l3470 15A2  
                                                        l3446 17FC  
                                                        l3710 19F4  
                                                        l4094 04D8  
                                                        l3800 1BCA  
                                                        l3296 1854  
                                                        l3288 181A  
                                                        l3392 1B62  
                                                        l4088 0496  
                                                        l4192 0F30  
                                                        l4176 0DE8  
                                                        l3538 1440  
                                                        l3490 1396  
                                                        l3554 1A9C  
                                                        l3466 157A  
                                                        l3626 1142  
                                                        l4194 0F3E  
                                                        l3484 135E  
                                                        l3476 15D4  
                                                        l3732 1D96  
                                                        l3628 1148  
                                                        l3580 1728  
                                                        l3558 1AC8  
                                                        l3662 120E  
                                                        l3566 1E6E  
                                                        l3910 0AF2  
                                                        l3840 00BC  
                                                        l3760 148A  
                                                        l3656 1200  
                                                        l3672 1A3C  
                                                        l3592 175E  
                                                        l3584 1738  
                                                        l3576 171A  
                                                        l3818 1C1E  
                                                        l3906 0AC0  
                                                        l3586 1742  
                                                        l3860 023E  
                                                        l3844 00FA  
                                                        l3780 1524  
                                                        l3764 14BC  
                                                        l3676 1A68  
                                                        l3932 0B84  
                                                        l3596 176A  
                                                        l3862 0268  
                                                        l3854 01DC  
                                                        l3838 0042  
                                                        l3686 1988  
                                                        l3856 0200  
                                                        l3776 14F8  
                                                        l3928 0B52  
                                                        l3938 0B9E  
                                                        l3980 087A  
                                                        l3964 07EC  
                                                        l3974 0842  
                                                        l3878 1D4E  
                                                        l3896 0A58  
                                                        l3998 08DA  
                                                        STR_1 7D04  
                                                        STR_2 7B73  
                                                        STR_3 7FE0  
                                                        STR_4 7F6B  
                                                        STR_5 7FB4  
                                                        STR_6 7B54  
                                                        STR_7 7B31  
                                                        STR_8 7B34  
                                                        STR_9 79B8  
                                                        u2020 194C  
                                                        u2110 1390  
                                                        u2120 13A8  
                                                        u2210 1AC0  
                                                        u2050 17E8  
                                                        u2131 13AE  
                                                        u2220 1AEC  
                                                        u2205 189E  
                                                        u2080 1574  
                                                        u2217 1AB6  
                                                        u2410 1982  
                                                        u2227 1AE2  
                                                        u1700 1236  
                                                        u3117 1B6A  
                                                        u2510 1C1A  
                                                        u2430 19EE  
                                                        u3127 1B8A  
                                                        u1800 1622  
                                                        u2600 0A40  
                                                        u3137 1B9C  
                                                        u1570 1C74  
                                                        u2370 1A60  
                                                        u2610 0A56  
                                                        u2290 1748  
                                                        u1740 12C6  
                                                        u2380 1A8C  
                                                        u2621 0A60  
                                                        u2470 14CE  
                                                        u1830 182E  
                                                        u1910 06E4  
                                                        _PIE1 000F9D  
                                                        u2720 07E6  
                                                        u2640 0B04  
                                                        u2377 1A56  
                                                        u1770 1338  
                                                        u1930 07AE  
                                                        u2387 1A82  
                                                        u2731 07F4  
                                                        u1940 07CA  
                                                        u2740 0874  
                                                        u2581 0A1A  
                                                        u1950 1D28  
                                                        u2750 088C  
                                                        u2591 0A2C  
                                                        u2680 0B96  
                                                        u2840 0334  
                                                        u2851 0342  
                                                        u2940 051C  
                                                        u2860 03D4  
                                                        u1957 1D1E  
                                                        u2790 091E  
                                                        u2870 03EC  
                                                        _RCIF 007CF5  
                                        SIM800xHTTPRead@F2950 0164  
                                                        _TMR0 000FD6  
                                       ??_SIM800xSDMReadF1Pkt 000C  
                                                        _Tout 007A  
                                                        _cpos 0078  
                                                        _main 1F90  
                                       SoftUARTTransmitByte@k 0003  
                                                        fsr1h 000FE2  
                                                        fsr2h 000FDA  
                                                        indf1 000FE7  
                                                        indf2 000FDF  
                                                        fsr1l 000FE1  
                                                        fsr2l 000FD9  
                                                        btemp 007E  
                                                        prodh 000FF4  
                                                        prodl 000FF3  
                                         SIM800xIPGetState@ip 0024  
                                                        start 0016  
                                      ?_SIM800xSDMRxAvailable 0006  
                                             ProcessResp2@res 0022  
                                             ProcessResp4@res 003F  
                                             ProcessResp2@str 0018  
                                             ProcessResp4@str 0027  
                                                ___param_bank 000000  
                                               StrToInt@start 000F  
                                                       ??_Isr 0001  
                                       ??_SIM800xSDMSendBytes 0005  
                                             __end_of_Tick_ms 1F40  
                                             __end_of_Wait_ms 1960  
                                                ?_SIM800xInit 002F  
                                                       ?_main 0001  
                                                       STR_10 7D9C  
                                                       STR_11 7FB4  
                                                       STR_12 7CAE  
                                                       STR_20 7ACF  
                                                       STR_13 7FF3  
                                                       STR_21 7B14  
                                                       STR_14 7FE9  
                                                       STR_30 7E7A  
                                                       STR_22 7AF2  
                                                       STR_15 7FDB  
                                                       STR_31 7FD0  
                                                       STR_23 7C7F  
                                                       STR_40 7F8C  
                                                       STR_32 7E08  
                                                       STR_16 7D2D  
                                                       STR_24 7BE7  
                                                       STR_17 7FF9  
                                                       STR_41 7FD6  
                                                       STR_25 7FC3  
                                                       STR_26 7B31  
                                                       STR_50 7FA4  
                                                       STR_42 7F47  
                                                       STR_18 7DEB  
                                                       STR_19 7FF6  
                                                       STR_43 7ECE  
                                                       STR_27 7D8B  
                                                       STR_28 7FE5  
                                                       STR_36 7F74  
                                                       STR_60 7F13  
                                                       STR_44 7E86  
                                                       STR_52 7E49  
                                             __end_of___awmod 1788  
                                                       STR_45 7ECE  
                                                       STR_29 7FCA  
                                                       STR_37 7F84  
                                                       STR_61 7E62  
                                                       STR_46 7FAC  
                                                       STR_38 7F9C  
                                                       STR_62 7E56  
                                                       STR_70 7D19  
                                                       STR_39 7F7C  
                                                       STR_55 7F59  
                                                       STR_63 7EE6  
                                                       STR_71 7DDC  
                                                       STR_64 7FBC  
                                                       STR_48 7F62  
                                                       STR_80 7EF2  
                                                       STR_56 7EAA  
                                                       STR_72 7E15  
                                                       STR_73 7FFC  
                                                       STR_81 7F33  
                                                       STR_57 7E92  
                                                       STR_65 7B91  
                                                       STR_74 7FF0  
                                                       STR_58 7EC2  
                                                       STR_90 7CEF  
                                                       STR_66 7BAE  
                                                       STR_75 7FED  
                                                       STR_67 7F08  
                                                       STR_83 7EFD  
                                                       STR_59 7DCD  
                                                       STR_91 7C02  
                                                       STR_84 7F3D  
                                                       STR_68 7EB6  
                                                       STR_92 7C4F  
                                                       STR_77 7EDA  
                                                       STR_69 7E9E  
                                                       STR_85 7E3C  
                                                       STR_93 7C36  
                                                       STR_78 7E6E  
                                                       STR_86 7E2F  
                                                       STR_94 7BCB  
                                                       STR_79 7F1E  
                                                       STR_87 7D41  
                                                       STR_95 7C1C  
                                                       STR_88 7D54  
                                                       STR_96 7C97  
                                                       STR_89 7D79  
                                                       STR_97 7C67  
                                                       STR_98 7CC5  
                                                       STR_99 7D67  
                                             __end_of___lldiv 167A  
                                                       _T0CON 000FD5  
                                             __end_of___llmod 187A  
                                             __end_of___lwmod 1CA4  
                                                       i2l302 1E36  
                                                       i2l303 1E4E  
                                                       _RCREG 000FAE  
                                                       _RCSTA 000FAB  
                                                       _SPBRG 000FAF  
                                                       _TXREG 000FAD  
                                                       _TXSTA 000FAC  
                                         ___lmul@multiplicand 0005  
                                            __end_of_OSC_FREQ 79B8  
                                        SIM800xHTTPSetURL@url 0041  
                                             __end_of_dpowers 79B7  
                                     __end_of_SIM800xHTTPInit 1F2A  
                                     __end_of_SIM800xHTTPRead 057A  
                                     __end_of_SIM800xIPSetAPN 1A38  
                                                       tablat 000FF5  
                                     __end_of_SIM800xSDMFlush 1F56  
                                     __end_of_SIM800xSDMPrint 1AF8  
                                        SIM800xIPGetState@cid 004D  
                                        SIM800xIPGetState@len 004E  
                                        SIM800xIPGetState@res 004C  
                                                       ttemp5 007F  
                                                       ttemp6 0082  
                                                       ttemp7 0086  
                                        SIM800xIPGetState@str 002A  
                                                       status 000FD8  
                                                       wtemp8 007F  
                                             __end_of_sprintf 07DC  
                                            ProcessResp1@time 000E  
                                            ProcessResp2@time 001E  
                                            ProcessResp4@time 003B  
                                   SIM800xHTTPReadState@F2967 0146  
                                             __initialization 167A  
                                                __end_of_main 1F9E  
                                            SIM800xSDMInit@br 000E  
                                                      ??_main 006B  
                                            SIM800xIPOpen@cid 0013  
                                               __activetblptr 000002  
                                       __end_of_SoftUARTPrint 1A98  
                                    AddEntryToJsonObject@Cpos 0007  
                                            __end_of_StrToInt 10DA  
                                            ___llmod@dividend 000E  
                                                      STR_100 7CDA  
                                                      STR_101 7DFA  
                                                      STR_102 7DAD  
                                                      STR_103 7E22  
                                                      STR_104 7DBD  
                                                      STR_105 7F29  
                                                      STR_106 7F94  
                                                      STR_107 7F50  
                                                      _INT0IF 007F91  
                                                      _INTCON 000FF2  
                                                      _TMR0IE 007F95  
                                                      _TMR0IF 007F92  
                                                      _DecVar 00BC  
                                           ??_SysTimeCallBack 0001  
                                                      _IncVar 006B  
                                                      _RxFIFO 0200  
                               __end_of_SIM800xHTTPSetContent 1C54  
                                                   ??_Tick_ms 0005  
                                         _SoftUARTReceiveByte 1D3E  
                                                   ??_Wait_ms 0005  
                                                      ___lmul 1AF8  
                                                   ??___awmod 0005  
                                                   ??___lldiv 0009  
                                                   ??___llmod 0016  
                                                   ??___lwmod 0005  
                                                      clear_0 16C0  
                                                      clear_1 16CC  
                                                      clear_2 16D8  
                                                      clear_3 16E4  
                                                      clear_4 16F0  
                                             ___awmod@divisor 0003  
                                                      isa$std 000001  
                                             ___awmod@counter 0005  
                                     SoftUARTTransmitByte@tmp 0002  
                                                      _strlen 1CF2  
                                 SIM800xHTTPAction@statuscode 002F  
                                                __pdataCOMRAM 007A  
                                           ProcessResp4@F2649 00A8  
                                                __mediumconst 798E  
                                        ?_SoftUARTReceiveByte 0007  
                                                      tblptrh 000FF7  
                                                      tblptrl 000FF6  
                                                      tblptru 000FF8  
                                            SoftUARTPrint@str 0004  
                                                   ??_sprintf 0023  
                                         _SoftUARTRxAvailable 1EB8  
                                            ?_SIM800xHTTPInit 0041  
                                            ?_SIM800xHTTPRead 002F  
                                            ?_SIM800xIPSetAPN 0013  
                                            ?_SIM800xSDMFlush 0001  
                                               _SIM800xIPOpen 1D88  
                                                  __accesstop 0080  
                                     __end_of__initialization 16F6  
                                            ?_SIM800xSDMPrint 0002  
                                               ___rparam_used 000001  
                                      SIM800xHTTPInit@errcode 0041  
                                                  StrToInt@po 001C  
                                           SIM800xHTTPRead@sz 005F  
                                              __pcstackCOMRAM 0001  
                                                __pidataBANK0 1FA2  
                                        ?_SoftUARTRxAvailable 0001  
                                      SIM800xHTTPRead@errcode 003B  
                                            ??_USARTAsyncInit 0001  
                                                  _SystemInit 0BF2  
                                       ??_SoftUARTReceiveByte 0009  
                                                  _SystemTask 0DAC  
                                           SIM800xSDMInit@val 0016  
                                           SIM800xSDMPeek@idx 0003  
                                                  __pbssBANK0 0080  
                                                  __pbssBANK1 0100  
                                                  __pbssBANK2 0200  
                                                  __pbssBANK3 0300  
                                              ?_SIM800xIPOpen 0001  
                                     ??_SIM800xSDMRxAvailable 0008  
                              AddEntryToJsonObject@JsonObject 0001  
                                       ??_SoftUARTRxAvailable 0007  
                                SIM800xHTTPSetContent@content 0041  
                                                     ?___lmul 0001  
                                SIM800xHTTPSetContent@errcode 0043  
                                                   ?_StrToInt 000D  
                                               ?_SoftUARTInit 0001  
                                              ___lmul@product 0009  
                                                     ?_strlen 0001  
                                                     _INTCON2 000FF1  
                                 __end_of_SIM800xSDMReadF1Pkt 1346  
                                        SIM800xSDMReadF1Pkt@i 0012  
                                               ??_SystimeInit 0001  
                                 __end_of_SIM800xSDMSendBytes 1E86  
                                                SIM800xInit@c 0044  
                                                     __Hparam 0000  
                                                     __Lparam 0000  
                                                     _Tick_ms 1F2A  
                                                     _Wait_ms 18EE  
                                               ?_ProcessResp1 0001  
                                               ?_ProcessResp2 0018  
                                               ?_ProcessResp4 0021  
                                                     ___awmod 1704  
                                              ??_SoftUARTInit 0001  
                                                     ___lldiv 15EA  
                                                     ___llmod 1806  
                                                  ??_StrToInt 0011  
                                                     ___lwmod 1C54  
                                                     __pcinit 167A  
                                                     __ramtop 0600  
                                                     __ptext0 1F90  
                                                     __ptext1 0DAC  
                                                     __ptext2 1EB8  
                                                     __ptext3 1D3E  
                                                     __ptext4 1704  
                                                     __ptext5 0302  
                                                     __ptext6 09F0  
                                                     __ptext7 1E54  
                                                     __ptext8 07DC  
                                                     __ptext9 0BF2  
                                                     _dpowers 798F  
                                                 ?_SystemInit 0001  
                                                 ?_SystemTask 0001  
                                            ___awmod@dividend 0001  
                                             _SysTimeCallBack 1E18  
                                    SoftUARTTransmitByte@data 0001  
                                             ??_SIM800xIPOpen 0013  
                                                     _sprintf 057A  
                                        end_of_initialization 16F6  
                                               __Lmediumconst 798E  
                                             ___lldiv@divisor 0005  
                                             ___lldiv@counter 000D  
                                              ??_ProcessResp1 000A  
                                              ??_ProcessResp2 001A  
                                              ??_ProcessResp4 0023  
                                                     postdec1 000FE5  
                                                     postdec2 000FDD  
                                                     postinc0 000FEE  
                                                     postinc2 000FDE  
                                      SIM800xIPGetState@time1 0048  
                                         __end_of_SystimeInit 1F08  
                                                     strlen@s 0001  
                                                SystemInit@ip 0050  
                                          SIM800xHTTPAction@t 005B  
                                              _SIM800xSDMInit 187A  
                                              _SIM800xSDMPeek 1DD2  
                                      SIM800xSDMReadF1Pkt@val 0010  
                                      SIM800xSDMReadF1Pkt@tmp 0017  
                                ??_SIM800xIPSetConnectionType 0015  
                                          SIM800xHTTPRead@cnt 0039  
                                          SIM800xHTTPRead@res 0067  
                                                 StrToInt@val 0016  
                                          SIM800xHTTPRead@str 0041  
                                                 StrToInt@str 000D  
                                                   _TXSTAbits 000FAC  
                                          SIM800xIPGetState@i 004F  
                                              ProcessResp4@ec 0021  
                             _Rxfifocurrent@SIM800x_SDM$F1160 006F  
                                       _SIM800xHTTPSetContent 1C00  
                                    SIM800xHTTPInputData@data 002F  
                                    SIM800xHTTPInputData@time 0061  
                                              __end_of___lmul 1B56  
                                               __pidataCOMRAM 1F9E  
                                     __end_of_SysTimeCallBack 1E54  
                                      __end_of_SIM800xSDMInit 18EE  
                                      __end_of_SIM800xSDMPeek 1E18  
                                __end_of_SoftUARTTransmitByte 1BAC  
                                              __end_of_strlen 1D3E  
                                         start_initialization 167A  
                                    SIM800xHTTPSetURL@errcode 0043  
                                                 __end_of_Isr 0016  
                                        __end_of_SoftUARTInit 1F6A  
                                __end_of_AddEntryToJsonObject 0302  
                                              SIM800xInit@tmp 0042  
                                          SIM800xIPSetAPN@cid 0015  
                                              SIM800xInit@str 0033  
                                          SIM800xIPSetAPN@apn 0013  
                                     SIM800xHTTPRead@strindex 0031  
                                     AddEntryToJsonObject@key 0003  
                                             ___llmod@divisor 0012  
                               __end_of_SIM800xSDMRxAvailable 1EB8  
                                             ___llmod@counter 0016  
                                __end_of_SIM800xHTTPInputData 0BF2  
                                                 _SystimeInit 1EE6  
                                                    ??___lmul 0009  
                                                 __pdataBANK0 00E1  
                                               ??_SIM800xInit 0033  
                                 __end_of_SoftUARTReceiveByte 1D88  
                                                    ??_strlen 0003  
                                      _Tout@SIM800x_SDM$F1161 00E1  
                                                   _Rxfifoptr 0077  
                                             ?_SIM800xSDMInit 000E  
                                             ?_SIM800xSDMPeek 0001  
                                  SIM800xHTTPReadHeader@F2987 0128  
                                                 __pbssCOMRAM 006B  
                                                   StrToInt@i 0020  
                                                   StrToInt@j 001A  
                                               _SoftUARTPrint 1A38  
                                               __pcstackBANK0 00C4  
                                        __end_of_ProcessResp1 1806  
                                        __end_of_ProcessResp2 15EA  
                                        __end_of_ProcessResp4 144A  
                                 _Rxfifoptr@SIM800x_SDM$F1159 0071  
                                          SIM800xSDMPrint@str 0002  
                                                 sprintf@flag 002D  
                                   SIM800xHTTPInputData@F2919 01A0  
                                                 sprintf@prec 0025  
                           SIM800xIPSetConnectionType@contype 0013  
                                 __end_of_SoftUARTRxAvailable 1EE6  
                                      SIM800xSDMReadByte@data 0006  
                                                    ?_Tick_ms 0001  
                                      ?_SIM800xHTTPSetContent 0041  
                                                    ?_Wait_ms 0001  
                                                   __pintcode 0008  
                                               __pmediumconst 798E  
                                                    ?___awmod 0001  
                                                    ?___lldiv 0001  
                                                    ?___llmod 000E  
                                                    ?___lwmod 0001  
                                            ?_SysTimeCallBack 0001  
                                  __end_of_SIM800xSDMReadByte 1CF2  
                                              ?_SoftUARTPrint 0004  
                                                ??_SystemInit 0050  
                                                ??_SystemTask 0069  
                                  __end_of_SIM800xSDMSendByte 1F90  
                            SIM800x3GPPGetSignalQuality@F3020 0080  
                            SIM800x3GPPGetSignalQuality@F3030 00C0  
                            SIM800x3GPPGetSignalQuality@F3028 00C2  
                                         __end_of_SIM800xInit 1218  
                                 SIM800xHTTPInputData@errcode 0039  
                                                    ?_sprintf 0017  
                          __end_of_SIM800xIPSetConnectionType 19CC  
                                  _SIM800xIPSetConnectionType 1960  
                                 SIM800xHTTPInputData@timeout 0035  
                               SIM800xIPSetConnectionType@cid 0015  
                                    SIM800xHTTPAction@errcode 0037  
                                    _RxFIFO@SIM800x_SDM$F1158 0300  
                                        _SoftUARTTransmitByte 1B56  
                             SIM800x3GPPGetOperatorName@F3005 0100  
                                          __end_of_SystemInit 0DAC  
                                          __end_of_SystemTask 0F44  
                                                    _OSC_FREQ 79B7  
                                           ??_SIM800xHTTPInit 0043  
                                           ??_SIM800xHTTPRead 003D  
                                        _AddEntryToJsonObject 001A  
                                           ??_SIM800xIPSetAPN 0015  
                                           ??_SIM800xSDMFlush 0001  
                                           ??_SIM800xSDMPrint 0004  
                                        _SIM800xHTTPInputData 09F0  
                                               ProcessResp1@c 0012  
                                                   _rxmessage 01BE  
                                     SIM800xHTTPInputData@cnt 0031  
                                     SIM800xHTTPInputData@len 005D  
                                     SIM800xHTTPInputData@res 0065  
                                     SIM800xHTTPInputData@str 003F  
                                           ___lmul@multiplier 0001  
                                                   copy_data0 168E  
                                                   copy_data1 16AE  
                                                   _txmessage 028C  
                                       __end_of_SIM800xIPOpen 1DD2  
                                                Wait_ms@value 0001  
                                               SIM800xInit@br 002F  
                                       ?_SoftUARTTransmitByte 0001  
                                                    __Hrparam 0000  
                                                    Wait_ms@x 0009  
                                                    __Lrparam 0000  
                                                    _StrToInt 0F44  
                                                _SoftUARTInit 1F56  
                                                 _SIM800xInit 10DA  
                                       ?_AddEntryToJsonObject 0001  
                                             ??_SoftUARTPrint 0006  
                                                    _Rxstatus 0075  
                                                  sprintf@val 0027  
                                       ?_SIM800xHTTPInputData 002F  
                                                    __ptext10 1A38  
                                                    __ptext11 1B56  
                                                    __ptext20 1EE6  
                                                    __ptext12 1F56  
                                                    __ptext21 1960  
                                                    __ptext13 10DA  
                                                    __ptext30 1CF2  
                                                    __ptext22 19CC  
                                                    __ptext14 057A  
                                                    __ptext31 1F08  
                                                    __ptext23 1D88  
                                                    __ptext15 1806  
                                                    __ptext40 1CA4  
                                                    __ptext32 1A98  
                                                    __ptext24 1788  
                                                    __ptext16 18EE  
                                                    __ptext41 1C54  
                                                    __ptext33 1F7E  
                                                    __ptext25 144A  
                                                    __ptext17 187A  
                                                    __ptext42 1F40  
                                                    __ptext34 1346  
                                                    __ptext26 154C  
                                                    __ptext18 15EA  
                                                    __ptext43 001A  
                                                    __ptext35 0F44  
                                                    __ptext27 1DD2  
                                                    __ptext19 1F6A  
                                                    __ptext36 1AF8  
                                                    __ptext28 1BAC  
                                                    __ptext45 1E18  
                                                    __ptext37 1218  
                                                    __ptext29 1C00  
                                                    __ptext38 1F2A  
                                                    __ptext39 1E86  
                         SIM800x3GPPGetSubscriberNumber@F3043 0264  
                                     SIM800xHTTPAction@method 005F  
                                                ?_SystimeInit 0001  
                                  AddEntryToJsonObject@offset 000D  
                                                    isa$xinst 000000  
                                                    int$flags 007E  
                                                _ProcessResp1 1788  
                                                _ProcessResp2 154C  
                                                _ProcessResp4 1346  
                                            ??_SIM800xSDMInit 0012  
                                            ??_SIM800xSDMPeek 0001  
                                                  _INTCONbits 000FF2  
                                      SIM800xHTTPAction@F2931 0182  
                                         SIM800xGetIMSI@F2688 0094  
                                                    intlevel2 1FA6  
                                                   sprintf@ap 002B  
                                                   sprintf@sp 0017  
                                              _USARTAsyncInit 1F6A  
                                     SIM800xSDMSendBytes@data 0001  
                                            ___lwmod@dividend 0001  
                                            ___lldiv@dividend 0001  
                                      ??_SoftUARTTransmitByte 0001  
                                     ??_SIM800xHTTPSetContent 0045  
                                       _SIM800xSDMRxAvailable 1E86  
                                   AddEntryToJsonObject@value 0005  
                                     SoftUARTReceiveByte@data 0009  
                                      ??_AddEntryToJsonObject 0009  
                                      SIM800xSDMSendByte@data 0001  
                                         _SIM800xSDMReadF1Pkt 1218  
                                      ??_SIM800xHTTPInputData 003B  
                                                    sprintf@c 002E  
                                                    sprintf@f 0019  
                                           USARTAsyncInit@bgr 0001  
                                      SIM800xSDMSendBytes@cnt 0003  
                                            ___lldiv@quotient 0009  
                                             ___lwmod@divisor 0003  
                                                    strlen@cp 0003  
                                             ___lwmod@counter 0005  
                                           _SIM800xHTTPAction 07DC  
                                       SIM800xHTTPAction@time 0060  
                                           SystemTask@errcode 00DB  
                                       SIM800xHTTPAction@tout 0033  
                                           _SIM800xHTTPSetURL 1BAC  
                                          ?_SIM800xHTTPAction 002F  
                                           _SIM800xIPGetState 144A  
                                      __end_of_USARTAsyncInit 1F7E  
                                          ?_SIM800xHTTPSetURL 0041  
                                 ?_SIM800xIPSetConnectionType 0013  
                                          ?_SIM800xIPGetState 0024  
                                         _SIM800xSDMSendBytes 1E54  
                                          _SIM800xSDMReadByte 1CA4  
                                        SIM800xHTTPAction@cnt 0031  
                                        SIM800xHTTPAction@res 0064  
                                        SIM800xHTTPAction@str 003D  
                                        ?_SIM800xSDMReadF1Pkt 000A  
                                               SystemInit@err 0064  
                                               _Rxfifocurrent 0076  
                                         ??_SIM800xHTTPAction 0039  
                                          _SIM800xSDMSendByte 1F7E  
                                             _SIM800xHTTPInit 1F08  
                                             _SIM800xHTTPRead 0302  
                                             SystemTask@scode 00D9  
                                         ??_SIM800xHTTPSetURL 0045  
                                         ??_SIM800xIPGetState 0026  
                                             _SIM800xIPSetAPN 19CC  
                                         ?_SIM800xSDMReadByte 0001  
                                               SystemTask@cmd 00D8  
                                             _SIM800xSDMFlush 1F40  
                                               SystemTask@cnt 00DD  
                                               SystemTask@msg 00C4  
                                     SIM800xSDMReadF1Pkt@data 000A  
                                             _SIM800xSDMPrint 1A98  
