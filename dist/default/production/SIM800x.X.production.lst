

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Apr 01 13:30:40 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=6
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=4
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=4
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=4
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=4
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=4
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=5
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=6
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=4
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=6
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=4
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=4
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=4
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=4
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=4
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=4
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=4
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=4
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=4
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=4
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=7
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=4
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=4
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=4
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=4
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=4
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=6
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=4
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=4
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=4
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=6
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=4
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=4
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=4
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75  0000                     
    76                           ; Version 2.36
    77                           ; Generated 28/01/2022 GMT
    78                           ; 
    79                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution. Publication is not required when
    93                           ;        this file is used in an embedded application.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F452 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     
   112                           	psect	idataCOMRAM
   113  002178                     __pidataCOMRAM:
   114                           	callstack 0
   115                           
   116                           ;initializer for _Tout
   117  002178  0FA0               	dw	4000
   118  00217A  0000               	dw	0
   119                           
   120                           	psect	idataBANK0
   121  00217C                     __pidataBANK0:
   122                           	callstack 0
   123                           
   124                           ;initializer for _Tout@SIM800x_SDM$F1169
   125  00217C  07D0               	dw	2000
   126  00217E  0000               	dw	0
   127                           
   128                           	psect	mediumconst
   129  00798E                     __pmediumconst:
   130                           	callstack 0
   131  00798E  00                 	db	0
   132  00798F                     _dpowers:
   133                           	callstack 0
   134  00798F  0001               	dw	1
   135  007991  0000               	dw	0
   136  007993  000A               	dw	10
   137  007995  0000               	dw	0
   138  007997  0064               	dw	100
   139  007999  0000               	dw	0
   140  00799B  03E8               	dw	1000
   141  00799D  0000               	dw	0
   142  00799F  2710               	dw	10000
   143  0079A1  0000               	dw	0
   144  0079A3  86A0               	dw	34464
   145  0079A5  0001               	dw	1
   146  0079A7  4240               	dw	16960
   147  0079A9  000F               	dw	15
   148  0079AB  9680               	dw	38528
   149  0079AD  0098               	dw	152
   150  0079AF  E100               	dw	57600
   151  0079B1  05F5               	dw	1525
   152  0079B3  CA00               	dw	51712
   153  0079B5  3B9A               	dw	15258
   154  0079B7                     __end_of_dpowers:
   155                           	callstack 0
   156  0079B7  10                 	db	16
   157  0079B8                     __end_of_OSC_FREQ:
   158                           	callstack 0
   159  0000                     _RCREG	set	4014
   160  0000                     _SPBRG	set	4015
   161  0000                     _TXREG	set	4013
   162  0000                     _TXSTA	set	4012
   163  0000                     _INTCONbits	set	4082
   164  0000                     _CREN	set	32092
   165  0000                     _OERR	set	32089
   166  0000                     _TMR0IE	set	32661
   167  0000                     _TMR0IF	set	32658
   168  0000                     _GIE	set	32663
   169  0000                     _INT0IE	set	32660
   170  0000                     _INT0IF	set	32657
   171  0000                     _PIE1	set	3997
   172  0000                     _T0CON	set	4053
   173  0000                     _INTCON2	set	4081
   174  0000                     _INTCON	set	4082
   175  0000                     _TMR0	set	4054
   176  0000                     _RCSTA	set	4011
   177  0000                     _TXSTAbits	set	4012
   178  0000                     _RCIF	set	31989
   179  0079B8                     STR_9:
   180  0079B8  68                 	db	104	;'h'
   181  0079B9  74                 	db	116	;'t'
   182  0079BA  74                 	db	116	;'t'
   183  0079BB  70                 	db	112	;'p'
   184  0079BC  3A                 	db	58	;':'
   185  0079BD  2F                 	db	47
   186  0079BE  2F                 	db	47
   187  0079BF  62                 	db	98	;'b'
   188  0079C0  61                 	db	97	;'a'
   189  0079C1  63                 	db	99	;'c'
   190  0079C2  6B                 	db	107	;'k'
   191  0079C3  65                 	db	101	;'e'
   192  0079C4  6E                 	db	110	;'n'
   193  0079C5  64                 	db	100	;'d'
   194  0079C6  2E                 	db	46
   195  0079C7  74                 	db	116	;'t'
   196  0079C8  68                 	db	104	;'h'
   197  0079C9  69                 	db	105	;'i'
   198  0079CA  6E                 	db	110	;'n'
   199  0079CB  67                 	db	103	;'g'
   200  0079CC  65                 	db	101	;'e'
   201  0079CD  72                 	db	114	;'r'
   202  0079CE  2E                 	db	46
   203  0079CF  69                 	db	105	;'i'
   204  0079D0  6F                 	db	111	;'o'
   205  0079D1  2F                 	db	47
   206  0079D2  76                 	db	118	;'v'
   207  0079D3  33                 	db	51	;'3'
   208  0079D4  2F                 	db	47
   209  0079D5  75                 	db	117	;'u'
   210  0079D6  73                 	db	115	;'s'
   211  0079D7  65                 	db	101	;'e'
   212  0079D8  72                 	db	114	;'r'
   213  0079D9  73                 	db	115	;'s'
   214  0079DA  2F                 	db	47
   215  0079DB  46                 	db	70	;'F'
   216  0079DC  69                 	db	105	;'i'
   217  0079DD  72                 	db	114	;'r'
   218  0079DE  6D                 	db	109	;'m'
   219  0079DF  77                 	db	119	;'w'
   220  0079E0  61                 	db	97	;'a'
   221  0079E1  72                 	db	114	;'r'
   222  0079E2  65                 	db	101	;'e'
   223  0079E3  45                 	db	69	;'E'
   224  0079E4  6E                 	db	110	;'n'
   225  0079E5  67                 	db	103	;'g'
   226  0079E6  69                 	db	105	;'i'
   227  0079E7  6E                 	db	110	;'n'
   228  0079E8  65                 	db	101	;'e'
   229  0079E9  65                 	db	101	;'e'
   230  0079EA  72                 	db	114	;'r'
   231  0079EB  73                 	db	115	;'s'
   232  0079EC  2F                 	db	47
   233  0079ED  64                 	db	100	;'d'
   234  0079EE  65                 	db	101	;'e'
   235  0079EF  76                 	db	118	;'v'
   236  0079F0  69                 	db	105	;'i'
   237  0079F1  63                 	db	99	;'c'
   238  0079F2  65                 	db	101	;'e'
   239  0079F3  73                 	db	115	;'s'
   240  0079F4  2F                 	db	47
   241  0079F5  53                 	db	83	;'S'
   242  0079F6  49                 	db	73	;'I'
   243  0079F7  4D                 	db	77	;'M'
   244  0079F8  38                 	db	56	;'8'
   245  0079F9  30                 	db	48	;'0'
   246  0079FA  30                 	db	48	;'0'
   247  0079FB  4C                 	db	76	;'L'
   248  0079FC  2F                 	db	47
   249  0079FD  63                 	db	99	;'c'
   250  0079FE  61                 	db	97	;'a'
   251  0079FF  6C                 	db	108	;'l'
   252  007A00  6C                 	db	108	;'l'
   253  007A01  62                 	db	98	;'b'
   254  007A02  61                 	db	97	;'a'
   255  007A03  63                 	db	99	;'c'
   256  007A04  6B                 	db	107	;'k'
   257  007A05  2F                 	db	47
   258  007A06  64                 	db	100	;'d'
   259  007A07  61                 	db	97	;'a'
   260  007A08  74                 	db	116	;'t'
   261  007A09  61                 	db	97	;'a'
   262  007A0A  3F                 	db	63	;'?'
   263  007A0B  61                 	db	97	;'a'
   264  007A0C  75                 	db	117	;'u'
   265  007A0D  74                 	db	116	;'t'
   266  007A0E  68                 	db	104	;'h'
   267  007A0F  6F                 	db	111	;'o'
   268  007A10  72                 	db	114	;'r'
   269  007A11  69                 	db	105	;'i'
   270  007A12  7A                 	db	122	;'z'
   271  007A13  61                 	db	97	;'a'
   272  007A14  74                 	db	116	;'t'
   273  007A15  69                 	db	105	;'i'
   274  007A16  6F                 	db	111	;'o'
   275  007A17  6E                 	db	110	;'n'
   276  007A18  3D                 	db	61	;'='
   277  007A19  65                 	db	101	;'e'
   278  007A1A  79                 	db	121	;'y'
   279  007A1B  4A                 	db	74	;'J'
   280  007A1C  68                 	db	104	;'h'
   281  007A1D  62                 	db	98	;'b'
   282  007A1E  47                 	db	71	;'G'
   283  007A1F  63                 	db	99	;'c'
   284  007A20  69                 	db	105	;'i'
   285  007A21  4F                 	db	79	;'O'
   286  007A22  69                 	db	105	;'i'
   287  007A23  4A                 	db	74	;'J'
   288  007A24  49                 	db	73	;'I'
   289  007A25  55                 	db	85	;'U'
   290  007A26  7A                 	db	122	;'z'
   291  007A27  49                 	db	73	;'I'
   292  007A28  31                 	db	49	;'1'
   293  007A29  4E                 	db	78	;'N'
   294  007A2A  69                 	db	105	;'i'
   295  007A2B  49                 	db	73	;'I'
   296  007A2C  73                 	db	115	;'s'
   297  007A2D  49                 	db	73	;'I'
   298  007A2E  6E                 	db	110	;'n'
   299  007A2F  52                 	db	82	;'R'
   300  007A30  35                 	db	53	;'5'
   301  007A31  63                 	db	99	;'c'
   302  007A32  43                 	db	67	;'C'
   303  007A33  49                 	db	73	;'I'
   304  007A34  36                 	db	54	;'6'
   305  007A35  49                 	db	73	;'I'
   306  007A36  6B                 	db	107	;'k'
   307  007A37  70                 	db	112	;'p'
   308  007A38  58                 	db	88	;'X'
   309  007A39  56                 	db	86	;'V'
   310  007A3A  43                 	db	67	;'C'
   311  007A3B  4A                 	db	74	;'J'
   312  007A3C  39                 	db	57	;'9'
   313  007A3D  2E                 	db	46
   314  007A3E  65                 	db	101	;'e'
   315  007A3F  79                 	db	121	;'y'
   316  007A40  4A                 	db	74	;'J'
   317  007A41  6C                 	db	108	;'l'
   318  007A42  65                 	db	101	;'e'
   319  007A43  48                 	db	72	;'H'
   320  007A44  41                 	db	65	;'A'
   321  007A45  69                 	db	105	;'i'
   322  007A46  4F                 	db	79	;'O'
   323  007A47  6A                 	db	106	;'j'
   324  007A48  45                 	db	69	;'E'
   325  007A49  32                 	db	50	;'2'
   326  007A4A  4F                 	db	79	;'O'
   327  007A4B  44                 	db	68	;'D'
   328  007A4C  41                 	db	65	;'A'
   329  007A4D  7A                 	db	122	;'z'
   330  007A4E  4E                 	db	78	;'N'
   331  007A4F  6A                 	db	106	;'j'
   332  007A50  41                 	db	65	;'A'
   333  007A51  30                 	db	48	;'0'
   334  007A52  4E                 	db	78	;'N'
   335  007A53  7A                 	db	122	;'z'
   336  007A54  41                 	db	65	;'A'
   337  007A55  73                 	db	115	;'s'
   338  007A56  49                 	db	73	;'I'
   339  007A57  6D                 	db	109	;'m'
   340  007A58  6C                 	db	108	;'l'
   341  007A59  68                 	db	104	;'h'
   342  007A5A  64                 	db	100	;'d'
   343  007A5B  43                 	db	67	;'C'
   344  007A5C  49                 	db	73	;'I'
   345  007A5D  36                 	db	54	;'6'
   346  007A5E  4D                 	db	77	;'M'
   347  007A5F  54                 	db	84	;'T'
   348  007A60  59                 	db	89	;'Y'
   349  007A61  34                 	db	52	;'4'
   350  007A62  4D                 	db	77	;'M'
   351  007A63  44                 	db	68	;'D'
   352  007A64  4D                 	db	77	;'M'
   353  007A65  31                 	db	49	;'1'
   354  007A66  4D                 	db	77	;'M'
   355  007A67  7A                 	db	122	;'z'
   356  007A68  49                 	db	73	;'I'
   357  007A69  33                 	db	51	;'3'
   358  007A6A  4D                 	db	77	;'M'
   359  007A6B  43                 	db	67	;'C'
   360  007A6C  77                 	db	119	;'w'
   361  007A6D  69                 	db	105	;'i'
   362  007A6E  63                 	db	99	;'c'
   363  007A6F  6D                 	db	109	;'m'
   364  007A70  39                 	db	57	;'9'
   365  007A71  73                 	db	115	;'s'
   366  007A72  5A                 	db	90	;'Z'
   367  007A73  53                 	db	83	;'S'
   368  007A74  49                 	db	73	;'I'
   369  007A75  36                 	db	54	;'6'
   370  007A76  49                 	db	73	;'I'
   371  007A77  6E                 	db	110	;'n'
   372  007A78  56                 	db	86	;'V'
   373  007A79  7A                 	db	122	;'z'
   374  007A7A  5A                 	db	90	;'Z'
   375  007A7B  58                 	db	88	;'X'
   376  007A7C  49                 	db	73	;'I'
   377  007A7D  69                 	db	105	;'i'
   378  007A7E  4C                 	db	76	;'L'
   379  007A7F  43                 	db	67	;'C'
   380  007A80  4A                 	db	74	;'J'
   381  007A81  31                 	db	49	;'1'
   382  007A82  63                 	db	99	;'c'
   383  007A83  33                 	db	51	;'3'
   384  007A84  49                 	db	73	;'I'
   385  007A85  69                 	db	105	;'i'
   386  007A86  4F                 	db	79	;'O'
   387  007A87  69                 	db	105	;'i'
   388  007A88  4A                 	db	74	;'J'
   389  007A89  47                 	db	71	;'G'
   390  007A8A  61                 	db	97	;'a'
   391  007A8B  58                 	db	88	;'X'
   392  007A8C  4A                 	db	74	;'J'
   393  007A8D  74                 	db	116	;'t'
   394  007A8E  64                 	db	100	;'d'
   395  007A8F  32                 	db	50	;'2'
   396  007A90  46                 	db	70	;'F'
   397  007A91  79                 	db	121	;'y'
   398  007A92  5A                 	db	90	;'Z'
   399  007A93  55                 	db	85	;'U'
   400  007A94  56                 	db	86	;'V'
   401  007A95  75                 	db	117	;'u'
   402  007A96  5A                 	db	90	;'Z'
   403  007A97  32                 	db	50	;'2'
   404  007A98  6C                 	db	108	;'l'
   405  007A99  75                 	db	117	;'u'
   406  007A9A  5A                 	db	90	;'Z'
   407  007A9B  57                 	db	87	;'W'
   408  007A9C  56                 	db	86	;'V'
   409  007A9D  79                 	db	121	;'y'
   410  007A9E  63                 	db	99	;'c'
   411  007A9F  79                 	db	121	;'y'
   412  007AA0  4A                 	db	74	;'J'
   413  007AA1  39                 	db	57	;'9'
   414  007AA2  2E                 	db	46
   415  007AA3  35                 	db	53	;'5'
   416  007AA4  4D                 	db	77	;'M'
   417  007AA5  59                 	db	89	;'Y'
   418  007AA6  72                 	db	114	;'r'
   419  007AA7  50                 	db	80	;'P'
   420  007AA8  56                 	db	86	;'V'
   421  007AA9  53                 	db	83	;'S'
   422  007AAA  34                 	db	52	;'4'
   423  007AAB  6E                 	db	110	;'n'
   424  007AAC  46                 	db	70	;'F'
   425  007AAD  61                 	db	97	;'a'
   426  007AAE  32                 	db	50	;'2'
   427  007AAF  6B                 	db	107	;'k'
   428  007AB0  6F                 	db	111	;'o'
   429  007AB1  75                 	db	117	;'u'
   430  007AB2  33                 	db	51	;'3'
   431  007AB3  64                 	db	100	;'d'
   432  007AB4  56                 	db	86	;'V'
   433  007AB5  32                 	db	50	;'2'
   434  007AB6  79                 	db	121	;'y'
   435  007AB7  5A                 	db	90	;'Z'
   436  007AB8  50                 	db	80	;'P'
   437  007AB9  34                 	db	52	;'4'
   438  007ABA  53                 	db	83	;'S'
   439  007ABB  76                 	db	118	;'v'
   440  007ABC  6F                 	db	111	;'o'
   441  007ABD  33                 	db	51	;'3'
   442  007ABE  4A                 	db	74	;'J'
   443  007ABF  56                 	db	86	;'V'
   444  007AC0  31                 	db	49	;'1'
   445  007AC1  5A                 	db	90	;'Z'
   446  007AC2  6A                 	db	106	;'j'
   447  007AC3  36                 	db	54	;'6'
   448  007AC4  67                 	db	103	;'g'
   449  007AC5  41                 	db	65	;'A'
   450  007AC6  49                 	db	73	;'I'
   451  007AC7  47                 	db	71	;'G'
   452  007AC8  54                 	db	84	;'T'
   453  007AC9  56                 	db	86	;'V'
   454  007ACA  75                 	db	117	;'u'
   455  007ACB  69                 	db	105	;'i'
   456  007ACC  39                 	db	57	;'9'
   457  007ACD  34                 	db	52	;'4'
   458  007ACE  00                 	db	0
   459  007ACF                     STR_20:
   460  007ACF  53                 	db	83	;'S'
   461  007AD0  79                 	db	121	;'y'
   462  007AD1  73                 	db	115	;'s'
   463  007AD2  74                 	db	116	;'t'
   464  007AD3  65                 	db	101	;'e'
   465  007AD4  6D                 	db	109	;'m'
   466  007AD5  20                 	db	32
   467  007AD6  49                 	db	73	;'I'
   468  007AD7  6E                 	db	110	;'n'
   469  007AD8  69                 	db	105	;'i'
   470  007AD9  74                 	db	116	;'t'
   471  007ADA  69                 	db	105	;'i'
   472  007ADB  61                 	db	97	;'a'
   473  007ADC  6C                 	db	108	;'l'
   474  007ADD  69                 	db	105	;'i'
   475  007ADE  7A                 	db	122	;'z'
   476  007ADF  61                 	db	97	;'a'
   477  007AE0  74                 	db	116	;'t'
   478  007AE1  69                 	db	105	;'i'
   479  007AE2  6F                 	db	111	;'o'
   480  007AE3  6E                 	db	110	;'n'
   481  007AE4  20                 	db	32
   482  007AE5  63                 	db	99	;'c'
   483  007AE6  6F                 	db	111	;'o'
   484  007AE7  6D                 	db	109	;'m'
   485  007AE8  70                 	db	112	;'p'
   486  007AE9  6C                 	db	108	;'l'
   487  007AEA  65                 	db	101	;'e'
   488  007AEB  74                 	db	116	;'t'
   489  007AEC  65                 	db	101	;'e'
   490  007AED  64                 	db	100	;'d'
   491  007AEE  2E                 	db	46
   492  007AEF  0D                 	db	13
   493  007AF0  0D                 	db	13
   494  007AF1  00                 	db	0
   495  007AF2                     STR_22:
   496  007AF2  53                 	db	83	;'S'
   497  007AF3  65                 	db	101	;'e'
   498  007AF4  6E                 	db	110	;'n'
   499  007AF5  64                 	db	100	;'d'
   500  007AF6  69                 	db	105	;'i'
   501  007AF7  6E                 	db	110	;'n'
   502  007AF8  67                 	db	103	;'g'
   503  007AF9  20                 	db	32
   504  007AFA  6D                 	db	109	;'m'
   505  007AFB  65                 	db	101	;'e'
   506  007AFC  73                 	db	115	;'s'
   507  007AFD  73                 	db	115	;'s'
   508  007AFE  61                 	db	97	;'a'
   509  007AFF  67                 	db	103	;'g'
   510  007B00  65                 	db	101	;'e'
   511  007B01  20                 	db	32
   512  007B02  74                 	db	116	;'t'
   513  007B03  6F                 	db	111	;'o'
   514  007B04  20                 	db	32
   515  007B05  74                 	db	116	;'t'
   516  007B06  68                 	db	104	;'h'
   517  007B07  69                 	db	105	;'i'
   518  007B08  6E                 	db	110	;'n'
   519  007B09  67                 	db	103	;'g'
   520  007B0A  65                 	db	101	;'e'
   521  007B0B  72                 	db	114	;'r'
   522  007B0C  2E                 	db	46
   523  007B0D  69                 	db	105	;'i'
   524  007B0E  6F                 	db	111	;'o'
   525  007B0F  2E                 	db	46
   526  007B10  2E                 	db	46
   527  007B11  2E                 	db	46
   528  007B12  0D                 	db	13
   529  007B13  00                 	db	0
   530  007B14                     STR_21:
   531  007B14  53                 	db	83	;'S'
   532  007B15  79                 	db	121	;'y'
   533  007B16  73                 	db	115	;'s'
   534  007B17  74                 	db	116	;'t'
   535  007B18  65                 	db	101	;'e'
   536  007B19  6D                 	db	109	;'m'
   537  007B1A  20                 	db	32
   538  007B1B  49                 	db	73	;'I'
   539  007B1C  6E                 	db	110	;'n'
   540  007B1D  69                 	db	105	;'i'
   541  007B1E  74                 	db	116	;'t'
   542  007B1F  69                 	db	105	;'i'
   543  007B20  61                 	db	97	;'a'
   544  007B21  6C                 	db	108	;'l'
   545  007B22  69                 	db	105	;'i'
   546  007B23  7A                 	db	122	;'z'
   547  007B24  61                 	db	97	;'a'
   548  007B25  74                 	db	116	;'t'
   549  007B26  69                 	db	105	;'i'
   550  007B27  6F                 	db	111	;'o'
   551  007B28  6E                 	db	110	;'n'
   552  007B29  20                 	db	32
   553  007B2A  66                 	db	102	;'f'
   554  007B2B  61                 	db	97	;'a'
   555  007B2C  69                 	db	105	;'i'
   556  007B2D  6C                 	db	108	;'l'
   557  007B2E  65                 	db	101	;'e'
   558  007B2F  64                 	db	100	;'d'
   559  007B30  2E                 	db	46
   560  007B31  0D                 	db	13
   561  007B32  0D                 	db	13
   562  007B33  00                 	db	0
   563  007B34                     STR_8:
   564  007B34  53                 	db	83	;'S'
   565  007B35  65                 	db	101	;'e'
   566  007B36  74                 	db	116	;'t'
   567  007B37  74                 	db	116	;'t'
   568  007B38  69                 	db	105	;'i'
   569  007B39  6E                 	db	110	;'n'
   570  007B3A  67                 	db	103	;'g'
   571  007B3B  20                 	db	32
   572  007B3C  48                 	db	72	;'H'
   573  007B3D  54                 	db	84	;'T'
   574  007B3E  54                 	db	84	;'T'
   575  007B3F  50                 	db	80	;'P'
   576  007B40  20                 	db	32
   577  007B41  63                 	db	99	;'c'
   578  007B42  6F                 	db	111	;'o'
   579  007B43  6E                 	db	110	;'n'
   580  007B44  66                 	db	102	;'f'
   581  007B45  69                 	db	105	;'i'
   582  007B46  67                 	db	103	;'g'
   583  007B47  75                 	db	117	;'u'
   584  007B48  72                 	db	114	;'r'
   585  007B49  61                 	db	97	;'a'
   586  007B4A  74                 	db	116	;'t'
   587  007B4B  69                 	db	105	;'i'
   588  007B4C  6F                 	db	111	;'o'
   589  007B4D  6E                 	db	110	;'n'
   590  007B4E  73                 	db	115	;'s'
   591  007B4F  2E                 	db	46
   592  007B50  2E                 	db	46
   593  007B51  2E                 	db	46
   594  007B52  0D                 	db	13
   595  007B53  00                 	db	0
   596  007B54                     STR_6:
   597  007B54  42                 	db	66	;'B'
   598  007B55  65                 	db	101	;'e'
   599  007B56  61                 	db	97	;'a'
   600  007B57  72                 	db	114	;'r'
   601  007B58  65                 	db	101	;'e'
   602  007B59  72                 	db	114	;'r'
   603  007B5A  20                 	db	32
   604  007B5B  70                 	db	112	;'p'
   605  007B5C  72                 	db	114	;'r'
   606  007B5D  6F                 	db	111	;'o'
   607  007B5E  66                 	db	102	;'f'
   608  007B5F  69                 	db	105	;'i'
   609  007B60  6C                 	db	108	;'l'
   610  007B61  65                 	db	101	;'e'
   611  007B62  20                 	db	32
   612  007B63  41                 	db	65	;'A'
   613  007B64  63                 	db	99	;'c'
   614  007B65  74                 	db	116	;'t'
   615  007B66  69                 	db	105	;'i'
   616  007B67  76                 	db	118	;'v'
   617  007B68  61                 	db	97	;'a'
   618  007B69  74                 	db	116	;'t'
   619  007B6A  65                 	db	101	;'e'
   620  007B6B  64                 	db	100	;'d'
   621  007B6C  2C                 	db	44
   622  007B6D  20                 	db	32
   623  007B6E  49                 	db	73	;'I'
   624  007B6F  50                 	db	80	;'P'
   625  007B70  3A                 	db	58	;':'
   626  007B71  20                 	db	32
   627  007B72  00                 	db	0
   628  007B73                     STR_2:
   629  007B73  53                 	db	83	;'S'
   630  007B74  65                 	db	101	;'e'
   631  007B75  74                 	db	116	;'t'
   632  007B76  74                 	db	116	;'t'
   633  007B77  69                 	db	105	;'i'
   634  007B78  6E                 	db	110	;'n'
   635  007B79  67                 	db	103	;'g'
   636  007B7A  20                 	db	32
   637  007B7B  49                 	db	73	;'I'
   638  007B7C  50                 	db	80	;'P'
   639  007B7D  20                 	db	32
   640  007B7E  63                 	db	99	;'c'
   641  007B7F  6F                 	db	111	;'o'
   642  007B80  6E                 	db	110	;'n'
   643  007B81  66                 	db	102	;'f'
   644  007B82  69                 	db	105	;'i'
   645  007B83  67                 	db	103	;'g'
   646  007B84  75                 	db	117	;'u'
   647  007B85  72                 	db	114	;'r'
   648  007B86  61                 	db	97	;'a'
   649  007B87  74                 	db	116	;'t'
   650  007B88  69                 	db	105	;'i'
   651  007B89  6F                 	db	111	;'o'
   652  007B8A  6E                 	db	110	;'n'
   653  007B8B  73                 	db	115	;'s'
   654  007B8C  2E                 	db	46
   655  007B8D  2E                 	db	46
   656  007B8E  2E                 	db	46
   657  007B8F  0D                 	db	13
   658  007B90  00                 	db	0
   659  007B91  41                 	db	65	;'A'
   660  007B92  54                 	db	84	;'T'
   661  007B93  2B                 	db	43
   662  007B94  43                 	db	67	;'C'
   663  007B95  47                 	db	71	;'G'
   664  007B96  51                 	db	81	;'Q'
   665  007B97  4D                 	db	77	;'M'
   666  007B98  49                 	db	73	;'I'
   667  007B99  4E                 	db	78	;'N'
   668  007B9A  3D                 	db	61	;'='
   669  007B9B  25                 	db	37
   670  007B9C  75                 	db	117	;'u'
   671  007B9D  2C                 	db	44
   672  007B9E  25                 	db	37
   673  007B9F  75                 	db	117	;'u'
   674  007BA0  2C                 	db	44
   675  007BA1  25                 	db	37
   676  007BA2  75                 	db	117	;'u'
   677  007BA3  2C                 	db	44
   678  007BA4  25                 	db	37
   679  007BA5  75                 	db	117	;'u'
   680  007BA6  2C                 	db	44
   681  007BA7  25                 	db	37
   682  007BA8  75                 	db	117	;'u'
   683  007BA9  2C                 	db	44
   684  007BAA  25                 	db	37
   685  007BAB  75                 	db	117	;'u'
   686  007BAC  0D                 	db	13
   687  007BAD  00                 	db	0
   688  007BAE  41                 	db	65	;'A'
   689  007BAF  54                 	db	84	;'T'
   690  007BB0  2B                 	db	43
   691  007BB1  43                 	db	67	;'C'
   692  007BB2  47                 	db	71	;'G'
   693  007BB3  51                 	db	81	;'Q'
   694  007BB4  52                 	db	82	;'R'
   695  007BB5  45                 	db	69	;'E'
   696  007BB6  51                 	db	81	;'Q'
   697  007BB7  3D                 	db	61	;'='
   698  007BB8  25                 	db	37
   699  007BB9  75                 	db	117	;'u'
   700  007BBA  2C                 	db	44
   701  007BBB  25                 	db	37
   702  007BBC  75                 	db	117	;'u'
   703  007BBD  2C                 	db	44
   704  007BBE  25                 	db	37
   705  007BBF  75                 	db	117	;'u'
   706  007BC0  2C                 	db	44
   707  007BC1  25                 	db	37
   708  007BC2  75                 	db	117	;'u'
   709  007BC3  2C                 	db	44
   710  007BC4  25                 	db	37
   711  007BC5  75                 	db	117	;'u'
   712  007BC6  2C                 	db	44
   713  007BC7  25                 	db	37
   714  007BC8  75                 	db	117	;'u'
   715  007BC9  0D                 	db	13
   716  007BCA  00                 	db	0
   717  007BCB  41                 	db	65	;'A'
   718  007BCC  54                 	db	84	;'T'
   719  007BCD  2B                 	db	43
   720  007BCE  48                 	db	72	;'H'
   721  007BCF  54                 	db	84	;'T'
   722  007BD0  54                 	db	84	;'T'
   723  007BD1  50                 	db	80	;'P'
   724  007BD2  50                 	db	80	;'P'
   725  007BD3  41                 	db	65	;'A'
   726  007BD4  52                 	db	82	;'R'
   727  007BD5  41                 	db	65	;'A'
   728  007BD6  3D                 	db	61	;'='
   729  007BD7  22                 	db	34
   730  007BD8  42                 	db	66	;'B'
   731  007BD9  52                 	db	82	;'R'
   732  007BDA  45                 	db	69	;'E'
   733  007BDB  41                 	db	65	;'A'
   734  007BDC  4B                 	db	75	;'K'
   735  007BDD  45                 	db	69	;'E'
   736  007BDE  4E                 	db	78	;'N'
   737  007BDF  44                 	db	68	;'D'
   738  007BE0  22                 	db	34
   739  007BE1  2C                 	db	44
   740  007BE2  25                 	db	37
   741  007BE3  6C                 	db	108	;'l'
   742  007BE4  64                 	db	100	;'d'
   743  007BE5  0D                 	db	13
   744  007BE6  00                 	db	0
   745  007BE7                     STR_24:
   746  007BE7  52                 	db	82	;'R'
   747  007BE8  65                 	db	101	;'e'
   748  007BE9  63                 	db	99	;'c'
   749  007BEA  65                 	db	101	;'e'
   750  007BEB  69                 	db	105	;'i'
   751  007BEC  76                 	db	118	;'v'
   752  007BED  65                 	db	101	;'e'
   753  007BEE  64                 	db	100	;'d'
   754  007BEF  20                 	db	32
   755  007BF0  64                 	db	100	;'d'
   756  007BF1  61                 	db	97	;'a'
   757  007BF2  74                 	db	116	;'t'
   758  007BF3  61                 	db	97	;'a'
   759  007BF4  20                 	db	32
   760  007BF5  6C                 	db	108	;'l'
   761  007BF6  65                 	db	101	;'e'
   762  007BF7  6E                 	db	110	;'n'
   763  007BF8  67                 	db	103	;'g'
   764  007BF9  74                 	db	116	;'t'
   765  007BFA  68                 	db	104	;'h'
   766  007BFB  3A                 	db	58	;':'
   767  007BFC  20                 	db	32
   768  007BFD  25                 	db	37
   769  007BFE  6C                 	db	108	;'l'
   770  007BFF  64                 	db	100	;'d'
   771  007C00  0D                 	db	13
   772  007C01  00                 	db	0
   773  007C02  41                 	db	65	;'A'
   774  007C03  54                 	db	84	;'T'
   775  007C04  2B                 	db	43
   776  007C05  48                 	db	72	;'H'
   777  007C06  54                 	db	84	;'T'
   778  007C07  54                 	db	84	;'T'
   779  007C08  50                 	db	80	;'P'
   780  007C09  50                 	db	80	;'P'
   781  007C0A  41                 	db	65	;'A'
   782  007C0B  52                 	db	82	;'R'
   783  007C0C  41                 	db	65	;'A'
   784  007C0D  3D                 	db	61	;'='
   785  007C0E  22                 	db	34
   786  007C0F  50                 	db	80	;'P'
   787  007C10  52                 	db	82	;'R'
   788  007C11  4F                 	db	79	;'O'
   789  007C12  50                 	db	80	;'P'
   790  007C13  4F                 	db	79	;'O'
   791  007C14  52                 	db	82	;'R'
   792  007C15  54                 	db	84	;'T'
   793  007C16  22                 	db	34
   794  007C17  2C                 	db	44
   795  007C18  25                 	db	37
   796  007C19  75                 	db	117	;'u'
   797  007C1A  0D                 	db	13
   798  007C1B  00                 	db	0
   799  007C1C  41                 	db	65	;'A'
   800  007C1D  54                 	db	84	;'T'
   801  007C1E  2B                 	db	43
   802  007C1F  48                 	db	72	;'H'
   803  007C20  54                 	db	84	;'T'
   804  007C21  54                 	db	84	;'T'
   805  007C22  50                 	db	80	;'P'
   806  007C23  50                 	db	80	;'P'
   807  007C24  41                 	db	65	;'A'
   808  007C25  52                 	db	82	;'R'
   809  007C26  41                 	db	65	;'A'
   810  007C27  3D                 	db	61	;'='
   811  007C28  22                 	db	34
   812  007C29  54                 	db	84	;'T'
   813  007C2A  49                 	db	73	;'I'
   814  007C2B  4D                 	db	77	;'M'
   815  007C2C  45                 	db	69	;'E'
   816  007C2D  4F                 	db	79	;'O'
   817  007C2E  55                 	db	85	;'U'
   818  007C2F  54                 	db	84	;'T'
   819  007C30  22                 	db	34
   820  007C31  2C                 	db	44
   821  007C32  25                 	db	37
   822  007C33  75                 	db	117	;'u'
   823  007C34  0D                 	db	13
   824  007C35  00                 	db	0
   825  007C36  41                 	db	65	;'A'
   826  007C37  54                 	db	84	;'T'
   827  007C38  2B                 	db	43
   828  007C39  48                 	db	72	;'H'
   829  007C3A  54                 	db	84	;'T'
   830  007C3B  54                 	db	84	;'T'
   831  007C3C  50                 	db	80	;'P'
   832  007C3D  50                 	db	80	;'P'
   833  007C3E  41                 	db	65	;'A'
   834  007C3F  52                 	db	82	;'R'
   835  007C40  41                 	db	65	;'A'
   836  007C41  3D                 	db	61	;'='
   837  007C42  22                 	db	34
   838  007C43  42                 	db	66	;'B'
   839  007C44  52                 	db	82	;'R'
   840  007C45  45                 	db	69	;'E'
   841  007C46  41                 	db	65	;'A'
   842  007C47  4B                 	db	75	;'K'
   843  007C48  22                 	db	34
   844  007C49  2C                 	db	44
   845  007C4A  25                 	db	37
   846  007C4B  6C                 	db	108	;'l'
   847  007C4C  64                 	db	100	;'d'
   848  007C4D  0D                 	db	13
   849  007C4E  00                 	db	0
   850  007C4F  41                 	db	65	;'A'
   851  007C50  54                 	db	84	;'T'
   852  007C51  2B                 	db	43
   853  007C52  48                 	db	72	;'H'
   854  007C53  54                 	db	84	;'T'
   855  007C54  54                 	db	84	;'T'
   856  007C55  50                 	db	80	;'P'
   857  007C56  50                 	db	80	;'P'
   858  007C57  41                 	db	65	;'A'
   859  007C58  52                 	db	82	;'R'
   860  007C59  41                 	db	65	;'A'
   861  007C5A  3D                 	db	61	;'='
   862  007C5B  22                 	db	34
   863  007C5C  52                 	db	82	;'R'
   864  007C5D  45                 	db	69	;'E'
   865  007C5E  44                 	db	68	;'D'
   866  007C5F  49                 	db	73	;'I'
   867  007C60  52                 	db	82	;'R'
   868  007C61  22                 	db	34
   869  007C62  2C                 	db	44
   870  007C63  25                 	db	37
   871  007C64  75                 	db	117	;'u'
   872  007C65  0D                 	db	13
   873  007C66  00                 	db	0
   874  007C67  41                 	db	65	;'A'
   875  007C68  54                 	db	84	;'T'
   876  007C69  2B                 	db	43
   877  007C6A  48                 	db	72	;'H'
   878  007C6B  54                 	db	84	;'T'
   879  007C6C  54                 	db	84	;'T'
   880  007C6D  50                 	db	80	;'P'
   881  007C6E  50                 	db	80	;'P'
   882  007C6F  41                 	db	65	;'A'
   883  007C70  52                 	db	82	;'R'
   884  007C71  41                 	db	65	;'A'
   885  007C72  3D                 	db	61	;'='
   886  007C73  22                 	db	34
   887  007C74  55                 	db	85	;'U'
   888  007C75  53                 	db	83	;'S'
   889  007C76  45                 	db	69	;'E'
   890  007C77  52                 	db	82	;'R'
   891  007C78  44                 	db	68	;'D'
   892  007C79  41                 	db	65	;'A'
   893  007C7A  54                 	db	84	;'T'
   894  007C7B  41                 	db	65	;'A'
   895  007C7C  22                 	db	34
   896  007C7D  2C                 	db	44
   897  007C7E  00                 	db	0
   898  007C7F                     STR_23:
   899  007C7F  48                 	db	72	;'H'
   900  007C80  54                 	db	84	;'T'
   901  007C81  54                 	db	84	;'T'
   902  007C82  50                 	db	80	;'P'
   903  007C83  20                 	db	32
   904  007C84  72                 	db	114	;'r'
   905  007C85  65                 	db	101	;'e'
   906  007C86  73                 	db	115	;'s'
   907  007C87  70                 	db	112	;'p'
   908  007C88  6F                 	db	111	;'o'
   909  007C89  6E                 	db	110	;'n'
   910  007C8A  73                 	db	115	;'s'
   911  007C8B  65                 	db	101	;'e'
   912  007C8C  20                 	db	32
   913  007C8D  63                 	db	99	;'c'
   914  007C8E  6F                 	db	111	;'o'
   915  007C8F  64                 	db	100	;'d'
   916  007C90  65                 	db	101	;'e'
   917  007C91  3A                 	db	58	;':'
   918  007C92  20                 	db	32
   919  007C93  25                 	db	37
   920  007C94  75                 	db	117	;'u'
   921  007C95  0D                 	db	13
   922  007C96  00                 	db	0
   923  007C97                     STR_96:
   924  007C97  41                 	db	65	;'A'
   925  007C98  54                 	db	84	;'T'
   926  007C99  2B                 	db	43
   927  007C9A  48                 	db	72	;'H'
   928  007C9B  54                 	db	84	;'T'
   929  007C9C  54                 	db	84	;'T'
   930  007C9D  50                 	db	80	;'P'
   931  007C9E  50                 	db	80	;'P'
   932  007C9F  41                 	db	65	;'A'
   933  007CA0  52                 	db	82	;'R'
   934  007CA1  41                 	db	65	;'A'
   935  007CA2  3D                 	db	61	;'='
   936  007CA3  22                 	db	34
   937  007CA4  43                 	db	67	;'C'
   938  007CA5  4F                 	db	79	;'O'
   939  007CA6  4E                 	db	78	;'N'
   940  007CA7  54                 	db	84	;'T'
   941  007CA8  45                 	db	69	;'E'
   942  007CA9  4E                 	db	78	;'N'
   943  007CAA  54                 	db	84	;'T'
   944  007CAB  22                 	db	34
   945  007CAC  2C                 	db	44
   946  007CAD  00                 	db	0
   947  007CAE                     STR_12:
   948  007CAE  45                 	db	69	;'E'
   949  007CAF  6E                 	db	110	;'n'
   950  007CB0  67                 	db	103	;'g'
   951  007CB1  69                 	db	105	;'i'
   952  007CB2  6E                 	db	110	;'n'
   953  007CB3  65                 	db	101	;'e'
   954  007CB4  20                 	db	32
   955  007CB5  54                 	db	84	;'T'
   956  007CB6  65                 	db	101	;'e'
   957  007CB7  6D                 	db	109	;'m'
   958  007CB8  70                 	db	112	;'p'
   959  007CB9  65                 	db	101	;'e'
   960  007CBA  72                 	db	114	;'r'
   961  007CBB  61                 	db	97	;'a'
   962  007CBC  74                 	db	116	;'t'
   963  007CBD  75                 	db	117	;'u'
   964  007CBE  72                 	db	114	;'r'
   965  007CBF  65                 	db	101	;'e'
   966  007CC0  20                 	db	32
   967  007CC1  28                 	db	40
   968  007CC2  43                 	db	67	;'C'
   969  007CC3  29                 	db	41
   970  007CC4  00                 	db	0
   971  007CC5                     STR_98:
   972  007CC5  41                 	db	65	;'A'
   973  007CC6  54                 	db	84	;'T'
   974  007CC7  2B                 	db	43
   975  007CC8  48                 	db	72	;'H'
   976  007CC9  54                 	db	84	;'T'
   977  007CCA  54                 	db	84	;'T'
   978  007CCB  50                 	db	80	;'P'
   979  007CCC  44                 	db	68	;'D'
   980  007CCD  41                 	db	65	;'A'
   981  007CCE  54                 	db	84	;'T'
   982  007CCF  41                 	db	65	;'A'
   983  007CD0  3D                 	db	61	;'='
   984  007CD1  25                 	db	37
   985  007CD2  6C                 	db	108	;'l'
   986  007CD3  64                 	db	100	;'d'
   987  007CD4  2C                 	db	44
   988  007CD5  25                 	db	37
   989  007CD6  6C                 	db	108	;'l'
   990  007CD7  64                 	db	100	;'d'
   991  007CD8  0D                 	db	13
   992  007CD9  00                 	db	0
   993  007CDA                     STR_100:
   994  007CDA  41                 	db	65	;'A'
   995  007CDB  54                 	db	84	;'T'
   996  007CDC  2B                 	db	43
   997  007CDD  48                 	db	72	;'H'
   998  007CDE  54                 	db	84	;'T'
   999  007CDF  54                 	db	84	;'T'
  1000  007CE0  50                 	db	80	;'P'
  1001  007CE1  52                 	db	82	;'R'
  1002  007CE2  45                 	db	69	;'E'
  1003  007CE3  41                 	db	65	;'A'
  1004  007CE4  44                 	db	68	;'D'
  1005  007CE5  3D                 	db	61	;'='
  1006  007CE6  25                 	db	37
  1007  007CE7  6C                 	db	108	;'l'
  1008  007CE8  64                 	db	100	;'d'
  1009  007CE9  2C                 	db	44
  1010  007CEA  25                 	db	37
  1011  007CEB  6C                 	db	108	;'l'
  1012  007CEC  64                 	db	100	;'d'
  1013  007CED  0D                 	db	13
  1014  007CEE  00                 	db	0
  1015  007CEF  41                 	db	65	;'A'
  1016  007CF0  54                 	db	84	;'T'
  1017  007CF1  2B                 	db	43
  1018  007CF2  48                 	db	72	;'H'
  1019  007CF3  54                 	db	84	;'T'
  1020  007CF4  54                 	db	84	;'T'
  1021  007CF5  50                 	db	80	;'P'
  1022  007CF6  50                 	db	80	;'P'
  1023  007CF7  41                 	db	65	;'A'
  1024  007CF8  52                 	db	82	;'R'
  1025  007CF9  41                 	db	65	;'A'
  1026  007CFA  3D                 	db	61	;'='
  1027  007CFB  22                 	db	34
  1028  007CFC  50                 	db	80	;'P'
  1029  007CFD  52                 	db	82	;'R'
  1030  007CFE  4F                 	db	79	;'O'
  1031  007CFF  49                 	db	73	;'I'
  1032  007D00  50                 	db	80	;'P'
  1033  007D01  22                 	db	34
  1034  007D02  2C                 	db	44
  1035  007D03  00                 	db	0
  1036  007D04                     STR_1:
  1037  007D04  4D                 	db	77	;'M'
  1038  007D05  6F                 	db	111	;'o'
  1039  007D06  64                 	db	100	;'d'
  1040  007D07  65                 	db	101	;'e'
  1041  007D08  6D                 	db	109	;'m'
  1042  007D09  20                 	db	32
  1043  007D0A  49                 	db	73	;'I'
  1044  007D0B  6E                 	db	110	;'n'
  1045  007D0C  69                 	db	105	;'i'
  1046  007D0D  74                 	db	116	;'t'
  1047  007D0E  69                 	db	105	;'i'
  1048  007D0F  61                 	db	97	;'a'
  1049  007D10  6C                 	db	108	;'l'
  1050  007D11  69                 	db	105	;'i'
  1051  007D12  7A                 	db	122	;'z'
  1052  007D13  65                 	db	101	;'e'
  1053  007D14  64                 	db	100	;'d'
  1054  007D15  2E                 	db	46
  1055  007D16  0D                 	db	13
  1056  007D17  0D                 	db	13
  1057  007D18  00                 	db	0
  1058  007D19  41                 	db	65	;'A'
  1059  007D1A  54                 	db	84	;'T'
  1060  007D1B  2B                 	db	43
  1061  007D1C  43                 	db	67	;'C'
  1062  007D1D  47                 	db	71	;'G'
  1063  007D1E  44                 	db	68	;'D'
  1064  007D1F  41                 	db	65	;'A'
  1065  007D20  54                 	db	84	;'T'
  1066  007D21  41                 	db	65	;'A'
  1067  007D22  3D                 	db	61	;'='
  1068  007D23  22                 	db	34
  1069  007D24  50                 	db	80	;'P'
  1070  007D25  50                 	db	80	;'P'
  1071  007D26  50                 	db	80	;'P'
  1072  007D27  22                 	db	34
  1073  007D28  2C                 	db	44
  1074  007D29  25                 	db	37
  1075  007D2A  75                 	db	117	;'u'
  1076  007D2B  0D                 	db	13
  1077  007D2C  00                 	db	0
  1078  007D2D                     STR_16:
  1079  007D2D  56                 	db	86	;'V'
  1080  007D2E  65                 	db	101	;'e'
  1081  007D2F  68                 	db	104	;'h'
  1082  007D30  69                 	db	105	;'i'
  1083  007D31  63                 	db	99	;'c'
  1084  007D32  6C                 	db	108	;'l'
  1085  007D33  65                 	db	101	;'e'
  1086  007D34  20                 	db	32
  1087  007D35  53                 	db	83	;'S'
  1088  007D36  70                 	db	112	;'p'
  1089  007D37  65                 	db	101	;'e'
  1090  007D38  65                 	db	101	;'e'
  1091  007D39  64                 	db	100	;'d'
  1092  007D3A  20                 	db	32
  1093  007D3B  28                 	db	40
  1094  007D3C  4D                 	db	77	;'M'
  1095  007D3D  50                 	db	80	;'P'
  1096  007D3E  48                 	db	72	;'H'
  1097  007D3F  29                 	db	41
  1098  007D40  00                 	db	0
  1099  007D41  41                 	db	65	;'A'
  1100  007D42  54                 	db	84	;'T'
  1101  007D43  2B                 	db	43
  1102  007D44  48                 	db	72	;'H'
  1103  007D45  54                 	db	84	;'T'
  1104  007D46  54                 	db	84	;'T'
  1105  007D47  50                 	db	80	;'P'
  1106  007D48  50                 	db	80	;'P'
  1107  007D49  41                 	db	65	;'A'
  1108  007D4A  52                 	db	82	;'R'
  1109  007D4B  41                 	db	65	;'A'
  1110  007D4C  3D                 	db	61	;'='
  1111  007D4D  22                 	db	34
  1112  007D4E  43                 	db	67	;'C'
  1113  007D4F  49                 	db	73	;'I'
  1114  007D50  44                 	db	68	;'D'
  1115  007D51  22                 	db	34
  1116  007D52  2C                 	db	44
  1117  007D53  00                 	db	0
  1118  007D54                     STR_88:
  1119  007D54  41                 	db	65	;'A'
  1120  007D55  54                 	db	84	;'T'
  1121  007D56  2B                 	db	43
  1122  007D57  48                 	db	72	;'H'
  1123  007D58  54                 	db	84	;'T'
  1124  007D59  54                 	db	84	;'T'
  1125  007D5A  50                 	db	80	;'P'
  1126  007D5B  50                 	db	80	;'P'
  1127  007D5C  41                 	db	65	;'A'
  1128  007D5D  52                 	db	82	;'R'
  1129  007D5E  41                 	db	65	;'A'
  1130  007D5F  3D                 	db	61	;'='
  1131  007D60  22                 	db	34
  1132  007D61  55                 	db	85	;'U'
  1133  007D62  52                 	db	82	;'R'
  1134  007D63  4C                 	db	76	;'L'
  1135  007D64  22                 	db	34
  1136  007D65  2C                 	db	44
  1137  007D66  00                 	db	0
  1138  007D67                     STR_99:
  1139  007D67  41                 	db	65	;'A'
  1140  007D68  54                 	db	84	;'T'
  1141  007D69  2B                 	db	43
  1142  007D6A  48                 	db	72	;'H'
  1143  007D6B  54                 	db	84	;'T'
  1144  007D6C  54                 	db	84	;'T'
  1145  007D6D  50                 	db	80	;'P'
  1146  007D6E  41                 	db	65	;'A'
  1147  007D6F  43                 	db	67	;'C'
  1148  007D70  54                 	db	84	;'T'
  1149  007D71  49                 	db	73	;'I'
  1150  007D72  4F                 	db	79	;'O'
  1151  007D73  4E                 	db	78	;'N'
  1152  007D74  3D                 	db	61	;'='
  1153  007D75  25                 	db	37
  1154  007D76  75                 	db	117	;'u'
  1155  007D77  0D                 	db	13
  1156  007D78  00                 	db	0
  1157  007D79  41                 	db	65	;'A'
  1158  007D7A  54                 	db	84	;'T'
  1159  007D7B  2B                 	db	43
  1160  007D7C  48                 	db	72	;'H'
  1161  007D7D  54                 	db	84	;'T'
  1162  007D7E  54                 	db	84	;'T'
  1163  007D7F  50                 	db	80	;'P'
  1164  007D80  50                 	db	80	;'P'
  1165  007D81  41                 	db	65	;'A'
  1166  007D82  52                 	db	82	;'R'
  1167  007D83  41                 	db	65	;'A'
  1168  007D84  3D                 	db	61	;'='
  1169  007D85  22                 	db	34
  1170  007D86  55                 	db	85	;'U'
  1171  007D87  41                 	db	65	;'A'
  1172  007D88  22                 	db	34
  1173  007D89  2C                 	db	44
  1174  007D8A  00                 	db	0
  1175  007D8B                     STR_27:
  1176  007D8B  53                 	db	83	;'S'
  1177  007D8C  65                 	db	101	;'e'
  1178  007D8D  6E                 	db	110	;'n'
  1179  007D8E  64                 	db	100	;'d'
  1180  007D8F  69                 	db	105	;'i'
  1181  007D90  6E                 	db	110	;'n'
  1182  007D91  67                 	db	103	;'g'
  1183  007D92  20                 	db	32
  1184  007D93  66                 	db	102	;'f'
  1185  007D94  61                 	db	97	;'a'
  1186  007D95  69                 	db	105	;'i'
  1187  007D96  6C                 	db	108	;'l'
  1188  007D97  65                 	db	101	;'e'
  1189  007D98  64                 	db	100	;'d'
  1190  007D99  2E                 	db	46
  1191  007D9A  0D                 	db	13
  1192  007D9B  00                 	db	0
  1193  007D9C                     STR_10:
  1194  007D9C  61                 	db	97	;'a'
  1195  007D9D  70                 	db	112	;'p'
  1196  007D9E  70                 	db	112	;'p'
  1197  007D9F  6C                 	db	108	;'l'
  1198  007DA0  69                 	db	105	;'i'
  1199  007DA1  63                 	db	99	;'c'
  1200  007DA2  61                 	db	97	;'a'
  1201  007DA3  74                 	db	116	;'t'
  1202  007DA4  69                 	db	105	;'i'
  1203  007DA5  6F                 	db	111	;'o'
  1204  007DA6  6E                 	db	110	;'n'
  1205  007DA7  2F                 	db	47
  1206  007DA8  6A                 	db	106	;'j'
  1207  007DA9  73                 	db	115	;'s'
  1208  007DAA  6F                 	db	111	;'o'
  1209  007DAB  6E                 	db	110	;'n'
  1210  007DAC  00                 	db	0
  1211  007DAD  41                 	db	65	;'A'
  1212  007DAE  54                 	db	84	;'T'
  1213  007DAF  2B                 	db	43
  1214  007DB0  48                 	db	72	;'H'
  1215  007DB1  54                 	db	84	;'T'
  1216  007DB2  54                 	db	84	;'T'
  1217  007DB3  50                 	db	80	;'P'
  1218  007DB4  53                 	db	83	;'S'
  1219  007DB5  54                 	db	84	;'T'
  1220  007DB6  41                 	db	65	;'A'
  1221  007DB7  54                 	db	84	;'T'
  1222  007DB8  55                 	db	85	;'U'
  1223  007DB9  53                 	db	83	;'S'
  1224  007DBA  3F                 	db	63	;'?'
  1225  007DBB  0D                 	db	13
  1226  007DBC  00                 	db	0
  1227  007DBD  41                 	db	65	;'A'
  1228  007DBE  54                 	db	84	;'T'
  1229  007DBF  2B                 	db	43
  1230  007DC0  48                 	db	72	;'H'
  1231  007DC1  54                 	db	84	;'T'
  1232  007DC2  54                 	db	84	;'T'
  1233  007DC3  50                 	db	80	;'P'
  1234  007DC4  47                 	db	71	;'G'
  1235  007DC5  45                 	db	69	;'E'
  1236  007DC6  54                 	db	84	;'T'
  1237  007DC7  48                 	db	72	;'H'
  1238  007DC8  45                 	db	69	;'E'
  1239  007DC9  41                 	db	65	;'A'
  1240  007DCA  44                 	db	68	;'D'
  1241  007DCB  3D                 	db	61	;'='
  1242  007DCC  00                 	db	0
  1243  007DCD  41                 	db	65	;'A'
  1244  007DCE  54                 	db	84	;'T'
  1245  007DCF  2B                 	db	43
  1246  007DD0  53                 	db	83	;'S'
  1247  007DD1  41                 	db	65	;'A'
  1248  007DD2  50                 	db	80	;'P'
  1249  007DD3  42                 	db	66	;'B'
  1250  007DD4  52                 	db	82	;'R'
  1251  007DD5  3D                 	db	61	;'='
  1252  007DD6  34                 	db	52	;'4'
  1253  007DD7  2C                 	db	44
  1254  007DD8  25                 	db	37
  1255  007DD9  75                 	db	117	;'u'
  1256  007DDA  0D                 	db	13
  1257  007DDB  00                 	db	0
  1258  007DDC  41                 	db	65	;'A'
  1259  007DDD  54                 	db	84	;'T'
  1260  007DDE  2B                 	db	43
  1261  007DDF  43                 	db	67	;'C'
  1262  007DE0  47                 	db	71	;'G'
  1263  007DE1  50                 	db	80	;'P'
  1264  007DE2  41                 	db	65	;'A'
  1265  007DE3  44                 	db	68	;'D'
  1266  007DE4  44                 	db	68	;'D'
  1267  007DE5  52                 	db	82	;'R'
  1268  007DE6  3D                 	db	61	;'='
  1269  007DE7  25                 	db	37
  1270  007DE8  75                 	db	117	;'u'
  1271  007DE9  0D                 	db	13
  1272  007DEA  00                 	db	0
  1273  007DEB                     STR_18:
  1274  007DEB  46                 	db	70	;'F'
  1275  007DEC  75                 	db	117	;'u'
  1276  007DED  65                 	db	101	;'e'
  1277  007DEE  6C                 	db	108	;'l'
  1278  007DEF  20                 	db	32
  1279  007DF0  4C                 	db	76	;'L'
  1280  007DF1  65                 	db	101	;'e'
  1281  007DF2  76                 	db	118	;'v'
  1282  007DF3  65                 	db	101	;'e'
  1283  007DF4  6C                 	db	108	;'l'
  1284  007DF5  20                 	db	32
  1285  007DF6  28                 	db	40
  1286  007DF7  25                 	db	37
  1287  007DF8  29                 	db	41
  1288  007DF9  00                 	db	0
  1289  007DFA  41                 	db	65	;'A'
  1290  007DFB  54                 	db	84	;'T'
  1291  007DFC  2B                 	db	43
  1292  007DFD  48                 	db	72	;'H'
  1293  007DFE  54                 	db	84	;'T'
  1294  007DFF  54                 	db	84	;'T'
  1295  007E00  50                 	db	80	;'P'
  1296  007E01  53                 	db	83	;'S'
  1297  007E02  43                 	db	67	;'C'
  1298  007E03  4F                 	db	79	;'O'
  1299  007E04  4E                 	db	78	;'N'
  1300  007E05  54                 	db	84	;'T'
  1301  007E06  0D                 	db	13
  1302  007E07  00                 	db	0
  1303  007E08  41                 	db	65	;'A'
  1304  007E09  54                 	db	84	;'T'
  1305  007E0A  2B                 	db	43
  1306  007E0B  43                 	db	67	;'C'
  1307  007E0C  46                 	db	70	;'F'
  1308  007E0D  55                 	db	85	;'U'
  1309  007E0E  4E                 	db	78	;'N'
  1310  007E0F  3D                 	db	61	;'='
  1311  007E10  31                 	db	49	;'1'
  1312  007E11  2C                 	db	44
  1313  007E12  31                 	db	49	;'1'
  1314  007E13  0D                 	db	13
  1315  007E14  00                 	db	0
  1316  007E15  41                 	db	65	;'A'
  1317  007E16  54                 	db	84	;'T'
  1318  007E17  2B                 	db	43
  1319  007E18  43                 	db	67	;'C'
  1320  007E19  47                 	db	71	;'G'
  1321  007E1A  43                 	db	67	;'C'
  1322  007E1B  4C                 	db	76	;'L'
  1323  007E1C  41                 	db	65	;'A'
  1324  007E1D  53                 	db	83	;'S'
  1325  007E1E  53                 	db	83	;'S'
  1326  007E1F  3F                 	db	63	;'?'
  1327  007E20  0D                 	db	13
  1328  007E21  00                 	db	0
  1329  007E22  41                 	db	65	;'A'
  1330  007E23  54                 	db	84	;'T'
  1331  007E24  2B                 	db	43
  1332  007E25  48                 	db	72	;'H'
  1333  007E26  54                 	db	84	;'T'
  1334  007E27  54                 	db	84	;'T'
  1335  007E28  50                 	db	80	;'P'
  1336  007E29  48                 	db	72	;'H'
  1337  007E2A  45                 	db	69	;'E'
  1338  007E2B  41                 	db	65	;'A'
  1339  007E2C  44                 	db	68	;'D'
  1340  007E2D  0D                 	db	13
  1341  007E2E  00                 	db	0
  1342  007E2F  41                 	db	65	;'A'
  1343  007E30  54                 	db	84	;'T'
  1344  007E31  2B                 	db	43
  1345  007E32  48                 	db	72	;'H'
  1346  007E33  54                 	db	84	;'T'
  1347  007E34  54                 	db	84	;'T'
  1348  007E35  50                 	db	80	;'P'
  1349  007E36  54                 	db	84	;'T'
  1350  007E37  45                 	db	69	;'E'
  1351  007E38  52                 	db	82	;'R'
  1352  007E39  4D                 	db	77	;'M'
  1353  007E3A  0D                 	db	13
  1354  007E3B  00                 	db	0
  1355  007E3C                     STR_85:
  1356  007E3C  41                 	db	65	;'A'
  1357  007E3D  54                 	db	84	;'T'
  1358  007E3E  2B                 	db	43
  1359  007E3F  48                 	db	72	;'H'
  1360  007E40  54                 	db	84	;'T'
  1361  007E41  54                 	db	84	;'T'
  1362  007E42  50                 	db	80	;'P'
  1363  007E43  49                 	db	73	;'I'
  1364  007E44  4E                 	db	78	;'N'
  1365  007E45  49                 	db	73	;'I'
  1366  007E46  54                 	db	84	;'T'
  1367  007E47  0D                 	db	13
  1368  007E48  00                 	db	0
  1369  007E49  2C                 	db	44
  1370  007E4A  22                 	db	34
  1371  007E4B  50                 	db	80	;'P'
  1372  007E4C  48                 	db	72	;'H'
  1373  007E4D  4F                 	db	79	;'O'
  1374  007E4E  4E                 	db	78	;'N'
  1375  007E4F  45                 	db	69	;'E'
  1376  007E50  4E                 	db	78	;'N'
  1377  007E51  55                 	db	85	;'U'
  1378  007E52  4D                 	db	77	;'M'
  1379  007E53  22                 	db	34
  1380  007E54  2C                 	db	44
  1381  007E55  00                 	db	0
  1382  007E56  41                 	db	65	;'A'
  1383  007E57  54                 	db	84	;'T'
  1384  007E58  2B                 	db	43
  1385  007E59  43                 	db	67	;'C'
  1386  007E5A  47                 	db	71	;'G'
  1387  007E5B  41                 	db	65	;'A'
  1388  007E5C  54                 	db	84	;'T'
  1389  007E5D  54                 	db	84	;'T'
  1390  007E5E  3D                 	db	61	;'='
  1391  007E5F  30                 	db	48	;'0'
  1392  007E60  0D                 	db	13
  1393  007E61  00                 	db	0
  1394  007E62  41                 	db	65	;'A'
  1395  007E63  54                 	db	84	;'T'
  1396  007E64  2B                 	db	43
  1397  007E65  43                 	db	67	;'C'
  1398  007E66  47                 	db	71	;'G'
  1399  007E67  41                 	db	65	;'A'
  1400  007E68  54                 	db	84	;'T'
  1401  007E69  54                 	db	84	;'T'
  1402  007E6A  3D                 	db	61	;'='
  1403  007E6B  31                 	db	49	;'1'
  1404  007E6C  0D                 	db	13
  1405  007E6D  00                 	db	0
  1406  007E6E  41                 	db	65	;'A'
  1407  007E6F  54                 	db	84	;'T'
  1408  007E70  2B                 	db	43
  1409  007E71  43                 	db	67	;'C'
  1410  007E72  47                 	db	71	;'G'
  1411  007E73  45                 	db	69	;'E'
  1412  007E74  52                 	db	82	;'R'
  1413  007E75  45                 	db	69	;'E'
  1414  007E76  50                 	db	80	;'P'
  1415  007E77  3F                 	db	63	;'?'
  1416  007E78  0D                 	db	13
  1417  007E79  00                 	db	0
  1418  007E7A                     STR_30:
  1419  007E7A  41                 	db	65	;'A'
  1420  007E7B  54                 	db	84	;'T'
  1421  007E7C  2B                 	db	43
  1422  007E7D  49                 	db	73	;'I'
  1423  007E7E  50                 	db	80	;'P'
  1424  007E7F  52                 	db	82	;'R'
  1425  007E80  3D                 	db	61	;'='
  1426  007E81  25                 	db	37
  1427  007E82  6C                 	db	108	;'l'
  1428  007E83  64                 	db	100	;'d'
  1429  007E84  0D                 	db	13
  1430  007E85  00                 	db	0
  1431  007E86                     STR_44:
  1432  007E86  2C                 	db	44
  1433  007E87  22                 	db	34
  1434  007E88  43                 	db	67	;'C'
  1435  007E89  4F                 	db	79	;'O'
  1436  007E8A  4E                 	db	78	;'N'
  1437  007E8B  54                 	db	84	;'T'
  1438  007E8C  59                 	db	89	;'Y'
  1439  007E8D  50                 	db	80	;'P'
  1440  007E8E  45                 	db	69	;'E'
  1441  007E8F  22                 	db	34
  1442  007E90  2C                 	db	44
  1443  007E91  00                 	db	0
  1444  007E92  41                 	db	65	;'A'
  1445  007E93  54                 	db	84	;'T'
  1446  007E94  2B                 	db	43
  1447  007E95  53                 	db	83	;'S'
  1448  007E96  41                 	db	65	;'A'
  1449  007E97  50                 	db	80	;'P'
  1450  007E98  42                 	db	66	;'B'
  1451  007E99  52                 	db	82	;'R'
  1452  007E9A  3D                 	db	61	;'='
  1453  007E9B  30                 	db	48	;'0'
  1454  007E9C  2C                 	db	44
  1455  007E9D  00                 	db	0
  1456  007E9E  41                 	db	65	;'A'
  1457  007E9F  54                 	db	84	;'T'
  1458  007EA0  2B                 	db	43
  1459  007EA1  43                 	db	67	;'C'
  1460  007EA2  47                 	db	71	;'G'
  1461  007EA3  41                 	db	65	;'A'
  1462  007EA4  43                 	db	67	;'C'
  1463  007EA5  54                 	db	84	;'T'
  1464  007EA6  3D                 	db	61	;'='
  1465  007EA7  30                 	db	48	;'0'
  1466  007EA8  2C                 	db	44
  1467  007EA9  00                 	db	0
  1468  007EAA                     STR_56:
  1469  007EAA  41                 	db	65	;'A'
  1470  007EAB  54                 	db	84	;'T'
  1471  007EAC  2B                 	db	43
  1472  007EAD  53                 	db	83	;'S'
  1473  007EAE  41                 	db	65	;'A'
  1474  007EAF  50                 	db	80	;'P'
  1475  007EB0  42                 	db	66	;'B'
  1476  007EB1  52                 	db	82	;'R'
  1477  007EB2  3D                 	db	61	;'='
  1478  007EB3  31                 	db	49	;'1'
  1479  007EB4  2C                 	db	44
  1480  007EB5  00                 	db	0
  1481  007EB6  41                 	db	65	;'A'
  1482  007EB7  54                 	db	84	;'T'
  1483  007EB8  2B                 	db	43
  1484  007EB9  43                 	db	67	;'C'
  1485  007EBA  47                 	db	71	;'G'
  1486  007EBB  41                 	db	65	;'A'
  1487  007EBC  43                 	db	67	;'C'
  1488  007EBD  54                 	db	84	;'T'
  1489  007EBE  3D                 	db	61	;'='
  1490  007EBF  31                 	db	49	;'1'
  1491  007EC0  2C                 	db	44
  1492  007EC1  00                 	db	0
  1493  007EC2                     STR_58:
  1494  007EC2  41                 	db	65	;'A'
  1495  007EC3  54                 	db	84	;'T'
  1496  007EC4  2B                 	db	43
  1497  007EC5  53                 	db	83	;'S'
  1498  007EC6  41                 	db	65	;'A'
  1499  007EC7  50                 	db	80	;'P'
  1500  007EC8  42                 	db	66	;'B'
  1501  007EC9  52                 	db	82	;'R'
  1502  007ECA  3D                 	db	61	;'='
  1503  007ECB  32                 	db	50	;'2'
  1504  007ECC  2C                 	db	44
  1505  007ECD  00                 	db	0
  1506  007ECE                     STR_43:
  1507  007ECE  41                 	db	65	;'A'
  1508  007ECF  54                 	db	84	;'T'
  1509  007ED0  2B                 	db	43
  1510  007ED1  53                 	db	83	;'S'
  1511  007ED2  41                 	db	65	;'A'
  1512  007ED3  50                 	db	80	;'P'
  1513  007ED4  42                 	db	66	;'B'
  1514  007ED5  52                 	db	82	;'R'
  1515  007ED6  3D                 	db	61	;'='
  1516  007ED7  33                 	db	51	;'3'
  1517  007ED8  2C                 	db	44
  1518  007ED9  00                 	db	0
  1519  007EDA  41                 	db	65	;'A'
  1520  007EDB  54                 	db	84	;'T'
  1521  007EDC  2B                 	db	43
  1522  007EDD  43                 	db	67	;'C'
  1523  007EDE  47                 	db	71	;'G'
  1524  007EDF  43                 	db	67	;'C'
  1525  007EE0  4C                 	db	76	;'L'
  1526  007EE1  41                 	db	65	;'A'
  1527  007EE2  53                 	db	83	;'S'
  1528  007EE3  53                 	db	83	;'S'
  1529  007EE4  3D                 	db	61	;'='
  1530  007EE5  00                 	db	0
  1531  007EE6  41                 	db	65	;'A'
  1532  007EE7  54                 	db	84	;'T'
  1533  007EE8  2B                 	db	43
  1534  007EE9  43                 	db	67	;'C'
  1535  007EEA  47                 	db	71	;'G'
  1536  007EEB  44                 	db	68	;'D'
  1537  007EEC  43                 	db	67	;'C'
  1538  007EED  4F                 	db	79	;'O'
  1539  007EEE  4E                 	db	78	;'N'
  1540  007EEF  54                 	db	84	;'T'
  1541  007EF0  3D                 	db	61	;'='
  1542  007EF1  00                 	db	0
  1543  007EF2  41                 	db	65	;'A'
  1544  007EF3  54                 	db	84	;'T'
  1545  007EF4  2B                 	db	43
  1546  007EF5  43                 	db	67	;'C'
  1547  007EF6  47                 	db	71	;'G'
  1548  007EF7  52                 	db	82	;'R'
  1549  007EF8  45                 	db	69	;'E'
  1550  007EF9  47                 	db	71	;'G'
  1551  007EFA  3F                 	db	63	;'?'
  1552  007EFB  0D                 	db	13
  1553  007EFC  00                 	db	0
  1554  007EFD  41                 	db	65	;'A'
  1555  007EFE  54                 	db	84	;'T'
  1556  007EFF  2B                 	db	43
  1557  007F00  43                 	db	67	;'C'
  1558  007F01  47                 	db	71	;'G'
  1559  007F02  53                 	db	83	;'S'
  1560  007F03  4D                 	db	77	;'M'
  1561  007F04  53                 	db	83	;'S'
  1562  007F05  3F                 	db	63	;'?'
  1563  007F06  0D                 	db	13
  1564  007F07  00                 	db	0
  1565  007F08  41                 	db	65	;'A'
  1566  007F09  54                 	db	84	;'T'
  1567  007F0A  2B                 	db	43
  1568  007F0B  43                 	db	67	;'C'
  1569  007F0C  47                 	db	71	;'G'
  1570  007F0D  41                 	db	65	;'A'
  1571  007F0E  43                 	db	67	;'C'
  1572  007F0F  54                 	db	84	;'T'
  1573  007F10  3F                 	db	63	;'?'
  1574  007F11  0D                 	db	13
  1575  007F12  00                 	db	0
  1576  007F13  41                 	db	65	;'A'
  1577  007F14  54                 	db	84	;'T'
  1578  007F15  2B                 	db	43
  1579  007F16  43                 	db	67	;'C'
  1580  007F17  47                 	db	71	;'G'
  1581  007F18  41                 	db	65	;'A'
  1582  007F19  54                 	db	84	;'T'
  1583  007F1A  54                 	db	84	;'T'
  1584  007F1B  3F                 	db	63	;'?'
  1585  007F1C  0D                 	db	13
  1586  007F1D  00                 	db	0
  1587  007F1E  41                 	db	65	;'A'
  1588  007F1F  54                 	db	84	;'T'
  1589  007F20  2B                 	db	43
  1590  007F21  43                 	db	67	;'C'
  1591  007F22  47                 	db	71	;'G'
  1592  007F23  45                 	db	69	;'E'
  1593  007F24  52                 	db	82	;'R'
  1594  007F25  45                 	db	69	;'E'
  1595  007F26  50                 	db	80	;'P'
  1596  007F27  3D                 	db	61	;'='
  1597  007F28  00                 	db	0
  1598  007F29  41                 	db	65	;'A'
  1599  007F2A  54                 	db	84	;'T'
  1600  007F2B  2B                 	db	43
  1601  007F2C  43                 	db	67	;'C'
  1602  007F2D  4F                 	db	79	;'O'
  1603  007F2E  50                 	db	80	;'P'
  1604  007F2F  53                 	db	83	;'S'
  1605  007F30  3F                 	db	63	;'?'
  1606  007F31  0D                 	db	13
  1607  007F32  00                 	db	0
  1608  007F33  41                 	db	65	;'A'
  1609  007F34  54                 	db	84	;'T'
  1610  007F35  2B                 	db	43
  1611  007F36  43                 	db	67	;'C'
  1612  007F37  47                 	db	71	;'G'
  1613  007F38  52                 	db	82	;'R'
  1614  007F39  45                 	db	69	;'E'
  1615  007F3A  47                 	db	71	;'G'
  1616  007F3B  3D                 	db	61	;'='
  1617  007F3C  00                 	db	0
  1618  007F3D  41                 	db	65	;'A'
  1619  007F3E  54                 	db	84	;'T'
  1620  007F3F  2B                 	db	43
  1621  007F40  43                 	db	67	;'C'
  1622  007F41  47                 	db	71	;'G'
  1623  007F42  53                 	db	83	;'S'
  1624  007F43  4D                 	db	77	;'M'
  1625  007F44  53                 	db	83	;'S'
  1626  007F45  3D                 	db	61	;'='
  1627  007F46  00                 	db	0
  1628  007F47  41                 	db	65	;'A'
  1629  007F48  54                 	db	84	;'T'
  1630  007F49  2B                 	db	43
  1631  007F4A  43                 	db	67	;'C'
  1632  007F4B  49                 	db	73	;'I'
  1633  007F4C  4D                 	db	77	;'M'
  1634  007F4D  49                 	db	73	;'I'
  1635  007F4E  0D                 	db	13
  1636  007F4F  00                 	db	0
  1637  007F50  41                 	db	65	;'A'
  1638  007F51  54                 	db	84	;'T'
  1639  007F52  2B                 	db	43
  1640  007F53  43                 	db	67	;'C'
  1641  007F54  4E                 	db	78	;'N'
  1642  007F55  55                 	db	85	;'U'
  1643  007F56  4D                 	db	77	;'M'
  1644  007F57  0D                 	db	13
  1645  007F58  00                 	db	0
  1646  007F59  2C                 	db	44
  1647  007F5A  22                 	db	34
  1648  007F5B  52                 	db	82	;'R'
  1649  007F5C  41                 	db	65	;'A'
  1650  007F5D  54                 	db	84	;'T'
  1651  007F5E  45                 	db	69	;'E'
  1652  007F5F  22                 	db	34
  1653  007F60  2C                 	db	44
  1654  007F61  00                 	db	0
  1655  007F62  2C                 	db	44
  1656  007F63  22                 	db	34
  1657  007F64  55                 	db	85	;'U'
  1658  007F65  53                 	db	83	;'S'
  1659  007F66  45                 	db	69	;'E'
  1660  007F67  52                 	db	82	;'R'
  1661  007F68  22                 	db	34
  1662  007F69  2C                 	db	44
  1663  007F6A  00                 	db	0
  1664  007F6B                     STR_4:
  1665  007F6B  49                 	db	73	;'I'
  1666  007F6C  6E                 	db	110	;'n'
  1667  007F6D  74                 	db	116	;'t'
  1668  007F6E  65                 	db	101	;'e'
  1669  007F6F  72                 	db	114	;'r'
  1670  007F70  6E                 	db	110	;'n'
  1671  007F71  65                 	db	101	;'e'
  1672  007F72  74                 	db	116	;'t'
  1673  007F73  00                 	db	0
  1674  007F74  41                 	db	65	;'A'
  1675  007F75  54                 	db	84	;'T'
  1676  007F76  2B                 	db	43
  1677  007F77  47                 	db	71	;'G'
  1678  007F78  4D                 	db	77	;'M'
  1679  007F79  49                 	db	73	;'I'
  1680  007F7A  0D                 	db	13
  1681  007F7B  00                 	db	0
  1682  007F7C  41                 	db	65	;'A'
  1683  007F7D  54                 	db	84	;'T'
  1684  007F7E  2B                 	db	43
  1685  007F7F  47                 	db	71	;'G'
  1686  007F80  4F                 	db	79	;'O'
  1687  007F81  49                 	db	73	;'I'
  1688  007F82  0D                 	db	13
  1689  007F83  00                 	db	0
  1690  007F84  41                 	db	65	;'A'
  1691  007F85  54                 	db	84	;'T'
  1692  007F86  2B                 	db	43
  1693  007F87  47                 	db	71	;'G'
  1694  007F88  4D                 	db	77	;'M'
  1695  007F89  4D                 	db	77	;'M'
  1696  007F8A  0D                 	db	13
  1697  007F8B  00                 	db	0
  1698  007F8C  41                 	db	65	;'A'
  1699  007F8D  54                 	db	84	;'T'
  1700  007F8E  2B                 	db	43
  1701  007F8F  47                 	db	71	;'G'
  1702  007F90  53                 	db	83	;'S'
  1703  007F91  4E                 	db	78	;'N'
  1704  007F92  0D                 	db	13
  1705  007F93  00                 	db	0
  1706  007F94  41                 	db	65	;'A'
  1707  007F95  54                 	db	84	;'T'
  1708  007F96  2B                 	db	43
  1709  007F97  43                 	db	67	;'C'
  1710  007F98  53                 	db	83	;'S'
  1711  007F99  51                 	db	81	;'Q'
  1712  007F9A  0D                 	db	13
  1713  007F9B  00                 	db	0
  1714  007F9C  41                 	db	65	;'A'
  1715  007F9D  54                 	db	84	;'T'
  1716  007F9E  2B                 	db	43
  1717  007F9F  47                 	db	71	;'G'
  1718  007FA0  4D                 	db	77	;'M'
  1719  007FA1  52                 	db	82	;'R'
  1720  007FA2  0D                 	db	13
  1721  007FA3  00                 	db	0
  1722  007FA4  2C                 	db	44
  1723  007FA5  22                 	db	34
  1724  007FA6  50                 	db	80	;'P'
  1725  007FA7  57                 	db	87	;'W'
  1726  007FA8  44                 	db	68	;'D'
  1727  007FA9  22                 	db	34
  1728  007FAA  2C                 	db	44
  1729  007FAB  00                 	db	0
  1730  007FAC                     STR_46:
  1731  007FAC  2C                 	db	44
  1732  007FAD  22                 	db	34
  1733  007FAE  41                 	db	65	;'A'
  1734  007FAF  50                 	db	80	;'P'
  1735  007FB0  4E                 	db	78	;'N'
  1736  007FB1  22                 	db	34
  1737  007FB2  2C                 	db	44
  1738  007FB3  00                 	db	0
  1739  007FB4                     STR_5:
  1740  007FB4  44                 	db	68	;'D'
  1741  007FB5  6F                 	db	111	;'o'
  1742  007FB6  6E                 	db	110	;'n'
  1743  007FB7  65                 	db	101	;'e'
  1744  007FB8  2E                 	db	46
  1745  007FB9  0D                 	db	13
  1746  007FBA  0D                 	db	13
  1747  007FBB  00                 	db	0
  1748  007FBC  2C                 	db	44
  1749  007FBD  22                 	db	34
  1750  007FBE  49                 	db	73	;'I'
  1751  007FBF  50                 	db	80	;'P'
  1752  007FC0  22                 	db	34
  1753  007FC1  2C                 	db	44
  1754  007FC2  00                 	db	0
  1755  007FC3                     STR_25:
  1756  007FC3  44                 	db	68	;'D'
  1757  007FC4  61                 	db	97	;'a'
  1758  007FC5  74                 	db	116	;'t'
  1759  007FC6  61                 	db	97	;'a'
  1760  007FC7  3A                 	db	58	;':'
  1761  007FC8  20                 	db	32
  1762  007FC9  00                 	db	0
  1763  007FCA                     STR_29:
  1764  007FCA  41                 	db	65	;'A'
  1765  007FCB  54                 	db	84	;'T'
  1766  007FCC  45                 	db	69	;'E'
  1767  007FCD  30                 	db	48	;'0'
  1768  007FCE  0D                 	db	13
  1769  007FCF  00                 	db	0
  1770  007FD0                     STR_31:
  1771  007FD0  41                 	db	65	;'A'
  1772  007FD1  54                 	db	84	;'T'
  1773  007FD2  26                 	db	38
  1774  007FD3  57                 	db	87	;'W'
  1775  007FD4  0D                 	db	13
  1776  007FD5  00                 	db	0
  1777  007FD6  41                 	db	65	;'A'
  1778  007FD7  54                 	db	84	;'T'
  1779  007FD8  49                 	db	73	;'I'
  1780  007FD9  0D                 	db	13
  1781  007FDA  00                 	db	0
  1782  007FDB                     STR_15:
  1783  007FDB  33                 	db	51	;'3'
  1784  007FDC  35                 	db	53	;'5'
  1785  007FDD  30                 	db	48	;'0'
  1786  007FDE  30                 	db	48	;'0'
  1787  007FDF  00                 	db	0
  1788  007FE0                     STR_3:
  1789  007FE0  47                 	db	71	;'G'
  1790  007FE1  50                 	db	80	;'P'
  1791  007FE2  52                 	db	82	;'R'
  1792  007FE3  53                 	db	83	;'S'
  1793  007FE4  00                 	db	0
  1794  007FE5                     STR_28:
  1795  007FE5  41                 	db	65	;'A'
  1796  007FE6  54                 	db	84	;'T'
  1797  007FE7  0D                 	db	13
  1798  007FE8  00                 	db	0
  1799  007FE9                     STR_14:
  1800  007FE9  52                 	db	82	;'R'
  1801  007FEA  50                 	db	80	;'P'
  1802  007FEB  4D                 	db	77	;'M'
  1803  007FEC  00                 	db	0
  1804  007FED  43                 	db	67	;'C'
  1805  007FEE  43                 	db	67	;'C'
  1806  007FEF  00                 	db	0
  1807  007FF0  43                 	db	67	;'C'
  1808  007FF1  47                 	db	71	;'G'
  1809  007FF2  00                 	db	0
  1810  007FF3                     STR_13:
  1811  007FF3  33                 	db	51	;'3'
  1812  007FF4  30                 	db	48	;'0'
  1813  007FF5  00                 	db	0
  1814  007FF6                     STR_19:
  1815  007FF6  35                 	db	53	;'5'
  1816  007FF7  30                 	db	48	;'0'
  1817  007FF8  00                 	db	0
  1818  007FF9                     STR_17:
  1819  007FF9  33                 	db	51	;'3'
  1820  007FFA  35                 	db	53	;'5'
  1821  007FFB  00                 	db	0
  1822  007FFC                     STR_73:
  1823  007FFC  42                 	db	66	;'B'
  1824  007FFD  00                 	db	0
  1825  007FFE  00                 	db	0	; dummy byte at the end
  1826  0000                     
  1827                           ; #config settings
  1828                           
  1829                           	psect	cinit
  1830  0016B4                     __pcinit:
  1831                           	callstack 0
  1832  0016B4                     start_initialization:
  1833                           	callstack 0
  1834  0016B4                     __initialization:
  1835                           	callstack 0
  1836                           
  1837                           ; Initialize objects allocated to BANK0 (4 bytes)
  1838                           ; load TBLPTR registers with __pidataBANK0
  1839  0016B4  0E7C               	movlw	low __pidataBANK0
  1840  0016B6  6EF6               	movwf	tblptrl,c
  1841  0016B8  0E21               	movlw	high __pidataBANK0
  1842  0016BA  6EF7               	movwf	tblptrh,c
  1843  0016BC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1844  0016BE  6EF8               	movwf	tblptru,c
  1845  0016C0  EE00  F0EE         	lfsr	0,__pdataBANK0
  1846  0016C4  EE10 F004          	lfsr	1,4
  1847  0016C8                     copy_data0:
  1848  0016C8  0009               	tblrd		*+
  1849  0016CA  CFF5 FFEE          	movff	tablat,postinc0
  1850  0016CE  50E5               	movf	postdec1,w,c
  1851  0016D0  50E1               	movf	fsr1l,w,c
  1852  0016D2  E1FA               	bnz	copy_data0
  1853                           
  1854                           ; Initialize objects allocated to COMRAM (4 bytes)
  1855                           ; load TBLPTR registers with __pidataCOMRAM
  1856  0016D4  0E78               	movlw	low __pidataCOMRAM
  1857  0016D6  6EF6               	movwf	tblptrl,c
  1858  0016D8  0E21               	movlw	high __pidataCOMRAM
  1859  0016DA  6EF7               	movwf	tblptrh,c
  1860  0016DC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1861  0016DE  6EF8               	movwf	tblptru,c
  1862  0016E0  EE00  F064         	lfsr	0,__pdataCOMRAM
  1863  0016E4  EE10 F004          	lfsr	1,4
  1864  0016E8                     copy_data1:
  1865  0016E8  0009               	tblrd		*+
  1866  0016EA  CFF5 FFEE          	movff	tablat,postinc0
  1867  0016EE  50E5               	movf	postdec1,w,c
  1868  0016F0  50E1               	movf	fsr1l,w,c
  1869  0016F2  E1FA               	bnz	copy_data1
  1870                           
  1871                           ; Clear objects allocated to BANK3 (200 bytes)
  1872  0016F4  EE03  F000         	lfsr	0,__pbssBANK3
  1873  0016F8  0EC8               	movlw	200
  1874  0016FA                     clear_0:
  1875  0016FA  6AEE               	clrf	postinc0,c
  1876  0016FC  06E8               	decf	wreg,f,c
  1877  0016FE  E1FD               	bnz	clear_0
  1878                           
  1879                           ; Clear objects allocated to BANK2 (240 bytes)
  1880  001700  EE02  F000         	lfsr	0,__pbssBANK2
  1881  001704  0EF0               	movlw	240
  1882  001706                     clear_1:
  1883  001706  6AEE               	clrf	postinc0,c
  1884  001708  06E8               	decf	wreg,f,c
  1885  00170A  E1FD               	bnz	clear_1
  1886                           
  1887                           ; Clear objects allocated to BANK1 (220 bytes)
  1888  00170C  EE01  F000         	lfsr	0,__pbssBANK1
  1889  001710  0EDC               	movlw	220
  1890  001712                     clear_2:
  1891  001712  6AEE               	clrf	postinc0,c
  1892  001714  06E8               	decf	wreg,f,c
  1893  001716  E1FD               	bnz	clear_2
  1894                           
  1895                           ; Clear objects allocated to BANK0 (69 bytes)
  1896  001718  EE00  F080         	lfsr	0,__pbssBANK0
  1897  00171C  0E45               	movlw	69
  1898  00171E                     clear_3:
  1899  00171E  6AEE               	clrf	postinc0,c
  1900  001720  06E8               	decf	wreg,f,c
  1901  001722  E1FD               	bnz	clear_3
  1902                           
  1903                           ; Clear objects allocated to COMRAM (14 bytes)
  1904  001724  EE00  F056         	lfsr	0,__pbssCOMRAM
  1905  001728  0E0E               	movlw	14
  1906  00172A                     clear_4:
  1907  00172A  6AEE               	clrf	postinc0,c
  1908  00172C  06E8               	decf	wreg,f,c
  1909  00172E  E1FD               	bnz	clear_4
  1910  001730                     end_of_initialization:
  1911                           	callstack 0
  1912  001730                     __end_of__initialization:
  1913                           	callstack 0
  1914  001730  9068               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1915  001732  9268               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1916  001734  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1917  001736  6EF8               	movwf	tblptru,c
  1918  001738  0100               	movlb	0
  1919  00173A  EFB5  F010         	goto	_main	;jump to C main() function
  1920                           
  1921                           	psect	bssCOMRAM
  1922  000056                     __pbssCOMRAM:
  1923                           	callstack 0
  1924  000056                     _IncVar:
  1925                           	callstack 0
  1926  000056                     	ds	4
  1927  00005A                     _Rxfifocurrent@SIM800x_SDM$F1168:
  1928                           	callstack 0
  1929  00005A                     	ds	2
  1930  00005C                     _Rxfifoptr@SIM800x_SDM$F1167:
  1931                           	callstack 0
  1932  00005C                     	ds	2
  1933  00005E                     _val:
  1934                           	callstack 0
  1935  00005E                     	ds	2
  1936  000060                     _Rxfifocurrent:
  1937                           	callstack 0
  1938  000060                     	ds	1
  1939  000061                     _Rxfifoptr:
  1940                           	callstack 0
  1941  000061                     	ds	1
  1942  000062                     _cpos:
  1943                           	callstack 0
  1944  000062                     	ds	2
  1945                           
  1946                           	psect	dataCOMRAM
  1947  000064                     __pdataCOMRAM:
  1948                           	callstack 0
  1949  000064                     _Tout:
  1950                           	callstack 0
  1951  000064                     	ds	4
  1952                           
  1953                           	psect	bssBANK0
  1954  000080                     __pbssBANK0:
  1955                           	callstack 0
  1956  000080                     	ds	20
  1957  000094                     	ds	20
  1958  0000A8                     	ds	20
  1959  0000BC                     _DecVar:
  1960                           	callstack 0
  1961  0000BC                     	ds	4
  1962  0000C0                     	ds	2
  1963  0000C2                     	ds	2
  1964  0000C4                     _Rxstatus:
  1965                           	callstack 0
  1966  0000C4                     	ds	1
  1967                           
  1968                           	psect	dataBANK0
  1969  0000EE                     __pdataBANK0:
  1970                           	callstack 0
  1971  0000EE                     	ds	4
  1972                           
  1973                           	psect	bssBANK1
  1974  000100                     __pbssBANK1:
  1975                           	callstack 0
  1976  000100                     	ds	40
  1977  000128                     	ds	30
  1978  000146                     	ds	30
  1979  000164                     	ds	30
  1980  000182                     	ds	30
  1981  0001A0                     	ds	30
  1982  0001BE                     _rxmessage:
  1983                           	callstack 0
  1984  0001BE                     	ds	30
  1985                           
  1986                           	psect	bssBANK2
  1987  000200                     __pbssBANK2:
  1988                           	callstack 0
  1989  000200                     _RxFIFO:
  1990                           	callstack 0
  1991  000200                     	ds	100
  1992  000264                     	ds	40
  1993  00028C                     _txmessage:
  1994                           	callstack 0
  1995  00028C                     	ds	100
  1996                           
  1997                           	psect	bssBANK3
  1998  000300                     __pbssBANK3:
  1999                           	callstack 0
  2000  000300                     _RxFIFO@SIM800x_SDM$F1166:
  2001                           	callstack 0
  2002  000300                     	ds	200
  2003                           
  2004                           	psect	cstackBANK1
  2005  0001DC                     __pcstackBANK1:
  2006                           	callstack 0
  2007  0001DC                     SystemTask@msg:
  2008                           	callstack 0
  2009                           
  2010                           ; 20 bytes @ 0x0
  2011  0001DC                     	ds	20
  2012  0001F0                     SystemTask@cmd:
  2013                           	callstack 0
  2014                           
  2015                           ; 1 bytes @ 0x14
  2016  0001F0                     	ds	1
  2017  0001F1                     SystemTask@scode:
  2018                           	callstack 0
  2019                           
  2020                           ; 2 bytes @ 0x15
  2021  0001F1                     	ds	2
  2022  0001F3                     SystemTask@errcode:
  2023                           	callstack 0
  2024                           
  2025                           ; 2 bytes @ 0x17
  2026  0001F3                     	ds	2
  2027  0001F5                     SystemTask@cnt:
  2028                           	callstack 0
  2029                           
  2030                           ; 4 bytes @ 0x19
  2031  0001F5                     	ds	4
  2032                           
  2033                           	psect	cstackBANK0
  2034  0000C5                     __pcstackBANK0:
  2035                           	callstack 0
  2036  0000C5                     SystemInit@ip:
  2037                           	callstack 0
  2038  0000C5                     SIM800xHTTPInputData@str:
  2039                           	callstack 0
  2040  0000C5                     SIM800xHTTPAction@str:
  2041                           	callstack 0
  2042  0000C5                     SIM800xHTTPRead@str:
  2043                           	callstack 0
  2044                           
  2045                           ; 30 bytes @ 0x0
  2046  0000C5                     	ds	20
  2047  0000D9                     SystemInit@err:
  2048                           	callstack 0
  2049                           
  2050                           ; 2 bytes @ 0x14
  2051  0000D9                     	ds	10
  2052  0000E3                     SIM800xHTTPInputData@len:
  2053                           	callstack 0
  2054  0000E3                     SIM800xHTTPAction@t:
  2055                           	callstack 0
  2056  0000E3                     SIM800xHTTPRead@sz:
  2057                           	callstack 0
  2058                           
  2059                           ; 4 bytes @ 0x1E
  2060  0000E3                     	ds	4
  2061  0000E7                     SIM800xHTTPAction@method:
  2062                           	callstack 0
  2063  0000E7                     SIM800xHTTPInputData@time:
  2064                           	callstack 0
  2065  0000E7                     SIM800xHTTPRead@time:
  2066                           	callstack 0
  2067                           
  2068                           ; 4 bytes @ 0x22
  2069  0000E7                     	ds	1
  2070  0000E8                     SIM800xHTTPAction@time:
  2071                           	callstack 0
  2072                           
  2073                           ; 4 bytes @ 0x23
  2074  0000E8                     	ds	3
  2075  0000EB                     SIM800xHTTPInputData@res:
  2076                           	callstack 0
  2077  0000EB                     SIM800xHTTPRead@res:
  2078                           	callstack 0
  2079                           
  2080                           ; 2 bytes @ 0x26
  2081  0000EB                     	ds	1
  2082  0000EC                     SIM800xHTTPAction@res:
  2083                           	callstack 0
  2084                           
  2085                           ; 2 bytes @ 0x27
  2086  0000EC                     	ds	2
  2087                           
  2088                           	psect	cstackCOMRAM
  2089  000001                     __pcstackCOMRAM:
  2090                           	callstack 0
  2091  000001                     ?i2___awmod:
  2092                           	callstack 0
  2093  000001                     ?i2___lwmod:
  2094                           	callstack 0
  2095  000001                     USARTReceiveByte@data:
  2096                           	callstack 0
  2097  000001                     i2___awmod@dividend:
  2098                           	callstack 0
  2099  000001                     i2___lwmod@dividend:
  2100                           	callstack 0
  2101                           
  2102                           ; 2 bytes @ 0x0
  2103  000001                     	ds	2
  2104  000003                     i2___awmod@divisor:
  2105                           	callstack 0
  2106  000003                     i2___lwmod@divisor:
  2107                           	callstack 0
  2108                           
  2109                           ; 2 bytes @ 0x2
  2110  000003                     	ds	2
  2111  000005                     i2___awmod@counter:
  2112                           	callstack 0
  2113  000005                     i2___lwmod@counter:
  2114                           	callstack 0
  2115                           
  2116                           ; 1 bytes @ 0x4
  2117  000005                     	ds	1
  2118  000006                     SIM800xSDMCallBack@tmp:
  2119                           	callstack 0
  2120  000006                     i2___awmod@sign:
  2121                           	callstack 0
  2122                           
  2123                           ; 1 bytes @ 0x5
  2124  000006                     	ds	1
  2125  000007                     ??_SoftUARTCallBack:
  2126  000007                     SIM800xSDMCallBack@next:
  2127                           	callstack 0
  2128                           
  2129                           ; 2 bytes @ 0x6
  2130  000007                     	ds	2
  2131  000009                     SoftUARTCallBack@rxtmp:
  2132                           	callstack 0
  2133                           
  2134                           ; 1 bytes @ 0x8
  2135  000009                     	ds	1
  2136  00000A                     SoftUARTCallBack@next:
  2137                           	callstack 0
  2138                           
  2139                           ; 1 bytes @ 0x9
  2140  00000A                     	ds	1
  2141  00000B                     SoftUARTCallBack@k:
  2142                           	callstack 0
  2143                           
  2144                           ; 1 bytes @ 0xA
  2145  00000B                     	ds	1
  2146  00000C                     ??_Isr:
  2147                           
  2148                           ; 1 bytes @ 0xB
  2149  00000C                     	ds	2
  2150  00000E                     ??_SIM800xSDMPeek:
  2151  00000E                     ?_strlen:
  2152                           	callstack 0
  2153  00000E                     ?___awmod:
  2154                           	callstack 0
  2155  00000E                     ?___lwmod:
  2156                           	callstack 0
  2157  00000E                     ?_Tick_ms:
  2158                           	callstack 0
  2159  00000E                     ?___lmul:
  2160                           	callstack 0
  2161  00000E                     ?___lldiv:
  2162                           	callstack 0
  2163  00000E                     SoftUARTTransmitByte@data:
  2164                           	callstack 0
  2165  00000E                     SIM800xSDMSendByte@data:
  2166                           	callstack 0
  2167  00000E                     USARTAsyncInit@bgr:
  2168                           	callstack 0
  2169  00000E                     AddEntryToJsonObject@JsonObject:
  2170                           	callstack 0
  2171  00000E                     SIM800xSDMSendBytes@data:
  2172                           	callstack 0
  2173  00000E                     ___awmod@dividend:
  2174                           	callstack 0
  2175  00000E                     ___lwmod@dividend:
  2176                           	callstack 0
  2177  00000E                     strlen@s:
  2178                           	callstack 0
  2179  00000E                     Wait_ms@value:
  2180                           	callstack 0
  2181  00000E                     ___lmul@multiplier:
  2182                           	callstack 0
  2183  00000E                     ___lldiv@dividend:
  2184                           	callstack 0
  2185                           
  2186                           ; 4 bytes @ 0xD
  2187  00000E                     	ds	1
  2188  00000F                     SoftUARTTransmitByte@tmp:
  2189                           	callstack 0
  2190  00000F                     SIM800xSDMPrint@str:
  2191                           	callstack 0
  2192                           
  2193                           ; 2 bytes @ 0xE
  2194  00000F                     	ds	1
  2195  000010                     SoftUARTTransmitByte@k:
  2196                           	callstack 0
  2197  000010                     SIM800xSDMPeek@idx:
  2198                           	callstack 0
  2199  000010                     AddEntryToJsonObject@key:
  2200                           	callstack 0
  2201  000010                     SIM800xSDMSendBytes@cnt:
  2202                           	callstack 0
  2203  000010                     ___awmod@divisor:
  2204                           	callstack 0
  2205  000010                     ___lwmod@divisor:
  2206                           	callstack 0
  2207  000010                     strlen@cp:
  2208                           	callstack 0
  2209                           
  2210                           ; 2 bytes @ 0xF
  2211  000010                     	ds	1
  2212  000011                     SoftUARTPrint@str:
  2213                           	callstack 0
  2214                           
  2215                           ; 2 bytes @ 0x10
  2216  000011                     	ds	1
  2217  000012                     ??_Wait_ms:
  2218  000012                     ___awmod@counter:
  2219                           	callstack 0
  2220  000012                     ___lwmod@counter:
  2221                           	callstack 0
  2222  000012                     AddEntryToJsonObject@value:
  2223                           	callstack 0
  2224  000012                     ___lmul@multiplicand:
  2225                           	callstack 0
  2226  000012                     ___lldiv@divisor:
  2227                           	callstack 0
  2228                           
  2229                           ; 4 bytes @ 0x11
  2230  000012                     	ds	1
  2231  000013                     ?_SIM800xSDMRxAvailable:
  2232                           	callstack 0
  2233  000013                     SIM800xSDMReadByte@data:
  2234                           	callstack 0
  2235  000013                     ___awmod@sign:
  2236                           	callstack 0
  2237                           
  2238                           ; 1 bytes @ 0x12
  2239  000013                     	ds	1
  2240  000014                     ??_SoftUARTRxAvailable:
  2241  000014                     ?_SoftUARTReceiveByte:
  2242                           	callstack 0
  2243  000014                     AddEntryToJsonObject@Cpos:
  2244                           	callstack 0
  2245                           
  2246                           ; 2 bytes @ 0x13
  2247  000014                     	ds	1
  2248  000015                     ??_SIM800xSDMRxAvailable:
  2249                           
  2250                           ; 1 bytes @ 0x14
  2251  000015                     	ds	1
  2252  000016                     ??_AddEntryToJsonObject:
  2253  000016                     SoftUARTReceiveByte@data:
  2254                           	callstack 0
  2255  000016                     Wait_ms@x:
  2256                           	callstack 0
  2257  000016                     ___lmul@product:
  2258                           	callstack 0
  2259  000016                     ___lldiv@quotient:
  2260                           	callstack 0
  2261                           
  2262                           ; 4 bytes @ 0x15
  2263  000016                     	ds	1
  2264  000017                     ??_ProcessResp1:
  2265  000017                     ?_SIM800xSDMReadF1Pkt:
  2266                           	callstack 0
  2267  000017                     SIM800xSDMReadF1Pkt@data:
  2268                           	callstack 0
  2269                           
  2270                           ; 2 bytes @ 0x16
  2271  000017                     	ds	2
  2272  000019                     ??_SIM800xSDMReadF1Pkt:
  2273                           
  2274                           ; 1 bytes @ 0x18
  2275  000019                     	ds	1
  2276  00001A                     ?_StrToInt:
  2277                           	callstack 0
  2278  00001A                     AddEntryToJsonObject@offset:
  2279                           	callstack 0
  2280  00001A                     ___lldiv@counter:
  2281                           	callstack 0
  2282  00001A                     StrToInt@str:
  2283                           	callstack 0
  2284                           
  2285                           ; 2 bytes @ 0x19
  2286  00001A                     	ds	1
  2287  00001B                     ?___llmod:
  2288                           	callstack 0
  2289  00001B                     ProcessResp1@time:
  2290                           	callstack 0
  2291  00001B                     SIM800xSDMInit@br:
  2292                           	callstack 0
  2293  00001B                     ___llmod@dividend:
  2294                           	callstack 0
  2295                           
  2296                           ; 4 bytes @ 0x1A
  2297  00001B                     	ds	1
  2298  00001C                     StrToInt@start:
  2299                           	callstack 0
  2300                           
  2301                           ; 1 bytes @ 0x1B
  2302  00001C                     	ds	1
  2303  00001D                     StrToInt@stop:
  2304                           	callstack 0
  2305  00001D                     SIM800xSDMReadF1Pkt@val:
  2306                           	callstack 0
  2307                           
  2308                           ; 2 bytes @ 0x1C
  2309  00001D                     	ds	1
  2310  00001E                     ??_StrToInt:
  2311                           
  2312                           ; 1 bytes @ 0x1D
  2313  00001E                     	ds	1
  2314  00001F                     ??_SIM800xSDMInit:
  2315  00001F                     ProcessResp1@c:
  2316                           	callstack 0
  2317  00001F                     SIM800xSDMReadF1Pkt@i:
  2318                           	callstack 0
  2319  00001F                     ___llmod@divisor:
  2320                           	callstack 0
  2321                           
  2322                           ; 4 bytes @ 0x1E
  2323  00001F                     	ds	1
  2324  000020                     SIM800xIPOpen@cid:
  2325                           	callstack 0
  2326  000020                     SIM800xIPSetConnectionType@contype:
  2327                           	callstack 0
  2328  000020                     SIM800xIPSetAPN@apn:
  2329                           	callstack 0
  2330  000020                     SIM800xSDMReadF1Pkt@time:
  2331                           	callstack 0
  2332                           
  2333                           ; 4 bytes @ 0x1F
  2334  000020                     	ds	2
  2335  000022                     SIM800xIPSetConnectionType@cid:
  2336                           	callstack 0
  2337  000022                     SIM800xIPSetAPN@cid:
  2338                           	callstack 0
  2339                           
  2340                           ; 1 bytes @ 0x21
  2341  000022                     	ds	1
  2342  000023                     ___llmod@counter:
  2343                           	callstack 0
  2344  000023                     StrToInt@val:
  2345                           	callstack 0
  2346  000023                     SIM800xSDMInit@val:
  2347                           	callstack 0
  2348                           
  2349                           ; 4 bytes @ 0x22
  2350  000023                     	ds	1
  2351  000024                     ?_sprintf:
  2352                           	callstack 0
  2353  000024                     SIM800xSDMReadF1Pkt@tmp:
  2354                           	callstack 0
  2355  000024                     sprintf@sp:
  2356                           	callstack 0
  2357                           
  2358                           ; 2 bytes @ 0x23
  2359  000024                     	ds	1
  2360  000025                     ProcessResp2@str:
  2361                           	callstack 0
  2362                           
  2363                           ; 2 bytes @ 0x24
  2364  000025                     	ds	1
  2365  000026                     sprintf@f:
  2366                           	callstack 0
  2367                           
  2368                           ; 2 bytes @ 0x25
  2369  000026                     	ds	1
  2370  000027                     StrToInt@j:
  2371                           	callstack 0
  2372  000027                     ProcessResp2@c:
  2373                           	callstack 0
  2374                           
  2375                           ; 1 bytes @ 0x26
  2376  000027                     	ds	1
  2377  000028                     StrToInt@ctrl:
  2378                           	callstack 0
  2379  000028                     ProcessResp2@res:
  2380                           	callstack 0
  2381                           
  2382                           ; 2 bytes @ 0x27
  2383  000028                     	ds	1
  2384  000029                     StrToInt@po:
  2385                           	callstack 0
  2386                           
  2387                           ; 4 bytes @ 0x28
  2388  000029                     	ds	1
  2389  00002A                     SIM800xIPGetState@ip:
  2390                           	callstack 0
  2391                           
  2392                           ; 2 bytes @ 0x29
  2393  00002A                     	ds	2
  2394  00002C                     ??_SIM800xIPGetState:
  2395                           
  2396                           ; 1 bytes @ 0x2B
  2397  00002C                     	ds	1
  2398  00002D                     StrToInt@i:
  2399                           	callstack 0
  2400                           
  2401                           ; 1 bytes @ 0x2C
  2402  00002D                     	ds	1
  2403  00002E                     ProcessResp4@ec:
  2404                           	callstack 0
  2405                           
  2406                           ; 2 bytes @ 0x2D
  2407  00002E                     	ds	2
  2408  000030                     ??_sprintf:
  2409  000030                     ??_ProcessResp4:
  2410  000030                     SIM800xIPGetState@str:
  2411                           	callstack 0
  2412                           
  2413                           ; 30 bytes @ 0x2F
  2414  000030                     	ds	2
  2415  000032                     sprintf@prec:
  2416                           	callstack 0
  2417                           
  2418                           ; 2 bytes @ 0x31
  2419  000032                     	ds	2
  2420  000034                     sprintf@val:
  2421                           	callstack 0
  2422  000034                     ProcessResp4@str:
  2423                           	callstack 0
  2424                           
  2425                           ; 20 bytes @ 0x33
  2426  000034                     	ds	4
  2427  000038                     sprintf@flag:
  2428                           	callstack 0
  2429                           
  2430                           ; 1 bytes @ 0x37
  2431  000038                     	ds	1
  2432  000039                     sprintf@ap:
  2433                           	callstack 0
  2434                           
  2435                           ; 2 bytes @ 0x38
  2436  000039                     	ds	2
  2437  00003B                     sprintf@c:
  2438                           	callstack 0
  2439                           
  2440                           ; 1 bytes @ 0x3A
  2441  00003B                     	ds	1
  2442  00003C                     SIM800xHTTPInputData@data:
  2443                           	callstack 0
  2444  00003C                     SIM800xHTTPAction@statuscode:
  2445                           	callstack 0
  2446  00003C                     SIM800xHTTPRead@data:
  2447                           	callstack 0
  2448  00003C                     SIM800xInit@br:
  2449                           	callstack 0
  2450                           
  2451                           ; 4 bytes @ 0x3B
  2452  00003C                     	ds	2
  2453  00003E                     SIM800xHTTPAction@cnt:
  2454                           	callstack 0
  2455  00003E                     SIM800xHTTPInputData@cnt:
  2456                           	callstack 0
  2457  00003E                     SIM800xHTTPRead@strindex:
  2458                           	callstack 0
  2459                           
  2460                           ; 4 bytes @ 0x3D
  2461  00003E                     	ds	2
  2462  000040                     SIM800xHTTPAction@tout:
  2463                           	callstack 0
  2464  000040                     SIM800xInit@str:
  2465                           	callstack 0
  2466                           
  2467                           ; 15 bytes @ 0x3F
  2468  000040                     	ds	2
  2469  000042                     SIM800xHTTPInputData@timeout:
  2470                           	callstack 0
  2471  000042                     SIM800xHTTPRead@size:
  2472                           	callstack 0
  2473                           
  2474                           ; 4 bytes @ 0x41
  2475  000042                     	ds	2
  2476  000044                     SIM800xHTTPAction@errcode:
  2477                           	callstack 0
  2478                           
  2479                           ; 2 bytes @ 0x43
  2480  000044                     	ds	2
  2481  000046                     ??_SIM800xHTTPAction:
  2482  000046                     SIM800xHTTPInputData@errcode:
  2483                           	callstack 0
  2484  000046                     SIM800xHTTPRead@cnt:
  2485                           	callstack 0
  2486                           
  2487                           ; 2 bytes @ 0x45
  2488  000046                     	ds	2
  2489  000048                     ??_SIM800xHTTPInputData:
  2490  000048                     SIM800xHTTPRead@errcode:
  2491                           	callstack 0
  2492  000048                     ProcessResp4@time:
  2493                           	callstack 0
  2494                           
  2495                           ; 4 bytes @ 0x47
  2496  000048                     	ds	2
  2497  00004A                     ??_SIM800xHTTPRead:
  2498                           
  2499                           ; 1 bytes @ 0x49
  2500  00004A                     	ds	2
  2501  00004C                     ProcessResp4@res:
  2502                           	callstack 0
  2503                           
  2504                           ; 2 bytes @ 0x4B
  2505  00004C                     	ds	2
  2506  00004E                     ??_SystemTask:
  2507  00004E                     SIM800xHTTPInit@errcode:
  2508                           	callstack 0
  2509  00004E                     SIM800xHTTPSetURL@url:
  2510                           	callstack 0
  2511  00004E                     SIM800xHTTPSetContent@content:
  2512                           	callstack 0
  2513  00004E                     SIM800xIPGetState@time1:
  2514                           	callstack 0
  2515                           
  2516                           ; 4 bytes @ 0x4D
  2517  00004E                     	ds	1
  2518  00004F                     SIM800xInit@tmp:
  2519                           	callstack 0
  2520                           
  2521                           ; 2 bytes @ 0x4E
  2522  00004F                     	ds	1
  2523  000050                     SIM800xHTTPSetURL@errcode:
  2524                           	callstack 0
  2525  000050                     SIM800xHTTPSetContent@errcode:
  2526                           	callstack 0
  2527                           
  2528                           ; 2 bytes @ 0x4F
  2529  000050                     	ds	1
  2530  000051                     SIM800xInit@c:
  2531                           	callstack 0
  2532                           
  2533                           ; 1 bytes @ 0x50
  2534  000051                     	ds	1
  2535  000052                     SIM800xIPGetState@res:
  2536                           	callstack 0
  2537                           
  2538                           ; 1 bytes @ 0x51
  2539  000052                     	ds	1
  2540  000053                     SIM800xIPGetState@cid:
  2541                           	callstack 0
  2542                           
  2543                           ; 1 bytes @ 0x52
  2544  000053                     	ds	1
  2545  000054                     SIM800xIPGetState@len:
  2546                           	callstack 0
  2547                           
  2548                           ; 1 bytes @ 0x53
  2549  000054                     	ds	1
  2550  000055                     SIM800xIPGetState@i:
  2551                           	callstack 0
  2552                           
  2553                           ; 1 bytes @ 0x54
  2554  000055                     	ds	1
  2555  000056                     
  2556                           ; 1 bytes @ 0x55
  2557 ;;
  2558 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2559 ;;
  2560 ;; *************** function _main *****************
  2561 ;; Defined at:
  2562 ;;		line 12 in file "Src/main.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;		None
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;		None
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  1    wreg      void 
  2569 ;; Registers used:
  2570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2576 ;;      Params:         0       0       0       0       0       0       0
  2577 ;;      Locals:         0       0       0       0       0       0       0
  2578 ;;      Temps:          0       0       0       0       0       0       0
  2579 ;;      Totals:         0       0       0       0       0       0       0
  2580 ;;Total ram usage:        0 bytes
  2581 ;; Hardware stack levels required when called: 9
  2582 ;; This function calls:
  2583 ;;		_SystemInit
  2584 ;;		_SystemTask
  2585 ;; This function is called by:
  2586 ;;		Startup code after reset
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590                           	psect	text0
  2591  00216A                     __ptext0:
  2592                           	callstack 0
  2593  00216A                     _main:
  2594                           	callstack 0
  2595  00216A  FFFF               	dw	65535	; assembler added errata NOP
  2596                           
  2597                           ;main.c: 15: SystemInit();
  2598                           
  2599                           ;incstack = 0
  2600  00216C  EC14  F006         	call	_SystemInit	;wreg free
  2601  002170                     l75:
  2602  002170  FFFF               	dw	65535	; assembler added errata NOP
  2603                           
  2604                           ;main.c: 18: {;main.c: 19: SystemTask();
  2605  002172  ECF1  F006         	call	_SystemTask	;wreg free
  2606  002176  D7FC               	goto	l75
  2607  002178                     __end_of_main:
  2608                           	callstack 0
  2609                           
  2610 ;; *************** function _SystemTask *****************
  2611 ;; Defined at:
  2612 ;;		line 96 in file "Src/ApplicationExample.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;		None
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;  msg            20    0[BANK1 ] unsigned char [20]
  2617 ;;  cnt             4   25[BANK1 ] unsigned long 
  2618 ;;  errcode         2   23[BANK1 ] unsigned int 
  2619 ;;  scode           2   21[BANK1 ] unsigned int 
  2620 ;;  cmd             1   20[BANK1 ] unsigned char 
  2621 ;; Return value:  Size  Location     Type
  2622 ;;                  1    wreg      void 
  2623 ;; Registers used:
  2624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2630 ;;      Params:         0       0       0       0       0       0       0
  2631 ;;      Locals:         0       0      29       0       0       0       0
  2632 ;;      Temps:          2       0       0       0       0       0       0
  2633 ;;      Totals:         2       0      29       0       0       0       0
  2634 ;;Total ram usage:       31 bytes
  2635 ;; Hardware stack levels used: 1
  2636 ;; Hardware stack levels required when called: 7
  2637 ;; This function calls:
  2638 ;;		_SIM800xHTTPAction
  2639 ;;		_SIM800xHTTPInputData
  2640 ;;		_SIM800xHTTPRead
  2641 ;;		_SoftUARTPrint
  2642 ;;		_SoftUARTReceiveByte
  2643 ;;		_SoftUARTRxAvailable
  2644 ;;		_sprintf
  2645 ;; This function is called by:
  2646 ;;		_main
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           	psect	text1
  2651  000DE2                     __ptext1:
  2652                           	callstack 0
  2653  000DE2                     _SystemTask:
  2654                           	callstack 0
  2655  000DE2  FFFF               	dw	65535	; assembler added errata NOP
  2656                           
  2657                           ;ApplicationExample.c: 98: uint8_t cmd = 0;
  2658                           
  2659                           ;incstack = 0
  2660  000DE4  0E00               	movlw	0
  2661  000DE6  0101               	movlb	1	; () banked
  2662  000DE8  6FF0               	movwf	SystemTask@cmd& (0+255),b
  2663                           
  2664                           ;ApplicationExample.c: 99: uint16_t scode = 0, errcode = 0;
  2665  000DEA  0E00               	movlw	0
  2666  000DEC  6FF2               	movwf	(SystemTask@scode+1)& (0+255),b
  2667  000DEE  0E00               	movlw	0
  2668  000DF0  6FF1               	movwf	SystemTask@scode& (0+255),b
  2669  000DF2  0E00               	movlw	0
  2670  000DF4  6FF4               	movwf	(SystemTask@errcode+1)& (0+255),b
  2671  000DF6  0E00               	movlw	0
  2672  000DF8  6FF3               	movwf	SystemTask@errcode& (0+255),b
  2673                           
  2674                           ;ApplicationExample.c: 100: uint32_t cnt = 0;
  2675  000DFA  0E00               	movlw	0
  2676  000DFC  6FF5               	movwf	SystemTask@cnt& (0+255),b
  2677  000DFE  0E00               	movlw	0
  2678  000E00  6FF6               	movwf	(SystemTask@cnt+1)& (0+255),b
  2679  000E02  0E00               	movlw	0
  2680  000E04  6FF7               	movwf	(SystemTask@cnt+2)& (0+255),b
  2681  000E06  0E00               	movlw	0
  2682  000E08  6FF8               	movwf	(SystemTask@cnt+3)& (0+255),b
  2683                           
  2684                           ; BSR set to: 1
  2685                           ;ApplicationExample.c: 101: if(SoftUARTRxAvailable())
  2686  000E0A  EC3D  F010         	call	_SoftUARTRxAvailable	;wreg free
  2687  000E0E  0900               	iorlw	0
  2688  000E10  B4D8               	btfsc	status,2,c
  2689  000E12  D005               	goto	l5495
  2690                           
  2691                           ;ApplicationExample.c: 102: cmd = (uint8_t)SoftUARTReceiveByte();
  2692  000E14  EC80  F00F         	call	_SoftUARTReceiveByte	;wreg free
  2693  000E18  5014               	movf	?_SoftUARTReceiveByte^0,w,c
  2694  000E1A  0101               	movlb	1	; () banked
  2695  000E1C  6FF0               	movwf	SystemTask@cmd& (0+255),b
  2696  000E1E                     l5495:
  2697  000E1E  FFFF               	dw	65535	; assembler added errata NOP
  2698                           
  2699                           ;ApplicationExample.c: 103: if(cmd == '1')
  2700  000E20  0E31               	movlw	49
  2701  000E22  0101               	movlb	1	; () banked
  2702  000E24  19F0               	xorwf	SystemTask@cmd& (0+255),w,b
  2703  000E26  A4D8               	btfss	status,2,c
  2704  000E28  D0A5               	goto	l5513
  2705                           
  2706                           ; BSR set to: 1
  2707                           ;ApplicationExample.c: 104: {;ApplicationExample.c: 106: SoftUARTPrint("Sending message 
      +                          to thinger.io...\r");
  2708  000E2A  0EF2               	movlw	low STR_22
  2709  000E2C  6E11               	movwf	SoftUARTPrint@str^0,c
  2710  000E2E  0E7A               	movlw	high STR_22
  2711  000E30  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  2712  000E32  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  2713                           
  2714                           ;ApplicationExample.c: 108: SIM800xHTTPInputData(txmessage, (uint32_t)(cpos + 1), 5000, 
      +                          &errcode);
  2715  000E36  0E8C               	movlw	low _txmessage
  2716  000E38  6E3C               	movwf	SIM800xHTTPInputData@data^0,c
  2717  000E3A  0E02               	movlw	high _txmessage
  2718  000E3C  6E3D               	movwf	(SIM800xHTTPInputData@data+1)^0,c
  2719  000E3E  0E01               	movlw	1
  2720  000E40  2462               	addwf	_cpos^0,w,c
  2721  000E42  6E4E               	movwf	??_SystemTask^0,c
  2722  000E44  0E00               	movlw	0
  2723  000E46  2063               	addwfc	(_cpos+1)^0,w,c
  2724  000E48  6E4F               	movwf	(??_SystemTask+1)^0,c
  2725  000E4A  C04E  F03E         	movff	??_SystemTask,SIM800xHTTPInputData@cnt
  2726  000E4E  C04F  F03F         	movff	??_SystemTask+1,SIM800xHTTPInputData@cnt+1
  2727  000E52  6A40               	clrf	(SIM800xHTTPInputData@cnt+2)^0,c
  2728  000E54  6A41               	clrf	(SIM800xHTTPInputData@cnt+3)^0,c
  2729  000E56  0E88               	movlw	136
  2730  000E58  6E42               	movwf	SIM800xHTTPInputData@timeout^0,c
  2731  000E5A  0E13               	movlw	19
  2732  000E5C  6E43               	movwf	(SIM800xHTTPInputData@timeout+1)^0,c
  2733  000E5E  0E00               	movlw	0
  2734  000E60  6E44               	movwf	(SIM800xHTTPInputData@timeout+2)^0,c
  2735  000E62  0E00               	movlw	0
  2736  000E64  6E45               	movwf	(SIM800xHTTPInputData@timeout+3)^0,c
  2737  000E66  0EF3               	movlw	low SystemTask@errcode
  2738  000E68  6E46               	movwf	SIM800xHTTPInputData@errcode^0,c
  2739  000E6A  0E01               	movlw	high SystemTask@errcode
  2740  000E6C  6E47               	movwf	(SIM800xHTTPInputData@errcode+1)^0,c
  2741  000E6E  EC0F  F005         	call	_SIM800xHTTPInputData	;wreg free
  2742                           
  2743                           ;ApplicationExample.c: 110: if(SIM800xHTTPAction(1, &scode, &cnt, 10000, &errcode) == SI
      +                          M800X_OK)
  2744  000E72  0EF1               	movlw	low SystemTask@scode
  2745  000E74  6E3C               	movwf	SIM800xHTTPAction@statuscode^0,c
  2746  000E76  0E01               	movlw	high SystemTask@scode
  2747  000E78  6E3D               	movwf	(SIM800xHTTPAction@statuscode+1)^0,c
  2748  000E7A  0EF5               	movlw	low SystemTask@cnt
  2749  000E7C  6E3E               	movwf	SIM800xHTTPAction@cnt^0,c
  2750  000E7E  0E01               	movlw	high SystemTask@cnt
  2751  000E80  6E3F               	movwf	(SIM800xHTTPAction@cnt+1)^0,c
  2752  000E82  0E10               	movlw	16
  2753  000E84  6E40               	movwf	SIM800xHTTPAction@tout^0,c
  2754  000E86  0E27               	movlw	39
  2755  000E88  6E41               	movwf	(SIM800xHTTPAction@tout+1)^0,c
  2756  000E8A  0E00               	movlw	0
  2757  000E8C  6E42               	movwf	(SIM800xHTTPAction@tout+2)^0,c
  2758  000E8E  0E00               	movlw	0
  2759  000E90  6E43               	movwf	(SIM800xHTTPAction@tout+3)^0,c
  2760  000E92  0EF3               	movlw	low SystemTask@errcode
  2761  000E94  6E44               	movwf	SIM800xHTTPAction@errcode^0,c
  2762  000E96  0E01               	movlw	high SystemTask@errcode
  2763  000E98  6E45               	movwf	(SIM800xHTTPAction@errcode+1)^0,c
  2764  000E9A  0E01               	movlw	1
  2765  000E9C  ECFE  F003         	call	_SIM800xHTTPAction
  2766  000EA0  0900               	iorlw	0
  2767  000EA2  A4D8               	btfss	status,2,c
  2768  000EA4  D060               	goto	l5511
  2769                           
  2770                           ;ApplicationExample.c: 111: {;ApplicationExample.c: 112: if(SIM800xHTTPRead(rxmessage, 0
      +                          , cnt, &cnt, &errcode) == SIM800X_OK)
  2771  000EA6  0EBE               	movlw	low _rxmessage
  2772  000EA8  6E3C               	movwf	SIM800xHTTPRead@data^0,c
  2773  000EAA  0E01               	movlw	high _rxmessage
  2774  000EAC  6E3D               	movwf	(SIM800xHTTPRead@data+1)^0,c
  2775  000EAE  0E00               	movlw	0
  2776  000EB0  6E3E               	movwf	SIM800xHTTPRead@strindex^0,c
  2777  000EB2  0E00               	movlw	0
  2778  000EB4  6E3F               	movwf	(SIM800xHTTPRead@strindex+1)^0,c
  2779  000EB6  0E00               	movlw	0
  2780  000EB8  6E40               	movwf	(SIM800xHTTPRead@strindex+2)^0,c
  2781  000EBA  0E00               	movlw	0
  2782  000EBC  6E41               	movwf	(SIM800xHTTPRead@strindex+3)^0,c
  2783  000EBE  C1F5  F042         	movff	SystemTask@cnt,SIM800xHTTPRead@size
  2784  000EC2  C1F6  F043         	movff	SystemTask@cnt+1,SIM800xHTTPRead@size+1
  2785  000EC6  C1F7  F044         	movff	SystemTask@cnt+2,SIM800xHTTPRead@size+2
  2786  000ECA  C1F8  F045         	movff	SystemTask@cnt+3,SIM800xHTTPRead@size+3
  2787  000ECE  0EF5               	movlw	low SystemTask@cnt
  2788  000ED0  6E46               	movwf	SIM800xHTTPRead@cnt^0,c
  2789  000ED2  0E01               	movlw	high SystemTask@cnt
  2790  000ED4  6E47               	movwf	(SIM800xHTTPRead@cnt+1)^0,c
  2791  000ED6  0EF3               	movlw	low SystemTask@errcode
  2792  000ED8  6E48               	movwf	SIM800xHTTPRead@errcode^0,c
  2793  000EDA  0E01               	movlw	high SystemTask@errcode
  2794  000EDC  6E49               	movwf	(SIM800xHTTPRead@errcode+1)^0,c
  2795  000EDE  EC8D  F001         	call	_SIM800xHTTPRead	;wreg free
  2796  000EE2  0900               	iorlw	0
  2797  000EE4  A4D8               	btfss	status,2,c
  2798  000EE6  D046               	goto	l5513
  2799                           
  2800                           ;ApplicationExample.c: 113: {;ApplicationExample.c: 114: char msg[20];;ApplicationExampl
      +                          e.c: 115: sprintf(msg, "HTTP response code: %u\r", scode);
  2801  000EE8  0EDC               	movlw	low SystemTask@msg
  2802  000EEA  6E24               	movwf	sprintf@sp^0,c
  2803  000EEC  0E01               	movlw	high SystemTask@msg
  2804  000EEE  6E25               	movwf	(sprintf@sp+1)^0,c
  2805  000EF0  0E7F               	movlw	low STR_23
  2806  000EF2  6E26               	movwf	sprintf@f^0,c
  2807  000EF4  0E7C               	movlw	high STR_23
  2808  000EF6  6E27               	movwf	(sprintf@f+1)^0,c
  2809  000EF8  C1F1  F028         	movff	SystemTask@scode,?_sprintf+4
  2810  000EFC  C1F2  F029         	movff	SystemTask@scode+1,?_sprintf+5
  2811  000F00  ECCD  F002         	call	_sprintf	;wreg free
  2812                           
  2813                           ;ApplicationExample.c: 116: SoftUARTPrint(msg);
  2814  000F04  0EDC               	movlw	low SystemTask@msg
  2815  000F06  6E11               	movwf	SoftUARTPrint@str^0,c
  2816  000F08  0E01               	movlw	high SystemTask@msg
  2817  000F0A  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  2818  000F0C  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  2819                           
  2820                           ;ApplicationExample.c: 117: sprintf(msg, "Received data length: %ld\r", cnt);
  2821  000F10  0EDC               	movlw	low SystemTask@msg
  2822  000F12  6E24               	movwf	sprintf@sp^0,c
  2823  000F14  0E01               	movlw	high SystemTask@msg
  2824  000F16  6E25               	movwf	(sprintf@sp+1)^0,c
  2825  000F18  0EE7               	movlw	low STR_24
  2826  000F1A  6E26               	movwf	sprintf@f^0,c
  2827  000F1C  0E7B               	movlw	high STR_24
  2828  000F1E  6E27               	movwf	(sprintf@f+1)^0,c
  2829  000F20  C1F5  F028         	movff	SystemTask@cnt,?_sprintf+4
  2830  000F24  C1F6  F029         	movff	SystemTask@cnt+1,?_sprintf+5
  2831  000F28  C1F7  F02A         	movff	SystemTask@cnt+2,?_sprintf+6
  2832  000F2C  C1F8  F02B         	movff	SystemTask@cnt+3,?_sprintf+7
  2833  000F30  ECCD  F002         	call	_sprintf	;wreg free
  2834                           
  2835                           ;ApplicationExample.c: 118: SoftUARTPrint(msg);
  2836  000F34  0EDC               	movlw	low SystemTask@msg
  2837  000F36  6E11               	movwf	SoftUARTPrint@str^0,c
  2838  000F38  0E01               	movlw	high SystemTask@msg
  2839  000F3A  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  2840  000F3C  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  2841                           
  2842                           ;ApplicationExample.c: 119: SoftUARTPrint("Data: ");
  2843  000F40  0EC3               	movlw	low STR_25
  2844  000F42  6E11               	movwf	SoftUARTPrint@str^0,c
  2845  000F44  0E7F               	movlw	high STR_25
  2846  000F46  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  2847  000F48  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  2848                           
  2849                           ;ApplicationExample.c: 120: SoftUARTPrint(msg);
  2850  000F4C  0EDC               	movlw	low SystemTask@msg
  2851  000F4E  6E11               	movwf	SoftUARTPrint@str^0,c
  2852  000F50  0E01               	movlw	high SystemTask@msg
  2853  000F52  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  2854  000F54  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  2855                           
  2856                           ;ApplicationExample.c: 121: SoftUARTPrint("\r\r");
  2857  000F58  0E31               	movlw	low (STR_21+29)
  2858  000F5A  6E11               	movwf	SoftUARTPrint@str^0,c
  2859  000F5C  0E7B               	movlw	high (STR_21+29)
  2860  000F5E  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  2861  000F60  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  2862  000F64  D007               	goto	l5513
  2863  000F66                     l5511:
  2864  000F66  FFFF               	dw	65535	; assembler added errata NOP
  2865                           
  2866                           ;ApplicationExample.c: 124: {;ApplicationExample.c: 125: SoftUARTPrint("Sending failed.\
      +                          r");
  2867  000F68  0E8B               	movlw	low STR_27
  2868  000F6A  6E11               	movwf	SoftUARTPrint@str^0,c
  2869  000F6C  0E7D               	movlw	high STR_27
  2870  000F6E  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  2871  000F70  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  2872  000F74                     l5513:
  2873  000F74  FFFF               	dw	65535	; assembler added errata NOP
  2874  000F76  0012               	return		;funcret
  2875  000F78  FFFF               	dw	65535	; errata NOP
  2876  000F7A                     __end_of_SystemTask:
  2877                           	callstack 0
  2878                           
  2879 ;; *************** function _SoftUARTRxAvailable *****************
  2880 ;; Defined at:
  2881 ;;		line 352 in file "Src/SoftwareUART.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      unsigned char 
  2888 ;; Registers used:
  2889 ;;		wreg, status,2, status,0, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2895 ;;      Params:         0       0       0       0       0       0       0
  2896 ;;      Locals:         0       0       0       0       0       0       0
  2897 ;;      Temps:          2       0       0       0       0       0       0
  2898 ;;      Totals:         2       0       0       0       0       0       0
  2899 ;;Total ram usage:        2 bytes
  2900 ;; Hardware stack levels used: 1
  2901 ;; Hardware stack levels required when called: 4
  2902 ;; This function calls:
  2903 ;;		___awmod
  2904 ;; This function is called by:
  2905 ;;		_SystemTask
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           	psect	text2
  2910  00207A                     __ptext2:
  2911                           	callstack 0
  2912  00207A                     _SoftUARTRxAvailable:
  2913                           	callstack 0
  2914  00207A  FFFF               	dw	65535	; assembler added errata NOP
  2915                           
  2916                           ;SoftwareUART.c: 355: return (uint8_t)((Rxfifocurrent + 100 - Rxfifoptr) % 100);
  2917                           
  2918                           ;incstack = 0
  2919  00207C  5061               	movf	_Rxfifoptr^0,w,c	;volatile
  2920  00207E  C060  F014         	movff	_Rxfifocurrent,??_SoftUARTRxAvailable	;volatile
  2921  002082  6A15               	clrf	(??_SoftUARTRxAvailable+1)^0,c
  2922  002084  5E14               	subwf	??_SoftUARTRxAvailable^0,f,c
  2923  002086  0E00               	movlw	0
  2924  002088  5A15               	subwfb	(??_SoftUARTRxAvailable+1)^0,f,c
  2925  00208A  0E64               	movlw	100
  2926  00208C  2414               	addwf	??_SoftUARTRxAvailable^0,w,c
  2927  00208E  6E0E               	movwf	___awmod@dividend^0,c
  2928  002090  0E00               	movlw	0
  2929  002092  2015               	addwfc	(??_SoftUARTRxAvailable+1)^0,w,c
  2930  002094  6E0F               	movwf	(___awmod@dividend+1)^0,c
  2931  002096  0E00               	movlw	0
  2932  002098  6E11               	movwf	(___awmod@divisor+1)^0,c
  2933  00209A  0E64               	movlw	100
  2934  00209C  6E10               	movwf	___awmod@divisor^0,c
  2935  00209E  EC9F  F00B         	call	___awmod	;wreg free
  2936  0020A2  500E               	movf	?___awmod^0,w,c
  2937  0020A4  0012               	return		;funcret
  2938  0020A6  FFFF               	dw	65535	; errata NOP
  2939  0020A8                     __end_of_SoftUARTRxAvailable:
  2940                           	callstack 0
  2941                           
  2942 ;; *************** function _SoftUARTReceiveByte *****************
  2943 ;; Defined at:
  2944 ;;		line 360 in file "Src/SoftwareUART.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;		None
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;  data            1   21[COMRAM] unsigned char 
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  2   19[COMRAM] int 
  2951 ;; Registers used:
  2952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2958 ;;      Params:         2       0       0       0       0       0       0
  2959 ;;      Locals:         1       0       0       0       0       0       0
  2960 ;;      Temps:          0       0       0       0       0       0       0
  2961 ;;      Totals:         3       0       0       0       0       0       0
  2962 ;;Total ram usage:        3 bytes
  2963 ;; Hardware stack levels used: 1
  2964 ;; Hardware stack levels required when called: 4
  2965 ;; This function calls:
  2966 ;;		___awmod
  2967 ;; This function is called by:
  2968 ;;		_SystemTask
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           	psect	text3
  2973  001F00                     __ptext3:
  2974                           	callstack 0
  2975  001F00                     _SoftUARTReceiveByte:
  2976                           	callstack 0
  2977  001F00  FFFF               	dw	65535	; assembler added errata NOP
  2978                           
  2979                           ;SoftwareUART.c: 363: if(Rxfifocurrent == Rxfifoptr)
  2980                           
  2981                           ;incstack = 0
  2982  001F02  5061               	movf	_Rxfifoptr^0,w,c	;volatile
  2983  001F04  1860               	xorwf	_Rxfifocurrent^0,w,c	;volatile
  2984  001F06  A4D8               	btfss	status,2,c
  2985  001F08  D003               	goto	l5197
  2986                           
  2987                           ;SoftwareUART.c: 364: return -1;
  2988  001F0A  6814               	setf	?_SoftUARTReceiveByte^0,c
  2989  001F0C  6815               	setf	(?_SoftUARTReceiveByte+1)^0,c
  2990  001F0E  D01A               	goto	l251
  2991  001F10                     l5197:
  2992  001F10  FFFF               	dw	65535	; assembler added errata NOP
  2993                           
  2994                           ;SoftwareUART.c: 366: uint8_t data = RxFIFO[Rxfifoptr];
  2995  001F12  0E00               	movlw	low _RxFIFO
  2996  001F14  2461               	addwf	_Rxfifoptr^0,w,c	;volatile
  2997  001F16  6ED9               	movwf	fsr2l,c
  2998  001F18  6ADA               	clrf	fsr2h,c
  2999  001F1A  0E02               	movlw	high _RxFIFO
  3000  001F1C  22DA               	addwfc	fsr2h,f,c
  3001  001F1E  50DF               	movf	indf2,w,c
  3002  001F20  6E16               	movwf	SoftUARTReceiveByte@data^0,c
  3003                           
  3004                           ;SoftwareUART.c: 367: Rxfifoptr = (uint8_t)((Rxfifoptr + 1) % 100);
  3005  001F22  0E01               	movlw	1
  3006  001F24  2461               	addwf	_Rxfifoptr^0,w,c	;volatile
  3007  001F26  6E0E               	movwf	___awmod@dividend^0,c
  3008  001F28  6A0F               	clrf	(___awmod@dividend+1)^0,c
  3009  001F2A  0E00               	movlw	0
  3010  001F2C  220F               	addwfc	(___awmod@dividend+1)^0,f,c
  3011  001F2E  0E00               	movlw	0
  3012  001F30  6E11               	movwf	(___awmod@divisor+1)^0,c
  3013  001F32  0E64               	movlw	100
  3014  001F34  6E10               	movwf	___awmod@divisor^0,c
  3015  001F36  EC9F  F00B         	call	___awmod	;wreg free
  3016  001F3A  500E               	movf	?___awmod^0,w,c
  3017  001F3C  6E61               	movwf	_Rxfifoptr^0,c	;volatile
  3018                           
  3019                           ;SoftwareUART.c: 369: return data;
  3020  001F3E  C016  F014         	movff	SoftUARTReceiveByte@data,?_SoftUARTReceiveByte
  3021  001F42  6A15               	clrf	(?_SoftUARTReceiveByte+1)^0,c
  3022  001F44                     l251:
  3023  001F44  FFFF               	dw	65535	; assembler added errata NOP
  3024  001F46  0012               	return		;funcret
  3025  001F48  FFFF               	dw	65535	; errata NOP
  3026  001F4A                     __end_of_SoftUARTReceiveByte:
  3027                           	callstack 0
  3028                           
  3029 ;; *************** function ___awmod *****************
  3030 ;; Defined at:
  3031 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;  dividend        2   13[COMRAM] int 
  3034 ;;  divisor         2   15[COMRAM] int 
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;  sign            1   18[COMRAM] unsigned char 
  3037 ;;  counter         1   17[COMRAM] unsigned char 
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  2   13[COMRAM] int 
  3040 ;; Registers used:
  3041 ;;		wreg, status,2, status,0
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3047 ;;      Params:         4       0       0       0       0       0       0
  3048 ;;      Locals:         2       0       0       0       0       0       0
  3049 ;;      Temps:          0       0       0       0       0       0       0
  3050 ;;      Totals:         6       0       0       0       0       0       0
  3051 ;;Total ram usage:        6 bytes
  3052 ;; Hardware stack levels used: 1
  3053 ;; Hardware stack levels required when called: 3
  3054 ;; This function calls:
  3055 ;;		Nothing
  3056 ;; This function is called by:
  3057 ;;		_SoftUARTRxAvailable
  3058 ;;		_SoftUARTReceiveByte
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           	psect	text4
  3063  00173E                     __ptext4:
  3064                           	callstack 0
  3065  00173E                     ___awmod:
  3066                           	callstack 0
  3067  00173E  FFFF               	dw	65535	; assembler added errata NOP
  3068                           
  3069                           ;incstack = 0
  3070  001740  0E00               	movlw	0
  3071  001742  6E13               	movwf	___awmod@sign^0,c
  3072  001744  AE0F               	btfss	(___awmod@dividend+1)^0,7,c
  3073  001746  D006               	goto	l4895
  3074  001748  6C0E               	negf	___awmod@dividend^0,c
  3075  00174A  1E0F               	comf	(___awmod@dividend+1)^0,f,c
  3076  00174C  B0D8               	btfsc	status,0,c
  3077  00174E  2A0F               	incf	(___awmod@dividend+1)^0,f,c
  3078  001750  0E01               	movlw	1
  3079  001752  6E13               	movwf	___awmod@sign^0,c
  3080  001754                     l4895:
  3081  001754  FFFF               	dw	65535	; assembler added errata NOP
  3082  001756  AE11               	btfss	(___awmod@divisor+1)^0,7,c
  3083  001758  D004               	goto	l4899
  3084  00175A  6C10               	negf	___awmod@divisor^0,c
  3085  00175C  1E11               	comf	(___awmod@divisor+1)^0,f,c
  3086  00175E  B0D8               	btfsc	status,0,c
  3087  001760  2A11               	incf	(___awmod@divisor+1)^0,f,c
  3088  001762                     l4899:
  3089  001762  FFFF               	dw	65535	; assembler added errata NOP
  3090  001764  5010               	movf	___awmod@divisor^0,w,c
  3091  001766  1011               	iorwf	(___awmod@divisor+1)^0,w,c
  3092  001768  B4D8               	btfsc	status,2,c
  3093  00176A  D01C               	goto	l4915
  3094  00176C  0E01               	movlw	1
  3095  00176E  6E12               	movwf	___awmod@counter^0,c
  3096  001770  D005               	goto	l4905
  3097  001772                     l4903:
  3098  001772  FFFF               	dw	65535	; assembler added errata NOP
  3099  001774  90D8               	bcf	status,0,c
  3100  001776  3610               	rlcf	___awmod@divisor^0,f,c
  3101  001778  3611               	rlcf	(___awmod@divisor+1)^0,f,c
  3102  00177A  2A12               	incf	___awmod@counter^0,f,c
  3103  00177C                     l4905:
  3104  00177C  FFFF               	dw	65535	; assembler added errata NOP
  3105  00177E  AE11               	btfss	(___awmod@divisor+1)^0,7,c
  3106  001780  D7F8               	goto	l4903
  3107  001782                     u4190:
  3108  001782  FFFF               	dw	65535	; assembler added errata NOP
  3109  001784  5010               	movf	___awmod@divisor^0,w,c
  3110  001786  5C0E               	subwf	___awmod@dividend^0,w,c
  3111  001788  5011               	movf	(___awmod@divisor+1)^0,w,c
  3112  00178A  580F               	subwfb	(___awmod@dividend+1)^0,w,c
  3113  00178C  A0D8               	btfss	status,0,c
  3114  00178E  D004               	goto	l4911
  3115  001790  5010               	movf	___awmod@divisor^0,w,c
  3116  001792  5E0E               	subwf	___awmod@dividend^0,f,c
  3117  001794  5011               	movf	(___awmod@divisor+1)^0,w,c
  3118  001796  5A0F               	subwfb	(___awmod@dividend+1)^0,f,c
  3119  001798                     l4911:
  3120  001798  FFFF               	dw	65535	; assembler added errata NOP
  3121  00179A  90D8               	bcf	status,0,c
  3122  00179C  3211               	rrcf	(___awmod@divisor+1)^0,f,c
  3123  00179E  3210               	rrcf	___awmod@divisor^0,f,c
  3124  0017A0  2E12               	decfsz	___awmod@counter^0,f,c
  3125  0017A2  D7EF               	goto	u4190
  3126  0017A4                     l4915:
  3127  0017A4  FFFF               	dw	65535	; assembler added errata NOP
  3128  0017A6  5013               	movf	___awmod@sign^0,w,c
  3129  0017A8  B4D8               	btfsc	status,2,c
  3130  0017AA  D004               	goto	l4919
  3131  0017AC  6C0E               	negf	___awmod@dividend^0,c
  3132  0017AE  1E0F               	comf	(___awmod@dividend+1)^0,f,c
  3133  0017B0  B0D8               	btfsc	status,0,c
  3134  0017B2  2A0F               	incf	(___awmod@dividend+1)^0,f,c
  3135  0017B4                     l4919:
  3136  0017B4  FFFF               	dw	65535	; assembler added errata NOP
  3137  0017B6  C00E  F00E         	movff	___awmod@dividend,?___awmod
  3138  0017BA  C00F  F00F         	movff	___awmod@dividend+1,?___awmod+1
  3139  0017BE  0012               	return		;funcret
  3140  0017C0  FFFF               	dw	65535	; errata NOP
  3141  0017C2                     __end_of___awmod:
  3142                           	callstack 0
  3143                           
  3144 ;; *************** function _SIM800xHTTPRead *****************
  3145 ;; Defined at:
  3146 ;;		line 1665 in file "Src/SIM800x.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;  data            2   59[COMRAM] PTR unsigned char 
  3149 ;;		 -> rxmessage(30), 
  3150 ;;  strindex        4   61[COMRAM] unsigned long 
  3151 ;;  size            4   65[COMRAM] unsigned long 
  3152 ;;  cnt             2   69[COMRAM] PTR unsigned long 
  3153 ;;		 -> SystemTask@cnt(4), 
  3154 ;;  errcode         2   71[COMRAM] PTR unsigned int 
  3155 ;;		 -> SystemTask@errcode(2), 
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;  sz              4   30[BANK0 ] unsigned long 
  3158 ;;  str            30    0[BANK0 ] unsigned char [30]
  3159 ;;  time            4   34[BANK0 ] unsigned long 
  3160 ;;  res             2   38[BANK0 ] int 
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  1    wreg      enum E2115
  3163 ;; Registers used:
  3164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3170 ;;      Params:        14       0       0       0       0       0       0
  3171 ;;      Locals:         0      40       0       0       0       0       0
  3172 ;;      Temps:          4       0       0       0       0       0       0
  3173 ;;      Totals:        18      40       0       0       0       0       0
  3174 ;;Total ram usage:       58 bytes
  3175 ;; Hardware stack levels used: 1
  3176 ;; Hardware stack levels required when called: 6
  3177 ;; This function calls:
  3178 ;;		_SIM800xSDMFlush
  3179 ;;		_SIM800xSDMPeek
  3180 ;;		_SIM800xSDMPrint
  3181 ;;		_SIM800xSDMReadByte
  3182 ;;		_SIM800xSDMReadF1Pkt
  3183 ;;		_SIM800xSDMRxAvailable
  3184 ;;		_StrToInt
  3185 ;;		_Tick_ms
  3186 ;;		_sprintf
  3187 ;; This function is called by:
  3188 ;;		_SystemTask
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           	psect	text5
  3193  00031A                     __ptext5:
  3194                           	callstack 0
  3195  00031A                     _SIM800xHTTPRead:
  3196                           	callstack 0
  3197  00031A  FFFF               	dw	65535	; assembler added errata NOP
  3198                           
  3199                           ;SIM800x.c: 1668: if((strindex > 0x4E000) || (size > 0x4E000) || (size < 1))
  3200                           
  3201                           ;incstack = 0
  3202  00031C  5041               	movf	(SIM800xHTTPRead@strindex+3)^0,w,c
  3203  00031E  E117               	bnz	l5359
  3204  000320  043E               	decf	SIM800xHTTPRead@strindex^0,w,c
  3205  000322  0EE0               	movlw	224
  3206  000324  583F               	subwfb	(SIM800xHTTPRead@strindex+1)^0,w,c
  3207  000326  0E04               	movlw	4
  3208  000328  5840               	subwfb	(SIM800xHTTPRead@strindex+2)^0,w,c
  3209  00032A  B0D8               	btfsc	status,0,c
  3210  00032C  D00F               	goto	u4740
  3211  00032E  5045               	movf	(SIM800xHTTPRead@size+3)^0,w,c
  3212  000330  E10E               	bnz	l5359
  3213  000332  0442               	decf	SIM800xHTTPRead@size^0,w,c
  3214  000334  0EE0               	movlw	224
  3215  000336  5843               	subwfb	(SIM800xHTTPRead@size+1)^0,w,c
  3216  000338  0E04               	movlw	4
  3217  00033A  5844               	subwfb	(SIM800xHTTPRead@size+2)^0,w,c
  3218  00033C  B0D8               	btfsc	status,0,c
  3219  00033E  D006               	goto	u4740
  3220  000340  5042               	movf	SIM800xHTTPRead@size^0,w,c
  3221  000342  1043               	iorwf	(SIM800xHTTPRead@size+1)^0,w,c
  3222  000344  1044               	iorwf	(SIM800xHTTPRead@size+2)^0,w,c
  3223  000346  1045               	iorwf	(SIM800xHTTPRead@size+3)^0,w,c
  3224  000348  A4D8               	btfss	status,2,c
  3225  00034A  D003               	goto	l5363
  3226  00034C                     u4740:
  3227  00034C  FFFF               	dw	65535	; assembler added errata NOP
  3228  00034E                     l5359:
  3229                           
  3230                           ;SIM800x.c: 1669: return SIM800X_ERROR;
  3231  00034E  0E01               	movlw	1
  3232  000350  D121               	goto	l811
  3233  000352                     l5363:
  3234  000352  FFFF               	dw	65535	; assembler added errata NOP
  3235                           
  3236                           ;SIM800x.c: 1671: char str[30] = {0, 0, 0, 0};
  3237  000354  EE20  F0C5         	lfsr	2,SIM800xHTTPRead@str
  3238  000358  0E1D               	movlw	29
  3239  00035A                     u4751:
  3240  00035A  6ADE               	clrf	postinc2,c
  3241  00035C  06E8               	decf	wreg,f,c
  3242  00035E  E2FD               	bc	u4751
  3243                           
  3244                           ;SIM800x.c: 1673: sprintf(str, "AT+HTTPREAD=%ld,%ld\r", strindex, size);
  3245  000360  0EC5               	movlw	low SIM800xHTTPRead@str
  3246  000362  6E24               	movwf	sprintf@sp^0,c
  3247  000364  0E00               	movlw	high SIM800xHTTPRead@str
  3248  000366  6E25               	movwf	(sprintf@sp+1)^0,c
  3249  000368  0EDA               	movlw	low STR_100
  3250  00036A  6E26               	movwf	sprintf@f^0,c
  3251  00036C  0E7C               	movlw	high STR_100
  3252  00036E  6E27               	movwf	(sprintf@f+1)^0,c
  3253  000370  C03E  F028         	movff	SIM800xHTTPRead@strindex,?_sprintf+4
  3254  000374  C03F  F029         	movff	SIM800xHTTPRead@strindex+1,?_sprintf+5
  3255  000378  C040  F02A         	movff	SIM800xHTTPRead@strindex+2,?_sprintf+6
  3256  00037C  C041  F02B         	movff	SIM800xHTTPRead@strindex+3,?_sprintf+7
  3257  000380  C042  F02C         	movff	SIM800xHTTPRead@size,?_sprintf+8
  3258  000384  C043  F02D         	movff	SIM800xHTTPRead@size+1,?_sprintf+9
  3259  000388  C044  F02E         	movff	SIM800xHTTPRead@size+2,?_sprintf+10
  3260  00038C  C045  F02F         	movff	SIM800xHTTPRead@size+3,?_sprintf+11
  3261  000390  ECCD  F002         	call	_sprintf	;wreg free
  3262                           
  3263                           ;SIM800x.c: 1674: SIM800xSDMFlush();
  3264  000394  EC8D  F010         	call	_SIM800xSDMFlush	;wreg free
  3265                           
  3266                           ;SIM800x.c: 1675: SIM800xSDMPrint(str);
  3267  000398  0EC5               	movlw	low SIM800xHTTPRead@str
  3268  00039A  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  3269  00039C  0E00               	movlw	high SIM800xHTTPRead@str
  3270  00039E  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  3271  0003A0  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  3272                           
  3273                           ;SIM800x.c: 1677: uint32_t time = Tick_ms();
  3274  0003A4  EC82  F010         	call	_Tick_ms	;wreg free
  3275  0003A8  C00E  F0E7         	movff	?_Tick_ms,SIM800xHTTPRead@time
  3276  0003AC  C00F  F0E8         	movff	?_Tick_ms+1,SIM800xHTTPRead@time+1
  3277  0003B0  C010  F0E9         	movff	?_Tick_ms+2,SIM800xHTTPRead@time+2
  3278  0003B4  C011  F0EA         	movff	?_Tick_ms+3,SIM800xHTTPRead@time+3
  3279                           
  3280                           ;SIM800x.c: 1678: while(SIM800xSDMRxAvailable() < 16)
  3281  0003B8  D01D               	goto	l5379
  3282  0003BA                     l5373:
  3283  0003BA  FFFF               	dw	65535	; assembler added errata NOP
  3284                           
  3285                           ;SIM800x.c: 1679: {;SIM800x.c: 1680: if((Tick_ms() - time) > Tout)
  3286  0003BC  EC82  F010         	call	_Tick_ms	;wreg free
  3287  0003C0  0100               	movlb	0	; () banked
  3288  0003C2  51E7               	movf	SIM800xHTTPRead@time& (0+255),w,b
  3289  0003C4  5C0E               	subwf	?_Tick_ms^0,w,c
  3290  0003C6  6E4A               	movwf	??_SIM800xHTTPRead^0,c
  3291  0003C8  51E8               	movf	(SIM800xHTTPRead@time+1)& (0+255),w,b
  3292  0003CA  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  3293  0003CC  6E4B               	movwf	(??_SIM800xHTTPRead+1)^0,c
  3294  0003CE  51E9               	movf	(SIM800xHTTPRead@time+2)& (0+255),w,b
  3295  0003D0  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  3296  0003D2  6E4C               	movwf	(??_SIM800xHTTPRead+2)^0,c
  3297  0003D4  51EA               	movf	(SIM800xHTTPRead@time+3)& (0+255),w,b
  3298  0003D6  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  3299  0003D8  6E4D               	movwf	(??_SIM800xHTTPRead+3)^0,c
  3300  0003DA  504A               	movf	??_SIM800xHTTPRead^0,w,c
  3301  0003DC  5C64               	subwf	_Tout^0,w,c
  3302  0003DE  504B               	movf	(??_SIM800xHTTPRead+1)^0,w,c
  3303  0003E0  5865               	subwfb	(_Tout+1)^0,w,c
  3304  0003E2  504C               	movf	(??_SIM800xHTTPRead+2)^0,w,c
  3305  0003E4  5866               	subwfb	(_Tout+2)^0,w,c
  3306  0003E6  504D               	movf	(??_SIM800xHTTPRead+3)^0,w,c
  3307  0003E8  5867               	subwfb	(_Tout+3)^0,w,c
  3308  0003EA  B0D8               	btfsc	status,0,c
  3309  0003EC  D003               	goto	l5379
  3310  0003EE                     u4760:
  3311  0003EE  FFFF               	dw	65535	; assembler added errata NOP
  3312                           
  3313                           ; BSR set to: 0
  3314                           ;SIM800x.c: 1681: {;SIM800x.c: 1682: return SIM800X_TIME_OUT;
  3315  0003F0  0E05               	movlw	5
  3316  0003F2  D0D0               	goto	l811
  3317  0003F4                     l5379:
  3318  0003F4  FFFF               	dw	65535	; assembler added errata NOP
  3319  0003F6  EC24  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  3320  0003FA  5014               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  3321  0003FC  E104               	bnz	u4770
  3322  0003FE  0E10               	movlw	16
  3323  000400  5C13               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  3324  000402  A0D8               	btfss	status,0,c
  3325  000404  D7DA               	goto	l5373
  3326  000406                     u4770:
  3327                           
  3328                           ;SIM800x.c: 1683: };SIM800x.c: 1684: };SIM800x.c: 1686: int res = SIM800xSDMReadF1Pkt(st
      +                          r);
  3329  000406  0EC5               	movlw	low SIM800xHTTPRead@str
  3330  000408  6E17               	movwf	SIM800xSDMReadF1Pkt@data^0,c
  3331  00040A  0E00               	movlw	high SIM800xHTTPRead@str
  3332  00040C  6E18               	movwf	(SIM800xSDMReadF1Pkt@data+1)^0,c
  3333  00040E  EC27  F009         	call	_SIM800xSDMReadF1Pkt	;wreg free
  3334  000412  C017  F0EB         	movff	?_SIM800xSDMReadF1Pkt,SIM800xHTTPRead@res
  3335  000416  C018  F0EC         	movff	?_SIM800xSDMReadF1Pkt+1,SIM800xHTTPRead@res+1
  3336                           
  3337                           ;SIM800x.c: 1687: if(res < 0)
  3338  00041A  0100               	movlb	0	; () banked
  3339  00041C  BFEC               	btfsc	(SIM800xHTTPRead@res+1)& (0+255),7,b
  3340  00041E  D7E7               	goto	u4760
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;SIM800x.c: 1691: else if((str[0] == '+') && (str[1] == 'H'))
  3344  000420  0E2B               	movlw	43
  3345  000422  19C5               	xorwf	SIM800xHTTPRead@str& (0+255),w,b
  3346  000424  A4D8               	btfss	status,2,c
  3347  000426  D092               	goto	l5427
  3348                           
  3349                           ; BSR set to: 0
  3350  000428  0E48               	movlw	72
  3351  00042A  19C6               	xorwf	(SIM800xHTTPRead@str+1)& (0+255),w,b
  3352  00042C  A4D8               	btfss	status,2,c
  3353  00042E  D08E               	goto	l5427
  3354                           
  3355                           ; BSR set to: 0
  3356                           ;SIM800x.c: 1692: {;SIM800x.c: 1694: str[(uint8_t)res] = '\0';
  3357  000430  0EC5               	movlw	low SIM800xHTTPRead@str
  3358  000432  25EB               	addwf	SIM800xHTTPRead@res& (0+255),w,b
  3359  000434  6ED9               	movwf	fsr2l,c
  3360  000436  6ADA               	clrf	fsr2h,c
  3361  000438  0E00               	movlw	high SIM800xHTTPRead@str
  3362  00043A  22DA               	addwfc	fsr2h,f,c
  3363  00043C  0E00               	movlw	0
  3364  00043E  6EDF               	movwf	indf2,c
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;SIM800x.c: 1695: *cnt = (uint16_t)StrToInt(str, 11, (uint16_t)(res - 1));
  3368  000440  0EC5               	movlw	low SIM800xHTTPRead@str
  3369  000442  6E1A               	movwf	StrToInt@str^0,c
  3370  000444  0E00               	movlw	high SIM800xHTTPRead@str
  3371  000446  6E1B               	movwf	(StrToInt@str+1)^0,c
  3372  000448  0E0B               	movlw	11
  3373  00044A  6E1C               	movwf	StrToInt@start^0,c
  3374  00044C  05EB               	decf	SIM800xHTTPRead@res& (0+255),w,b
  3375  00044E  6E1D               	movwf	StrToInt@stop^0,c
  3376  000450  ECBD  F007         	call	_StrToInt	;wreg free
  3377  000454  501A               	movf	?_StrToInt^0,w,c
  3378  000456  6E4A               	movwf	??_SIM800xHTTPRead^0,c
  3379  000458  501B               	movf	(?_StrToInt+1)^0,w,c
  3380  00045A  6E4B               	movwf	(??_SIM800xHTTPRead+1)^0,c
  3381  00045C  6A4C               	clrf	(??_SIM800xHTTPRead+2)^0,c
  3382  00045E  6A4D               	clrf	(??_SIM800xHTTPRead+3)^0,c
  3383  000460  C046  FFD9         	movff	SIM800xHTTPRead@cnt,fsr2l
  3384  000464  C047  FFDA         	movff	SIM800xHTTPRead@cnt+1,fsr2h
  3385  000468  C04A  FFDE         	movff	??_SIM800xHTTPRead,postinc2
  3386  00046C  C04B  FFDE         	movff	??_SIM800xHTTPRead+1,postinc2
  3387  000470  C04C  FFDE         	movff	??_SIM800xHTTPRead+2,postinc2
  3388  000474  C04D  FFDE         	movff	??_SIM800xHTTPRead+3,postinc2
  3389                           
  3390                           ;SIM800x.c: 1697: uint32_t sz = *cnt;
  3391  000478  C046  FFD9         	movff	SIM800xHTTPRead@cnt,fsr2l
  3392  00047C  C047  FFDA         	movff	SIM800xHTTPRead@cnt+1,fsr2h
  3393  000480  CFDE F0E3          	movff	postinc2,SIM800xHTTPRead@sz
  3394  000484  CFDE F0E4          	movff	postinc2,SIM800xHTTPRead@sz+1
  3395  000488  CFDE F0E5          	movff	postinc2,SIM800xHTTPRead@sz+2
  3396  00048C  CFDE F0E6          	movff	postinc2,SIM800xHTTPRead@sz+3
  3397                           
  3398                           ;SIM800x.c: 1698: while((sz--) != 0)
  3399  000490  D017               	goto	l5409
  3400  000492                     l5401:
  3401  000492  FFFF               	dw	65535	; assembler added errata NOP
  3402                           
  3403                           ; BSR set to: 0
  3404                           ;SIM800x.c: 1699: {;SIM800x.c: 1700: if(SIM800xSDMRxAvailable())
  3405  000494  EC24  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  3406  000498  5013               	movf	?_SIM800xSDMRxAvailable^0,w,c
  3407  00049A  1014               	iorwf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  3408  00049C  B4D8               	btfsc	status,2,c
  3409  00049E  D009               	goto	l5407
  3410                           
  3411                           ;SIM800x.c: 1701: {;SIM800x.c: 1702: *(data++) = SIM800xSDMReadByte();
  3412  0004A0  EC33  F00F         	call	_SIM800xSDMReadByte	;wreg free
  3413  0004A4  C03C  FFD9         	movff	SIM800xHTTPRead@data,fsr2l
  3414  0004A8  C03D  FFDA         	movff	SIM800xHTTPRead@data+1,fsr2h
  3415  0004AC  6EDF               	movwf	indf2,c
  3416  0004AE  4A3C               	infsnz	SIM800xHTTPRead@data^0,f,c
  3417  0004B0  2A3D               	incf	(SIM800xHTTPRead@data+1)^0,f,c
  3418  0004B2                     l5407:
  3419  0004B2  FFFF               	dw	65535	; assembler added errata NOP
  3420                           
  3421                           ;SIM800x.c: 1703: };SIM800x.c: 1704: *data = '\0';
  3422  0004B4  C03C  FFD9         	movff	SIM800xHTTPRead@data,fsr2l
  3423  0004B8  C03D  FFDA         	movff	SIM800xHTTPRead@data+1,fsr2h
  3424  0004BC  0E00               	movlw	0
  3425  0004BE  6EDF               	movwf	indf2,c
  3426  0004C0                     l5409:
  3427  0004C0  FFFF               	dw	65535	; assembler added errata NOP
  3428  0004C2  0100               	movlb	0	; () banked
  3429  0004C4  07E3               	decf	SIM800xHTTPRead@sz& (0+255),f,b
  3430  0004C6  0E00               	movlw	0
  3431  0004C8  5BE4               	subwfb	(SIM800xHTTPRead@sz+1)& (0+255),f,b
  3432  0004CA  5BE5               	subwfb	(SIM800xHTTPRead@sz+2)& (0+255),f,b
  3433  0004CC  5BE6               	subwfb	(SIM800xHTTPRead@sz+3)& (0+255),f,b
  3434  0004CE  29E3               	incf	SIM800xHTTPRead@sz& (0+255),w,b
  3435  0004D0  E1E0               	bnz	l5401
  3436  0004D2  29E4               	incf	(SIM800xHTTPRead@sz+1)& (0+255),w,b
  3437  0004D4  E1DE               	bnz	l5401
  3438  0004D6  29E5               	incf	(SIM800xHTTPRead@sz+2)& (0+255),w,b
  3439  0004D8  E1DC               	bnz	l5401
  3440  0004DA  29E6               	incf	(SIM800xHTTPRead@sz+3)& (0+255),w,b
  3441  0004DC  A4D8               	btfss	status,2,c
  3442  0004DE  D7D9               	goto	l5401
  3443                           
  3444                           ; BSR set to: 0
  3445                           ;SIM800x.c: 1705: };SIM800x.c: 1707: time = Tick_ms();
  3446  0004E0  EC82  F010         	call	_Tick_ms	;wreg free
  3447  0004E4  C00E  F0E7         	movff	?_Tick_ms,SIM800xHTTPRead@time
  3448  0004E8  C00F  F0E8         	movff	?_Tick_ms+1,SIM800xHTTPRead@time+1
  3449  0004EC  C010  F0E9         	movff	?_Tick_ms+2,SIM800xHTTPRead@time+2
  3450  0004F0  C011  F0EA         	movff	?_Tick_ms+3,SIM800xHTTPRead@time+3
  3451                           
  3452                           ;SIM800x.c: 1708: while(SIM800xSDMRxAvailable() < 6)
  3453  0004F4  D01A               	goto	l5419
  3454  0004F6                     l5413:
  3455  0004F6  FFFF               	dw	65535	; assembler added errata NOP
  3456                           
  3457                           ;SIM800x.c: 1709: {;SIM800x.c: 1710: if((Tick_ms() - time) > Tout)
  3458  0004F8  EC82  F010         	call	_Tick_ms	;wreg free
  3459  0004FC  0100               	movlb	0	; () banked
  3460  0004FE  51E7               	movf	SIM800xHTTPRead@time& (0+255),w,b
  3461  000500  5C0E               	subwf	?_Tick_ms^0,w,c
  3462  000502  6E4A               	movwf	??_SIM800xHTTPRead^0,c
  3463  000504  51E8               	movf	(SIM800xHTTPRead@time+1)& (0+255),w,b
  3464  000506  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  3465  000508  6E4B               	movwf	(??_SIM800xHTTPRead+1)^0,c
  3466  00050A  51E9               	movf	(SIM800xHTTPRead@time+2)& (0+255),w,b
  3467  00050C  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  3468  00050E  6E4C               	movwf	(??_SIM800xHTTPRead+2)^0,c
  3469  000510  51EA               	movf	(SIM800xHTTPRead@time+3)& (0+255),w,b
  3470  000512  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  3471  000514  6E4D               	movwf	(??_SIM800xHTTPRead+3)^0,c
  3472  000516  504A               	movf	??_SIM800xHTTPRead^0,w,c
  3473  000518  5C64               	subwf	_Tout^0,w,c
  3474  00051A  504B               	movf	(??_SIM800xHTTPRead+1)^0,w,c
  3475  00051C  5865               	subwfb	(_Tout+1)^0,w,c
  3476  00051E  504C               	movf	(??_SIM800xHTTPRead+2)^0,w,c
  3477  000520  5866               	subwfb	(_Tout+2)^0,w,c
  3478  000522  504D               	movf	(??_SIM800xHTTPRead+3)^0,w,c
  3479  000524  5867               	subwfb	(_Tout+3)^0,w,c
  3480  000526  A0D8               	btfss	status,0,c
  3481  000528  D762               	goto	u4760
  3482  00052A                     l5419:
  3483  00052A  FFFF               	dw	65535	; assembler added errata NOP
  3484  00052C  EC24  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  3485  000530  5014               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  3486  000532  E104               	bnz	u4840
  3487  000534  0E06               	movlw	6
  3488  000536  5C13               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  3489  000538  A0D8               	btfss	status,0,c
  3490  00053A  D7DD               	goto	l5413
  3491  00053C                     u4840:
  3492                           
  3493                           ;SIM800x.c: 1713: };SIM800x.c: 1714: };SIM800x.c: 1716: if(SIM800xSDMPeek(2) == 'O')
  3494  00053C  0E02               	movlw	2
  3495  00053E  ECCA  F00F         	call	_SIM800xSDMPeek
  3496  000542  0A4F               	xorlw	79
  3497  000544  A4D8               	btfss	status,2,c
  3498  000546  D702               	goto	u4740
  3499                           
  3500                           ;SIM800x.c: 1717: {;SIM800x.c: 1718: return SIM800X_OK;
  3501  000548  0E00               	movlw	0
  3502  00054A  D024               	goto	l811
  3503  00054C                     l5427:
  3504  00054C  FFFF               	dw	65535	; assembler added errata NOP
  3505                           
  3506                           ; BSR set to: 0
  3507                           ;SIM800x.c: 1722: else if((str[0] == '+') && (str[3] == 'E'))
  3508  00054E  0E2B               	movlw	43
  3509  000550  19C5               	xorwf	SIM800xHTTPRead@str& (0+255),w,b
  3510  000552  A4D8               	btfss	status,2,c
  3511  000554  D6FB               	goto	u4740
  3512                           
  3513                           ; BSR set to: 0
  3514  000556  0E45               	movlw	69
  3515  000558  19C8               	xorwf	(SIM800xHTTPRead@str+3)& (0+255),w,b
  3516  00055A  A4D8               	btfss	status,2,c
  3517  00055C  D6F7               	goto	u4740
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;SIM800x.c: 1723: {;SIM800x.c: 1724: str[(uint8_t)res] = '\0';
  3521  00055E  0EC5               	movlw	low SIM800xHTTPRead@str
  3522  000560  25EB               	addwf	SIM800xHTTPRead@res& (0+255),w,b
  3523  000562  6ED9               	movwf	fsr2l,c
  3524  000564  6ADA               	clrf	fsr2h,c
  3525  000566  0E00               	movlw	high SIM800xHTTPRead@str
  3526  000568  22DA               	addwfc	fsr2h,f,c
  3527  00056A  0E00               	movlw	0
  3528  00056C  6EDF               	movwf	indf2,c
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;SIM800x.c: 1725: *errcode = (uint16_t)StrToInt(str, 12, (uint16_t)(res - 1));
  3532  00056E  0EC5               	movlw	low SIM800xHTTPRead@str
  3533  000570  6E1A               	movwf	StrToInt@str^0,c
  3534  000572  0E00               	movlw	high SIM800xHTTPRead@str
  3535  000574  6E1B               	movwf	(StrToInt@str+1)^0,c
  3536  000576  0E0C               	movlw	12
  3537  000578  6E1C               	movwf	StrToInt@start^0,c
  3538  00057A  05EB               	decf	SIM800xHTTPRead@res& (0+255),w,b
  3539  00057C  6E1D               	movwf	StrToInt@stop^0,c
  3540  00057E  ECBD  F007         	call	_StrToInt	;wreg free
  3541  000582  C048  FFD9         	movff	SIM800xHTTPRead@errcode,fsr2l
  3542  000586  C049  FFDA         	movff	SIM800xHTTPRead@errcode+1,fsr2h
  3543  00058A  C01A  FFDE         	movff	?_StrToInt,postinc2
  3544  00058E  C01B  FFDD         	movff	?_StrToInt+1,postdec2
  3545                           
  3546                           ;SIM800x.c: 1726: return SIM800X_CME_ERROR;
  3547  000592  0E02               	movlw	2
  3548  000594                     l811:
  3549  000594  FFFF               	dw	65535	; assembler added errata NOP
  3550  000596  0012               	return		;funcret
  3551  000598  FFFF               	dw	65535	; errata NOP
  3552  00059A                     __end_of_SIM800xHTTPRead:
  3553                           	callstack 0
  3554                           
  3555 ;; *************** function _SIM800xHTTPInputData *****************
  3556 ;; Defined at:
  3557 ;;		line 1542 in file "Src/SIM800x.c"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;  data            2   59[COMRAM] PTR unsigned char 
  3560 ;;		 -> txmessage(100), 
  3561 ;;  cnt             4   61[COMRAM] unsigned long 
  3562 ;;  timeout         4   65[COMRAM] unsigned long 
  3563 ;;  errcode         2   69[COMRAM] PTR unsigned int 
  3564 ;;		 -> SystemTask@errcode(2), 
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;  str            30    0[BANK0 ] unsigned char [30]
  3567 ;;  time            4   34[BANK0 ] unsigned long 
  3568 ;;  len             4   30[BANK0 ] unsigned long 
  3569 ;;  res             2   38[BANK0 ] int 
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  1    wreg      enum E2115
  3572 ;; Registers used:
  3573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3579 ;;      Params:        12       0       0       0       0       0       0
  3580 ;;      Locals:         0      40       0       0       0       0       0
  3581 ;;      Temps:          4       0       0       0       0       0       0
  3582 ;;      Totals:        16      40       0       0       0       0       0
  3583 ;;Total ram usage:       56 bytes
  3584 ;; Hardware stack levels used: 1
  3585 ;; Hardware stack levels required when called: 6
  3586 ;; This function calls:
  3587 ;;		_SIM800xSDMFlush
  3588 ;;		_SIM800xSDMPeek
  3589 ;;		_SIM800xSDMPrint
  3590 ;;		_SIM800xSDMReadF1Pkt
  3591 ;;		_SIM800xSDMRxAvailable
  3592 ;;		_SIM800xSDMSendBytes
  3593 ;;		_StrToInt
  3594 ;;		_Tick_ms
  3595 ;;		_sprintf
  3596 ;;		_strlen
  3597 ;; This function is called by:
  3598 ;;		_SystemTask
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text6
  3603  000A1E                     __ptext6:
  3604                           	callstack 0
  3605  000A1E                     _SIM800xHTTPInputData:
  3606                           	callstack 0
  3607  000A1E  FFFF               	dw	65535	; assembler added errata NOP
  3608                           
  3609                           ;SIM800x.c: 1544: uint32_t len = strlen(data);
  3610                           
  3611                           ;incstack = 0
  3612  000A20  C03C  F00E         	movff	SIM800xHTTPInputData@data,strlen@s
  3613  000A24  C03D  F00F         	movff	SIM800xHTTPInputData@data+1,strlen@s+1
  3614  000A28  EC5A  F00F         	call	_strlen	;wreg free
  3615  000A2C  C00E  F0E3         	movff	?_strlen,SIM800xHTTPInputData@len
  3616  000A30  C00F  F0E4         	movff	?_strlen+1,SIM800xHTTPInputData@len+1
  3617  000A34  0100               	movlb	0	; () banked
  3618  000A36  6BE5               	clrf	(SIM800xHTTPInputData@len+2)& (0+255),b
  3619  000A38  6BE6               	clrf	(SIM800xHTTPInputData@len+3)& (0+255),b
  3620                           
  3621                           ; BSR set to: 0
  3622                           ;SIM800x.c: 1546: if((cnt > 0x4E000) || (len > 0x4E000) || (timeout < 1000) || (timeout 
      +                          > 120000))
  3623  000A3A  5041               	movf	(SIM800xHTTPInputData@cnt+3)^0,w,c
  3624  000A3C  E106               	bnz	u4481
  3625  000A3E  043E               	decf	SIM800xHTTPInputData@cnt^0,w,c
  3626  000A40  0EE0               	movlw	224
  3627  000A42  583F               	subwfb	(SIM800xHTTPInputData@cnt+1)^0,w,c
  3628  000A44  0E04               	movlw	4
  3629  000A46  5840               	subwfb	(SIM800xHTTPInputData@cnt+2)^0,w,c
  3630  000A48  B0D8               	btfsc	status,0,c
  3631  000A4A                     u4481:
  3632  000A4A  D0EB               	goto	l765
  3633                           
  3634                           ; BSR set to: 0
  3635  000A4C  51E6               	movf	(SIM800xHTTPInputData@len+3)& (0+255),w,b
  3636  000A4E  E106               	bnz	u4491
  3637  000A50  05E3               	decf	SIM800xHTTPInputData@len& (0+255),w,b
  3638  000A52  0EE0               	movlw	224
  3639  000A54  59E4               	subwfb	(SIM800xHTTPInputData@len+1)& (0+255),w,b
  3640  000A56  0E04               	movlw	4
  3641  000A58  59E5               	subwfb	(SIM800xHTTPInputData@len+2)& (0+255),w,b
  3642  000A5A  B0D8               	btfsc	status,0,c
  3643  000A5C                     u4491:
  3644  000A5C  D0E2               	goto	l765
  3645                           
  3646                           ; BSR set to: 0
  3647  000A5E  5045               	movf	(SIM800xHTTPInputData@timeout+3)^0,w,c
  3648  000A60  1044               	iorwf	(SIM800xHTTPInputData@timeout+2)^0,w,c
  3649  000A62  E106               	bnz	u4500
  3650  000A64  0EE8               	movlw	232
  3651  000A66  5C42               	subwf	SIM800xHTTPInputData@timeout^0,w,c
  3652  000A68  0E03               	movlw	3
  3653  000A6A  5843               	subwfb	(SIM800xHTTPInputData@timeout+1)^0,w,c
  3654  000A6C  A0D8               	btfss	status,0,c
  3655  000A6E  D0D9               	goto	l765
  3656  000A70                     u4500:
  3657                           
  3658                           ; BSR set to: 0
  3659  000A70  5045               	movf	(SIM800xHTTPInputData@timeout+3)^0,w,c
  3660  000A72  E109               	bnz	u4510
  3661  000A74  0EC1               	movlw	193
  3662  000A76  5C42               	subwf	SIM800xHTTPInputData@timeout^0,w,c
  3663  000A78  0ED4               	movlw	212
  3664  000A7A  5843               	subwfb	(SIM800xHTTPInputData@timeout+1)^0,w,c
  3665  000A7C  0E01               	movlw	1
  3666  000A7E  5844               	subwfb	(SIM800xHTTPInputData@timeout+2)^0,w,c
  3667  000A80  B0D8               	btfsc	status,0,c
  3668  000A82  D0CF               	goto	l765
  3669  000A84  D001               	goto	l5215
  3670  000A86                     u4510:
  3671  000A86  D0CD               	goto	l765
  3672  000A88                     l5215:
  3673  000A88  FFFF               	dw	65535	; assembler added errata NOP
  3674                           
  3675                           ; BSR set to: 0
  3676                           ;SIM800x.c: 1549: char str[30] = {0, 0, 0, 0};
  3677  000A8A  EE20  F0C5         	lfsr	2,SIM800xHTTPInputData@str
  3678  000A8E  0E1D               	movlw	29
  3679  000A90                     u4521:
  3680  000A90  6ADE               	clrf	postinc2,c
  3681  000A92  06E8               	decf	wreg,f,c
  3682  000A94  E2FD               	bc	u4521
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;SIM800x.c: 1551: sprintf(str, "AT+HTTPDATA=%ld,%ld\r", cnt, timeout);
  3686  000A96  0EC5               	movlw	low SIM800xHTTPInputData@str
  3687  000A98  6E24               	movwf	sprintf@sp^0,c
  3688  000A9A  0E00               	movlw	high SIM800xHTTPInputData@str
  3689  000A9C  6E25               	movwf	(sprintf@sp+1)^0,c
  3690  000A9E  0EC5               	movlw	low STR_98
  3691  000AA0  6E26               	movwf	sprintf@f^0,c
  3692  000AA2  0E7C               	movlw	high STR_98
  3693  000AA4  6E27               	movwf	(sprintf@f+1)^0,c
  3694  000AA6  C03E  F028         	movff	SIM800xHTTPInputData@cnt,?_sprintf+4
  3695  000AAA  C03F  F029         	movff	SIM800xHTTPInputData@cnt+1,?_sprintf+5
  3696  000AAE  C040  F02A         	movff	SIM800xHTTPInputData@cnt+2,?_sprintf+6
  3697  000AB2  C041  F02B         	movff	SIM800xHTTPInputData@cnt+3,?_sprintf+7
  3698  000AB6  C042  F02C         	movff	SIM800xHTTPInputData@timeout,?_sprintf+8
  3699  000ABA  C043  F02D         	movff	SIM800xHTTPInputData@timeout+1,?_sprintf+9
  3700  000ABE  C044  F02E         	movff	SIM800xHTTPInputData@timeout+2,?_sprintf+10
  3701  000AC2  C045  F02F         	movff	SIM800xHTTPInputData@timeout+3,?_sprintf+11
  3702  000AC6  ECCD  F002         	call	_sprintf	;wreg free
  3703                           
  3704                           ;SIM800x.c: 1552: SIM800xSDMFlush();
  3705  000ACA  EC8D  F010         	call	_SIM800xSDMFlush	;wreg free
  3706                           
  3707                           ;SIM800x.c: 1553: SIM800xSDMPrint(str);
  3708  000ACE  0EC5               	movlw	low SIM800xHTTPInputData@str
  3709  000AD0  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  3710  000AD2  0E00               	movlw	high SIM800xHTTPInputData@str
  3711  000AD4  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  3712  000AD6  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  3713                           
  3714                           ;SIM800x.c: 1555: uint32_t time = Tick_ms();
  3715  000ADA  EC82  F010         	call	_Tick_ms	;wreg free
  3716  000ADE  C00E  F0E7         	movff	?_Tick_ms,SIM800xHTTPInputData@time
  3717  000AE2  C00F  F0E8         	movff	?_Tick_ms+1,SIM800xHTTPInputData@time+1
  3718  000AE6  C010  F0E9         	movff	?_Tick_ms+2,SIM800xHTTPInputData@time+2
  3719  000AEA  C011  F0EA         	movff	?_Tick_ms+3,SIM800xHTTPInputData@time+3
  3720                           
  3721                           ;SIM800x.c: 1556: while(SIM800xSDMRxAvailable() < 6)
  3722  000AEE  D01A               	goto	l5229
  3723  000AF0                     l5225:
  3724  000AF0  FFFF               	dw	65535	; assembler added errata NOP
  3725                           
  3726                           ;SIM800x.c: 1557: {;SIM800x.c: 1558: if((Tick_ms() - time) > Tout)
  3727  000AF2  EC82  F010         	call	_Tick_ms	;wreg free
  3728  000AF6  0100               	movlb	0	; () banked
  3729  000AF8  51E7               	movf	SIM800xHTTPInputData@time& (0+255),w,b
  3730  000AFA  5C0E               	subwf	?_Tick_ms^0,w,c
  3731  000AFC  6E48               	movwf	??_SIM800xHTTPInputData^0,c
  3732  000AFE  51E8               	movf	(SIM800xHTTPInputData@time+1)& (0+255),w,b
  3733  000B00  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  3734  000B02  6E49               	movwf	(??_SIM800xHTTPInputData+1)^0,c
  3735  000B04  51E9               	movf	(SIM800xHTTPInputData@time+2)& (0+255),w,b
  3736  000B06  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  3737  000B08  6E4A               	movwf	(??_SIM800xHTTPInputData+2)^0,c
  3738  000B0A  51EA               	movf	(SIM800xHTTPInputData@time+3)& (0+255),w,b
  3739  000B0C  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  3740  000B0E  6E4B               	movwf	(??_SIM800xHTTPInputData+3)^0,c
  3741  000B10  5048               	movf	??_SIM800xHTTPInputData^0,w,c
  3742  000B12  5C64               	subwf	_Tout^0,w,c
  3743  000B14  5049               	movf	(??_SIM800xHTTPInputData+1)^0,w,c
  3744  000B16  5865               	subwfb	(_Tout+1)^0,w,c
  3745  000B18  504A               	movf	(??_SIM800xHTTPInputData+2)^0,w,c
  3746  000B1A  5866               	subwfb	(_Tout+2)^0,w,c
  3747  000B1C  504B               	movf	(??_SIM800xHTTPInputData+3)^0,w,c
  3748  000B1E  5867               	subwfb	(_Tout+3)^0,w,c
  3749  000B20  A0D8               	btfss	status,0,c
  3750  000B22  D07F               	goto	l765
  3751  000B24                     l5229:
  3752  000B24  FFFF               	dw	65535	; assembler added errata NOP
  3753  000B26  EC24  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  3754  000B2A  5014               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  3755  000B2C  E104               	bnz	u4540
  3756  000B2E  0E06               	movlw	6
  3757  000B30  5C13               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  3758  000B32  A0D8               	btfss	status,0,c
  3759  000B34  D7DD               	goto	l5225
  3760  000B36                     u4540:
  3761                           
  3762                           ;SIM800x.c: 1561: };SIM800x.c: 1562: };SIM800x.c: 1564: int res = SIM800xSDMReadF1Pkt(st
      +                          r);
  3763  000B36  0EC5               	movlw	low SIM800xHTTPInputData@str
  3764  000B38  6E17               	movwf	SIM800xSDMReadF1Pkt@data^0,c
  3765  000B3A  0E00               	movlw	high SIM800xHTTPInputData@str
  3766  000B3C  6E18               	movwf	(SIM800xSDMReadF1Pkt@data+1)^0,c
  3767  000B3E  EC27  F009         	call	_SIM800xSDMReadF1Pkt	;wreg free
  3768  000B42  C017  F0EB         	movff	?_SIM800xSDMReadF1Pkt,SIM800xHTTPInputData@res
  3769  000B46  C018  F0EC         	movff	?_SIM800xSDMReadF1Pkt+1,SIM800xHTTPInputData@res+1
  3770                           
  3771                           ;SIM800x.c: 1565: if(res < 0)
  3772  000B4A  0100               	movlb	0	; () banked
  3773  000B4C  BFEC               	btfsc	(SIM800xHTTPInputData@res+1)& (0+255),7,b
  3774  000B4E  D069               	goto	l765
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;SIM800x.c: 1569: else if(str[0] == 'D')
  3778  000B50  0E44               	movlw	68
  3779  000B52  19C5               	xorwf	SIM800xHTTPInputData@str& (0+255),w,b
  3780  000B54  A4D8               	btfss	status,2,c
  3781  000B56  D03E               	goto	l5257
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;SIM800x.c: 1570: {;SIM800x.c: 1571: SIM800xSDMFlush();
  3785  000B58  EC8D  F010         	call	_SIM800xSDMFlush	;wreg free
  3786                           
  3787                           ;SIM800x.c: 1573: SIM800xSDMSendBytes(data, cnt);
  3788  000B5C  C03C  F00E         	movff	SIM800xHTTPInputData@data,SIM800xSDMSendBytes@data
  3789  000B60  C03D  F00F         	movff	SIM800xHTTPInputData@data+1,SIM800xSDMSendBytes@data+1
  3790  000B64  C03E  F010         	movff	SIM800xHTTPInputData@cnt,SIM800xSDMSendBytes@cnt
  3791  000B68  C03F  F011         	movff	SIM800xHTTPInputData@cnt+1,SIM800xSDMSendBytes@cnt+1
  3792  000B6C  EC0B  F010         	call	_SIM800xSDMSendBytes	;wreg free
  3793                           
  3794                           ;SIM800x.c: 1575: time = Tick_ms();
  3795  000B70  EC82  F010         	call	_Tick_ms	;wreg free
  3796  000B74  C00E  F0E7         	movff	?_Tick_ms,SIM800xHTTPInputData@time
  3797  000B78  C00F  F0E8         	movff	?_Tick_ms+1,SIM800xHTTPInputData@time+1
  3798  000B7C  C010  F0E9         	movff	?_Tick_ms+2,SIM800xHTTPInputData@time+2
  3799  000B80  C011  F0EA         	movff	?_Tick_ms+3,SIM800xHTTPInputData@time+3
  3800                           
  3801                           ;SIM800x.c: 1576: while(SIM800xSDMRxAvailable() < 6)
  3802  000B84  D01A               	goto	l5251
  3803  000B86                     l5247:
  3804  000B86  FFFF               	dw	65535	; assembler added errata NOP
  3805                           
  3806                           ;SIM800x.c: 1577: {;SIM800x.c: 1578: if((Tick_ms() - time) > Tout)
  3807  000B88  EC82  F010         	call	_Tick_ms	;wreg free
  3808  000B8C  0100               	movlb	0	; () banked
  3809  000B8E  51E7               	movf	SIM800xHTTPInputData@time& (0+255),w,b
  3810  000B90  5C0E               	subwf	?_Tick_ms^0,w,c
  3811  000B92  6E48               	movwf	??_SIM800xHTTPInputData^0,c
  3812  000B94  51E8               	movf	(SIM800xHTTPInputData@time+1)& (0+255),w,b
  3813  000B96  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  3814  000B98  6E49               	movwf	(??_SIM800xHTTPInputData+1)^0,c
  3815  000B9A  51E9               	movf	(SIM800xHTTPInputData@time+2)& (0+255),w,b
  3816  000B9C  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  3817  000B9E  6E4A               	movwf	(??_SIM800xHTTPInputData+2)^0,c
  3818  000BA0  51EA               	movf	(SIM800xHTTPInputData@time+3)& (0+255),w,b
  3819  000BA2  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  3820  000BA4  6E4B               	movwf	(??_SIM800xHTTPInputData+3)^0,c
  3821  000BA6  5048               	movf	??_SIM800xHTTPInputData^0,w,c
  3822  000BA8  5C64               	subwf	_Tout^0,w,c
  3823  000BAA  5049               	movf	(??_SIM800xHTTPInputData+1)^0,w,c
  3824  000BAC  5865               	subwfb	(_Tout+1)^0,w,c
  3825  000BAE  504A               	movf	(??_SIM800xHTTPInputData+2)^0,w,c
  3826  000BB0  5866               	subwfb	(_Tout+2)^0,w,c
  3827  000BB2  504B               	movf	(??_SIM800xHTTPInputData+3)^0,w,c
  3828  000BB4  5867               	subwfb	(_Tout+3)^0,w,c
  3829  000BB6  A0D8               	btfss	status,0,c
  3830  000BB8  D034               	goto	l765
  3831  000BBA                     l5251:
  3832  000BBA  FFFF               	dw	65535	; assembler added errata NOP
  3833  000BBC  EC24  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  3834  000BC0  5014               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  3835  000BC2  E104               	bnz	u4580
  3836  000BC4  0E06               	movlw	6
  3837  000BC6  5C13               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  3838  000BC8  A0D8               	btfss	status,0,c
  3839  000BCA  D7DD               	goto	l5247
  3840  000BCC                     u4580:
  3841                           
  3842                           ;SIM800x.c: 1581: };SIM800x.c: 1582: };SIM800x.c: 1584: if(SIM800xSDMPeek(2) == 'O')
  3843  000BCC  0E02               	movlw	2
  3844  000BCE  ECCA  F00F         	call	_SIM800xSDMPeek
  3845  000BD2  D027               	goto	l765
  3846  000BD4                     l5257:
  3847  000BD4  FFFF               	dw	65535	; assembler added errata NOP
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;SIM800x.c: 1587: else if(str[0] == 'O')
  3851  000BD6  0E4F               	movlw	79
  3852  000BD8  19C5               	xorwf	SIM800xHTTPInputData@str& (0+255),w,b
  3853  000BDA  B4D8               	btfsc	status,2,c
  3854  000BDC  D022               	goto	l765
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;SIM800x.c: 1591: else if(str[0] == 'E')
  3858  000BDE  0E45               	movlw	69
  3859  000BE0  19C5               	xorwf	SIM800xHTTPInputData@str& (0+255),w,b
  3860  000BE2  B4D8               	btfsc	status,2,c
  3861  000BE4  D01E               	goto	l765
  3862                           
  3863                           ; BSR set to: 0
  3864                           ;SIM800x.c: 1595: else if(str[0] == '+')
  3865  000BE6  0E2B               	movlw	43
  3866  000BE8  19C5               	xorwf	SIM800xHTTPInputData@str& (0+255),w,b
  3867  000BEA  A4D8               	btfss	status,2,c
  3868  000BEC  D01A               	goto	l765
  3869                           
  3870                           ; BSR set to: 0
  3871                           ;SIM800x.c: 1596: {;SIM800x.c: 1597: str[(uint8_t)res] = '\0';
  3872  000BEE  0EC5               	movlw	low SIM800xHTTPInputData@str
  3873  000BF0  25EB               	addwf	SIM800xHTTPInputData@res& (0+255),w,b
  3874  000BF2  6ED9               	movwf	fsr2l,c
  3875  000BF4  6ADA               	clrf	fsr2h,c
  3876  000BF6  0E00               	movlw	high SIM800xHTTPInputData@str
  3877  000BF8  22DA               	addwfc	fsr2h,f,c
  3878  000BFA  0E00               	movlw	0
  3879  000BFC  6EDF               	movwf	indf2,c
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;SIM800x.c: 1598: *errcode = (uint16_t)StrToInt(str, 12, (uint16_t)(res - 1));
  3883  000BFE  0EC5               	movlw	low SIM800xHTTPInputData@str
  3884  000C00  6E1A               	movwf	StrToInt@str^0,c
  3885  000C02  0E00               	movlw	high SIM800xHTTPInputData@str
  3886  000C04  6E1B               	movwf	(StrToInt@str+1)^0,c
  3887  000C06  0E0C               	movlw	12
  3888  000C08  6E1C               	movwf	StrToInt@start^0,c
  3889  000C0A  05EB               	decf	SIM800xHTTPInputData@res& (0+255),w,b
  3890  000C0C  6E1D               	movwf	StrToInt@stop^0,c
  3891  000C0E  ECBD  F007         	call	_StrToInt	;wreg free
  3892  000C12  C046  FFD9         	movff	SIM800xHTTPInputData@errcode,fsr2l
  3893  000C16  C047  FFDA         	movff	SIM800xHTTPInputData@errcode+1,fsr2h
  3894  000C1A  C01A  FFDE         	movff	?_StrToInt,postinc2
  3895  000C1E  C01B  FFDD         	movff	?_StrToInt+1,postdec2
  3896  000C22                     l765:
  3897  000C22  FFFF               	dw	65535	; assembler added errata NOP
  3898  000C24  0012               	return		;funcret
  3899  000C26  FFFF               	dw	65535	; errata NOP
  3900  000C28                     __end_of_SIM800xHTTPInputData:
  3901                           	callstack 0
  3902                           
  3903 ;; *************** function _SIM800xSDMSendBytes *****************
  3904 ;; Defined at:
  3905 ;;		line 143 in file "Src/SIM800x_SDM.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;  data            2   13[COMRAM] PTR unsigned char 
  3908 ;;		 -> txmessage(100), 
  3909 ;;  cnt             2   15[COMRAM] unsigned int 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;		None
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      void 
  3914 ;; Registers used:
  3915 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3921 ;;      Params:         4       0       0       0       0       0       0
  3922 ;;      Locals:         0       0       0       0       0       0       0
  3923 ;;      Temps:          0       0       0       0       0       0       0
  3924 ;;      Totals:         4       0       0       0       0       0       0
  3925 ;;Total ram usage:        4 bytes
  3926 ;; Hardware stack levels used: 1
  3927 ;; Hardware stack levels required when called: 3
  3928 ;; This function calls:
  3929 ;;		Nothing
  3930 ;; This function is called by:
  3931 ;;		_SIM800xHTTPInputData
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           	psect	text7
  3936  002016                     __ptext7:
  3937                           	callstack 0
  3938  002016                     _SIM800xSDMSendBytes:
  3939                           	callstack 0
  3940  002016  FFFF               	dw	65535	; assembler added errata NOP
  3941                           
  3942                           ;SIM800x_SDM.c: 146: while((cnt--) != 0)
  3943                           
  3944                           ;incstack = 0
  3945  002018  D00B               	goto	l4885
  3946  00201A                     l1004:
  3947  00201A  FFFF               	dw	65535	; assembler added errata NOP
  3948  00201C  A2AC               	btfss	172,1,c	;volatile
  3949  00201E  D7FD               	goto	l1004
  3950  002020  C00E  FFD9         	movff	SIM800xSDMSendBytes@data,fsr2l
  3951  002024  C00F  FFDA         	movff	SIM800xSDMSendBytes@data+1,fsr2h
  3952  002028  50DF               	movf	indf2,w,c
  3953  00202A  6EAD               	movwf	173,c	;volatile
  3954  00202C  4A0E               	infsnz	SIM800xSDMSendBytes@data^0,f,c
  3955  00202E  2A0F               	incf	(SIM800xSDMSendBytes@data+1)^0,f,c
  3956  002030                     l4885:
  3957  002030  FFFF               	dw	65535	; assembler added errata NOP
  3958  002032  0610               	decf	SIM800xSDMSendBytes@cnt^0,f,c
  3959  002034  A0D8               	btfss	status,0,c
  3960  002036  0611               	decf	(SIM800xSDMSendBytes@cnt+1)^0,f,c
  3961  002038  2810               	incf	SIM800xSDMSendBytes@cnt^0,w,c
  3962  00203A  E1EF               	bnz	l1004
  3963  00203C  2811               	incf	(SIM800xSDMSendBytes@cnt+1)^0,w,c
  3964  00203E  B4D8               	btfsc	status,2,c
  3965  002040  0012               	return		;funcret
  3966  002042  FFFF               	dw	65535	; assembler added errata NOP
  3967  002044  D7EA               	goto	l1004
  3968  002046  FFFF               	dw	65535	; errata NOP
  3969  002048                     __end_of_SIM800xSDMSendBytes:
  3970                           	callstack 0
  3971                           
  3972 ;; *************** function _SIM800xHTTPAction *****************
  3973 ;; Defined at:
  3974 ;;		line 1606 in file "Src/SIM800x.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;  method          1    wreg     unsigned char 
  3977 ;;  statuscode      2   59[COMRAM] PTR unsigned int 
  3978 ;;		 -> SystemTask@scode(2), 
  3979 ;;  cnt             2   61[COMRAM] PTR unsigned long 
  3980 ;;		 -> SystemTask@cnt(4), 
  3981 ;;  tout            4   63[COMRAM] unsigned long 
  3982 ;;  errcode         2   67[COMRAM] PTR unsigned int 
  3983 ;;		 -> SystemTask@errcode(2), 
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;  method          1   34[BANK0 ] unsigned char 
  3986 ;;  t               4   30[BANK0 ] unsigned long 
  3987 ;;  str            30    0[BANK0 ] unsigned char [30]
  3988 ;;  time            4   35[BANK0 ] unsigned long 
  3989 ;;  res             2   39[BANK0 ] int 
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  1    wreg      enum E2115
  3992 ;; Registers used:
  3993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3999 ;;      Params:        10       0       0       0       0       0       0
  4000 ;;      Locals:         0      41       0       0       0       0       0
  4001 ;;      Temps:          4       0       0       0       0       0       0
  4002 ;;      Totals:        14      41       0       0       0       0       0
  4003 ;;Total ram usage:       55 bytes
  4004 ;; Hardware stack levels used: 1
  4005 ;; Hardware stack levels required when called: 6
  4006 ;; This function calls:
  4007 ;;		_SIM800xSDMFlush
  4008 ;;		_SIM800xSDMPrint
  4009 ;;		_SIM800xSDMReadF1Pkt
  4010 ;;		_SIM800xSDMRxAvailable
  4011 ;;		_StrToInt
  4012 ;;		_Tick_ms
  4013 ;;		_sprintf
  4014 ;; This function is called by:
  4015 ;;		_SystemTask
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           	psect	text8
  4020  0007FC                     __ptext8:
  4021                           	callstack 0
  4022  0007FC                     _SIM800xHTTPAction:
  4023                           	callstack 0
  4024  0007FC  FFFF               	dw	65535	; assembler added errata NOP
  4025                           
  4026                           ;incstack = 0
  4027                           ;SIM800xHTTPAction@method stored from wreg
  4028  0007FE  0100               	movlb	0	; () banked
  4029  000800  6FE7               	movwf	SIM800xHTTPAction@method& (0+255),b
  4030                           
  4031                           ;SIM800x.c: 1609: if(method > 3)
  4032  000802  0E03               	movlw	3
  4033  000804  0100               	movlb	0	; () banked
  4034  000806  65E7               	cpfsgt	SIM800xHTTPAction@method& (0+255),b
  4035  000808  D003               	goto	l5283
  4036  00080A                     u4620:
  4037  00080A  FFFF               	dw	65535	; assembler added errata NOP
  4038                           
  4039                           ; BSR set to: 0
  4040                           ;SIM800x.c: 1610: return SIM800X_ERROR;
  4041  00080C  0E01               	movlw	1
  4042  00080E  D104               	goto	l789
  4043  000810                     l5283:
  4044  000810  FFFF               	dw	65535	; assembler added errata NOP
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;SIM800x.c: 1612: char str[30] = {0, 0, 0, 0};
  4048  000812  EE20  F0C5         	lfsr	2,SIM800xHTTPAction@str
  4049  000816  0E1D               	movlw	29
  4050  000818                     u4631:
  4051  000818  6ADE               	clrf	postinc2,c
  4052  00081A  06E8               	decf	wreg,f,c
  4053  00081C  E2FD               	bc	u4631
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;SIM800x.c: 1614: sprintf(str, "AT+HTTPACTION=%u\r", (uint8_t)(method & 0x03));
  4057  00081E  0EC5               	movlw	low SIM800xHTTPAction@str
  4058  000820  6E24               	movwf	sprintf@sp^0,c
  4059  000822  0E00               	movlw	high SIM800xHTTPAction@str
  4060  000824  6E25               	movwf	(sprintf@sp+1)^0,c
  4061  000826  0E67               	movlw	low STR_99
  4062  000828  6E26               	movwf	sprintf@f^0,c
  4063  00082A  0E7D               	movlw	high STR_99
  4064  00082C  6E27               	movwf	(sprintf@f+1)^0,c
  4065  00082E  C0E7  F046         	movff	SIM800xHTTPAction@method,??_SIM800xHTTPAction
  4066  000832  0E03               	movlw	3
  4067  000834  1646               	andwf	??_SIM800xHTTPAction^0,f,c
  4068  000836  5046               	movf	??_SIM800xHTTPAction^0,w,c
  4069  000838  6E28               	movwf	(?_sprintf+4)^0,c
  4070  00083A  6A29               	clrf	(?_sprintf+5)^0,c
  4071  00083C  ECCD  F002         	call	_sprintf	;wreg free
  4072                           
  4073                           ;SIM800x.c: 1615: SIM800xSDMFlush();
  4074  000840  EC8D  F010         	call	_SIM800xSDMFlush	;wreg free
  4075                           
  4076                           ;SIM800x.c: 1616: SIM800xSDMPrint(str);
  4077  000844  0EC5               	movlw	low SIM800xHTTPAction@str
  4078  000846  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  4079  000848  0E00               	movlw	high SIM800xHTTPAction@str
  4080  00084A  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  4081  00084C  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  4082                           
  4083                           ;SIM800x.c: 1618: uint32_t time = Tick_ms();
  4084  000850  EC82  F010         	call	_Tick_ms	;wreg free
  4085  000854  C00E  F0E8         	movff	?_Tick_ms,SIM800xHTTPAction@time
  4086  000858  C00F  F0E9         	movff	?_Tick_ms+1,SIM800xHTTPAction@time+1
  4087  00085C  C010  F0EA         	movff	?_Tick_ms+2,SIM800xHTTPAction@time+2
  4088  000860  C011  F0EB         	movff	?_Tick_ms+3,SIM800xHTTPAction@time+3
  4089                           
  4090                           ;SIM800x.c: 1619: while(SIM800xSDMRxAvailable() < 6)
  4091  000864  D01D               	goto	l5299
  4092  000866                     l5293:
  4093  000866  FFFF               	dw	65535	; assembler added errata NOP
  4094                           
  4095                           ;SIM800x.c: 1620: {;SIM800x.c: 1621: if((Tick_ms() - time) > Tout)
  4096  000868  EC82  F010         	call	_Tick_ms	;wreg free
  4097  00086C  0100               	movlb	0	; () banked
  4098  00086E  51E8               	movf	SIM800xHTTPAction@time& (0+255),w,b
  4099  000870  5C0E               	subwf	?_Tick_ms^0,w,c
  4100  000872  6E46               	movwf	??_SIM800xHTTPAction^0,c
  4101  000874  51E9               	movf	(SIM800xHTTPAction@time+1)& (0+255),w,b
  4102  000876  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  4103  000878  6E47               	movwf	(??_SIM800xHTTPAction+1)^0,c
  4104  00087A  51EA               	movf	(SIM800xHTTPAction@time+2)& (0+255),w,b
  4105  00087C  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  4106  00087E  6E48               	movwf	(??_SIM800xHTTPAction+2)^0,c
  4107  000880  51EB               	movf	(SIM800xHTTPAction@time+3)& (0+255),w,b
  4108  000882  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  4109  000884  6E49               	movwf	(??_SIM800xHTTPAction+3)^0,c
  4110  000886  5046               	movf	??_SIM800xHTTPAction^0,w,c
  4111  000888  5C64               	subwf	_Tout^0,w,c
  4112  00088A  5047               	movf	(??_SIM800xHTTPAction+1)^0,w,c
  4113  00088C  5865               	subwfb	(_Tout+1)^0,w,c
  4114  00088E  5048               	movf	(??_SIM800xHTTPAction+2)^0,w,c
  4115  000890  5866               	subwfb	(_Tout+2)^0,w,c
  4116  000892  5049               	movf	(??_SIM800xHTTPAction+3)^0,w,c
  4117  000894  5867               	subwfb	(_Tout+3)^0,w,c
  4118  000896  B0D8               	btfsc	status,0,c
  4119  000898  D003               	goto	l5299
  4120  00089A                     u4640:
  4121  00089A  FFFF               	dw	65535	; assembler added errata NOP
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;SIM800x.c: 1622: {;SIM800x.c: 1623: return SIM800X_TIME_OUT;
  4125  00089C  0E05               	movlw	5
  4126  00089E  D0BC               	goto	l789
  4127  0008A0                     l5299:
  4128  0008A0  FFFF               	dw	65535	; assembler added errata NOP
  4129  0008A2  EC24  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  4130  0008A6  5014               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  4131  0008A8  E104               	bnz	u4650
  4132  0008AA  0E06               	movlw	6
  4133  0008AC  5C13               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  4134  0008AE  A0D8               	btfss	status,0,c
  4135  0008B0  D7DA               	goto	l5293
  4136  0008B2                     u4650:
  4137                           
  4138                           ;SIM800x.c: 1624: };SIM800x.c: 1625: };SIM800x.c: 1627: int res = SIM800xSDMReadF1Pkt(st
      +                          r);
  4139  0008B2  0EC5               	movlw	low SIM800xHTTPAction@str
  4140  0008B4  6E17               	movwf	SIM800xSDMReadF1Pkt@data^0,c
  4141  0008B6  0E00               	movlw	high SIM800xHTTPAction@str
  4142  0008B8  6E18               	movwf	(SIM800xSDMReadF1Pkt@data+1)^0,c
  4143  0008BA  EC27  F009         	call	_SIM800xSDMReadF1Pkt	;wreg free
  4144  0008BE  C017  F0EC         	movff	?_SIM800xSDMReadF1Pkt,SIM800xHTTPAction@res
  4145  0008C2  C018  F0ED         	movff	?_SIM800xSDMReadF1Pkt+1,SIM800xHTTPAction@res+1
  4146                           
  4147                           ;SIM800x.c: 1628: if(res < 0)
  4148  0008C6  0100               	movlb	0	; () banked
  4149  0008C8  BFED               	btfsc	(SIM800xHTTPAction@res+1)& (0+255),7,b
  4150  0008CA  D7E7               	goto	u4640
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;SIM800x.c: 1632: else if(str[0] == 'O')
  4154  0008CC  0E4F               	movlw	79
  4155  0008CE  19C5               	xorwf	SIM800xHTTPAction@str& (0+255),w,b
  4156  0008D0  A4D8               	btfss	status,2,c
  4157  0008D2  D082               	goto	l5339
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;SIM800x.c: 1633: {;SIM800x.c: 1635: uint32_t t = (uint32_t)(tout + 5000);
  4161  0008D4  0E88               	movlw	136
  4162  0008D6  2440               	addwf	SIM800xHTTPAction@tout^0,w,c
  4163  0008D8  6FE3               	movwf	SIM800xHTTPAction@t& (0+255),b
  4164  0008DA  0E13               	movlw	19
  4165  0008DC  2041               	addwfc	(SIM800xHTTPAction@tout+1)^0,w,c
  4166  0008DE  6FE4               	movwf	(SIM800xHTTPAction@t+1)& (0+255),b
  4167  0008E0  0E00               	movlw	0
  4168  0008E2  2042               	addwfc	(SIM800xHTTPAction@tout+2)^0,w,c
  4169  0008E4  6FE5               	movwf	(SIM800xHTTPAction@t+2)& (0+255),b
  4170  0008E6  0E00               	movlw	0
  4171  0008E8  2043               	addwfc	(SIM800xHTTPAction@tout+3)^0,w,c
  4172  0008EA  6FE6               	movwf	(SIM800xHTTPAction@t+3)& (0+255),b
  4173                           
  4174                           ; BSR set to: 0
  4175                           ;SIM800x.c: 1636: time = Tick_ms();
  4176  0008EC  EC82  F010         	call	_Tick_ms	;wreg free
  4177  0008F0  C00E  F0E8         	movff	?_Tick_ms,SIM800xHTTPAction@time
  4178  0008F4  C00F  F0E9         	movff	?_Tick_ms+1,SIM800xHTTPAction@time+1
  4179  0008F8  C010  F0EA         	movff	?_Tick_ms+2,SIM800xHTTPAction@time+2
  4180  0008FC  C011  F0EB         	movff	?_Tick_ms+3,SIM800xHTTPAction@time+3
  4181                           
  4182                           ;SIM800x.c: 1637: while(SIM800xSDMRxAvailable() < 24)
  4183  000900  D01A               	goto	l5323
  4184  000902                     l5317:
  4185  000902  FFFF               	dw	65535	; assembler added errata NOP
  4186                           
  4187                           ;SIM800x.c: 1638: {;SIM800x.c: 1639: if((Tick_ms() - time) > t)
  4188  000904  EC82  F010         	call	_Tick_ms	;wreg free
  4189  000908  0100               	movlb	0	; () banked
  4190  00090A  51E8               	movf	SIM800xHTTPAction@time& (0+255),w,b
  4191  00090C  5C0E               	subwf	?_Tick_ms^0,w,c
  4192  00090E  6E46               	movwf	??_SIM800xHTTPAction^0,c
  4193  000910  51E9               	movf	(SIM800xHTTPAction@time+1)& (0+255),w,b
  4194  000912  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  4195  000914  6E47               	movwf	(??_SIM800xHTTPAction+1)^0,c
  4196  000916  51EA               	movf	(SIM800xHTTPAction@time+2)& (0+255),w,b
  4197  000918  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  4198  00091A  6E48               	movwf	(??_SIM800xHTTPAction+2)^0,c
  4199  00091C  51EB               	movf	(SIM800xHTTPAction@time+3)& (0+255),w,b
  4200  00091E  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  4201  000920  6E49               	movwf	(??_SIM800xHTTPAction+3)^0,c
  4202  000922  5046               	movf	??_SIM800xHTTPAction^0,w,c
  4203  000924  5DE3               	subwf	SIM800xHTTPAction@t& (0+255),w,b
  4204  000926  5047               	movf	(??_SIM800xHTTPAction+1)^0,w,c
  4205  000928  59E4               	subwfb	(SIM800xHTTPAction@t+1)& (0+255),w,b
  4206  00092A  5048               	movf	(??_SIM800xHTTPAction+2)^0,w,c
  4207  00092C  59E5               	subwfb	(SIM800xHTTPAction@t+2)& (0+255),w,b
  4208  00092E  5049               	movf	(??_SIM800xHTTPAction+3)^0,w,c
  4209  000930  59E6               	subwfb	(SIM800xHTTPAction@t+3)& (0+255),w,b
  4210  000932  A0D8               	btfss	status,0,c
  4211  000934  D7B2               	goto	u4640
  4212  000936                     l5323:
  4213  000936  FFFF               	dw	65535	; assembler added errata NOP
  4214  000938  EC24  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  4215  00093C  5014               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  4216  00093E  E104               	bnz	u4690
  4217  000940  0E18               	movlw	24
  4218  000942  5C13               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  4219  000944  A0D8               	btfss	status,0,c
  4220  000946  D7DD               	goto	l5317
  4221  000948                     u4690:
  4222                           
  4223                           ;SIM800x.c: 1642: };SIM800x.c: 1643: };SIM800x.c: 1645: res = SIM800xSDMReadF1Pkt(str);
  4224  000948  0EC5               	movlw	low SIM800xHTTPAction@str
  4225  00094A  6E17               	movwf	SIM800xSDMReadF1Pkt@data^0,c
  4226  00094C  0E00               	movlw	high SIM800xHTTPAction@str
  4227  00094E  6E18               	movwf	(SIM800xSDMReadF1Pkt@data+1)^0,c
  4228  000950  EC27  F009         	call	_SIM800xSDMReadF1Pkt	;wreg free
  4229  000954  C017  F0EC         	movff	?_SIM800xSDMReadF1Pkt,SIM800xHTTPAction@res
  4230  000958  C018  F0ED         	movff	?_SIM800xSDMReadF1Pkt+1,SIM800xHTTPAction@res+1
  4231                           
  4232                           ;SIM800x.c: 1646: if(str[0] == '+')
  4233  00095C  0E2B               	movlw	43
  4234  00095E  0100               	movlb	0	; () banked
  4235  000960  19C5               	xorwf	SIM800xHTTPAction@str& (0+255),w,b
  4236  000962  A4D8               	btfss	status,2,c
  4237  000964  D752               	goto	u4620
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;SIM800x.c: 1647: {;SIM800x.c: 1648: str[(uint8_t)res] = '\0';
  4241  000966  0EC5               	movlw	low SIM800xHTTPAction@str
  4242  000968  25EC               	addwf	SIM800xHTTPAction@res& (0+255),w,b
  4243  00096A  6ED9               	movwf	fsr2l,c
  4244  00096C  6ADA               	clrf	fsr2h,c
  4245  00096E  0E00               	movlw	high SIM800xHTTPAction@str
  4246  000970  22DA               	addwfc	fsr2h,f,c
  4247  000972  0E00               	movlw	0
  4248  000974  6EDF               	movwf	indf2,c
  4249                           
  4250                           ; BSR set to: 0
  4251                           ;SIM800x.c: 1649: *statuscode = (uint16_t)StrToInt(str, 15, 17);
  4252  000976  0EC5               	movlw	low SIM800xHTTPAction@str
  4253  000978  6E1A               	movwf	StrToInt@str^0,c
  4254  00097A  0E00               	movlw	high SIM800xHTTPAction@str
  4255  00097C  6E1B               	movwf	(StrToInt@str+1)^0,c
  4256  00097E  0E0F               	movlw	15
  4257  000980  6E1C               	movwf	StrToInt@start^0,c
  4258  000982  0E11               	movlw	17
  4259  000984  6E1D               	movwf	StrToInt@stop^0,c
  4260  000986  ECBD  F007         	call	_StrToInt	;wreg free
  4261  00098A  C03C  FFD9         	movff	SIM800xHTTPAction@statuscode,fsr2l
  4262  00098E  C03D  FFDA         	movff	SIM800xHTTPAction@statuscode+1,fsr2h
  4263  000992  C01A  FFDE         	movff	?_StrToInt,postinc2
  4264  000996  C01B  FFDD         	movff	?_StrToInt+1,postdec2
  4265                           
  4266                           ;SIM800x.c: 1650: *cnt = (uint16_t)StrToInt(str, 19, (uint16_t)(res - 1));
  4267  00099A  0EC5               	movlw	low SIM800xHTTPAction@str
  4268  00099C  6E1A               	movwf	StrToInt@str^0,c
  4269  00099E  0E00               	movlw	high SIM800xHTTPAction@str
  4270  0009A0  6E1B               	movwf	(StrToInt@str+1)^0,c
  4271  0009A2  0E13               	movlw	19
  4272  0009A4  6E1C               	movwf	StrToInt@start^0,c
  4273  0009A6  0100               	movlb	0	; () banked
  4274  0009A8  05EC               	decf	SIM800xHTTPAction@res& (0+255),w,b
  4275  0009AA  6E1D               	movwf	StrToInt@stop^0,c
  4276  0009AC  ECBD  F007         	call	_StrToInt	;wreg free
  4277  0009B0  501A               	movf	?_StrToInt^0,w,c
  4278  0009B2  6E46               	movwf	??_SIM800xHTTPAction^0,c
  4279  0009B4  501B               	movf	(?_StrToInt+1)^0,w,c
  4280  0009B6  6E47               	movwf	(??_SIM800xHTTPAction+1)^0,c
  4281  0009B8  6A48               	clrf	(??_SIM800xHTTPAction+2)^0,c
  4282  0009BA  6A49               	clrf	(??_SIM800xHTTPAction+3)^0,c
  4283  0009BC  C03E  FFD9         	movff	SIM800xHTTPAction@cnt,fsr2l
  4284  0009C0  C03F  FFDA         	movff	SIM800xHTTPAction@cnt+1,fsr2h
  4285  0009C4  C046  FFDE         	movff	??_SIM800xHTTPAction,postinc2
  4286  0009C8  C047  FFDE         	movff	??_SIM800xHTTPAction+1,postinc2
  4287  0009CC  C048  FFDE         	movff	??_SIM800xHTTPAction+2,postinc2
  4288  0009D0  C049  FFDE         	movff	??_SIM800xHTTPAction+3,postinc2
  4289                           
  4290                           ;SIM800x.c: 1651: return SIM800X_OK;
  4291  0009D4  0E00               	movlw	0
  4292  0009D6  D020               	goto	l789
  4293  0009D8                     l5339:
  4294  0009D8  FFFF               	dw	65535	; assembler added errata NOP
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;SIM800x.c: 1654: else if(str[0] == '+')
  4298  0009DA  0E2B               	movlw	43
  4299  0009DC  19C5               	xorwf	SIM800xHTTPAction@str& (0+255),w,b
  4300  0009DE  A4D8               	btfss	status,2,c
  4301  0009E0  D714               	goto	u4620
  4302                           
  4303                           ; BSR set to: 0
  4304                           ;SIM800x.c: 1655: {;SIM800x.c: 1656: str[(uint8_t)res] = '\0';
  4305  0009E2  0EC5               	movlw	low SIM800xHTTPAction@str
  4306  0009E4  25EC               	addwf	SIM800xHTTPAction@res& (0+255),w,b
  4307  0009E6  6ED9               	movwf	fsr2l,c
  4308  0009E8  6ADA               	clrf	fsr2h,c
  4309  0009EA  0E00               	movlw	high SIM800xHTTPAction@str
  4310  0009EC  22DA               	addwfc	fsr2h,f,c
  4311  0009EE  0E00               	movlw	0
  4312  0009F0  6EDF               	movwf	indf2,c
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;SIM800x.c: 1657: *errcode = (uint16_t)StrToInt(str, 12, (uint16_t)(res - 1));
  4316  0009F2  0EC5               	movlw	low SIM800xHTTPAction@str
  4317  0009F4  6E1A               	movwf	StrToInt@str^0,c
  4318  0009F6  0E00               	movlw	high SIM800xHTTPAction@str
  4319  0009F8  6E1B               	movwf	(StrToInt@str+1)^0,c
  4320  0009FA  0E0C               	movlw	12
  4321  0009FC  6E1C               	movwf	StrToInt@start^0,c
  4322  0009FE  05EC               	decf	SIM800xHTTPAction@res& (0+255),w,b
  4323  000A00  6E1D               	movwf	StrToInt@stop^0,c
  4324  000A02  ECBD  F007         	call	_StrToInt	;wreg free
  4325  000A06  C044  FFD9         	movff	SIM800xHTTPAction@errcode,fsr2l
  4326  000A0A  C045  FFDA         	movff	SIM800xHTTPAction@errcode+1,fsr2h
  4327  000A0E  C01A  FFDE         	movff	?_StrToInt,postinc2
  4328  000A12  C01B  FFDD         	movff	?_StrToInt+1,postdec2
  4329                           
  4330                           ;SIM800x.c: 1658: return SIM800X_CME_ERROR;
  4331  000A16  0E02               	movlw	2
  4332  000A18                     l789:
  4333  000A18  FFFF               	dw	65535	; assembler added errata NOP
  4334  000A1A  0012               	return		;funcret
  4335  000A1C  FFFF               	dw	65535	; errata NOP
  4336  000A1E                     __end_of_SIM800xHTTPAction:
  4337                           	callstack 0
  4338                           
  4339 ;; *************** function _SystemInit *****************
  4340 ;; Defined at:
  4341 ;;		line 34 in file "Src/ApplicationExample.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;		None
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;  ip             20    0[BANK0 ] unsigned char [20]
  4346 ;;  err             2   20[BANK0 ] unsigned int 
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  1    wreg      unsigned char 
  4349 ;; Registers used:
  4350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4356 ;;      Params:         0       0       0       0       0       0       0
  4357 ;;      Locals:         0      22       0       0       0       0       0
  4358 ;;      Temps:          0       0       0       0       0       0       0
  4359 ;;      Totals:         0      22       0       0       0       0       0
  4360 ;;Total ram usage:       22 bytes
  4361 ;; Hardware stack levels used: 1
  4362 ;; Hardware stack levels required when called: 8
  4363 ;; This function calls:
  4364 ;;		_AddEntryToJsonObject
  4365 ;;		_SIM800xHTTPInit
  4366 ;;		_SIM800xHTTPSetContent
  4367 ;;		_SIM800xHTTPSetURL
  4368 ;;		_SIM800xIPGetState
  4369 ;;		_SIM800xIPOpen
  4370 ;;		_SIM800xIPSetAPN
  4371 ;;		_SIM800xIPSetConnectionType
  4372 ;;		_SIM800xInit
  4373 ;;		_SoftUARTInit
  4374 ;;		_SoftUARTPrint
  4375 ;; This function is called by:
  4376 ;;		_main
  4377 ;; This function uses a non-reentrant model
  4378 ;;
  4379                           
  4380                           	psect	text9
  4381  000C28                     __ptext9:
  4382                           	callstack 0
  4383  000C28                     _SystemInit:
  4384                           	callstack 0
  4385  000C28  FFFF               	dw	65535	; assembler added errata NOP
  4386                           
  4387                           ;ApplicationExample.c: 36: SoftUARTInit();
  4388                           
  4389                           ;incstack = 0
  4390  000C2A  EC98  F010         	call	_SoftUARTInit	;wreg free
  4391                           
  4392                           ;ApplicationExample.c: 38: if(SIM800xInit(9600) == SIM800X_OK)
  4393  000C2E  0E80               	movlw	128
  4394  000C30  6E3C               	movwf	SIM800xInit@br^0,c
  4395  000C32  0E25               	movlw	37
  4396  000C34  6E3D               	movwf	(SIM800xInit@br+1)^0,c
  4397  000C36  0E00               	movlw	0
  4398  000C38  6E3E               	movwf	(SIM800xInit@br+2)^0,c
  4399  000C3A  0E00               	movlw	0
  4400  000C3C  6E3F               	movwf	(SIM800xInit@br+3)^0,c
  4401  000C3E  EC88  F008         	call	_SIM800xInit	;wreg free
  4402  000C42  0900               	iorlw	0
  4403  000C44  A4D8               	btfss	status,2,c
  4404  000C46  D0C3               	goto	l50
  4405                           
  4406                           ;ApplicationExample.c: 39: {;ApplicationExample.c: 40: SoftUARTPrint("Modem Initialized.
      +                          \r\r");
  4407  000C48  0E04               	movlw	low STR_1
  4408  000C4A  6E11               	movwf	SoftUARTPrint@str^0,c
  4409  000C4C  0E7D               	movlw	high STR_1
  4410  000C4E  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4411  000C50  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  4412                           
  4413                           ;ApplicationExample.c: 44: SoftUARTPrint("Setting IP configurations...\r");
  4414  000C54  0E73               	movlw	low STR_2
  4415  000C56  6E11               	movwf	SoftUARTPrint@str^0,c
  4416  000C58  0E7B               	movlw	high STR_2
  4417  000C5A  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4418  000C5C  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  4419                           
  4420                           ;ApplicationExample.c: 45: if(SIM800xIPSetConnectionType(1, "GPRS") == SIM800X_OK)
  4421  000C60  0EE0               	movlw	low STR_3
  4422  000C62  6E20               	movwf	SIM800xIPSetConnectionType@contype^0,c
  4423  000C64  0E7F               	movlw	high STR_3
  4424  000C66  6E21               	movwf	(SIM800xIPSetConnectionType@contype+1)^0,c
  4425  000C68  0E01               	movlw	1
  4426  000C6A  EC0F  F00D         	call	_SIM800xIPSetConnectionType
  4427  000C6E  0900               	iorlw	0
  4428  000C70  A4D8               	btfss	status,2,c
  4429  000C72  D0AD               	goto	l50
  4430                           
  4431                           ;ApplicationExample.c: 46: {;ApplicationExample.c: 47: if(SIM800xIPSetAPN(1, "Internet")
      +                           == SIM800X_OK)
  4432  000C74  0E6B               	movlw	low STR_4
  4433  000C76  6E20               	movwf	SIM800xIPSetAPN@apn^0,c
  4434  000C78  0E7F               	movlw	high STR_4
  4435  000C7A  6E21               	movwf	(SIM800xIPSetAPN@apn+1)^0,c
  4436  000C7C  0E01               	movlw	1
  4437  000C7E  EC45  F00D         	call	_SIM800xIPSetAPN
  4438  000C82  0900               	iorlw	0
  4439  000C84  A4D8               	btfss	status,2,c
  4440  000C86  D0A3               	goto	l50
  4441                           
  4442                           ;ApplicationExample.c: 48: {;ApplicationExample.c: 49: if(SIM800xIPOpen(1) == SIM800X_OK
      +                          )
  4443  000C88  0E01               	movlw	1
  4444  000C8A  ECA5  F00F         	call	_SIM800xIPOpen
  4445  000C8E  0900               	iorlw	0
  4446  000C90  A4D8               	btfss	status,2,c
  4447  000C92  D09D               	goto	l50
  4448                           
  4449                           ;ApplicationExample.c: 50: {;ApplicationExample.c: 51: char ip[20];;ApplicationExample.c
      +                          : 52: SoftUARTPrint("Done.\r\r");
  4450  000C94  0EB4               	movlw	low STR_5
  4451  000C96  6E11               	movwf	SoftUARTPrint@str^0,c
  4452  000C98  0E7F               	movlw	high STR_5
  4453  000C9A  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4454  000C9C  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  4455                           
  4456                           ;ApplicationExample.c: 53: SIM800xIPGetState(1, ip);
  4457  000CA0  0EC5               	movlw	low SystemInit@ip
  4458  000CA2  6E2A               	movwf	SIM800xIPGetState@ip^0,c
  4459  000CA4  0E00               	movlw	high SystemInit@ip
  4460  000CA6  6E2B               	movwf	(SIM800xIPGetState@ip+1)^0,c
  4461  000CA8  0E01               	movlw	1
  4462  000CAA  EC40  F00A         	call	_SIM800xIPGetState
  4463                           
  4464                           ;ApplicationExample.c: 54: SoftUARTPrint("Bearer profile Activated, IP: ");
  4465  000CAE  0E54               	movlw	low STR_6
  4466  000CB0  6E11               	movwf	SoftUARTPrint@str^0,c
  4467  000CB2  0E7B               	movlw	high STR_6
  4468  000CB4  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4469  000CB6  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  4470                           
  4471                           ;ApplicationExample.c: 55: SoftUARTPrint(ip);
  4472  000CBA  0EC5               	movlw	low SystemInit@ip
  4473  000CBC  6E11               	movwf	SoftUARTPrint@str^0,c
  4474  000CBE  0E00               	movlw	high SystemInit@ip
  4475  000CC0  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4476  000CC2  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  4477                           
  4478                           ;ApplicationExample.c: 56: SoftUARTPrint("\r\r");
  4479  000CC6  0E31               	movlw	low (STR_21+29)
  4480  000CC8  6E11               	movwf	SoftUARTPrint@str^0,c
  4481  000CCA  0E7B               	movlw	high (STR_21+29)
  4482  000CCC  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4483  000CCE  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  4484                           
  4485                           ;ApplicationExample.c: 57: uint16_t err;;ApplicationExample.c: 61: SoftUARTPrint("Settin
      +                          g HTTP configurations...\r");
  4486  000CD2  0E34               	movlw	low STR_8
  4487  000CD4  6E11               	movwf	SoftUARTPrint@str^0,c
  4488  000CD6  0E7B               	movlw	high STR_8
  4489  000CD8  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4490  000CDA  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  4491                           
  4492                           ;ApplicationExample.c: 62: if(SIM800xHTTPInit(&err) == SIM800X_OK)
  4493  000CDE  0ED9               	movlw	low SystemInit@err
  4494  000CE0  6E4E               	movwf	SIM800xHTTPInit@errcode^0,c
  4495  000CE2  0E00               	movlw	high SystemInit@err
  4496  000CE4  6E4F               	movwf	(SIM800xHTTPInit@errcode+1)^0,c
  4497  000CE6  EC65  F010         	call	_SIM800xHTTPInit	;wreg free
  4498  000CEA  0900               	iorlw	0
  4499  000CEC  A4D8               	btfss	status,2,c
  4500  000CEE  D06F               	goto	l50
  4501                           
  4502                           ;ApplicationExample.c: 63: {;ApplicationExample.c: 64: if(SIM800xHTTPSetURL("http://back
      +                          end.thinger.io/v3/users/FirmwareEngineers/devices/SIM800L/callback/data?authorization=ey
      +                          JhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODAzNjA0NzAsImlhdCI6MTY4MDM1MzI3MCwicm9sZ
      +                          SI6InVzZXIiLCJ1c3IiOiJGaXJtd2FyZUVuZ2luZW
  4503  000CF0  0EB8               	movlw	low STR_9
  4504  000CF2  6E4E               	movwf	SIM800xHTTPSetURL@url^0,c
  4505  000CF4  0E79               	movlw	high STR_9
  4506  000CF6  6E4F               	movwf	(SIM800xHTTPSetURL@url+1)^0,c
  4507  000CF8  0ED9               	movlw	low SystemInit@err
  4508  000CFA  6E50               	movwf	SIM800xHTTPSetURL@errcode^0,c
  4509  000CFC  0E00               	movlw	high SystemInit@err
  4510  000CFE  6E51               	movwf	(SIM800xHTTPSetURL@errcode+1)^0,c
  4511  000D00  EC8F  F00E         	call	_SIM800xHTTPSetURL	;wreg free
  4512  000D04  0900               	iorlw	0
  4513  000D06  A4D8               	btfss	status,2,c
  4514  000D08  D062               	goto	l50
  4515                           
  4516                           ;ApplicationExample.c: 65: {;ApplicationExample.c: 66: if(SIM800xHTTPSetContent("applica
      +                          tion/json", &err) == SIM800X_OK)
  4517  000D0A  0E9C               	movlw	low STR_10
  4518  000D0C  6E4E               	movwf	SIM800xHTTPSetContent@content^0,c
  4519  000D0E  0E7D               	movlw	high STR_10
  4520  000D10  6E4F               	movwf	(SIM800xHTTPSetContent@content+1)^0,c
  4521  000D12  0ED9               	movlw	low SystemInit@err
  4522  000D14  6E50               	movwf	SIM800xHTTPSetContent@errcode^0,c
  4523  000D16  0E00               	movlw	high SystemInit@err
  4524  000D18  6E51               	movwf	(SIM800xHTTPSetContent@errcode+1)^0,c
  4525  000D1A  ECB9  F00E         	call	_SIM800xHTTPSetContent	;wreg free
  4526  000D1E  0900               	iorlw	0
  4527  000D20  A4D8               	btfss	status,2,c
  4528  000D22  D055               	goto	l50
  4529                           
  4530                           ;ApplicationExample.c: 67: {;ApplicationExample.c: 68: SoftUARTPrint("Done.\r\r");
  4531  000D24  0EB4               	movlw	low STR_5
  4532  000D26  6E11               	movwf	SoftUARTPrint@str^0,c
  4533  000D28  0E7F               	movlw	high STR_5
  4534  000D2A  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4535  000D2C  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  4536                           
  4537                           ;ApplicationExample.c: 73: AddEntryToJsonObject(txmessage, "Engine Temperature (C)", "30
      +                          ", &cpos);
  4538  000D30  0E8C               	movlw	low _txmessage
  4539  000D32  6E0E               	movwf	AddEntryToJsonObject@JsonObject^0,c
  4540  000D34  0E02               	movlw	high _txmessage
  4541  000D36  6E0F               	movwf	(AddEntryToJsonObject@JsonObject+1)^0,c
  4542  000D38  0EAE               	movlw	low STR_12
  4543  000D3A  6E10               	movwf	AddEntryToJsonObject@key^0,c
  4544  000D3C  0E7C               	movlw	high STR_12
  4545  000D3E  6E11               	movwf	(AddEntryToJsonObject@key+1)^0,c
  4546  000D40  0EF3               	movlw	low STR_13
  4547  000D42  6E12               	movwf	AddEntryToJsonObject@value^0,c
  4548  000D44  0E7F               	movlw	high STR_13
  4549  000D46  6E13               	movwf	(AddEntryToJsonObject@value+1)^0,c
  4550  000D48  0E62               	movlw	low _cpos
  4551  000D4A  6E14               	movwf	AddEntryToJsonObject@Cpos^0,c
  4552  000D4C  0E00               	movlw	high _cpos
  4553  000D4E  6E15               	movwf	(AddEntryToJsonObject@Cpos+1)^0,c
  4554  000D50  EC19  F000         	call	_AddEntryToJsonObject	;wreg free
  4555                           
  4556                           ;ApplicationExample.c: 74: AddEntryToJsonObject(txmessage, "RPM", "3500", &cpos);
  4557  000D54  0E8C               	movlw	low _txmessage
  4558  000D56  6E0E               	movwf	AddEntryToJsonObject@JsonObject^0,c
  4559  000D58  0E02               	movlw	high _txmessage
  4560  000D5A  6E0F               	movwf	(AddEntryToJsonObject@JsonObject+1)^0,c
  4561  000D5C  0EE9               	movlw	low STR_14
  4562  000D5E  6E10               	movwf	AddEntryToJsonObject@key^0,c
  4563  000D60  0E7F               	movlw	high STR_14
  4564  000D62  6E11               	movwf	(AddEntryToJsonObject@key+1)^0,c
  4565  000D64  0EDB               	movlw	low STR_15
  4566  000D66  6E12               	movwf	AddEntryToJsonObject@value^0,c
  4567  000D68  0E7F               	movlw	high STR_15
  4568  000D6A  6E13               	movwf	(AddEntryToJsonObject@value+1)^0,c
  4569  000D6C  0E62               	movlw	low _cpos
  4570  000D6E  6E14               	movwf	AddEntryToJsonObject@Cpos^0,c
  4571  000D70  0E00               	movlw	high _cpos
  4572  000D72  6E15               	movwf	(AddEntryToJsonObject@Cpos+1)^0,c
  4573  000D74  EC19  F000         	call	_AddEntryToJsonObject	;wreg free
  4574                           
  4575                           ;ApplicationExample.c: 75: AddEntryToJsonObject(txmessage, "Vehicle Speed (MPH)", "35", 
      +                          &cpos);
  4576  000D78  0E8C               	movlw	low _txmessage
  4577  000D7A  6E0E               	movwf	AddEntryToJsonObject@JsonObject^0,c
  4578  000D7C  0E02               	movlw	high _txmessage
  4579  000D7E  6E0F               	movwf	(AddEntryToJsonObject@JsonObject+1)^0,c
  4580  000D80  0E2D               	movlw	low STR_16
  4581  000D82  6E10               	movwf	AddEntryToJsonObject@key^0,c
  4582  000D84  0E7D               	movlw	high STR_16
  4583  000D86  6E11               	movwf	(AddEntryToJsonObject@key+1)^0,c
  4584  000D88  0EF9               	movlw	low STR_17
  4585  000D8A  6E12               	movwf	AddEntryToJsonObject@value^0,c
  4586  000D8C  0E7F               	movlw	high STR_17
  4587  000D8E  6E13               	movwf	(AddEntryToJsonObject@value+1)^0,c
  4588  000D90  0E62               	movlw	low _cpos
  4589  000D92  6E14               	movwf	AddEntryToJsonObject@Cpos^0,c
  4590  000D94  0E00               	movlw	high _cpos
  4591  000D96  6E15               	movwf	(AddEntryToJsonObject@Cpos+1)^0,c
  4592  000D98  EC19  F000         	call	_AddEntryToJsonObject	;wreg free
  4593                           
  4594                           ;ApplicationExample.c: 76: AddEntryToJsonObject(txmessage, "Fuel Level (%)", "50", &cpos
      +                          );
  4595  000D9C  0E8C               	movlw	low _txmessage
  4596  000D9E  6E0E               	movwf	AddEntryToJsonObject@JsonObject^0,c
  4597  000DA0  0E02               	movlw	high _txmessage
  4598  000DA2  6E0F               	movwf	(AddEntryToJsonObject@JsonObject+1)^0,c
  4599  000DA4  0EEB               	movlw	low STR_18
  4600  000DA6  6E10               	movwf	AddEntryToJsonObject@key^0,c
  4601  000DA8  0E7D               	movlw	high STR_18
  4602  000DAA  6E11               	movwf	(AddEntryToJsonObject@key+1)^0,c
  4603  000DAC  0EF6               	movlw	low STR_19
  4604  000DAE  6E12               	movwf	AddEntryToJsonObject@value^0,c
  4605  000DB0  0E7F               	movlw	high STR_19
  4606  000DB2  6E13               	movwf	(AddEntryToJsonObject@value+1)^0,c
  4607  000DB4  0E62               	movlw	low _cpos
  4608  000DB6  6E14               	movwf	AddEntryToJsonObject@Cpos^0,c
  4609  000DB8  0E00               	movlw	high _cpos
  4610  000DBA  6E15               	movwf	(AddEntryToJsonObject@Cpos+1)^0,c
  4611  000DBC  EC19  F000         	call	_AddEntryToJsonObject	;wreg free
  4612                           
  4613                           ;ApplicationExample.c: 81: SoftUARTPrint("System Initialization completed.\r\r");
  4614  000DC0  0ECF               	movlw	low STR_20
  4615  000DC2  6E11               	movwf	SoftUARTPrint@str^0,c
  4616  000DC4  0E7A               	movlw	high STR_20
  4617  000DC6  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4618  000DC8  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  4619  000DCC  D007               	goto	l54
  4620  000DCE                     l50:
  4621  000DCE  FFFF               	dw	65535	; assembler added errata NOP
  4622                           
  4623                           ;ApplicationExample.c: 83: };ApplicationExample.c: 84: };ApplicationExample.c: 85: };App
      +                          licationExample.c: 86: };ApplicationExample.c: 87: };ApplicationExample.c: 88: };Applica
      +                          tionExample.c: 89: };ApplicationExample.c: 90: SoftUARTPrint("System Initialization fail
      +                          ed.\r\r");
  4624  000DD0  0E14               	movlw	low STR_21
  4625  000DD2  6E11               	movwf	SoftUARTPrint@str^0,c
  4626  000DD4  0E7B               	movlw	high STR_21
  4627  000DD6  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4628  000DD8  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  4629  000DDC                     l54:
  4630  000DDC  FFFF               	dw	65535	; assembler added errata NOP
  4631  000DDE  0012               	return		;funcret
  4632  000DE0  FFFF               	dw	65535	; errata NOP
  4633  000DE2                     __end_of_SystemInit:
  4634                           	callstack 0
  4635                           
  4636 ;; *************** function _SoftUARTPrint *****************
  4637 ;; Defined at:
  4638 ;;		line 344 in file "Src/SoftwareUART.c"
  4639 ;; Parameters:    Size  Location     Type
  4640 ;;  str             2   16[COMRAM] PTR const unsigned char 
  4641 ;;		 -> STR_27(17), STR_26(3), STR_25(7), SystemTask@msg(20), 
  4642 ;;		 -> STR_22(34), STR_21(32), STR_20(35), STR_11(8), 
  4643 ;;		 -> STR_8(32), STR_7(3), STR_6(31), SystemInit@ip(20), 
  4644 ;;		 -> STR_5(8), STR_2(30), STR_1(21), 
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;		None
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  1    wreg      void 
  4649 ;; Registers used:
  4650 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4656 ;;      Params:         2       0       0       0       0       0       0
  4657 ;;      Locals:         0       0       0       0       0       0       0
  4658 ;;      Temps:          0       0       0       0       0       0       0
  4659 ;;      Totals:         2       0       0       0       0       0       0
  4660 ;;Total ram usage:        2 bytes
  4661 ;; Hardware stack levels used: 1
  4662 ;; Hardware stack levels required when called: 4
  4663 ;; This function calls:
  4664 ;;		_SoftUARTTransmitByte
  4665 ;; This function is called by:
  4666 ;;		_SystemInit
  4667 ;;		_SystemTask
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670                           
  4671                           	psect	text10
  4672  001AF6                     __ptext10:
  4673                           	callstack 0
  4674  001AF6                     _SoftUARTPrint:
  4675                           	callstack 0
  4676  001AF6  FFFF               	dw	65535	; assembler added errata NOP
  4677                           
  4678                           ;SoftwareUART.c: 346: while(*str!='\0'){
  4679                           
  4680                           ;incstack = 0
  4681  001AF8  D016               	goto	l4995
  4682  001AFA                     l4991:
  4683  001AFA  FFFF               	dw	65535	; assembler added errata NOP
  4684                           
  4685                           ;SoftwareUART.c: 347: SoftUARTTransmitByte(*(str++));
  4686  001AFC  C011  FFF6         	movff	SoftUARTPrint@str,tblptrl
  4687  001B00  C012  FFF7         	movff	SoftUARTPrint@str+1,tblptrh
  4688  001B04  6AF8               	clrf	tblptru,c
  4689  001B06  0E05               	movlw	(high __ramtop+-1)
  4690  001B08  64F7               	cpfsgt	tblptrh,c
  4691  001B0A  D004               	bra	u4277
  4692  001B0C  0008               	tblrd		*
  4693  001B0E  FFFF               	dw	65535	; errata NOP
  4694  001B10  50F5               	movf	tablat,w,c
  4695  001B12  D005               	bra	u4270
  4696  001B14                     u4277:
  4697  001B14  CFF6 FFE1          	movff	tblptrl,fsr1l
  4698  001B18  CFF7 FFE2          	movff	tblptrh,fsr1h
  4699  001B1C  50E7               	movf	indf1,w,c
  4700  001B1E                     u4270:
  4701  001B1E  EC64  F00E         	call	_SoftUARTTransmitByte
  4702  001B22  4A11               	infsnz	SoftUARTPrint@str^0,f,c
  4703  001B24  2A12               	incf	(SoftUARTPrint@str+1)^0,f,c
  4704  001B26                     l4995:
  4705  001B26  FFFF               	dw	65535	; assembler added errata NOP
  4706  001B28  C011  FFF6         	movff	SoftUARTPrint@str,tblptrl
  4707  001B2C  C012  FFF7         	movff	SoftUARTPrint@str+1,tblptrh
  4708  001B30  6AF8               	clrf	tblptru,c
  4709  001B32  0E05               	movlw	(high __ramtop+-1)
  4710  001B34  64F7               	cpfsgt	tblptrh,c
  4711  001B36  D004               	bra	u4287
  4712  001B38  0008               	tblrd		*
  4713  001B3A  FFFF               	dw	65535	; errata NOP
  4714  001B3C  50F5               	movf	tablat,w,c
  4715  001B3E  D005               	bra	u4280
  4716  001B40                     u4287:
  4717  001B40  CFF6 FFE1          	movff	tblptrl,fsr1l
  4718  001B44  CFF7 FFE2          	movff	tblptrh,fsr1h
  4719  001B48  50E7               	movf	indf1,w,c
  4720  001B4A                     u4280:
  4721  001B4A  0900               	iorlw	0
  4722  001B4C  B4D8               	btfsc	status,2,c
  4723  001B4E  0012               	return		;funcret
  4724  001B50  FFFF               	dw	65535	; assembler added errata NOP
  4725  001B52  D7D3               	goto	l4991
  4726  001B54  FFFF               	dw	65535	; errata NOP
  4727  001B56                     __end_of_SoftUARTPrint:
  4728                           	callstack 0
  4729                           
  4730 ;; *************** function _SoftUARTTransmitByte *****************
  4731 ;; Defined at:
  4732 ;;		line 301 in file "Src/SoftwareUART.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;  data            1    wreg     unsigned char 
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;  data            1   13[COMRAM] unsigned char 
  4737 ;;  k               1   15[COMRAM] unsigned char 
  4738 ;;  tmp             1   14[COMRAM] unsigned char 
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  1    wreg      void 
  4741 ;; Registers used:
  4742 ;;		wreg, status,2, status,0
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4748 ;;      Params:         0       0       0       0       0       0       0
  4749 ;;      Locals:         3       0       0       0       0       0       0
  4750 ;;      Temps:          0       0       0       0       0       0       0
  4751 ;;      Totals:         3       0       0       0       0       0       0
  4752 ;;Total ram usage:        3 bytes
  4753 ;; Hardware stack levels used: 1
  4754 ;; Hardware stack levels required when called: 3
  4755 ;; This function calls:
  4756 ;;		Nothing
  4757 ;; This function is called by:
  4758 ;;		_SoftUARTPrint
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           	psect	text11
  4763  001CC8                     __ptext11:
  4764                           	callstack 0
  4765  001CC8                     _SoftUARTTransmitByte:
  4766                           	callstack 0
  4767  001CC8  FFFF               	dw	65535	; assembler added errata NOP
  4768                           
  4769                           ;incstack = 0
  4770                           ;SoftUARTTransmitByte@data stored from wreg
  4771  001CCA  6E0E               	movwf	SoftUARTTransmitByte@data^0,c
  4772                           
  4773                           ;SoftwareUART.c: 304: uint8_t tmp;;SoftwareUART.c: 305: if(GIE)
  4774  001CCC  AEF2               	btfss	4082,7,c	;volatile
  4775  001CCE  D002               	goto	l4713
  4776                           
  4777                           ;SoftwareUART.c: 306: tmp = 1;
  4778  001CD0  0E01               	movlw	1
  4779  001CD2  6E0F               	movwf	SoftUARTTransmitByte@tmp^0,c
  4780  001CD4                     l4713:
  4781  001CD4  FFFF               	dw	65535	; assembler added errata NOP
  4782                           
  4783                           ;SoftwareUART.c: 307: (INTCONbits.GIE = 0);
  4784  001CD6  9EF2               	bcf	242,7,c	;volatile
  4785                           
  4786                           ;SoftwareUART.c: 309: IO.Bytes[0x01 + 9] &= (~(1 << 0x3));
  4787  001CD8  968A               	bcf	138,3,c	;volatile
  4788                           
  4789                           ;SoftwareUART.c: 310: _delay((unsigned long)(((1000000/9600))*((16 * 1000000)/4000000.0)
      +                          ));
  4790  001CDA  0E68               	movlw	104
  4791  001CDC                     u4997:
  4792  001CDC  FFFF               	dw	65535	; errata NOP
  4793  001CDE  2EE8               	decfsz	wreg,f,c
  4794  001CE0  D7FD               	bra	u4997
  4795                           
  4796                           ;SoftwareUART.c: 312: for(uint8_t k = 0;k < 8;k++){
  4797  001CE2  0E00               	movlw	0
  4798  001CE4  6E10               	movwf	SoftUARTTransmitByte@k^0,c
  4799  001CE6                     l227:
  4800  001CE6  FFFF               	dw	65535	; assembler added errata NOP
  4801                           
  4802                           ;SoftwareUART.c: 314: if(data & 0x01)
  4803  001CE8  A00E               	btfss	SoftUARTTransmitByte@data^0,0,c
  4804  001CEA  D002               	goto	l4727
  4805                           
  4806                           ;SoftwareUART.c: 315: IO.Bytes[0x01 + 9] |= (1 << 0x3);
  4807  001CEC  868A               	bsf	138,3,c	;volatile
  4808  001CEE  D002               	goto	l4729
  4809  001CF0                     l4727:
  4810  001CF0  FFFF               	dw	65535	; assembler added errata NOP
  4811                           
  4812                           ;SoftwareUART.c: 316: else;SoftwareUART.c: 317: IO.Bytes[0x01 + 9] &= (~(1 << 0x3));
  4813  001CF2  968A               	bcf	138,3,c	;volatile
  4814  001CF4                     l4729:
  4815  001CF4  FFFF               	dw	65535	; assembler added errata NOP
  4816                           
  4817                           ;SoftwareUART.c: 318: data >>= 1;
  4818  001CF6  90D8               	bcf	status,0,c
  4819  001CF8  320E               	rrcf	SoftUARTTransmitByte@data^0,f,c
  4820                           
  4821                           ;SoftwareUART.c: 319: _delay((unsigned long)(((1000000/9600))*((16 * 1000000)/4000000.0)
      +                          ));
  4822  001CFA  0E68               	movlw	104
  4823  001CFC                     u5007:
  4824  001CFC  FFFF               	dw	65535	; errata NOP
  4825  001CFE  2EE8               	decfsz	wreg,f,c
  4826  001D00  D7FD               	bra	u5007
  4827  001D02  2A10               	incf	SoftUARTTransmitByte@k^0,f,c
  4828  001D04  0E07               	movlw	7
  4829  001D06  6410               	cpfsgt	SoftUARTTransmitByte@k^0,c
  4830  001D08  D7EE               	goto	l227
  4831                           
  4832                           ;SoftwareUART.c: 321: };SoftwareUART.c: 323: IO.Bytes[0x01 + 9] |= (1 << 0x3);
  4833  001D0A  868A               	bsf	138,3,c	;volatile
  4834                           
  4835                           ;SoftwareUART.c: 324: _delay((unsigned long)(((1000000/9600))*((16 * 1000000)/4000000.0)
      +                          ));
  4836  001D0C  0E68               	movlw	104
  4837  001D0E                     u5017:
  4838  001D0E  FFFF               	dw	65535	; errata NOP
  4839  001D10  2EE8               	decfsz	wreg,f,c
  4840  001D12  D7FD               	bra	u5017
  4841                           
  4842                           ;SoftwareUART.c: 325: if(tmp)
  4843  001D14  500F               	movf	SoftUARTTransmitByte@tmp^0,w,c
  4844  001D16  A4D8               	btfss	status,2,c
  4845                           
  4846                           ;SoftwareUART.c: 326: (INTCONbits.GIE = 1);
  4847  001D18  8EF2               	bsf	242,7,c	;volatile
  4848  001D1A  0012               	return		;funcret
  4849  001D1C  FFFF               	dw	65535	; errata NOP
  4850  001D1E                     __end_of_SoftUARTTransmitByte:
  4851                           	callstack 0
  4852                           
  4853 ;; *************** function _SoftUARTInit *****************
  4854 ;; Defined at:
  4855 ;;		line 275 in file "Src/SoftwareUART.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;		None
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;		None
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  1    wreg      void 
  4862 ;; Registers used:
  4863 ;;		wreg, status,2, status,0
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4869 ;;      Params:         0       0       0       0       0       0       0
  4870 ;;      Locals:         0       0       0       0       0       0       0
  4871 ;;      Temps:          0       0       0       0       0       0       0
  4872 ;;      Totals:         0       0       0       0       0       0       0
  4873 ;;Total ram usage:        0 bytes
  4874 ;; Hardware stack levels used: 1
  4875 ;; Hardware stack levels required when called: 3
  4876 ;; This function calls:
  4877 ;;		Nothing
  4878 ;; This function is called by:
  4879 ;;		_SystemInit
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           	psect	text12
  4884  002130                     __ptext12:
  4885                           	callstack 0
  4886  002130                     _SoftUARTInit:
  4887                           	callstack 0
  4888  002130  FFFF               	dw	65535	; assembler added errata NOP
  4889                           
  4890                           ;SoftwareUART.c: 277: IO.Bytes[0x01 + 9] |= (1 << 0x3);
  4891                           
  4892                           ;incstack = 0
  4893  002132  868A               	bsf	138,3,c	;volatile
  4894                           
  4895                           ;SoftwareUART.c: 278: IO.Bytes[(uint8_t)0x01 + 18] &= ~(1 << 0x3);
  4896  002134  9693               	bcf	147,3,c	;volatile
  4897                           
  4898                           ;SoftwareUART.c: 281: INTCON2 &= 0xBF;
  4899  002136  9CF1               	bcf	241,6,c	;volatile
  4900                           
  4901                           ;SoftwareUART.c: 282: INTCON |= 0xD0;
  4902  002138  0ED0               	movlw	208
  4903  00213A  12F2               	iorwf	242,f,c	;volatile
  4904                           
  4905                           ;SoftwareUART.c: 283: (INTCONbits.GIE = 1);
  4906  00213C  8EF2               	bsf	242,7,c	;volatile
  4907                           
  4908                           ;SoftwareUART.c: 284: INT0IF = 0;
  4909  00213E  92F2               	bcf	4082,1,c	;volatile
  4910  002140  0012               	return		;funcret
  4911  002142  FFFF               	dw	65535	; errata NOP
  4912  002144                     __end_of_SoftUARTInit:
  4913                           	callstack 0
  4914                           
  4915 ;; *************** function _SIM800xInit *****************
  4916 ;; Defined at:
  4917 ;;		line 264 in file "Src/SIM800x.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;  br              4   59[COMRAM] unsigned long 
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;  str            15   63[COMRAM] unsigned char [15]
  4922 ;;  c               1   80[COMRAM] unsigned char 
  4923 ;;  tmp             2   78[COMRAM] unsigned int 
  4924 ;; Return value:  Size  Location     Type
  4925 ;;                  1    wreg      enum E2115
  4926 ;; Registers used:
  4927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4928 ;; Tracked objects:
  4929 ;;		On entry : 0/0
  4930 ;;		On exit  : 0/0
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4933 ;;      Params:         4       0       0       0       0       0       0
  4934 ;;      Locals:        18       0       0       0       0       0       0
  4935 ;;      Temps:          0       0       0       0       0       0       0
  4936 ;;      Totals:        22       0       0       0       0       0       0
  4937 ;;Total ram usage:       22 bytes
  4938 ;; Hardware stack levels used: 1
  4939 ;; Hardware stack levels required when called: 5
  4940 ;; This function calls:
  4941 ;;		_SIM800xSDMFlush
  4942 ;;		_SIM800xSDMInit
  4943 ;;		_SIM800xSDMPeek
  4944 ;;		_SIM800xSDMPrint
  4945 ;;		_SIM800xSDMReadByte
  4946 ;;		_SIM800xSDMRxAvailable
  4947 ;;		_Wait_ms
  4948 ;;		_sprintf
  4949 ;; This function is called by:
  4950 ;;		_SystemInit
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           	psect	text13
  4955  001110                     __ptext13:
  4956                           	callstack 0
  4957  001110                     _SIM800xInit:
  4958                           	callstack 0
  4959  001110  FFFF               	dw	65535	; assembler added errata NOP
  4960                           
  4961                           ;SIM800x.c: 267: SIM800xSDMInit(br);
  4962                           
  4963                           ;incstack = 0
  4964  001112  C03C  F01B         	movff	SIM800xInit@br,SIM800xSDMInit@br
  4965  001116  C03D  F01C         	movff	SIM800xInit@br+1,SIM800xSDMInit@br+1
  4966  00111A  C03E  F01D         	movff	SIM800xInit@br+2,SIM800xSDMInit@br+2
  4967  00111E  C03F  F01E         	movff	SIM800xInit@br+3,SIM800xSDMInit@br+3
  4968  001122  EC9C  F00C         	call	_SIM800xSDMInit	;wreg free
  4969                           
  4970                           ;SIM800x.c: 313: Wait_ms(5000);
  4971  001126  0E88               	movlw	136
  4972  001128  6E0E               	movwf	Wait_ms@value^0,c
  4973  00112A  0E13               	movlw	19
  4974  00112C  6E0F               	movwf	(Wait_ms@value+1)^0,c
  4975  00112E  0E00               	movlw	0
  4976  001130  6E10               	movwf	(Wait_ms@value+2)^0,c
  4977  001132  0E00               	movlw	0
  4978  001134  6E11               	movwf	(Wait_ms@value+3)^0,c
  4979  001136  ECD6  F00C         	call	_Wait_ms	;wreg free
  4980                           
  4981                           ;SIM800x.c: 316: SIM800xSDMFlush();
  4982  00113A  EC8D  F010         	call	_SIM800xSDMFlush	;wreg free
  4983                           
  4984                           ;SIM800x.c: 317: SIM800xSDMPrint("AT\r");
  4985  00113E  0EE5               	movlw	low STR_28
  4986  001140  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  4987  001142  0E7F               	movlw	high STR_28
  4988  001144  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  4989  001146  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  4990                           
  4991                           ;SIM800x.c: 318: Wait_ms(500);
  4992  00114A  0EF4               	movlw	244
  4993  00114C  6E0E               	movwf	Wait_ms@value^0,c
  4994  00114E  0E01               	movlw	1
  4995  001150  6E0F               	movwf	(Wait_ms@value+1)^0,c
  4996  001152  0E00               	movlw	0
  4997  001154  6E10               	movwf	(Wait_ms@value+2)^0,c
  4998  001156  0E00               	movlw	0
  4999  001158  6E11               	movwf	(Wait_ms@value+3)^0,c
  5000  00115A  ECD6  F00C         	call	_Wait_ms	;wreg free
  5001                           
  5002                           ;SIM800x.c: 319: uint16_t tmp = SIM800xSDMRxAvailable();
  5003  00115E  EC24  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  5004  001162  C013  F04F         	movff	?_SIM800xSDMRxAvailable,SIM800xInit@tmp
  5005  001166  C014  F050         	movff	?_SIM800xSDMRxAvailable+1,SIM800xInit@tmp+1
  5006                           
  5007                           ;SIM800x.c: 320: if(tmp > 5)
  5008  00116A  5050               	movf	(SIM800xInit@tmp+1)^0,w,c
  5009  00116C  E108               	bnz	l4947
  5010  00116E  0E06               	movlw	6
  5011  001170  5C4F               	subwf	SIM800xInit@tmp^0,w,c
  5012  001172  B0D8               	btfsc	status,0,c
  5013  001174  D004               	goto	l4947
  5014  001176  D066               	goto	l4981
  5015  001178                     l4945:
  5016  001178  FFFF               	dw	65535	; assembler added errata NOP
  5017                           
  5018                           ;SIM800x.c: 323: {;SIM800x.c: 324: SIM800xSDMReadByte();
  5019  00117A  EC33  F00F         	call	_SIM800xSDMReadByte	;wreg free
  5020  00117E                     l4947:
  5021  00117E  FFFF               	dw	65535	; assembler added errata NOP
  5022  001180  EC24  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  5023  001184  0E06               	movlw	6
  5024  001186  1813               	xorwf	?_SIM800xSDMRxAvailable^0,w,c
  5025  001188  1014               	iorwf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  5026  00118A  A4D8               	btfss	status,2,c
  5027  00118C  D7F5               	goto	l4945
  5028                           
  5029                           ;SIM800x.c: 325: };SIM800x.c: 328: if(SIM800xSDMPeek(2) == 'O')
  5030  00118E  0E02               	movlw	2
  5031  001190  ECCA  F00F         	call	_SIM800xSDMPeek
  5032  001194  0A4F               	xorlw	79
  5033  001196  A4D8               	btfss	status,2,c
  5034  001198  D055               	goto	l4981
  5035                           
  5036                           ;SIM800x.c: 329: {;SIM800x.c: 330: SIM800xSDMPrint("ATE0\r");
  5037  00119A  0ECA               	movlw	low STR_29
  5038  00119C  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  5039  00119E  0E7F               	movlw	high STR_29
  5040  0011A0  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  5041  0011A2  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  5042                           
  5043                           ;SIM800x.c: 331: Wait_ms(500);
  5044  0011A6  0EF4               	movlw	244
  5045  0011A8  6E0E               	movwf	Wait_ms@value^0,c
  5046  0011AA  0E01               	movlw	1
  5047  0011AC  6E0F               	movwf	(Wait_ms@value+1)^0,c
  5048  0011AE  0E00               	movlw	0
  5049  0011B0  6E10               	movwf	(Wait_ms@value+2)^0,c
  5050  0011B2  0E00               	movlw	0
  5051  0011B4  6E11               	movwf	(Wait_ms@value+3)^0,c
  5052  0011B6  ECD6  F00C         	call	_Wait_ms	;wreg free
  5053                           
  5054                           ;SIM800x.c: 333: char str[15];;SIM800x.c: 334: sprintf(str, "AT+IPR=%ld\r", br);
  5055  0011BA  0E40               	movlw	low SIM800xInit@str
  5056  0011BC  6E24               	movwf	sprintf@sp^0,c
  5057  0011BE  0E00               	movlw	high SIM800xInit@str
  5058  0011C0  6E25               	movwf	(sprintf@sp+1)^0,c
  5059  0011C2  0E7A               	movlw	low STR_30
  5060  0011C4  6E26               	movwf	sprintf@f^0,c
  5061  0011C6  0E7E               	movlw	high STR_30
  5062  0011C8  6E27               	movwf	(sprintf@f+1)^0,c
  5063  0011CA  C03C  F028         	movff	SIM800xInit@br,?_sprintf+4
  5064  0011CE  C03D  F029         	movff	SIM800xInit@br+1,?_sprintf+5
  5065  0011D2  C03E  F02A         	movff	SIM800xInit@br+2,?_sprintf+6
  5066  0011D6  C03F  F02B         	movff	SIM800xInit@br+3,?_sprintf+7
  5067  0011DA  ECCD  F002         	call	_sprintf	;wreg free
  5068                           
  5069                           ;SIM800x.c: 335: SIM800xSDMFlush();
  5070  0011DE  EC8D  F010         	call	_SIM800xSDMFlush	;wreg free
  5071                           
  5072                           ;SIM800x.c: 336: SIM800xSDMPrint(str);
  5073  0011E2  0E40               	movlw	low SIM800xInit@str
  5074  0011E4  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  5075  0011E6  0E00               	movlw	high SIM800xInit@str
  5076  0011E8  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  5077  0011EA  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  5078                           
  5079                           ;SIM800x.c: 337: Wait_ms(500);
  5080  0011EE  0EF4               	movlw	244
  5081  0011F0  6E0E               	movwf	Wait_ms@value^0,c
  5082  0011F2  0E01               	movlw	1
  5083  0011F4  6E0F               	movwf	(Wait_ms@value+1)^0,c
  5084  0011F6  0E00               	movlw	0
  5085  0011F8  6E10               	movwf	(Wait_ms@value+2)^0,c
  5086  0011FA  0E00               	movlw	0
  5087  0011FC  6E11               	movwf	(Wait_ms@value+3)^0,c
  5088  0011FE  ECD6  F00C         	call	_Wait_ms	;wreg free
  5089                           
  5090                           ;SIM800x.c: 338: char c = SIM800xSDMPeek(2);
  5091  001202  0E02               	movlw	2
  5092  001204  ECCA  F00F         	call	_SIM800xSDMPeek
  5093  001208  6E51               	movwf	SIM800xInit@c^0,c
  5094                           
  5095                           ;SIM800x.c: 339: if(c == 'O')
  5096  00120A  0E4F               	movlw	79
  5097  00120C  1851               	xorwf	SIM800xInit@c^0,w,c
  5098  00120E  A4D8               	btfss	status,2,c
  5099  001210  D012               	goto	l4975
  5100                           
  5101                           ;SIM800x.c: 340: {;SIM800x.c: 341: SIM800xSDMPrint("AT&W\r");
  5102  001212  0ED0               	movlw	low STR_31
  5103  001214  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  5104  001216  0E7F               	movlw	high STR_31
  5105  001218  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  5106  00121A  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  5107                           
  5108                           ;SIM800x.c: 342: Wait_ms(100);
  5109  00121E  0E64               	movlw	100
  5110  001220  6E0E               	movwf	Wait_ms@value^0,c
  5111  001222  0E00               	movlw	0
  5112  001224  6E0F               	movwf	(Wait_ms@value+1)^0,c
  5113  001226  0E00               	movlw	0
  5114  001228  6E10               	movwf	(Wait_ms@value+2)^0,c
  5115  00122A  0E00               	movlw	0
  5116  00122C  6E11               	movwf	(Wait_ms@value+3)^0,c
  5117  00122E  ECD6  F00C         	call	_Wait_ms	;wreg free
  5118                           
  5119                           ;SIM800x.c: 343: return SIM800X_OK;
  5120  001232  0E00               	movlw	0
  5121  001234  D009               	goto	l407
  5122  001236                     l4975:
  5123  001236  FFFF               	dw	65535	; assembler added errata NOP
  5124                           
  5125                           ;SIM800x.c: 344: };SIM800x.c: 346: if(c == 'E')
  5126  001238  0E45               	movlw	69
  5127  00123A  1851               	xorwf	SIM800xInit@c^0,w,c
  5128  00123C  A4D8               	btfss	status,2,c
  5129  00123E  D002               	goto	l4981
  5130                           
  5131                           ;SIM800x.c: 347: return SIM800X_BR_ERROR;
  5132  001240  0E04               	movlw	4
  5133  001242  D002               	goto	l407
  5134  001244                     l4981:
  5135  001244  FFFF               	dw	65535	; assembler added errata NOP
  5136                           
  5137                           ;SIM800x.c: 349: return SIM800X_TIME_OUT;
  5138  001246  0E05               	movlw	5
  5139  001248                     l407:
  5140  001248  FFFF               	dw	65535	; assembler added errata NOP
  5141  00124A  0012               	return		;funcret
  5142  00124C  FFFF               	dw	65535	; errata NOP
  5143  00124E                     __end_of_SIM800xInit:
  5144                           	callstack 0
  5145                           
  5146 ;; *************** function _sprintf *****************
  5147 ;; Defined at:
  5148 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;  sp              2   35[COMRAM] PTR unsigned char 
  5151 ;;		 -> SIM800xHTTPRead@str(30), SIM800xHTTPAction@str(30), SIM800xHTTPInputData@str(30), SIM800xHTTPSetTimeout@str(30),
      + 
  5152 ;;		 -> SIM800xHTTPSetBreakEnd@str(30), SIM800xHTTPSetBreak@str(30), SIM800xHTTPSetRedir@str(25), SIM800xHTTPSetPort@str
      +(30), 
  5153 ;;		 -> SIM800xGPRSGetAddress@str(40), SIM800xGPRSSetDataMode@str(20), SIM800xGPRSSetQoSRequest@str(40), SIM800xGPRSSetQ
      +oSMin@str(40), 
  5154 ;;		 -> SIM800xIPGetParameters@str(30), SIM800xIPSetRate@str(8), SIM800xSetBaudRate@str(15), SIM800xInit@str(15), 
  5155 ;;		 -> SystemTask@msg(20), 
  5156 ;;  f               2   37[COMRAM] PTR const unsigned char 
  5157 ;;		 -> STR_100(21), STR_99(18), STR_98(21), STR_95(26), 
  5158 ;;		 -> STR_94(28), STR_93(25), STR_92(24), STR_91(26), 
  5159 ;;		 -> STR_71(15), STR_70(20), STR_66(29), STR_65(29), 
  5160 ;;		 -> STR_59(15), STR_53(4), STR_33(12), STR_30(12), 
  5161 ;;		 -> STR_24(27), STR_23(24), 
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;  val             4   51[COMRAM] unsigned long 
  5164 ;;  tmpval          4    0        struct .
  5165 ;;  cp              3    0        PTR const unsigned char 
  5166 ;;  ap              2   56[COMRAM] PTR void [1]
  5167 ;;		 -> ?_sprintf(2), 
  5168 ;;  prec            2   49[COMRAM] int 
  5169 ;;  len             2    0        unsigned int 
  5170 ;;  c               1   58[COMRAM] unsigned char 
  5171 ;;  flag            1   55[COMRAM] unsigned char 
  5172 ;; Return value:  Size  Location     Type
  5173 ;;                  2   35[COMRAM] int 
  5174 ;; Registers used:
  5175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5176 ;; Tracked objects:
  5177 ;;		On entry : 0/0
  5178 ;;		On exit  : 0/0
  5179 ;;		Unchanged: 0/0
  5180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5181 ;;      Params:        12       0       0       0       0       0       0
  5182 ;;      Locals:        10       0       0       0       0       0       0
  5183 ;;      Temps:          2       0       0       0       0       0       0
  5184 ;;      Totals:        24       0       0       0       0       0       0
  5185 ;;Total ram usage:       24 bytes
  5186 ;; Hardware stack levels used: 1
  5187 ;; Hardware stack levels required when called: 4
  5188 ;; This function calls:
  5189 ;;		___lldiv
  5190 ;;		___llmod
  5191 ;; This function is called by:
  5192 ;;		_SystemTask
  5193 ;;		_SIM800xInit
  5194 ;;		_SIM800xHTTPInputData
  5195 ;;		_SIM800xHTTPAction
  5196 ;;		_SIM800xHTTPRead
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           	psect	text14
  5201  00059A                     __ptext14:
  5202                           	callstack 0
  5203  00059A                     _sprintf:
  5204                           	callstack 0
  5205  00059A  FFFF               	dw	65535	; assembler added errata NOP
  5206                           
  5207                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 517: int prec;;doprnt.c: 52
      +                          5: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;doprnt.c:
      +                           542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long val;;doprnt.c:
      +                           546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_start();
  5208                           
  5209                           ;incstack = 0
  5210  00059C  0E28               	movlw	low (?_sprintf+4)
  5211  00059E  6E39               	movwf	sprintf@ap^0,c
  5212  0005A0  0E00               	movlw	high (?_sprintf+4)
  5213  0005A2  6E3A               	movwf	(sprintf@ap+1)^0,c
  5214                           
  5215                           ;doprnt.c: 553: while((c = *f++)) {
  5216  0005A4  D114               	goto	u3840
  5217  0005A6                     l4623:
  5218  0005A6  FFFF               	dw	65535	; assembler added errata NOP
  5219                           
  5220                           ;doprnt.c: 555: if(c != '%')
  5221  0005A8  0E25               	movlw	37
  5222  0005AA  183B               	xorwf	sprintf@c^0,w,c
  5223  0005AC  B4D8               	btfsc	status,2,c
  5224  0005AE  D009               	goto	l4629
  5225                           
  5226                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  5227  0005B0  C024  FFD9         	movff	sprintf@sp,fsr2l
  5228  0005B4  C025  FFDA         	movff	sprintf@sp+1,fsr2h
  5229  0005B8  C03B  FFDF         	movff	sprintf@c,indf2
  5230  0005BC  4A24               	infsnz	sprintf@sp^0,f,c
  5231  0005BE  2A25               	incf	(sprintf@sp+1)^0,f,c
  5232                           
  5233                           ;doprnt.c: 559: continue;
  5234  0005C0  D106               	goto	u3840
  5235  0005C2                     l4629:
  5236  0005C2  FFFF               	dw	65535	; assembler added errata NOP
  5237                           
  5238                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  5239  0005C4  0E00               	movlw	0
  5240  0005C6  6E38               	movwf	sprintf@flag^0,c
  5241  0005C8  D006               	goto	l4637
  5242  0005CA                     l4631:
  5243  0005CA  FFFF               	dw	65535	; assembler added errata NOP
  5244                           
  5245                           ;doprnt.c: 669: flag |= 0x10;
  5246  0005CC  8838               	bsf	sprintf@flag^0,4,c
  5247                           
  5248                           ;doprnt.c: 670: goto loop;
  5249  0005CE  D003               	goto	l4637
  5250  0005D0                     l4633:
  5251  0005D0  FFFF               	dw	65535	; assembler added errata NOP
  5252                           
  5253                           ;doprnt.c: 844: flag |= 0x40;
  5254  0005D2  8C38               	bsf	sprintf@flag^0,6,c
  5255                           
  5256                           ;doprnt.c: 845: break;
  5257  0005D4  D01C               	goto	l1193
  5258  0005D6                     l4637:
  5259  0005D6  FFFF               	dw	65535	; assembler added errata NOP
  5260  0005D8  C026  FFF6         	movff	sprintf@f,tblptrl
  5261  0005DC  C027  FFF7         	movff	sprintf@f+1,tblptrh
  5262  0005E0  4A26               	infsnz	sprintf@f^0,f,c
  5263  0005E2  2A27               	incf	(sprintf@f+1)^0,f,c
  5264  0005E4                     	if	0	;tblptru may be non-zero
  5265  0005E4                     	endif
  5266  0005E4                     	if	0	;tblptru may be non-zero
  5267  0005E4                     	endif
  5268  0005E4  0008               	tblrd		*
  5269  0005E6  FFFF               	dw	65535	; errata NOP
  5270  0005E8  CFF5 F03B          	movff	tablat,sprintf@c
  5271  0005EC  503B               	movf	sprintf@c^0,w,c
  5272                           
  5273                           ; Switch size 1, requested type "simple"
  5274                           ; Number of cases is 5, Range of values is 0 to 117
  5275                           ; switch strategies available:
  5276                           ; Name         Instructions Cycles
  5277                           ; simple_byte           16     9 (average)
  5278                           ;	Chosen strategy is simple_byte
  5279  0005EE  0A00               	xorlw	0	; case 0
  5280  0005F0  B4D8               	btfsc	status,2,c
  5281  0005F2  D0FB               	goto	u3850
  5282  0005F4  0A64               	xorlw	100	; case 100
  5283  0005F6  B4D8               	btfsc	status,2,c
  5284  0005F8  D00A               	goto	l1193
  5285  0005FA  0A0D               	xorlw	13	; case 105
  5286  0005FC  B4D8               	btfsc	status,2,c
  5287  0005FE  D007               	goto	l1193
  5288  000600  0A05               	xorlw	5	; case 108
  5289  000602  B4D8               	btfsc	status,2,c
  5290  000604  D7E2               	goto	l4631
  5291  000606  0A19               	xorlw	25	; case 117
  5292  000608  B4D8               	btfsc	status,2,c
  5293  00060A  D7E2               	goto	l4633
  5294  00060C  D0E0               	goto	u3840
  5295  00060E                     l1193:
  5296  00060E  FFFF               	dw	65535	; assembler added errata NOP
  5297                           
  5298                           ;doprnt.c: 1277: if((flag & 0x40) == 0x00)
  5299  000610  BC38               	btfsc	sprintf@flag^0,6,c
  5300  000612  D030               	goto	l1196
  5301                           
  5302                           ;doprnt.c: 1279: {;doprnt.c: 1281: if(flag & 0x10)
  5303  000614  A838               	btfss	sprintf@flag^0,4,c
  5304  000616  D00E               	goto	l4645
  5305                           
  5306                           ;doprnt.c: 1282: val = (unsigned long)(*(long *)__va_arg((*(long **)ap), (long)0));
  5307  000618  C039  FFD9         	movff	sprintf@ap,fsr2l
  5308  00061C  C03A  FFDA         	movff	sprintf@ap+1,fsr2h
  5309  000620  CFDE F034          	movff	postinc2,sprintf@val
  5310  000624  CFDE F035          	movff	postinc2,sprintf@val+1
  5311  000628  CFDE F036          	movff	postinc2,sprintf@val+2
  5312  00062C  CFDE F037          	movff	postinc2,sprintf@val+3
  5313  000630  0E04               	movlw	4
  5314  000632  D00F               	goto	L1
  5315  000634                     l4645:
  5316  000634  FFFF               	dw	65535	; assembler added errata NOP
  5317                           
  5318                           ;doprnt.c: 1283: else;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)a
      +                          p), (int)0));
  5319  000636  C039  FFD9         	movff	sprintf@ap,fsr2l
  5320  00063A  C03A  FFDA         	movff	sprintf@ap+1,fsr2h
  5321  00063E  CFDE F034          	movff	postinc2,sprintf@val
  5322  000642  CFDD F035          	movff	postdec2,sprintf@val+1
  5323  000646  0E00               	movlw	0
  5324  000648  BE35               	btfsc	(sprintf@val+1)^0,7,c
  5325  00064A  0EFF               	movlw	-1
  5326  00064C  6E36               	movwf	(sprintf@val+2)^0,c
  5327  00064E  6E37               	movwf	(sprintf@val+3)^0,c
  5328  000650  0E02               	movlw	2
  5329  000652                     L1:
  5330  000652  FFFF               	dw	65535	; assembler added errata NOP
  5331  000654  2639               	addwf	sprintf@ap^0,f,c
  5332  000656  0E00               	movlw	0
  5333  000658  223A               	addwfc	(sprintf@ap+1)^0,f,c
  5334                           
  5335                           ;doprnt.c: 1287: if((long)val < 0) {
  5336  00065A  AE37               	btfss	(sprintf@val+3)^0,7,c
  5337  00065C  D030               	goto	l4663
  5338                           
  5339                           ;doprnt.c: 1288: flag |= 0x03;
  5340  00065E  0E03               	movlw	3
  5341  000660  1238               	iorwf	sprintf@flag^0,f,c
  5342                           
  5343                           ;doprnt.c: 1289: val = -val;
  5344  000662  1E37               	comf	(sprintf@val+3)^0,f,c
  5345  000664  1E36               	comf	(sprintf@val+2)^0,f,c
  5346  000666  1E35               	comf	(sprintf@val+1)^0,f,c
  5347  000668  6C34               	negf	sprintf@val^0,c
  5348  00066A  0E00               	movlw	0
  5349  00066C  2235               	addwfc	(sprintf@val+1)^0,f,c
  5350  00066E  2236               	addwfc	(sprintf@val+2)^0,f,c
  5351  000670  2237               	addwfc	(sprintf@val+3)^0,f,c
  5352  000672  D025               	goto	l4663
  5353  000674                     l1196:
  5354  000674  FFFF               	dw	65535	; assembler added errata NOP
  5355                           
  5356                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
  5357  000676  A838               	btfss	sprintf@flag^0,4,c
  5358  000678  D00E               	goto	l4659
  5359                           
  5360                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  5361  00067A  C039  FFD9         	movff	sprintf@ap,fsr2l
  5362  00067E  C03A  FFDA         	movff	sprintf@ap+1,fsr2h
  5363  000682  CFDE F034          	movff	postinc2,sprintf@val
  5364  000686  CFDE F035          	movff	postinc2,sprintf@val+1
  5365  00068A  CFDE F036          	movff	postinc2,sprintf@val+2
  5366  00068E  CFDE F037          	movff	postinc2,sprintf@val+3
  5367  000692  0E04               	movlw	4
  5368  000694  D010               	goto	L2
  5369  000696                     l4659:
  5370  000696  FFFF               	dw	65535	; assembler added errata NOP
  5371                           
  5372                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  5373  000698  C039  FFD9         	movff	sprintf@ap,fsr2l
  5374  00069C  C03A  FFDA         	movff	sprintf@ap+1,fsr2h
  5375  0006A0  CFDE F030          	movff	postinc2,??_sprintf
  5376  0006A4  CFDD F031          	movff	postdec2,??_sprintf+1
  5377  0006A8  C030  F034         	movff	??_sprintf,sprintf@val
  5378  0006AC  C031  F035         	movff	??_sprintf+1,sprintf@val+1
  5379  0006B0  6A36               	clrf	(sprintf@val+2)^0,c
  5380  0006B2  6A37               	clrf	(sprintf@val+3)^0,c
  5381  0006B4  0E02               	movlw	2
  5382  0006B6                     L2:
  5383  0006B6  FFFF               	dw	65535	; assembler added errata NOP
  5384  0006B8  2639               	addwf	sprintf@ap^0,f,c
  5385  0006BA  0E00               	movlw	0
  5386  0006BC  223A               	addwfc	(sprintf@ap+1)^0,f,c
  5387  0006BE                     l4663:
  5388  0006BE  FFFF               	dw	65535	; assembler added errata NOP
  5389                           
  5390                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  5391  0006C0  0E01               	movlw	1
  5392  0006C2  6E3B               	movwf	sprintf@c^0,c
  5393  0006C4                     l4669:
  5394  0006C4  FFFF               	dw	65535	; assembler added errata NOP
  5395                           
  5396                           ;doprnt.c: 1332: if(val < dpowers[c])
  5397  0006C6  503B               	movf	sprintf@c^0,w,c
  5398  0006C8  0D04               	mullw	4
  5399  0006CA  0E8F               	movlw	low _dpowers
  5400  0006CC  24F3               	addwf	243,w,c
  5401  0006CE  6EF6               	movwf	tblptrl,c
  5402  0006D0  0E79               	movlw	high _dpowers
  5403  0006D2  20F4               	addwfc	244,w,c
  5404  0006D4  6EF7               	movwf	tblptrh,c
  5405  0006D6                     	if	0	;There are less than 3 active tblptr bytes
  5406  0006D6                     	endif
  5407  0006D6  0009               	tblrd		*+
  5408  0006D8  FFFF               	dw	65535	; errata NOP
  5409  0006DA  50F5               	movf	tablat,w,c
  5410  0006DC  5C34               	subwf	sprintf@val^0,w,c
  5411  0006DE  0009               	tblrd		*+
  5412  0006E0  FFFF               	dw	65535	; errata NOP
  5413  0006E2  50F5               	movf	tablat,w,c
  5414  0006E4  5835               	subwfb	(sprintf@val+1)^0,w,c
  5415  0006E6  0009               	tblrd		*+
  5416  0006E8  FFFF               	dw	65535	; errata NOP
  5417  0006EA  50F5               	movf	tablat,w,c
  5418  0006EC  5836               	subwfb	(sprintf@val+2)^0,w,c
  5419  0006EE  0009               	tblrd		*+
  5420  0006F0  FFFF               	dw	65535	; errata NOP
  5421  0006F2  50F5               	movf	tablat,w,c
  5422  0006F4  5837               	subwfb	(sprintf@val+3)^0,w,c
  5423  0006F6  A0D8               	btfss	status,0,c
  5424  0006F8  D005               	goto	u3820
  5425  0006FA  2A3B               	incf	sprintf@c^0,f,c
  5426  0006FC  0E0A               	movlw	10
  5427  0006FE  183B               	xorwf	sprintf@c^0,w,c
  5428  000700  A4D8               	btfss	status,2,c
  5429  000702  D7E0               	goto	l4669
  5430  000704                     u3820:
  5431  000704  FFFF               	dw	65535	; assembler added errata NOP
  5432                           
  5433                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  5434  000706  C038  F030         	movff	sprintf@flag,??_sprintf
  5435  00070A  0E03               	movlw	3
  5436  00070C  1630               	andwf	??_sprintf^0,f,c
  5437  00070E  B4D8               	btfsc	status,2,c
  5438  000710  D008               	goto	l4683
  5439                           
  5440                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  5441  000712  C024  FFD9         	movff	sprintf@sp,fsr2l
  5442  000716  C025  FFDA         	movff	sprintf@sp+1,fsr2h
  5443  00071A  0E2D               	movlw	45
  5444  00071C  6EDF               	movwf	indf2,c
  5445  00071E  4A24               	infsnz	sprintf@sp^0,f,c
  5446  000720  2A25               	incf	(sprintf@sp+1)^0,f,c
  5447  000722                     l4683:
  5448  000722  FFFF               	dw	65535	; assembler added errata NOP
  5449                           
  5450                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  5451  000724  C03B  F032         	movff	sprintf@c,sprintf@prec
  5452  000728  6A33               	clrf	(sprintf@prec+1)^0,c
  5453                           
  5454                           ;doprnt.c: 1500: while(prec--) {
  5455  00072A  D048               	goto	l4691
  5456  00072C                     l4685:
  5457  00072C  FFFF               	dw	65535	; assembler added errata NOP
  5458                           
  5459                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  5460  00072E  C032  F030         	movff	sprintf@prec,??_sprintf
  5461  000732  C033  F031         	movff	sprintf@prec+1,??_sprintf+1
  5462  000736  90D8               	bcf	status,0,c
  5463  000738  3630               	rlcf	??_sprintf^0,f,c
  5464  00073A  3631               	rlcf	(??_sprintf+1)^0,f,c
  5465  00073C  90D8               	bcf	status,0,c
  5466  00073E  3630               	rlcf	??_sprintf^0,f,c
  5467  000740  3631               	rlcf	(??_sprintf+1)^0,f,c
  5468  000742  0E8F               	movlw	low _dpowers
  5469  000744  2430               	addwf	??_sprintf^0,w,c
  5470  000746  6EF6               	movwf	tblptrl,c
  5471  000748  0E79               	movlw	high _dpowers
  5472  00074A  2031               	addwfc	(??_sprintf+1)^0,w,c
  5473  00074C  6EF7               	movwf	tblptrh,c
  5474  00074E                     	if	0	;There are less than 3 active tblptr bytes
  5475  00074E                     	endif
  5476  00074E  0009               	tblrd		*+
  5477  000750  FFFF               	dw	65535	; errata NOP
  5478  000752  CFF5 F012          	movff	tablat,___lldiv@divisor
  5479  000756  0009               	tblrd		*+
  5480  000758  FFFF               	dw	65535	; errata NOP
  5481  00075A  CFF5 F013          	movff	tablat,___lldiv@divisor+1
  5482  00075E  0009               	tblrd		*+
  5483  000760  FFFF               	dw	65535	; errata NOP
  5484  000762  CFF5 F014          	movff	tablat,___lldiv@divisor+2
  5485  000766  000A               	tblrd		*-
  5486  000768  FFFF               	dw	65535	; errata NOP
  5487  00076A  CFF5 F015          	movff	tablat,___lldiv@divisor+3
  5488  00076E  C034  F00E         	movff	sprintf@val,___lldiv@dividend
  5489  000772  C035  F00F         	movff	sprintf@val+1,___lldiv@dividend+1
  5490  000776  C036  F010         	movff	sprintf@val+2,___lldiv@dividend+2
  5491  00077A  C037  F011         	movff	sprintf@val+3,___lldiv@dividend+3
  5492  00077E  EC12  F00B         	call	___lldiv	;wreg free
  5493  000782  C00E  F01B         	movff	?___lldiv,___llmod@dividend
  5494  000786  C00F  F01C         	movff	?___lldiv+1,___llmod@dividend+1
  5495  00078A  C010  F01D         	movff	?___lldiv+2,___llmod@dividend+2
  5496  00078E  C011  F01E         	movff	?___lldiv+3,___llmod@dividend+3
  5497  000792  0E0A               	movlw	10
  5498  000794  6E1F               	movwf	___llmod@divisor^0,c
  5499  000796  0E00               	movlw	0
  5500  000798  6E20               	movwf	(___llmod@divisor+1)^0,c
  5501  00079A  0E00               	movlw	0
  5502  00079C  6E21               	movwf	(___llmod@divisor+2)^0,c
  5503  00079E  0E00               	movlw	0
  5504  0007A0  6E22               	movwf	(___llmod@divisor+3)^0,c
  5505  0007A2  EC62  F00C         	call	___llmod	;wreg free
  5506  0007A6  501B               	movf	?___llmod^0,w,c
  5507  0007A8  0F30               	addlw	48
  5508  0007AA  6E3B               	movwf	sprintf@c^0,c
  5509                           
  5510                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  5511  0007AC  C024  FFD9         	movff	sprintf@sp,fsr2l
  5512  0007B0  C025  FFDA         	movff	sprintf@sp+1,fsr2h
  5513  0007B4  C03B  FFDF         	movff	sprintf@c,indf2
  5514  0007B8  4A24               	infsnz	sprintf@sp^0,f,c
  5515  0007BA  2A25               	incf	(sprintf@sp+1)^0,f,c
  5516  0007BC                     l4691:
  5517  0007BC  FFFF               	dw	65535	; assembler added errata NOP
  5518  0007BE  0632               	decf	sprintf@prec^0,f,c
  5519  0007C0  A0D8               	btfss	status,0,c
  5520  0007C2  0633               	decf	(sprintf@prec+1)^0,f,c
  5521  0007C4  2832               	incf	sprintf@prec^0,w,c
  5522  0007C6  E1B2               	bnz	l4685
  5523  0007C8  2833               	incf	(sprintf@prec+1)^0,w,c
  5524  0007CA  A4D8               	btfss	status,2,c
  5525  0007CC  D7AF               	goto	l4685
  5526  0007CE                     u3840:
  5527  0007CE  FFFF               	dw	65535	; assembler added errata NOP
  5528  0007D0  C026  FFF6         	movff	sprintf@f,tblptrl
  5529  0007D4  C027  FFF7         	movff	sprintf@f+1,tblptrh
  5530  0007D8  4A26               	infsnz	sprintf@f^0,f,c
  5531  0007DA  2A27               	incf	(sprintf@f+1)^0,f,c
  5532  0007DC                     	if	0	;tblptru may be non-zero
  5533  0007DC                     	endif
  5534  0007DC                     	if	0	;tblptru may be non-zero
  5535  0007DC                     	endif
  5536  0007DC  0008               	tblrd		*
  5537  0007DE  FFFF               	dw	65535	; errata NOP
  5538  0007E0  CFF5 F03B          	movff	tablat,sprintf@c
  5539  0007E4  503B               	movf	sprintf@c^0,w,c
  5540  0007E6  A4D8               	btfss	status,2,c
  5541  0007E8  D6DE               	goto	l4623
  5542  0007EA                     u3850:
  5543  0007EA  FFFF               	dw	65535	; assembler added errata NOP
  5544                           
  5545                           ;doprnt.c: 1564: *sp = 0;
  5546  0007EC  C024  FFD9         	movff	sprintf@sp,fsr2l
  5547  0007F0  C025  FFDA         	movff	sprintf@sp+1,fsr2h
  5548  0007F4  0E00               	movlw	0
  5549  0007F6  6EDF               	movwf	indf2,c
  5550  0007F8  0012               	return		;funcret
  5551  0007FA  FFFF               	dw	65535	; errata NOP
  5552  0007FC                     __end_of_sprintf:
  5553                           	callstack 0
  5554                           
  5555 ;; *************** function ___llmod *****************
  5556 ;; Defined at:
  5557 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\llmod.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;  dividend        4   26[COMRAM] unsigned long 
  5560 ;;  divisor         4   30[COMRAM] unsigned long 
  5561 ;; Auto vars:     Size  Location     Type
  5562 ;;  counter         1   34[COMRAM] unsigned char 
  5563 ;; Return value:  Size  Location     Type
  5564 ;;                  4   26[COMRAM] unsigned long 
  5565 ;; Registers used:
  5566 ;;		wreg, status,2, status,0
  5567 ;; Tracked objects:
  5568 ;;		On entry : 0/0
  5569 ;;		On exit  : 0/0
  5570 ;;		Unchanged: 0/0
  5571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5572 ;;      Params:         8       0       0       0       0       0       0
  5573 ;;      Locals:         1       0       0       0       0       0       0
  5574 ;;      Temps:          0       0       0       0       0       0       0
  5575 ;;      Totals:         9       0       0       0       0       0       0
  5576 ;;Total ram usage:        9 bytes
  5577 ;; Hardware stack levels used: 1
  5578 ;; Hardware stack levels required when called: 3
  5579 ;; This function calls:
  5580 ;;		Nothing
  5581 ;; This function is called by:
  5582 ;;		_sprintf
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           	psect	text15
  5587  0018C4                     __ptext15:
  5588                           	callstack 0
  5589  0018C4                     ___llmod:
  5590                           	callstack 0
  5591  0018C4  FFFF               	dw	65535	; assembler added errata NOP
  5592                           
  5593                           ;incstack = 0
  5594  0018C6  501F               	movf	___llmod@divisor^0,w,c
  5595  0018C8  1020               	iorwf	(___llmod@divisor+1)^0,w,c
  5596  0018CA  1021               	iorwf	(___llmod@divisor+2)^0,w,c
  5597  0018CC  1022               	iorwf	(___llmod@divisor+3)^0,w,c
  5598  0018CE  B4D8               	btfsc	status,2,c
  5599  0018D0  D028               	goto	l1622
  5600  0018D2  0E01               	movlw	1
  5601  0018D4  6E23               	movwf	___llmod@counter^0,c
  5602  0018D6  D007               	goto	l4611
  5603  0018D8                     l4609:
  5604  0018D8  FFFF               	dw	65535	; assembler added errata NOP
  5605  0018DA  90D8               	bcf	status,0,c
  5606  0018DC  361F               	rlcf	___llmod@divisor^0,f,c
  5607  0018DE  3620               	rlcf	(___llmod@divisor+1)^0,f,c
  5608  0018E0  3621               	rlcf	(___llmod@divisor+2)^0,f,c
  5609  0018E2  3622               	rlcf	(___llmod@divisor+3)^0,f,c
  5610  0018E4  2A23               	incf	___llmod@counter^0,f,c
  5611  0018E6                     l4611:
  5612  0018E6  FFFF               	dw	65535	; assembler added errata NOP
  5613  0018E8  AE22               	btfss	(___llmod@divisor+3)^0,7,c
  5614  0018EA  D7F6               	goto	l4609
  5615  0018EC                     u3740:
  5616  0018EC  FFFF               	dw	65535	; assembler added errata NOP
  5617  0018EE  501F               	movf	___llmod@divisor^0,w,c
  5618  0018F0  5C1B               	subwf	___llmod@dividend^0,w,c
  5619  0018F2  5020               	movf	(___llmod@divisor+1)^0,w,c
  5620  0018F4  581C               	subwfb	(___llmod@dividend+1)^0,w,c
  5621  0018F6  5021               	movf	(___llmod@divisor+2)^0,w,c
  5622  0018F8  581D               	subwfb	(___llmod@dividend+2)^0,w,c
  5623  0018FA  5022               	movf	(___llmod@divisor+3)^0,w,c
  5624  0018FC  581E               	subwfb	(___llmod@dividend+3)^0,w,c
  5625  0018FE  A0D8               	btfss	status,0,c
  5626  001900  D008               	goto	l4617
  5627  001902  501F               	movf	___llmod@divisor^0,w,c
  5628  001904  5E1B               	subwf	___llmod@dividend^0,f,c
  5629  001906  5020               	movf	(___llmod@divisor+1)^0,w,c
  5630  001908  5A1C               	subwfb	(___llmod@dividend+1)^0,f,c
  5631  00190A  5021               	movf	(___llmod@divisor+2)^0,w,c
  5632  00190C  5A1D               	subwfb	(___llmod@dividend+2)^0,f,c
  5633  00190E  5022               	movf	(___llmod@divisor+3)^0,w,c
  5634  001910  5A1E               	subwfb	(___llmod@dividend+3)^0,f,c
  5635  001912                     l4617:
  5636  001912  FFFF               	dw	65535	; assembler added errata NOP
  5637  001914  90D8               	bcf	status,0,c
  5638  001916  3222               	rrcf	(___llmod@divisor+3)^0,f,c
  5639  001918  3221               	rrcf	(___llmod@divisor+2)^0,f,c
  5640  00191A  3220               	rrcf	(___llmod@divisor+1)^0,f,c
  5641  00191C  321F               	rrcf	___llmod@divisor^0,f,c
  5642  00191E  2E23               	decfsz	___llmod@counter^0,f,c
  5643  001920  D7E5               	goto	u3740
  5644  001922                     l1622:
  5645  001922  FFFF               	dw	65535	; assembler added errata NOP
  5646  001924  C01B  F01B         	movff	___llmod@dividend,?___llmod
  5647  001928  C01C  F01C         	movff	___llmod@dividend+1,?___llmod+1
  5648  00192C  C01D  F01D         	movff	___llmod@dividend+2,?___llmod+2
  5649  001930  C01E  F01E         	movff	___llmod@dividend+3,?___llmod+3
  5650  001934  0012               	return		;funcret
  5651  001936  FFFF               	dw	65535	; errata NOP
  5652  001938                     __end_of___llmod:
  5653                           	callstack 0
  5654                           
  5655 ;; *************** function _Wait_ms *****************
  5656 ;; Defined at:
  5657 ;;		line 103 in file "Src/SystemTime.c"
  5658 ;; Parameters:    Size  Location     Type
  5659 ;;  value           4   13[COMRAM] unsigned long 
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;  x               4   21[COMRAM] unsigned long 
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  1    wreg      void 
  5664 ;; Registers used:
  5665 ;;		wreg, status,2, status,0
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5671 ;;      Params:         4       0       0       0       0       0       0
  5672 ;;      Locals:         4       0       0       0       0       0       0
  5673 ;;      Temps:          4       0       0       0       0       0       0
  5674 ;;      Totals:        12       0       0       0       0       0       0
  5675 ;;Total ram usage:       12 bytes
  5676 ;; Hardware stack levels used: 1
  5677 ;; Hardware stack levels required when called: 3
  5678 ;; This function calls:
  5679 ;;		Nothing
  5680 ;; This function is called by:
  5681 ;;		_SIM800xInit
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           	psect	text16
  5686  0019AC                     __ptext16:
  5687                           	callstack 0
  5688  0019AC                     _Wait_ms:
  5689                           	callstack 0
  5690  0019AC  FFFF               	dw	65535	; assembler added errata NOP
  5691                           
  5692                           ;SystemTime.c: 106: uint32_t x = IncVar;
  5693                           
  5694                           ;incstack = 0
  5695  0019AE  C056  F016         	movff	_IncVar,Wait_ms@x	;volatile
  5696  0019B2  C057  F017         	movff	_IncVar+1,Wait_ms@x+1	;volatile
  5697  0019B6  C058  F018         	movff	_IncVar+2,Wait_ms@x+2	;volatile
  5698  0019BA  C059  F019         	movff	_IncVar+3,Wait_ms@x+3	;volatile
  5699                           
  5700                           ;SystemTime.c: 108: while((value != 0)){
  5701  0019BE  D025               	goto	u3930
  5702  0019C0                     l4743:
  5703  0019C0  FFFF               	dw	65535	; assembler added errata NOP
  5704                           
  5705                           ;SystemTime.c: 111: --value;
  5706  0019C2  060E               	decf	Wait_ms@value^0,f,c
  5707  0019C4  0E00               	movlw	0
  5708  0019C6  5A0F               	subwfb	(Wait_ms@value+1)^0,f,c
  5709  0019C8  5A10               	subwfb	(Wait_ms@value+2)^0,f,c
  5710  0019CA  5A11               	subwfb	(Wait_ms@value+3)^0,f,c
  5711                           
  5712                           ;SystemTime.c: 112: x+=1;
  5713  0019CC  0E01               	movlw	1
  5714  0019CE  2616               	addwf	Wait_ms@x^0,f,c
  5715  0019D0  0E00               	movlw	0
  5716  0019D2  2217               	addwfc	(Wait_ms@x+1)^0,f,c
  5717  0019D4  2218               	addwfc	(Wait_ms@x+2)^0,f,c
  5718  0019D6  2219               	addwfc	(Wait_ms@x+3)^0,f,c
  5719  0019D8                     l290:
  5720  0019D8  FFFF               	dw	65535	; assembler added errata NOP
  5721  0019DA  500E               	movf	Wait_ms@value^0,w,c
  5722  0019DC  100F               	iorwf	(Wait_ms@value+1)^0,w,c
  5723  0019DE  1010               	iorwf	(Wait_ms@value+2)^0,w,c
  5724  0019E0  1011               	iorwf	(Wait_ms@value+3)^0,w,c
  5725  0019E2  B4D8               	btfsc	status,2,c
  5726  0019E4  D012               	goto	u3930
  5727  0019E6  5016               	movf	Wait_ms@x^0,w,c
  5728  0019E8  5C56               	subwf	_IncVar^0,w,c	;volatile
  5729  0019EA  6E12               	movwf	??_Wait_ms^0,c
  5730  0019EC  5017               	movf	(Wait_ms@x+1)^0,w,c
  5731  0019EE  5857               	subwfb	(_IncVar+1)^0,w,c	;volatile
  5732  0019F0  6E13               	movwf	(??_Wait_ms+1)^0,c
  5733  0019F2  5018               	movf	(Wait_ms@x+2)^0,w,c
  5734  0019F4  5858               	subwfb	(_IncVar+2)^0,w,c	;volatile
  5735  0019F6  6E14               	movwf	(??_Wait_ms+2)^0,c
  5736  0019F8  5019               	movf	(Wait_ms@x+3)^0,w,c
  5737  0019FA  5859               	subwfb	(_IncVar+3)^0,w,c	;volatile
  5738  0019FC  6E15               	movwf	(??_Wait_ms+3)^0,c
  5739  0019FE  5012               	movf	??_Wait_ms^0,w,c
  5740  001A00  1013               	iorwf	(??_Wait_ms+1)^0,w,c
  5741  001A02  1014               	iorwf	(??_Wait_ms+2)^0,w,c
  5742  001A04  1015               	iorwf	(??_Wait_ms+3)^0,w,c
  5743  001A06  A4D8               	btfss	status,2,c
  5744  001A08  D7DB               	goto	l4743
  5745  001A0A                     u3930:
  5746  001A0A  FFFF               	dw	65535	; assembler added errata NOP
  5747  001A0C  500E               	movf	Wait_ms@value^0,w,c
  5748  001A0E  100F               	iorwf	(Wait_ms@value+1)^0,w,c
  5749  001A10  1010               	iorwf	(Wait_ms@value+2)^0,w,c
  5750  001A12  1011               	iorwf	(Wait_ms@value+3)^0,w,c
  5751  001A14  B4D8               	btfsc	status,2,c
  5752  001A16  0012               	return		;funcret
  5753  001A18  FFFF               	dw	65535	; assembler added errata NOP
  5754  001A1A  D7DE               	goto	l290
  5755  001A1C  FFFF               	dw	65535	; errata NOP
  5756  001A1E                     __end_of_Wait_ms:
  5757                           	callstack 0
  5758                           
  5759 ;; *************** function _SIM800xSDMInit *****************
  5760 ;; Defined at:
  5761 ;;		line 48 in file "Src/SIM800x_SDM.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;  br              4   26[COMRAM] unsigned long 
  5764 ;; Auto vars:     Size  Location     Type
  5765 ;;  val             4   34[COMRAM] unsigned long 
  5766 ;; Return value:  Size  Location     Type
  5767 ;;                  1    wreg      void 
  5768 ;; Registers used:
  5769 ;;		wreg, status,2, status,0, cstack
  5770 ;; Tracked objects:
  5771 ;;		On entry : 0/0
  5772 ;;		On exit  : 0/0
  5773 ;;		Unchanged: 0/0
  5774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5775 ;;      Params:         4       0       0       0       0       0       0
  5776 ;;      Locals:         4       0       0       0       0       0       0
  5777 ;;      Temps:          4       0       0       0       0       0       0
  5778 ;;      Totals:        12       0       0       0       0       0       0
  5779 ;;Total ram usage:       12 bytes
  5780 ;; Hardware stack levels used: 1
  5781 ;; Hardware stack levels required when called: 4
  5782 ;; This function calls:
  5783 ;;		_SystimeInit
  5784 ;;		_USARTAsyncInit
  5785 ;;		___lldiv
  5786 ;; This function is called by:
  5787 ;;		_SIM800xInit
  5788 ;; This function uses a non-reentrant model
  5789 ;;
  5790                           
  5791                           	psect	text17
  5792  001938                     __ptext17:
  5793                           	callstack 0
  5794  001938                     _SIM800xSDMInit:
  5795                           	callstack 0
  5796  001938  FFFF               	dw	65535	; assembler added errata NOP
  5797                           
  5798                           ;SIM800x_SDM.c: 53: uint32_t val = ((16 * 1000000/(16 * br)) - 1);
  5799                           
  5800                           ;incstack = 0
  5801  00193A  0E00               	movlw	0
  5802  00193C  6E0E               	movwf	___lldiv@dividend^0,c
  5803  00193E  0E24               	movlw	36
  5804  001940  6E0F               	movwf	(___lldiv@dividend+1)^0,c
  5805  001942  0EF4               	movlw	244
  5806  001944  6E10               	movwf	(___lldiv@dividend+2)^0,c
  5807  001946  0E00               	movlw	0
  5808  001948  6E11               	movwf	(___lldiv@dividend+3)^0,c
  5809  00194A  C01B  F01F         	movff	SIM800xSDMInit@br,??_SIM800xSDMInit
  5810  00194E  C01C  F020         	movff	SIM800xSDMInit@br+1,??_SIM800xSDMInit+1
  5811  001952  C01D  F021         	movff	SIM800xSDMInit@br+2,??_SIM800xSDMInit+2
  5812  001956  C01E  F022         	movff	SIM800xSDMInit@br+3,??_SIM800xSDMInit+3
  5813  00195A  0E04               	movlw	4
  5814  00195C                     u4105:
  5815  00195C  FFFF               	dw	65535	; assembler added errata NOP
  5816  00195E  90D8               	bcf	status,0,c
  5817  001960  361F               	rlcf	??_SIM800xSDMInit^0,f,c
  5818  001962  3620               	rlcf	(??_SIM800xSDMInit+1)^0,f,c
  5819  001964  3621               	rlcf	(??_SIM800xSDMInit+2)^0,f,c
  5820  001966  3622               	rlcf	(??_SIM800xSDMInit+3)^0,f,c
  5821  001968  2EE8               	decfsz	wreg,f,c
  5822  00196A  D7F8               	goto	u4105
  5823  00196C  C01F  F012         	movff	??_SIM800xSDMInit,___lldiv@divisor
  5824  001970  C020  F013         	movff	??_SIM800xSDMInit+1,___lldiv@divisor+1
  5825  001974  C021  F014         	movff	??_SIM800xSDMInit+2,___lldiv@divisor+2
  5826  001978  C022  F015         	movff	??_SIM800xSDMInit+3,___lldiv@divisor+3
  5827  00197C  EC12  F00B         	call	___lldiv	;wreg free
  5828  001980  0EFF               	movlw	255
  5829  001982  240E               	addwf	?___lldiv^0,w,c
  5830  001984  6E23               	movwf	SIM800xSDMInit@val^0,c
  5831  001986  0EFF               	movlw	255
  5832  001988  200F               	addwfc	(?___lldiv+1)^0,w,c
  5833  00198A  6E24               	movwf	(SIM800xSDMInit@val+1)^0,c
  5834  00198C  0EFF               	movlw	255
  5835  00198E  2010               	addwfc	(?___lldiv+2)^0,w,c
  5836  001990  6E25               	movwf	(SIM800xSDMInit@val+2)^0,c
  5837  001992  0EFF               	movlw	255
  5838  001994  2011               	addwfc	(?___lldiv+3)^0,w,c
  5839  001996  6E26               	movwf	(SIM800xSDMInit@val+3)^0,c
  5840                           
  5841                           ;SIM800x_SDM.c: 57: USARTAsyncInit((uint8_t)val);
  5842  001998  5023               	movf	SIM800xSDMInit@val^0,w,c
  5843  00199A  ECA2  F010         	call	_USARTAsyncInit
  5844                           
  5845                           ;SIM800x_SDM.c: 60: INTCON |= 0xC0;
  5846  00199E  0EC0               	movlw	192
  5847  0019A0  12F2               	iorwf	242,f,c	;volatile
  5848                           
  5849                           ;SIM800x_SDM.c: 61: PIE1 |= 0x20;
  5850  0019A2  8A9D               	bsf	157,5,c	;volatile
  5851                           
  5852                           ;SIM800x_SDM.c: 63: SystimeInit();
  5853  0019A4  EC54  F010         	call	_SystimeInit	;wreg free
  5854  0019A8  0012               	return		;funcret
  5855  0019AA  FFFF               	dw	65535	; errata NOP
  5856  0019AC                     __end_of_SIM800xSDMInit:
  5857                           	callstack 0
  5858                           
  5859 ;; *************** function ___lldiv *****************
  5860 ;; Defined at:
  5861 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  5862 ;; Parameters:    Size  Location     Type
  5863 ;;  dividend        4   13[COMRAM] unsigned long 
  5864 ;;  divisor         4   17[COMRAM] unsigned long 
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;  quotient        4   21[COMRAM] unsigned long 
  5867 ;;  counter         1   25[COMRAM] unsigned char 
  5868 ;; Return value:  Size  Location     Type
  5869 ;;                  4   13[COMRAM] unsigned long 
  5870 ;; Registers used:
  5871 ;;		wreg, status,2, status,0
  5872 ;; Tracked objects:
  5873 ;;		On entry : 0/0
  5874 ;;		On exit  : 0/0
  5875 ;;		Unchanged: 0/0
  5876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5877 ;;      Params:         8       0       0       0       0       0       0
  5878 ;;      Locals:         5       0       0       0       0       0       0
  5879 ;;      Temps:          0       0       0       0       0       0       0
  5880 ;;      Totals:        13       0       0       0       0       0       0
  5881 ;;Total ram usage:       13 bytes
  5882 ;; Hardware stack levels used: 1
  5883 ;; Hardware stack levels required when called: 3
  5884 ;; This function calls:
  5885 ;;		Nothing
  5886 ;; This function is called by:
  5887 ;;		_SIM800xSDMInit
  5888 ;;		_sprintf
  5889 ;; This function uses a non-reentrant model
  5890 ;;
  5891                           
  5892                           	psect	text18
  5893  001624                     __ptext18:
  5894                           	callstack 0
  5895  001624                     ___lldiv:
  5896                           	callstack 0
  5897  001624  FFFF               	dw	65535	; assembler added errata NOP
  5898                           
  5899                           ;incstack = 0
  5900  001626  0E00               	movlw	0
  5901  001628  6E16               	movwf	___lldiv@quotient^0,c
  5902  00162A  0E00               	movlw	0
  5903  00162C  6E17               	movwf	(___lldiv@quotient+1)^0,c
  5904  00162E  0E00               	movlw	0
  5905  001630  6E18               	movwf	(___lldiv@quotient+2)^0,c
  5906  001632  0E00               	movlw	0
  5907  001634  6E19               	movwf	(___lldiv@quotient+3)^0,c
  5908  001636  5012               	movf	___lldiv@divisor^0,w,c
  5909  001638  1013               	iorwf	(___lldiv@divisor+1)^0,w,c
  5910  00163A  1014               	iorwf	(___lldiv@divisor+2)^0,w,c
  5911  00163C  1015               	iorwf	(___lldiv@divisor+3)^0,w,c
  5912  00163E  B4D8               	btfsc	status,2,c
  5913  001640  D02E               	goto	l1241
  5914  001642  0E01               	movlw	1
  5915  001644  6E1A               	movwf	___lldiv@counter^0,c
  5916  001646  D007               	goto	l4591
  5917  001648                     l4589:
  5918  001648  FFFF               	dw	65535	; assembler added errata NOP
  5919  00164A  90D8               	bcf	status,0,c
  5920  00164C  3612               	rlcf	___lldiv@divisor^0,f,c
  5921  00164E  3613               	rlcf	(___lldiv@divisor+1)^0,f,c
  5922  001650  3614               	rlcf	(___lldiv@divisor+2)^0,f,c
  5923  001652  3615               	rlcf	(___lldiv@divisor+3)^0,f,c
  5924  001654  2A1A               	incf	___lldiv@counter^0,f,c
  5925  001656                     l4591:
  5926  001656  FFFF               	dw	65535	; assembler added errata NOP
  5927  001658  AE15               	btfss	(___lldiv@divisor+3)^0,7,c
  5928  00165A  D7F6               	goto	l4589
  5929  00165C                     u3710:
  5930  00165C  FFFF               	dw	65535	; assembler added errata NOP
  5931  00165E  90D8               	bcf	status,0,c
  5932  001660  3616               	rlcf	___lldiv@quotient^0,f,c
  5933  001662  3617               	rlcf	(___lldiv@quotient+1)^0,f,c
  5934  001664  3618               	rlcf	(___lldiv@quotient+2)^0,f,c
  5935  001666  3619               	rlcf	(___lldiv@quotient+3)^0,f,c
  5936  001668  5012               	movf	___lldiv@divisor^0,w,c
  5937  00166A  5C0E               	subwf	___lldiv@dividend^0,w,c
  5938  00166C  5013               	movf	(___lldiv@divisor+1)^0,w,c
  5939  00166E  580F               	subwfb	(___lldiv@dividend+1)^0,w,c
  5940  001670  5014               	movf	(___lldiv@divisor+2)^0,w,c
  5941  001672  5810               	subwfb	(___lldiv@dividend+2)^0,w,c
  5942  001674  5015               	movf	(___lldiv@divisor+3)^0,w,c
  5943  001676  5811               	subwfb	(___lldiv@dividend+3)^0,w,c
  5944  001678  A0D8               	btfss	status,0,c
  5945  00167A  D009               	goto	l4601
  5946  00167C  5012               	movf	___lldiv@divisor^0,w,c
  5947  00167E  5E0E               	subwf	___lldiv@dividend^0,f,c
  5948  001680  5013               	movf	(___lldiv@divisor+1)^0,w,c
  5949  001682  5A0F               	subwfb	(___lldiv@dividend+1)^0,f,c
  5950  001684  5014               	movf	(___lldiv@divisor+2)^0,w,c
  5951  001686  5A10               	subwfb	(___lldiv@dividend+2)^0,f,c
  5952  001688  5015               	movf	(___lldiv@divisor+3)^0,w,c
  5953  00168A  5A11               	subwfb	(___lldiv@dividend+3)^0,f,c
  5954  00168C  8016               	bsf	___lldiv@quotient^0,0,c
  5955  00168E                     l4601:
  5956  00168E  FFFF               	dw	65535	; assembler added errata NOP
  5957  001690  90D8               	bcf	status,0,c
  5958  001692  3215               	rrcf	(___lldiv@divisor+3)^0,f,c
  5959  001694  3214               	rrcf	(___lldiv@divisor+2)^0,f,c
  5960  001696  3213               	rrcf	(___lldiv@divisor+1)^0,f,c
  5961  001698  3212               	rrcf	___lldiv@divisor^0,f,c
  5962  00169A  2E1A               	decfsz	___lldiv@counter^0,f,c
  5963  00169C  D7DF               	goto	u3710
  5964  00169E                     l1241:
  5965  00169E  FFFF               	dw	65535	; assembler added errata NOP
  5966  0016A0  C016  F00E         	movff	___lldiv@quotient,?___lldiv
  5967  0016A4  C017  F00F         	movff	___lldiv@quotient+1,?___lldiv+1
  5968  0016A8  C018  F010         	movff	___lldiv@quotient+2,?___lldiv+2
  5969  0016AC  C019  F011         	movff	___lldiv@quotient+3,?___lldiv+3
  5970  0016B0  0012               	return		;funcret
  5971  0016B2  FFFF               	dw	65535	; errata NOP
  5972  0016B4                     __end_of___lldiv:
  5973                           	callstack 0
  5974                           
  5975 ;; *************** function _USARTAsyncInit *****************
  5976 ;; Defined at:
  5977 ;;		line 62 in file "C:/EmbeddedDevOps/M8M_APIs/PIC18.X/Src/USART.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;  bgr             1    wreg     unsigned char 
  5980 ;; Auto vars:     Size  Location     Type
  5981 ;;  bgr             1   13[COMRAM] unsigned char 
  5982 ;; Return value:  Size  Location     Type
  5983 ;;                  1    wreg      void 
  5984 ;; Registers used:
  5985 ;;		wreg, status,2
  5986 ;; Tracked objects:
  5987 ;;		On entry : 0/0
  5988 ;;		On exit  : 0/0
  5989 ;;		Unchanged: 0/0
  5990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5991 ;;      Params:         0       0       0       0       0       0       0
  5992 ;;      Locals:         1       0       0       0       0       0       0
  5993 ;;      Temps:          0       0       0       0       0       0       0
  5994 ;;      Totals:         1       0       0       0       0       0       0
  5995 ;;Total ram usage:        1 bytes
  5996 ;; Hardware stack levels used: 1
  5997 ;; Hardware stack levels required when called: 3
  5998 ;; This function calls:
  5999 ;;		Nothing
  6000 ;; This function is called by:
  6001 ;;		_SIM800xSDMInit
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           	psect	text19
  6006  002144                     __ptext19:
  6007                           	callstack 0
  6008  002144                     _USARTAsyncInit:
  6009                           	callstack 0
  6010  002144  FFFF               	dw	65535	; assembler added errata NOP
  6011                           
  6012                           ;incstack = 0
  6013                           ;USARTAsyncInit@bgr stored from wreg
  6014  002146  6E0E               	movwf	USARTAsyncInit@bgr^0,c
  6015                           
  6016                           ;USART.c: 65: TXSTA = 0x24;
  6017  002148  0E24               	movlw	36
  6018  00214A  6EAC               	movwf	172,c	;volatile
  6019                           
  6020                           ;USART.c: 66: RCSTA = 0x90;
  6021  00214C  0E90               	movlw	144
  6022  00214E  6EAB               	movwf	171,c	;volatile
  6023                           
  6024                           ;USART.c: 67: SPBRG = bgr;
  6025  002150  C00E  FFAF         	movff	USARTAsyncInit@bgr,4015	;volatile
  6026  002154  0012               	return		;funcret
  6027  002156  FFFF               	dw	65535	; errata NOP
  6028  002158                     __end_of_USARTAsyncInit:
  6029                           	callstack 0
  6030                           
  6031 ;; *************** function _SystimeInit *****************
  6032 ;; Defined at:
  6033 ;;		line 55 in file "Src/SystemTime.c"
  6034 ;; Parameters:    Size  Location     Type
  6035 ;;		None
  6036 ;; Auto vars:     Size  Location     Type
  6037 ;;		None
  6038 ;; Return value:  Size  Location     Type
  6039 ;;                  1    wreg      void 
  6040 ;; Registers used:
  6041 ;;		wreg, status,2, status,0
  6042 ;; Tracked objects:
  6043 ;;		On entry : 0/0
  6044 ;;		On exit  : 0/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6047 ;;      Params:         0       0       0       0       0       0       0
  6048 ;;      Locals:         0       0       0       0       0       0       0
  6049 ;;      Temps:          0       0       0       0       0       0       0
  6050 ;;      Totals:         0       0       0       0       0       0       0
  6051 ;;Total ram usage:        0 bytes
  6052 ;; Hardware stack levels used: 1
  6053 ;; Hardware stack levels required when called: 3
  6054 ;; This function calls:
  6055 ;;		Nothing
  6056 ;; This function is called by:
  6057 ;;		_SIM800xSDMInit
  6058 ;; This function uses a non-reentrant model
  6059 ;;
  6060                           
  6061                           	psect	text20
  6062  0020A8                     __ptext20:
  6063                           	callstack 0
  6064  0020A8                     _SystimeInit:
  6065                           	callstack 0
  6066  0020A8  FFFF               	dw	65535	; assembler added errata NOP
  6067                           
  6068                           ;incstack = 0
  6069  0020AA  0EFC               	movlw	252
  6070  0020AC  6E5F               	movwf	(_val+1)^0,c	;volatile
  6071  0020AE  0E1A               	movlw	26
  6072  0020B0  6E5E               	movwf	_val^0,c	;volatile
  6073                           
  6074                           ;SystemTime.c: 64: };SystemTime.c: 66: INTCON |= 0xC0;
  6075                           
  6076                           ;SystemTime.c: 60: }
  6077  0020B2  0EC0               	movlw	192
  6078  0020B4  12F2               	iorwf	242,f,c	;volatile
  6079                           
  6080                           ;SystemTime.c: 68: T0CON = 0x81;
  6081  0020B6  0E81               	movlw	129
  6082  0020B8  6ED5               	movwf	213,c	;volatile
  6083                           
  6084                           ;SystemTime.c: 69: TMR0 = val;
  6085  0020BA  C05E  FFD6         	movff	_val,4054	;volatile
  6086  0020BE  C05F  FFD7         	movff	_val+1,4055	;volatile
  6087                           
  6088                           ;SystemTime.c: 70: TMR0IF = 0;
  6089  0020C2  94F2               	bcf	4082,2,c	;volatile
  6090                           
  6091                           ;SystemTime.c: 71: TMR0IE = 1;
  6092  0020C4  8AF2               	bsf	4082,5,c	;volatile
  6093  0020C6  0012               	return		;funcret
  6094  0020C8  FFFF               	dw	65535	; errata NOP
  6095  0020CA                     __end_of_SystimeInit:
  6096                           	callstack 0
  6097                           
  6098 ;; *************** function _SIM800xIPSetConnectionType *****************
  6099 ;; Defined at:
  6100 ;;		line 629 in file "Src/SIM800x.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;  cid             1    wreg     unsigned char 
  6103 ;;  contype         2   31[COMRAM] PTR const unsigned char 
  6104 ;;		 -> STR_3(5), 
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;  cid             1   33[COMRAM] unsigned char 
  6107 ;; Return value:  Size  Location     Type
  6108 ;;                  1    wreg      enum E2115
  6109 ;; Registers used:
  6110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6116 ;;      Params:         2       0       0       0       0       0       0
  6117 ;;      Locals:         1       0       0       0       0       0       0
  6118 ;;      Temps:          0       0       0       0       0       0       0
  6119 ;;      Totals:         3       0       0       0       0       0       0
  6120 ;;Total ram usage:        3 bytes
  6121 ;; Hardware stack levels used: 1
  6122 ;; Hardware stack levels required when called: 6
  6123 ;; This function calls:
  6124 ;;		_ProcessResp1
  6125 ;;		_SIM800xSDMFlush
  6126 ;;		_SIM800xSDMPrint
  6127 ;;		_SIM800xSDMSendByte
  6128 ;;		_strlen
  6129 ;; This function is called by:
  6130 ;;		_SystemInit
  6131 ;; This function uses a non-reentrant model
  6132 ;;
  6133                           
  6134                           	psect	text21
  6135  001A1E                     __ptext21:
  6136                           	callstack 0
  6137  001A1E                     _SIM800xIPSetConnectionType:
  6138                           	callstack 0
  6139  001A1E  FFFF               	dw	65535	; assembler added errata NOP
  6140                           
  6141                           ;incstack = 0
  6142                           ;SIM800xIPSetConnectionType@cid stored from wreg
  6143  001A20  6E22               	movwf	SIM800xIPSetConnectionType@cid^0,c
  6144                           
  6145                           ;SIM800x.c: 632: if((cid == 0) || (strlen(contype) > 4))
  6146  001A22  5022               	movf	SIM800xIPSetConnectionType@cid^0,w,c
  6147  001A24  B4D8               	btfsc	status,2,c
  6148  001A26  D00C               	goto	u4310
  6149  001A28  C020  F00E         	movff	SIM800xIPSetConnectionType@contype,strlen@s
  6150  001A2C  C021  F00F         	movff	SIM800xIPSetConnectionType@contype+1,strlen@s+1
  6151  001A30  EC5A  F00F         	call	_strlen	;wreg free
  6152  001A34  500F               	movf	(?_strlen+1)^0,w,c
  6153  001A36  E104               	bnz	u4310
  6154  001A38  0E05               	movlw	5
  6155  001A3A  5C0E               	subwf	?_strlen^0,w,c
  6156  001A3C  A0D8               	btfss	status,0,c
  6157  001A3E  D003               	goto	l5005
  6158  001A40                     u4310:
  6159  001A40  FFFF               	dw	65535	; assembler added errata NOP
  6160                           
  6161                           ;SIM800x.c: 633: return SIM800X_ERROR;
  6162  001A42  0E01               	movlw	1
  6163  001A44  D01F               	goto	l495
  6164  001A46                     l5005:
  6165  001A46  FFFF               	dw	65535	; assembler added errata NOP
  6166                           
  6167                           ;SIM800x.c: 635: SIM800xSDMFlush();
  6168  001A48  EC8D  F010         	call	_SIM800xSDMFlush	;wreg free
  6169                           
  6170                           ;SIM800x.c: 636: SIM800xSDMPrint("AT+SAPBR=3,");
  6171  001A4C  0ECE               	movlw	low STR_43
  6172  001A4E  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  6173  001A50  0E7E               	movlw	high STR_43
  6174  001A52  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6175  001A54  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  6176                           
  6177                           ;SIM800x.c: 637: SIM800xSDMSendByte((uint8_t)((cid & 0x03) + 48));
  6178  001A58  5022               	movf	SIM800xIPSetConnectionType@cid^0,w,c
  6179  001A5A  0B03               	andlw	3
  6180  001A5C  0F30               	addlw	48
  6181  001A5E  ECAC  F010         	call	_SIM800xSDMSendByte
  6182                           
  6183                           ;SIM800x.c: 638: SIM800xSDMPrint(",\"CONTYPE\",");
  6184  001A62  0E86               	movlw	low STR_44
  6185  001A64  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  6186  001A66  0E7E               	movlw	high STR_44
  6187  001A68  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6188  001A6A  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  6189                           
  6190                           ;SIM800x.c: 639: SIM800xSDMPrint(contype);
  6191  001A6E  C020  F00F         	movff	SIM800xIPSetConnectionType@contype,SIM800xSDMPrint@str
  6192  001A72  C021  F010         	movff	SIM800xIPSetConnectionType@contype+1,SIM800xSDMPrint@str+1
  6193  001A76  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  6194                           
  6195                           ;SIM800x.c: 640: SIM800xSDMSendByte('\r');
  6196  001A7A  0E0D               	movlw	13
  6197  001A7C  ECAC  F010         	call	_SIM800xSDMSendByte
  6198                           
  6199                           ;SIM800x.c: 642: return ProcessResp1();
  6200  001A80  EC23  F00C         	call	_ProcessResp1	;wreg free
  6201  001A84                     l495:
  6202  001A84  FFFF               	dw	65535	; assembler added errata NOP
  6203  001A86  0012               	return		;funcret
  6204  001A88  FFFF               	dw	65535	; errata NOP
  6205  001A8A                     __end_of_SIM800xIPSetConnectionType:
  6206                           	callstack 0
  6207                           
  6208 ;; *************** function _SIM800xIPSetAPN *****************
  6209 ;; Defined at:
  6210 ;;		line 647 in file "Src/SIM800x.c"
  6211 ;; Parameters:    Size  Location     Type
  6212 ;;  cid             1    wreg     unsigned char 
  6213 ;;  apn             2   31[COMRAM] PTR const unsigned char 
  6214 ;;		 -> STR_4(9), 
  6215 ;; Auto vars:     Size  Location     Type
  6216 ;;  cid             1   33[COMRAM] unsigned char 
  6217 ;; Return value:  Size  Location     Type
  6218 ;;                  1    wreg      enum E2115
  6219 ;; Registers used:
  6220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6226 ;;      Params:         2       0       0       0       0       0       0
  6227 ;;      Locals:         1       0       0       0       0       0       0
  6228 ;;      Temps:          0       0       0       0       0       0       0
  6229 ;;      Totals:         3       0       0       0       0       0       0
  6230 ;;Total ram usage:        3 bytes
  6231 ;; Hardware stack levels used: 1
  6232 ;; Hardware stack levels required when called: 6
  6233 ;; This function calls:
  6234 ;;		_ProcessResp1
  6235 ;;		_SIM800xSDMFlush
  6236 ;;		_SIM800xSDMPrint
  6237 ;;		_SIM800xSDMSendByte
  6238 ;;		_strlen
  6239 ;; This function is called by:
  6240 ;;		_SystemInit
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           	psect	text22
  6245  001A8A                     __ptext22:
  6246                           	callstack 0
  6247  001A8A                     _SIM800xIPSetAPN:
  6248                           	callstack 0
  6249  001A8A  FFFF               	dw	65535	; assembler added errata NOP
  6250                           
  6251                           ;incstack = 0
  6252                           ;SIM800xIPSetAPN@cid stored from wreg
  6253  001A8C  6E22               	movwf	SIM800xIPSetAPN@cid^0,c
  6254                           
  6255                           ;SIM800x.c: 650: if((cid == 0) || (strlen(apn) > 64))
  6256  001A8E  5022               	movf	SIM800xIPSetAPN@cid^0,w,c
  6257  001A90  B4D8               	btfsc	status,2,c
  6258  001A92  D00C               	goto	u4330
  6259  001A94  C020  F00E         	movff	SIM800xIPSetAPN@apn,strlen@s
  6260  001A98  C021  F00F         	movff	SIM800xIPSetAPN@apn+1,strlen@s+1
  6261  001A9C  EC5A  F00F         	call	_strlen	;wreg free
  6262  001AA0  500F               	movf	(?_strlen+1)^0,w,c
  6263  001AA2  E104               	bnz	u4330
  6264  001AA4  0E41               	movlw	65
  6265  001AA6  5C0E               	subwf	?_strlen^0,w,c
  6266  001AA8  A0D8               	btfss	status,0,c
  6267  001AAA  D003               	goto	l5029
  6268  001AAC                     u4330:
  6269  001AAC  FFFF               	dw	65535	; assembler added errata NOP
  6270                           
  6271                           ;SIM800x.c: 651: return SIM800X_ERROR;
  6272  001AAE  0E01               	movlw	1
  6273  001AB0  D01F               	goto	l501
  6274  001AB2                     l5029:
  6275  001AB2  FFFF               	dw	65535	; assembler added errata NOP
  6276                           
  6277                           ;SIM800x.c: 653: SIM800xSDMFlush();
  6278  001AB4  EC8D  F010         	call	_SIM800xSDMFlush	;wreg free
  6279                           
  6280                           ;SIM800x.c: 654: SIM800xSDMPrint("AT+SAPBR=3,");
  6281  001AB8  0ECE               	movlw	low STR_43
  6282  001ABA  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  6283  001ABC  0E7E               	movlw	high STR_43
  6284  001ABE  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6285  001AC0  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  6286                           
  6287                           ;SIM800x.c: 655: SIM800xSDMSendByte((uint8_t)((cid & 0x03) + 48));
  6288  001AC4  5022               	movf	SIM800xIPSetAPN@cid^0,w,c
  6289  001AC6  0B03               	andlw	3
  6290  001AC8  0F30               	addlw	48
  6291  001ACA  ECAC  F010         	call	_SIM800xSDMSendByte
  6292                           
  6293                           ;SIM800x.c: 656: SIM800xSDMPrint(",\"APN\",");
  6294  001ACE  0EAC               	movlw	low STR_46
  6295  001AD0  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  6296  001AD2  0E7F               	movlw	high STR_46
  6297  001AD4  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6298  001AD6  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  6299                           
  6300                           ;SIM800x.c: 657: SIM800xSDMPrint(apn);
  6301  001ADA  C020  F00F         	movff	SIM800xIPSetAPN@apn,SIM800xSDMPrint@str
  6302  001ADE  C021  F010         	movff	SIM800xIPSetAPN@apn+1,SIM800xSDMPrint@str+1
  6303  001AE2  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  6304                           
  6305                           ;SIM800x.c: 658: SIM800xSDMSendByte('\r');
  6306  001AE6  0E0D               	movlw	13
  6307  001AE8  ECAC  F010         	call	_SIM800xSDMSendByte
  6308                           
  6309                           ;SIM800x.c: 660: return ProcessResp1();
  6310  001AEC  EC23  F00C         	call	_ProcessResp1	;wreg free
  6311  001AF0                     l501:
  6312  001AF0  FFFF               	dw	65535	; assembler added errata NOP
  6313  001AF2  0012               	return		;funcret
  6314  001AF4  FFFF               	dw	65535	; errata NOP
  6315  001AF6                     __end_of_SIM800xIPSetAPN:
  6316                           	callstack 0
  6317                           
  6318 ;; *************** function _SIM800xIPOpen *****************
  6319 ;; Defined at:
  6320 ;;		line 742 in file "Src/SIM800x.c"
  6321 ;; Parameters:    Size  Location     Type
  6322 ;;  cid             1    wreg     unsigned char 
  6323 ;; Auto vars:     Size  Location     Type
  6324 ;;  cid             1   31[COMRAM] unsigned char 
  6325 ;; Return value:  Size  Location     Type
  6326 ;;                  1    wreg      enum E2115
  6327 ;; Registers used:
  6328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6334 ;;      Params:         0       0       0       0       0       0       0
  6335 ;;      Locals:         1       0       0       0       0       0       0
  6336 ;;      Temps:          0       0       0       0       0       0       0
  6337 ;;      Totals:         1       0       0       0       0       0       0
  6338 ;;Total ram usage:        1 bytes
  6339 ;; Hardware stack levels used: 1
  6340 ;; Hardware stack levels required when called: 6
  6341 ;; This function calls:
  6342 ;;		_ProcessResp1
  6343 ;;		_SIM800xSDMFlush
  6344 ;;		_SIM800xSDMPrint
  6345 ;;		_SIM800xSDMSendByte
  6346 ;; This function is called by:
  6347 ;;		_SystemInit
  6348 ;; This function uses a non-reentrant model
  6349 ;;
  6350                           
  6351                           	psect	text23
  6352  001F4A                     __ptext23:
  6353                           	callstack 0
  6354  001F4A                     _SIM800xIPOpen:
  6355                           	callstack 0
  6356  001F4A  FFFF               	dw	65535	; assembler added errata NOP
  6357                           
  6358                           ;incstack = 0
  6359                           ;SIM800xIPOpen@cid stored from wreg
  6360  001F4C  6E20               	movwf	SIM800xIPOpen@cid^0,c
  6361                           
  6362                           ;SIM800x.c: 745: if(cid == 0)
  6363  001F4E  5020               	movf	SIM800xIPOpen@cid^0,w,c
  6364  001F50  A4D8               	btfss	status,2,c
  6365  001F52  D002               	goto	l5051
  6366                           
  6367                           ;SIM800x.c: 746: return SIM800X_ERROR;
  6368  001F54  0E01               	movlw	1
  6369  001F56  D01B               	goto	l529
  6370  001F58                     l5051:
  6371  001F58  FFFF               	dw	65535	; assembler added errata NOP
  6372                           
  6373                           ;SIM800x.c: 748: SIM800xSDMFlush();
  6374  001F5A  EC8D  F010         	call	_SIM800xSDMFlush	;wreg free
  6375                           
  6376                           ;SIM800x.c: 749: SIM800xSDMPrint("AT+SAPBR=1,");
  6377  001F5E  0EAA               	movlw	low STR_56
  6378  001F60  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  6379  001F62  0E7E               	movlw	high STR_56
  6380  001F64  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6381  001F66  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  6382                           
  6383                           ;SIM800x.c: 750: SIM800xSDMSendByte((uint8_t)((cid & 0x03) + 48));
  6384  001F6A  5020               	movf	SIM800xIPOpen@cid^0,w,c
  6385  001F6C  0B03               	andlw	3
  6386  001F6E  0F30               	addlw	48
  6387  001F70  ECAC  F010         	call	_SIM800xSDMSendByte
  6388                           
  6389                           ;SIM800x.c: 751: SIM800xSDMSendByte('\r');
  6390  001F74  0E0D               	movlw	13
  6391  001F76  ECAC  F010         	call	_SIM800xSDMSendByte
  6392                           
  6393                           ;SIM800x.c: 753: Tout = 85000;
  6394  001F7A  0E08               	movlw	8
  6395  001F7C  6E64               	movwf	_Tout^0,c
  6396  001F7E  0E4C               	movlw	76
  6397  001F80  6E65               	movwf	(_Tout+1)^0,c
  6398  001F82  0E01               	movlw	1
  6399  001F84  6E66               	movwf	(_Tout+2)^0,c
  6400  001F86  0E00               	movlw	0
  6401  001F88  6E67               	movwf	(_Tout+3)^0,c
  6402                           
  6403                           ;SIM800x.c: 754: return ProcessResp1();
  6404  001F8A  EC23  F00C         	call	_ProcessResp1	;wreg free
  6405  001F8E                     l529:
  6406  001F8E  FFFF               	dw	65535	; assembler added errata NOP
  6407  001F90  0012               	return		;funcret
  6408  001F92  FFFF               	dw	65535	; errata NOP
  6409  001F94                     __end_of_SIM800xIPOpen:
  6410                           	callstack 0
  6411                           
  6412 ;; *************** function _ProcessResp1 *****************
  6413 ;; Defined at:
  6414 ;;		line 165 in file "Src/SIM800x.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;		None
  6417 ;; Auto vars:     Size  Location     Type
  6418 ;;  time            4   26[COMRAM] unsigned long 
  6419 ;;  c               1   30[COMRAM] unsigned char 
  6420 ;; Return value:  Size  Location     Type
  6421 ;;                  1    wreg      enum E2114
  6422 ;; Registers used:
  6423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6424 ;; Tracked objects:
  6425 ;;		On entry : 0/0
  6426 ;;		On exit  : 0/0
  6427 ;;		Unchanged: 0/0
  6428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6429 ;;      Params:         0       0       0       0       0       0       0
  6430 ;;      Locals:         5       0       0       0       0       0       0
  6431 ;;      Temps:          4       0       0       0       0       0       0
  6432 ;;      Totals:         9       0       0       0       0       0       0
  6433 ;;Total ram usage:        9 bytes
  6434 ;; Hardware stack levels used: 1
  6435 ;; Hardware stack levels required when called: 5
  6436 ;; This function calls:
  6437 ;;		_SIM800xSDMPeek
  6438 ;;		_SIM800xSDMRxAvailable
  6439 ;;		_Tick_ms
  6440 ;; This function is called by:
  6441 ;;		_SIM800xIPSetConnectionType
  6442 ;;		_SIM800xIPSetAPN
  6443 ;;		_SIM800xIPOpen
  6444 ;; This function uses a non-reentrant model
  6445 ;;
  6446                           
  6447                           	psect	text24
  6448  001846                     __ptext24:
  6449                           	callstack 0
  6450  001846                     _ProcessResp1:
  6451                           	callstack 0
  6452  001846  FFFF               	dw	65535	; assembler added errata NOP
  6453                           
  6454                           ;SIM800x.c: 167: uint32_t time = Tick_ms();
  6455                           
  6456                           ;incstack = 0
  6457  001848  EC82  F010         	call	_Tick_ms	;wreg free
  6458  00184C  C00E  F01B         	movff	?_Tick_ms,ProcessResp1@time
  6459  001850  C00F  F01C         	movff	?_Tick_ms+1,ProcessResp1@time+1
  6460  001854  C010  F01D         	movff	?_Tick_ms+2,ProcessResp1@time+2
  6461  001858  C011  F01E         	movff	?_Tick_ms+3,ProcessResp1@time+3
  6462                           
  6463                           ;SIM800x.c: 168: while(SIM800xSDMRxAvailable() < 6)
  6464  00185C  D01B               	goto	l4757
  6465  00185E                     l4751:
  6466  00185E  FFFF               	dw	65535	; assembler added errata NOP
  6467                           
  6468                           ;SIM800x.c: 169: {;SIM800x.c: 170: if((Tick_ms() - time) > Tout)
  6469  001860  EC82  F010         	call	_Tick_ms	;wreg free
  6470  001864  501B               	movf	ProcessResp1@time^0,w,c
  6471  001866  5C0E               	subwf	?_Tick_ms^0,w,c
  6472  001868  6E17               	movwf	??_ProcessResp1^0,c
  6473  00186A  501C               	movf	(ProcessResp1@time+1)^0,w,c
  6474  00186C  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  6475  00186E  6E18               	movwf	(??_ProcessResp1+1)^0,c
  6476  001870  501D               	movf	(ProcessResp1@time+2)^0,w,c
  6477  001872  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  6478  001874  6E19               	movwf	(??_ProcessResp1+2)^0,c
  6479  001876  501E               	movf	(ProcessResp1@time+3)^0,w,c
  6480  001878  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  6481  00187A  6E1A               	movwf	(??_ProcessResp1+3)^0,c
  6482  00187C  5017               	movf	??_ProcessResp1^0,w,c
  6483  00187E  5C64               	subwf	_Tout^0,w,c
  6484  001880  5018               	movf	(??_ProcessResp1+1)^0,w,c
  6485  001882  5865               	subwfb	(_Tout+1)^0,w,c
  6486  001884  5019               	movf	(??_ProcessResp1+2)^0,w,c
  6487  001886  5866               	subwfb	(_Tout+2)^0,w,c
  6488  001888  501A               	movf	(??_ProcessResp1+3)^0,w,c
  6489  00188A  5867               	subwfb	(_Tout+3)^0,w,c
  6490  00188C  B0D8               	btfsc	status,0,c
  6491  00188E  D002               	goto	l4757
  6492                           
  6493                           ;SIM800x.c: 171: {;SIM800x.c: 172: return SIM800X_TIME_OUT;
  6494  001890  0E05               	movlw	5
  6495  001892  D015               	goto	l365
  6496  001894                     l4757:
  6497  001894  FFFF               	dw	65535	; assembler added errata NOP
  6498  001896  EC24  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  6499  00189A  5014               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  6500  00189C  E104               	bnz	u3960
  6501  00189E  0E06               	movlw	6
  6502  0018A0  5C13               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  6503  0018A2  A0D8               	btfss	status,0,c
  6504  0018A4  D7DC               	goto	l4751
  6505  0018A6                     u3960:
  6506                           
  6507                           ;SIM800x.c: 173: };SIM800x.c: 174: };SIM800x.c: 175: char c = SIM800xSDMPeek(2);
  6508  0018A6  0E02               	movlw	2
  6509  0018A8  ECCA  F00F         	call	_SIM800xSDMPeek
  6510  0018AC  6E1F               	movwf	ProcessResp1@c^0,c
  6511                           
  6512                           ;SIM800x.c: 176: if(c == 'O')
  6513  0018AE  0E4F               	movlw	79
  6514  0018B0  181F               	xorwf	ProcessResp1@c^0,w,c
  6515  0018B2  A4D8               	btfss	status,2,c
  6516  0018B4  D002               	goto	l4767
  6517                           
  6518                           ;SIM800x.c: 177: return SIM800X_OK;
  6519  0018B6  0E00               	movlw	0
  6520  0018B8  D002               	goto	l365
  6521  0018BA                     l4767:
  6522  0018BA  FFFF               	dw	65535	; assembler added errata NOP
  6523                           
  6524                           ;SIM800x.c: 178: return SIM800X_ERROR;
  6525  0018BC  0E01               	movlw	1
  6526  0018BE                     l365:
  6527  0018BE  FFFF               	dw	65535	; assembler added errata NOP
  6528  0018C0  0012               	return		;funcret
  6529  0018C2  FFFF               	dw	65535	; errata NOP
  6530  0018C4                     __end_of_ProcessResp1:
  6531                           	callstack 0
  6532                           
  6533 ;; *************** function _SIM800xIPGetState *****************
  6534 ;; Defined at:
  6535 ;;		line 786 in file "Src/SIM800x.c"
  6536 ;; Parameters:    Size  Location     Type
  6537 ;;  cid             1    wreg     unsigned char 
  6538 ;;  ip              2   41[COMRAM] PTR unsigned char 
  6539 ;;		 -> SystemInit@ip(20), 
  6540 ;; Auto vars:     Size  Location     Type
  6541 ;;  cid             1   82[COMRAM] unsigned char 
  6542 ;;  i               1   84[COMRAM] unsigned char 
  6543 ;;  len             1   83[COMRAM] unsigned char 
  6544 ;;  str            30   47[COMRAM] unsigned char [30]
  6545 ;;  time1           4   77[COMRAM] unsigned long 
  6546 ;;  res             1   81[COMRAM] enum E2114
  6547 ;;  res1            1    0        enum E2261
  6548 ;; Return value:  Size  Location     Type
  6549 ;;                  1    wreg      enum E2262
  6550 ;; Registers used:
  6551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6552 ;; Tracked objects:
  6553 ;;		On entry : 0/0
  6554 ;;		On exit  : 0/0
  6555 ;;		Unchanged: 0/0
  6556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6557 ;;      Params:         2       0       0       0       0       0       0
  6558 ;;      Locals:        38       0       0       0       0       0       0
  6559 ;;      Temps:          4       0       0       0       0       0       0
  6560 ;;      Totals:        44       0       0       0       0       0       0
  6561 ;;Total ram usage:       44 bytes
  6562 ;; Hardware stack levels used: 1
  6563 ;; Hardware stack levels required when called: 7
  6564 ;; This function calls:
  6565 ;;		_ProcessResp2
  6566 ;;		_SIM800xSDMFlush
  6567 ;;		_SIM800xSDMPrint
  6568 ;;		_SIM800xSDMRxAvailable
  6569 ;;		_SIM800xSDMSendByte
  6570 ;;		_Tick_ms
  6571 ;;		_strlen
  6572 ;; This function is called by:
  6573 ;;		_SystemInit
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576                           
  6577                           	psect	text25
  6578  001480                     __ptext25:
  6579                           	callstack 0
  6580  001480                     _SIM800xIPGetState:
  6581                           	callstack 0
  6582  001480  FFFF               	dw	65535	; assembler added errata NOP
  6583                           
  6584                           ;incstack = 0
  6585                           ;SIM800xIPGetState@cid stored from wreg
  6586  001482  6E53               	movwf	SIM800xIPGetState@cid^0,c
  6587                           
  6588                           ;SIM800x.c: 789: if(cid == 0)
  6589  001484  5053               	movf	SIM800xIPGetState@cid^0,w,c
  6590  001486  B4D8               	btfsc	status,2,c
  6591  001488  D079               	goto	l544
  6592                           
  6593                           ;SIM800x.c: 792: char str[30];;SIM800x.c: 793: SIM800xSDMFlush();
  6594  00148A  EC8D  F010         	call	_SIM800xSDMFlush	;wreg free
  6595                           
  6596                           ;SIM800x.c: 794: SIM800xSDMPrint("AT+SAPBR=2,");
  6597  00148E  0EC2               	movlw	low STR_58
  6598  001490  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  6599  001492  0E7E               	movlw	high STR_58
  6600  001494  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6601  001496  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  6602                           
  6603                           ;SIM800x.c: 795: SIM800xSDMSendByte((uint8_t)((cid & 0x03) + 48));
  6604  00149A  5053               	movf	SIM800xIPGetState@cid^0,w,c
  6605  00149C  0B03               	andlw	3
  6606  00149E  0F30               	addlw	48
  6607  0014A0  ECAC  F010         	call	_SIM800xSDMSendByte
  6608                           
  6609                           ;SIM800x.c: 796: SIM800xSDMSendByte('\r');
  6610  0014A4  0E0D               	movlw	13
  6611  0014A6  ECAC  F010         	call	_SIM800xSDMSendByte
  6612                           
  6613                           ;SIM800x.c: 797: SIM800xIPStatusType res1;;SIM800x.c: 799: uint32_t time1 = Tick_ms();
  6614  0014AA  EC82  F010         	call	_Tick_ms	;wreg free
  6615  0014AE  C00E  F04E         	movff	?_Tick_ms,SIM800xIPGetState@time1
  6616  0014B2  C00F  F04F         	movff	?_Tick_ms+1,SIM800xIPGetState@time1+1
  6617  0014B6  C010  F050         	movff	?_Tick_ms+2,SIM800xIPGetState@time1+2
  6618  0014BA  C011  F051         	movff	?_Tick_ms+3,SIM800xIPGetState@time1+3
  6619                           
  6620                           ;SIM800x.c: 800: while(SIM800xSDMRxAvailable() < 25)
  6621  0014BE  D019               	goto	l5083
  6622  0014C0                     l5079:
  6623  0014C0  FFFF               	dw	65535	; assembler added errata NOP
  6624                           
  6625                           ;SIM800x.c: 801: {;SIM800x.c: 802: if((Tick_ms() - time1) > Tout)
  6626  0014C2  EC82  F010         	call	_Tick_ms	;wreg free
  6627  0014C6  504E               	movf	SIM800xIPGetState@time1^0,w,c
  6628  0014C8  5C0E               	subwf	?_Tick_ms^0,w,c
  6629  0014CA  6E2C               	movwf	??_SIM800xIPGetState^0,c
  6630  0014CC  504F               	movf	(SIM800xIPGetState@time1+1)^0,w,c
  6631  0014CE  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  6632  0014D0  6E2D               	movwf	(??_SIM800xIPGetState+1)^0,c
  6633  0014D2  5050               	movf	(SIM800xIPGetState@time1+2)^0,w,c
  6634  0014D4  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  6635  0014D6  6E2E               	movwf	(??_SIM800xIPGetState+2)^0,c
  6636  0014D8  5051               	movf	(SIM800xIPGetState@time1+3)^0,w,c
  6637  0014DA  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  6638  0014DC  6E2F               	movwf	(??_SIM800xIPGetState+3)^0,c
  6639  0014DE  502C               	movf	??_SIM800xIPGetState^0,w,c
  6640  0014E0  5C64               	subwf	_Tout^0,w,c
  6641  0014E2  502D               	movf	(??_SIM800xIPGetState+1)^0,w,c
  6642  0014E4  5865               	subwfb	(_Tout+1)^0,w,c
  6643  0014E6  502E               	movf	(??_SIM800xIPGetState+2)^0,w,c
  6644  0014E8  5866               	subwfb	(_Tout+2)^0,w,c
  6645  0014EA  502F               	movf	(??_SIM800xIPGetState+3)^0,w,c
  6646  0014EC  5867               	subwfb	(_Tout+3)^0,w,c
  6647  0014EE  A0D8               	btfss	status,0,c
  6648  0014F0  D045               	goto	l544
  6649  0014F2                     l5083:
  6650  0014F2  FFFF               	dw	65535	; assembler added errata NOP
  6651  0014F4  EC24  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  6652  0014F8  5014               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  6653  0014FA  E104               	bnz	u4370
  6654  0014FC  0E19               	movlw	25
  6655  0014FE  5C13               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  6656  001500  A0D8               	btfss	status,0,c
  6657  001502  D7DE               	goto	l5079
  6658  001504                     u4370:
  6659                           
  6660                           ;SIM800x.c: 804: };SIM800x.c: 805: SIM800x_APIStatusType res = ProcessResp2(str);
  6661  001504  0E30               	movlw	low SIM800xIPGetState@str
  6662  001506  6E25               	movwf	ProcessResp2@str^0,c
  6663  001508  0E00               	movlw	high SIM800xIPGetState@str
  6664  00150A  6E26               	movwf	(ProcessResp2@str+1)^0,c
  6665  00150C  EC0A  F00E         	call	_ProcessResp2	;wreg free
  6666  001510  6E52               	movwf	SIM800xIPGetState@res^0,c
  6667                           
  6668                           ;SIM800x.c: 806: if(res == SIM800X_OK)
  6669  001512  5052               	movf	SIM800xIPGetState@res^0,w,c
  6670  001514  A4D8               	btfss	status,2,c
  6671  001516  D032               	goto	l544
  6672                           
  6673                           ;SIM800x.c: 807: {;SIM800x.c: 808: uint8_t len = (uint8_t)(strlen(str) - 1);
  6674  001518  0E30               	movlw	low SIM800xIPGetState@str
  6675  00151A  6E0E               	movwf	strlen@s^0,c
  6676  00151C  0E00               	movlw	high SIM800xIPGetState@str
  6677  00151E  6E0F               	movwf	(strlen@s+1)^0,c
  6678  001520  EC5A  F00F         	call	_strlen	;wreg free
  6679  001524  040E               	decf	?_strlen^0,w,c
  6680  001526  6E54               	movwf	SIM800xIPGetState@len^0,c
  6681                           
  6682                           ;SIM800x.c: 810: for(uint8_t i = 13; i < len; i++)
  6683  001528  0E0D               	movlw	13
  6684  00152A  6E55               	movwf	SIM800xIPGetState@i^0,c
  6685  00152C  D016               	goto	l5099
  6686  00152E                     l5095:
  6687  00152E  FFFF               	dw	65535	; assembler added errata NOP
  6688                           
  6689                           ;SIM800x.c: 811: {;SIM800x.c: 812: ip[i - 13] = str[i];
  6690  001530  0E30               	movlw	low SIM800xIPGetState@str
  6691  001532  2455               	addwf	SIM800xIPGetState@i^0,w,c
  6692  001534  6ED9               	movwf	fsr2l,c
  6693  001536  6ADA               	clrf	fsr2h,c
  6694  001538  0E00               	movlw	high SIM800xIPGetState@str
  6695  00153A  22DA               	addwfc	fsr2h,f,c
  6696  00153C  5055               	movf	SIM800xIPGetState@i^0,w,c
  6697  00153E  242A               	addwf	SIM800xIPGetState@ip^0,w,c
  6698  001540  6E2C               	movwf	??_SIM800xIPGetState^0,c
  6699  001542  0E00               	movlw	0
  6700  001544  202B               	addwfc	(SIM800xIPGetState@ip+1)^0,w,c
  6701  001546  6E2D               	movwf	(??_SIM800xIPGetState+1)^0,c
  6702  001548  0EF3               	movlw	243
  6703  00154A  242C               	addwf	??_SIM800xIPGetState^0,w,c
  6704  00154C  6EE1               	movwf	fsr1l,c
  6705  00154E  0EFF               	movlw	255
  6706  001550  202D               	addwfc	(??_SIM800xIPGetState+1)^0,w,c
  6707  001552  6EE2               	movwf	fsr1h,c
  6708  001554  CFDF FFE7          	movff	indf2,indf1
  6709  001558  2A55               	incf	SIM800xIPGetState@i^0,f,c
  6710  00155A                     l5099:
  6711  00155A  FFFF               	dw	65535	; assembler added errata NOP
  6712  00155C  5054               	movf	SIM800xIPGetState@len^0,w,c
  6713  00155E  5C55               	subwf	SIM800xIPGetState@i^0,w,c
  6714  001560  A0D8               	btfss	status,0,c
  6715  001562  D7E5               	goto	l5095
  6716                           
  6717                           ;SIM800x.c: 813: };SIM800x.c: 814: ip[(uint8_t)(len - 13)] = '\0';
  6718  001564  C054  F02C         	movff	SIM800xIPGetState@len,??_SIM800xIPGetState
  6719  001568  0EF3               	movlw	243
  6720  00156A  262C               	addwf	??_SIM800xIPGetState^0,f,c
  6721  00156C  502C               	movf	??_SIM800xIPGetState^0,w,c
  6722  00156E  242A               	addwf	SIM800xIPGetState@ip^0,w,c
  6723  001570  6ED9               	movwf	fsr2l,c
  6724  001572  0E00               	movlw	0
  6725  001574  202B               	addwfc	(SIM800xIPGetState@ip+1)^0,w,c
  6726  001576  6EDA               	movwf	fsr2h,c
  6727  001578  0E00               	movlw	0
  6728  00157A  6EDF               	movwf	indf2,c
  6729  00157C                     l544:
  6730  00157C  FFFF               	dw	65535	; assembler added errata NOP
  6731  00157E  0012               	return		;funcret
  6732  001580  FFFF               	dw	65535	; errata NOP
  6733  001582                     __end_of_SIM800xIPGetState:
  6734                           	callstack 0
  6735                           
  6736 ;; *************** function _ProcessResp2 *****************
  6737 ;; Defined at:
  6738 ;;		line 182 in file "Src/SIM800x.c"
  6739 ;; Parameters:    Size  Location     Type
  6740 ;;  str             2   36[COMRAM] PTR unsigned char 
  6741 ;;		 -> SIM800xGPRSGetAddress@str(40), SIM800xIPGetState@str(30), SIM800xGetSoftwareRevisionID@str(30), 
  6742 ;; Auto vars:     Size  Location     Type
  6743 ;;  res             2   39[COMRAM] int 
  6744 ;;  c               1   38[COMRAM] unsigned char 
  6745 ;; Return value:  Size  Location     Type
  6746 ;;                  1    wreg      enum E2114
  6747 ;; Registers used:
  6748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6749 ;; Tracked objects:
  6750 ;;		On entry : 0/0
  6751 ;;		On exit  : 0/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6754 ;;      Params:         2       0       0       0       0       0       0
  6755 ;;      Locals:         3       0       0       0       0       0       0
  6756 ;;      Temps:          0       0       0       0       0       0       0
  6757 ;;      Totals:         5       0       0       0       0       0       0
  6758 ;;Total ram usage:        5 bytes
  6759 ;; Hardware stack levels used: 1
  6760 ;; Hardware stack levels required when called: 6
  6761 ;; This function calls:
  6762 ;;		_SIM800xSDMPeek
  6763 ;;		_SIM800xSDMReadF1Pkt
  6764 ;; This function is called by:
  6765 ;;		_SIM800xIPGetState
  6766 ;; This function uses a non-reentrant model
  6767 ;;
  6768                           
  6769                           	psect	text26
  6770  001C14                     __ptext26:
  6771                           	callstack 0
  6772  001C14                     _ProcessResp2:
  6773                           	callstack 0
  6774  001C14  FFFF               	dw	65535	; assembler added errata NOP
  6775                           
  6776                           ;SIM800x.c: 185: int res = SIM800xSDMReadF1Pkt((char*)str);
  6777                           
  6778                           ;incstack = 0
  6779  001C16  C025  F017         	movff	ProcessResp2@str,SIM800xSDMReadF1Pkt@data
  6780  001C1A  C026  F018         	movff	ProcessResp2@str+1,SIM800xSDMReadF1Pkt@data+1
  6781  001C1E  EC27  F009         	call	_SIM800xSDMReadF1Pkt	;wreg free
  6782  001C22  C017  F028         	movff	?_SIM800xSDMReadF1Pkt,ProcessResp2@res
  6783  001C26  C018  F029         	movff	?_SIM800xSDMReadF1Pkt+1,ProcessResp2@res+1
  6784                           
  6785                           ;SIM800x.c: 186: if(res < 0)
  6786  001C2A  AE29               	btfss	(ProcessResp2@res+1)^0,7,c
  6787  001C2C  D002               	goto	l4781
  6788                           
  6789                           ;SIM800x.c: 187: {;SIM800x.c: 188: return SIM800X_TIME_OUT;
  6790  001C2E  0E05               	movlw	5
  6791  001C30  D01C               	goto	l371
  6792  001C32                     l4781:
  6793  001C32  FFFF               	dw	65535	; assembler added errata NOP
  6794                           
  6795                           ;SIM800x.c: 190: else if(res == 0)
  6796  001C34  5028               	movf	ProcessResp2@res^0,w,c
  6797  001C36  1029               	iorwf	(ProcessResp2@res+1)^0,w,c
  6798  001C38  A4D8               	btfss	status,2,c
  6799  001C3A  D002               	goto	l4787
  6800                           
  6801                           ;SIM800x.c: 191: {;SIM800x.c: 192: return SIM800X_INVALID_RESPONSE;
  6802  001C3C  0E09               	movlw	9
  6803  001C3E  D015               	goto	l371
  6804  001C40                     l4787:
  6805  001C40  FFFF               	dw	65535	; assembler added errata NOP
  6806                           
  6807                           ;SIM800x.c: 193: };SIM800x.c: 194: str[res] = '\0';
  6808  001C42  5028               	movf	ProcessResp2@res^0,w,c
  6809  001C44  2425               	addwf	ProcessResp2@str^0,w,c
  6810  001C46  6ED9               	movwf	fsr2l,c
  6811  001C48  5029               	movf	(ProcessResp2@res+1)^0,w,c
  6812  001C4A  2026               	addwfc	(ProcessResp2@str+1)^0,w,c
  6813  001C4C  6EDA               	movwf	fsr2h,c
  6814  001C4E  0E00               	movlw	0
  6815  001C50  6EDF               	movwf	indf2,c
  6816                           
  6817                           ;SIM800x.c: 196: char c = SIM800xSDMPeek(2);
  6818  001C52  0E02               	movlw	2
  6819  001C54  ECCA  F00F         	call	_SIM800xSDMPeek
  6820  001C58  6E27               	movwf	ProcessResp2@c^0,c
  6821                           
  6822                           ;SIM800x.c: 197: if(c == 'O')
  6823  001C5A  0E4F               	movlw	79
  6824  001C5C  1827               	xorwf	ProcessResp2@c^0,w,c
  6825  001C5E  A4D8               	btfss	status,2,c
  6826  001C60  D002               	goto	l4797
  6827                           
  6828                           ;SIM800x.c: 198: return SIM800X_OK;
  6829  001C62  0E00               	movlw	0
  6830  001C64  D002               	goto	l371
  6831  001C66                     l4797:
  6832  001C66  FFFF               	dw	65535	; assembler added errata NOP
  6833                           
  6834                           ;SIM800x.c: 199: return SIM800X_NOT_DEFINED;
  6835  001C68  0E08               	movlw	8
  6836  001C6A                     l371:
  6837  001C6A  FFFF               	dw	65535	; assembler added errata NOP
  6838  001C6C  0012               	return		;funcret
  6839  001C6E  FFFF               	dw	65535	; errata NOP
  6840  001C70                     __end_of_ProcessResp2:
  6841                           	callstack 0
  6842                           
  6843 ;; *************** function _SIM800xSDMPeek *****************
  6844 ;; Defined at:
  6845 ;;		line 217 in file "Src/SIM800x_SDM.c"
  6846 ;; Parameters:    Size  Location     Type
  6847 ;;  idx             1    wreg     unsigned char 
  6848 ;; Auto vars:     Size  Location     Type
  6849 ;;  idx             1   15[COMRAM] unsigned char 
  6850 ;; Return value:  Size  Location     Type
  6851 ;;                  1    wreg      unsigned char 
  6852 ;; Registers used:
  6853 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6854 ;; Tracked objects:
  6855 ;;		On entry : 0/0
  6856 ;;		On exit  : 0/0
  6857 ;;		Unchanged: 0/0
  6858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6859 ;;      Params:         0       0       0       0       0       0       0
  6860 ;;      Locals:         1       0       0       0       0       0       0
  6861 ;;      Temps:          2       0       0       0       0       0       0
  6862 ;;      Totals:         3       0       0       0       0       0       0
  6863 ;;Total ram usage:        3 bytes
  6864 ;; Hardware stack levels used: 1
  6865 ;; Hardware stack levels required when called: 3
  6866 ;; This function calls:
  6867 ;;		Nothing
  6868 ;; This function is called by:
  6869 ;;		_ProcessResp1
  6870 ;;		_ProcessResp2
  6871 ;;		_SIM800xInit
  6872 ;;		_SIM800xHTTPInputData
  6873 ;;		_SIM800xHTTPRead
  6874 ;; This function uses a non-reentrant model
  6875 ;;
  6876                           
  6877                           	psect	text27
  6878  001F94                     __ptext27:
  6879                           	callstack 0
  6880  001F94                     _SIM800xSDMPeek:
  6881                           	callstack 0
  6882  001F94  FFFF               	dw	65535	; assembler added errata NOP
  6883                           
  6884                           ;incstack = 0
  6885                           ;SIM800xSDMPeek@idx stored from wreg
  6886  001F96  6E10               	movwf	SIM800xSDMPeek@idx^0,c
  6887                           
  6888                           ;SIM800x_SDM.c: 220: if((Rxfifoptr + idx) >= Rxfifocurrent)
  6889  001F98  5010               	movf	SIM800xSDMPeek@idx^0,w,c
  6890  001F9A  245C               	addwf	_Rxfifoptr@SIM800x_SDM$F1167^0,w,c	;volatile
  6891  001F9C  6E0E               	movwf	??_SIM800xSDMPeek^0,c
  6892  001F9E  0E00               	movlw	0
  6893  001FA0  205D               	addwfc	(_Rxfifoptr@SIM800x_SDM$F1167+1)^0,w,c	;volatile
  6894  001FA2  6E0F               	movwf	(??_SIM800xSDMPeek+1)^0,c
  6895  001FA4  505A               	movf	_Rxfifocurrent@SIM800x_SDM$F1168^0,w,c	;volatile
  6896  001FA6  5C0E               	subwf	??_SIM800xSDMPeek^0,w,c
  6897  001FA8  505B               	movf	(_Rxfifocurrent@SIM800x_SDM$F1168+1)^0,w,c	;volatile
  6898  001FAA  580F               	subwfb	(??_SIM800xSDMPeek+1)^0,w,c
  6899  001FAC  A0D8               	btfss	status,0,c
  6900  001FAE  D002               	goto	l4523
  6901                           
  6902                           ;SIM800x_SDM.c: 221: return 0xFF;
  6903  001FB0  0EFF               	movlw	255
  6904  001FB2  D010               	goto	l1030
  6905  001FB4                     l4523:
  6906  001FB4  FFFF               	dw	65535	; assembler added errata NOP
  6907                           
  6908                           ;SIM800x_SDM.c: 222: return RxFIFO[Rxfifoptr + idx];
  6909  001FB6  0E00               	movlw	low _RxFIFO@SIM800x_SDM$F1166
  6910  001FB8  6E0E               	movwf	??_SIM800xSDMPeek^0,c
  6911  001FBA  0E03               	movlw	high _RxFIFO@SIM800x_SDM$F1166
  6912  001FBC  6E0F               	movwf	(??_SIM800xSDMPeek+1)^0,c
  6913  001FBE  5010               	movf	SIM800xSDMPeek@idx^0,w,c
  6914  001FC0  260E               	addwf	??_SIM800xSDMPeek^0,f,c
  6915  001FC2  0E00               	movlw	0
  6916  001FC4  220F               	addwfc	(??_SIM800xSDMPeek+1)^0,f,c
  6917  001FC6  505C               	movf	_Rxfifoptr@SIM800x_SDM$F1167^0,w,c	;volatile
  6918  001FC8  240E               	addwf	??_SIM800xSDMPeek^0,w,c
  6919  001FCA  6ED9               	movwf	fsr2l,c
  6920  001FCC  505D               	movf	(_Rxfifoptr@SIM800x_SDM$F1167+1)^0,w,c	;volatile
  6921  001FCE  200F               	addwfc	(??_SIM800xSDMPeek+1)^0,w,c
  6922  001FD0  6EDA               	movwf	fsr2h,c
  6923  001FD2  50DF               	movf	indf2,w,c
  6924  001FD4                     l1030:
  6925  001FD4  FFFF               	dw	65535	; assembler added errata NOP
  6926  001FD6  0012               	return		;funcret
  6927  001FD8  FFFF               	dw	65535	; errata NOP
  6928  001FDA                     __end_of_SIM800xSDMPeek:
  6929                           	callstack 0
  6930                           
  6931 ;; *************** function _SIM800xHTTPSetURL *****************
  6932 ;; Defined at:
  6933 ;;		line 1393 in file "Src/SIM800x.c"
  6934 ;; Parameters:    Size  Location     Type
  6935 ;;  url             2   77[COMRAM] PTR const unsigned char 
  6936 ;;		 -> STR_9(279), 
  6937 ;;  errcode         2   79[COMRAM] PTR unsigned int 
  6938 ;;		 -> SystemInit@err(2), 
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;		None
  6941 ;; Return value:  Size  Location     Type
  6942 ;;                  1    wreg      enum E2115
  6943 ;; Registers used:
  6944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6945 ;; Tracked objects:
  6946 ;;		On entry : 0/0
  6947 ;;		On exit  : 0/0
  6948 ;;		Unchanged: 0/0
  6949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6950 ;;      Params:         4       0       0       0       0       0       0
  6951 ;;      Locals:         0       0       0       0       0       0       0
  6952 ;;      Temps:          0       0       0       0       0       0       0
  6953 ;;      Totals:         4       0       0       0       0       0       0
  6954 ;;Total ram usage:        4 bytes
  6955 ;; Hardware stack levels used: 1
  6956 ;; Hardware stack levels required when called: 7
  6957 ;; This function calls:
  6958 ;;		_ProcessResp4
  6959 ;;		_SIM800xSDMFlush
  6960 ;;		_SIM800xSDMPrint
  6961 ;;		_SIM800xSDMSendByte
  6962 ;;		_strlen
  6963 ;; This function is called by:
  6964 ;;		_SystemInit
  6965 ;; This function uses a non-reentrant model
  6966 ;;
  6967                           
  6968                           	psect	text28
  6969  001D1E                     __ptext28:
  6970                           	callstack 0
  6971  001D1E                     _SIM800xHTTPSetURL:
  6972                           	callstack 0
  6973  001D1E  FFFF               	dw	65535	; assembler added errata NOP
  6974                           
  6975                           ;SIM800x.c: 1396: if(strlen(url) > 500)
  6976                           
  6977                           ;incstack = 0
  6978  001D20  C04E  F00E         	movff	SIM800xHTTPSetURL@url,strlen@s
  6979  001D24  C04F  F00F         	movff	SIM800xHTTPSetURL@url+1,strlen@s+1
  6980  001D28  EC5A  F00F         	call	_strlen	;wreg free
  6981  001D2C  0EF5               	movlw	245
  6982  001D2E  5C0E               	subwf	?_strlen^0,w,c
  6983  001D30  0E01               	movlw	1
  6984  001D32  580F               	subwfb	(?_strlen+1)^0,w,c
  6985  001D34  A0D8               	btfss	status,0,c
  6986  001D36  D002               	goto	l5119
  6987                           
  6988                           ;SIM800x.c: 1397: return SIM800X_ERROR;
  6989  001D38  0E01               	movlw	1
  6990  001D3A  D018               	goto	l723
  6991  001D3C                     l5119:
  6992  001D3C  FFFF               	dw	65535	; assembler added errata NOP
  6993                           
  6994                           ;SIM800x.c: 1399: SIM800xSDMFlush();
  6995  001D3E  EC8D  F010         	call	_SIM800xSDMFlush	;wreg free
  6996                           
  6997                           ;SIM800x.c: 1400: SIM800xSDMPrint("AT+HTTPPARA=\"URL\",");
  6998  001D42  0E54               	movlw	low STR_88
  6999  001D44  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  7000  001D46  0E7D               	movlw	high STR_88
  7001  001D48  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  7002  001D4A  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  7003                           
  7004                           ;SIM800x.c: 1401: SIM800xSDMPrint(url);
  7005  001D4E  C04E  F00F         	movff	SIM800xHTTPSetURL@url,SIM800xSDMPrint@str
  7006  001D52  C04F  F010         	movff	SIM800xHTTPSetURL@url+1,SIM800xSDMPrint@str+1
  7007  001D56  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  7008                           
  7009                           ;SIM800x.c: 1402: SIM800xSDMSendByte('\r');
  7010  001D5A  0E0D               	movlw	13
  7011  001D5C  ECAC  F010         	call	_SIM800xSDMSendByte
  7012                           
  7013                           ;SIM800x.c: 1404: return ProcessResp4(errcode);
  7014  001D60  C050  F02E         	movff	SIM800xHTTPSetURL@errcode,ProcessResp4@ec
  7015  001D64  C051  F02F         	movff	SIM800xHTTPSetURL@errcode+1,ProcessResp4@ec+1
  7016  001D68  ECBE  F009         	call	_ProcessResp4	;wreg free
  7017  001D6C                     l723:
  7018  001D6C  FFFF               	dw	65535	; assembler added errata NOP
  7019  001D6E  0012               	return		;funcret
  7020  001D70  FFFF               	dw	65535	; errata NOP
  7021  001D72                     __end_of_SIM800xHTTPSetURL:
  7022                           	callstack 0
  7023                           
  7024 ;; *************** function _SIM800xHTTPSetContent *****************
  7025 ;; Defined at:
  7026 ;;		line 1510 in file "Src/SIM800x.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;  content         2   77[COMRAM] PTR const unsigned char 
  7029 ;;		 -> STR_10(17), 
  7030 ;;  errcode         2   79[COMRAM] PTR unsigned int 
  7031 ;;		 -> SystemInit@err(2), 
  7032 ;; Auto vars:     Size  Location     Type
  7033 ;;		None
  7034 ;; Return value:  Size  Location     Type
  7035 ;;                  1    wreg      enum E2115
  7036 ;; Registers used:
  7037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7038 ;; Tracked objects:
  7039 ;;		On entry : 0/0
  7040 ;;		On exit  : 0/0
  7041 ;;		Unchanged: 0/0
  7042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7043 ;;      Params:         4       0       0       0       0       0       0
  7044 ;;      Locals:         0       0       0       0       0       0       0
  7045 ;;      Temps:          0       0       0       0       0       0       0
  7046 ;;      Totals:         4       0       0       0       0       0       0
  7047 ;;Total ram usage:        4 bytes
  7048 ;; Hardware stack levels used: 1
  7049 ;; Hardware stack levels required when called: 7
  7050 ;; This function calls:
  7051 ;;		_ProcessResp4
  7052 ;;		_SIM800xSDMFlush
  7053 ;;		_SIM800xSDMPrint
  7054 ;;		_SIM800xSDMSendByte
  7055 ;;		_strlen
  7056 ;; This function is called by:
  7057 ;;		_SystemInit
  7058 ;; This function uses a non-reentrant model
  7059 ;;
  7060                           
  7061                           	psect	text29
  7062  001D72                     __ptext29:
  7063                           	callstack 0
  7064  001D72                     _SIM800xHTTPSetContent:
  7065                           	callstack 0
  7066  001D72  FFFF               	dw	65535	; assembler added errata NOP
  7067                           
  7068                           ;SIM800x.c: 1513: if(strlen(content) > 80)
  7069                           
  7070                           ;incstack = 0
  7071  001D74  C04E  F00E         	movff	SIM800xHTTPSetContent@content,strlen@s
  7072  001D78  C04F  F00F         	movff	SIM800xHTTPSetContent@content+1,strlen@s+1
  7073  001D7C  EC5A  F00F         	call	_strlen	;wreg free
  7074  001D80  500F               	movf	(?_strlen+1)^0,w,c
  7075  001D82  E104               	bnz	u4410
  7076  001D84  0E51               	movlw	81
  7077  001D86  5C0E               	subwf	?_strlen^0,w,c
  7078  001D88  A0D8               	btfss	status,0,c
  7079  001D8A  D002               	goto	l5137
  7080  001D8C                     u4410:
  7081                           
  7082                           ;SIM800x.c: 1514: return SIM800X_ERROR;
  7083  001D8C  0E01               	movlw	1
  7084  001D8E  D018               	goto	l755
  7085  001D90                     l5137:
  7086  001D90  FFFF               	dw	65535	; assembler added errata NOP
  7087                           
  7088                           ;SIM800x.c: 1516: SIM800xSDMFlush();
  7089  001D92  EC8D  F010         	call	_SIM800xSDMFlush	;wreg free
  7090                           
  7091                           ;SIM800x.c: 1517: SIM800xSDMPrint("AT+HTTPPARA=\"CONTENT\",");
  7092  001D96  0E97               	movlw	low STR_96
  7093  001D98  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  7094  001D9A  0E7C               	movlw	high STR_96
  7095  001D9C  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  7096  001D9E  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  7097                           
  7098                           ;SIM800x.c: 1518: SIM800xSDMPrint(content);
  7099  001DA2  C04E  F00F         	movff	SIM800xHTTPSetContent@content,SIM800xSDMPrint@str
  7100  001DA6  C04F  F010         	movff	SIM800xHTTPSetContent@content+1,SIM800xSDMPrint@str+1
  7101  001DAA  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  7102                           
  7103                           ;SIM800x.c: 1519: SIM800xSDMSendByte('\r');
  7104  001DAE  0E0D               	movlw	13
  7105  001DB0  ECAC  F010         	call	_SIM800xSDMSendByte
  7106                           
  7107                           ;SIM800x.c: 1521: return ProcessResp4(errcode);
  7108  001DB4  C050  F02E         	movff	SIM800xHTTPSetContent@errcode,ProcessResp4@ec
  7109  001DB8  C051  F02F         	movff	SIM800xHTTPSetContent@errcode+1,ProcessResp4@ec+1
  7110  001DBC  ECBE  F009         	call	_ProcessResp4	;wreg free
  7111  001DC0                     l755:
  7112  001DC0  FFFF               	dw	65535	; assembler added errata NOP
  7113  001DC2  0012               	return		;funcret
  7114  001DC4  FFFF               	dw	65535	; errata NOP
  7115  001DC6                     __end_of_SIM800xHTTPSetContent:
  7116                           	callstack 0
  7117                           
  7118 ;; *************** function _strlen *****************
  7119 ;; Defined at:
  7120 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\strlen.c"
  7121 ;; Parameters:    Size  Location     Type
  7122 ;;  s               2   13[COMRAM] PTR const unsigned char 
  7123 ;;		 -> SIM800xGPRSGetAddress@str(40), SIM800xIPGetParameters@str(30), SIM800xIPGetState@str(30), txmessage(100), 
  7124 ;;		 -> STR_10(17), STR_9(279), STR_4(9), STR_3(5), 
  7125 ;; Auto vars:     Size  Location     Type
  7126 ;;  cp              2   15[COMRAM] PTR const unsigned char 
  7127 ;;		 -> SIM800xGPRSGetAddress@str(40), SIM800xIPGetParameters@str(30), SIM800xIPGetState@str(30), txmessage(100), 
  7128 ;;		 -> STR_10(17), STR_9(279), STR_4(9), STR_3(5), 
  7129 ;; Return value:  Size  Location     Type
  7130 ;;                  2   13[COMRAM] unsigned int 
  7131 ;; Registers used:
  7132 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7133 ;; Tracked objects:
  7134 ;;		On entry : 0/0
  7135 ;;		On exit  : 0/0
  7136 ;;		Unchanged: 0/0
  7137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7138 ;;      Params:         2       0       0       0       0       0       0
  7139 ;;      Locals:         2       0       0       0       0       0       0
  7140 ;;      Temps:          0       0       0       0       0       0       0
  7141 ;;      Totals:         4       0       0       0       0       0       0
  7142 ;;Total ram usage:        4 bytes
  7143 ;; Hardware stack levels used: 1
  7144 ;; Hardware stack levels required when called: 3
  7145 ;; This function calls:
  7146 ;;		Nothing
  7147 ;; This function is called by:
  7148 ;;		_SIM800xIPSetConnectionType
  7149 ;;		_SIM800xIPSetAPN
  7150 ;;		_SIM800xIPGetState
  7151 ;;		_SIM800xHTTPSetURL
  7152 ;;		_SIM800xHTTPSetContent
  7153 ;;		_SIM800xHTTPInputData
  7154 ;; This function uses a non-reentrant model
  7155 ;;
  7156                           
  7157                           	psect	text30
  7158  001EB4                     __ptext30:
  7159                           	callstack 0
  7160  001EB4                     _strlen:
  7161                           	callstack 0
  7162  001EB4  FFFF               	dw	65535	; assembler added errata NOP
  7163                           
  7164                           ;incstack = 0
  7165  001EB6  C00E  F010         	movff	strlen@s,strlen@cp
  7166  001EBA  C00F  F011         	movff	strlen@s+1,strlen@cp+1
  7167  001EBE  D003               	goto	l4703
  7168  001EC0                     l4701:
  7169  001EC0  FFFF               	dw	65535	; assembler added errata NOP
  7170  001EC2  4A10               	infsnz	strlen@cp^0,f,c
  7171  001EC4  2A11               	incf	(strlen@cp+1)^0,f,c
  7172  001EC6                     l4703:
  7173  001EC6  FFFF               	dw	65535	; assembler added errata NOP
  7174  001EC8  C010  FFF6         	movff	strlen@cp,tblptrl
  7175  001ECC  C011  FFF7         	movff	strlen@cp+1,tblptrh
  7176  001ED0  6AF8               	clrf	tblptru,c
  7177  001ED2  0E05               	movlw	(high __ramtop+-1)
  7178  001ED4  64F7               	cpfsgt	tblptrh,c
  7179  001ED6  D004               	bra	u3867
  7180  001ED8  0008               	tblrd		*
  7181  001EDA  FFFF               	dw	65535	; errata NOP
  7182  001EDC  50F5               	movf	tablat,w,c
  7183  001EDE  D005               	bra	u3860
  7184  001EE0                     u3867:
  7185  001EE0  CFF6 FFE1          	movff	tblptrl,fsr1l
  7186  001EE4  CFF7 FFE2          	movff	tblptrh,fsr1h
  7187  001EE8  50E7               	movf	indf1,w,c
  7188  001EEA                     u3860:
  7189  001EEA  0900               	iorlw	0
  7190  001EEC  A4D8               	btfss	status,2,c
  7191  001EEE  D7E8               	goto	l4701
  7192  001EF0  500E               	movf	strlen@s^0,w,c
  7193  001EF2  5C10               	subwf	strlen@cp^0,w,c
  7194  001EF4  6E0E               	movwf	?_strlen^0,c
  7195  001EF6  500F               	movf	(strlen@s+1)^0,w,c
  7196  001EF8  5811               	subwfb	(strlen@cp+1)^0,w,c
  7197  001EFA  6E0F               	movwf	(?_strlen+1)^0,c
  7198  001EFC  0012               	return		;funcret
  7199  001EFE  FFFF               	dw	65535	; errata NOP
  7200  001F00                     __end_of_strlen:
  7201                           	callstack 0
  7202                           
  7203 ;; *************** function _SIM800xHTTPInit *****************
  7204 ;; Defined at:
  7205 ;;		line 1357 in file "Src/SIM800x.c"
  7206 ;; Parameters:    Size  Location     Type
  7207 ;;  errcode         2   77[COMRAM] PTR unsigned int 
  7208 ;;		 -> SystemInit@err(2), 
  7209 ;; Auto vars:     Size  Location     Type
  7210 ;;		None
  7211 ;; Return value:  Size  Location     Type
  7212 ;;                  1    wreg      enum E2115
  7213 ;; Registers used:
  7214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7215 ;; Tracked objects:
  7216 ;;		On entry : 0/0
  7217 ;;		On exit  : 0/0
  7218 ;;		Unchanged: 0/0
  7219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7220 ;;      Params:         2       0       0       0       0       0       0
  7221 ;;      Locals:         0       0       0       0       0       0       0
  7222 ;;      Temps:          0       0       0       0       0       0       0
  7223 ;;      Totals:         2       0       0       0       0       0       0
  7224 ;;Total ram usage:        2 bytes
  7225 ;; Hardware stack levels used: 1
  7226 ;; Hardware stack levels required when called: 7
  7227 ;; This function calls:
  7228 ;;		_ProcessResp4
  7229 ;;		_SIM800xSDMFlush
  7230 ;;		_SIM800xSDMPrint
  7231 ;; This function is called by:
  7232 ;;		_SystemInit
  7233 ;; This function uses a non-reentrant model
  7234 ;;
  7235                           
  7236                           	psect	text31
  7237  0020CA                     __ptext31:
  7238                           	callstack 0
  7239  0020CA                     _SIM800xHTTPInit:
  7240                           	callstack 0
  7241  0020CA  FFFF               	dw	65535	; assembler added errata NOP
  7242                           
  7243                           ;SIM800x.c: 1360: SIM800xSDMFlush();
  7244                           
  7245                           ;incstack = 0
  7246  0020CC  EC8D  F010         	call	_SIM800xSDMFlush	;wreg free
  7247                           
  7248                           ;SIM800x.c: 1361: SIM800xSDMPrint("AT+HTTPINIT\r");
  7249  0020D0  0E3C               	movlw	low STR_85
  7250  0020D2  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  7251  0020D4  0E7E               	movlw	high STR_85
  7252  0020D6  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  7253  0020D8  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  7254                           
  7255                           ;SIM800x.c: 1362: return ProcessResp4(errcode);
  7256  0020DC  C04E  F02E         	movff	SIM800xHTTPInit@errcode,ProcessResp4@ec
  7257  0020E0  C04F  F02F         	movff	SIM800xHTTPInit@errcode+1,ProcessResp4@ec+1
  7258  0020E4  ECBE  F009         	call	_ProcessResp4	;wreg free
  7259  0020E8  0012               	return		;funcret
  7260  0020EA  FFFF               	dw	65535	; errata NOP
  7261  0020EC                     __end_of_SIM800xHTTPInit:
  7262                           	callstack 0
  7263                           
  7264 ;; *************** function _SIM800xSDMPrint *****************
  7265 ;; Defined at:
  7266 ;;		line 166 in file "Src/SIM800x_SDM.c"
  7267 ;; Parameters:    Size  Location     Type
  7268 ;;  str             2   14[COMRAM] PTR const unsigned char 
  7269 ;;		 -> STR_107(9), STR_106(8), STR_105(10), STR_104(16), 
  7270 ;;		 -> STR_103(13), STR_102(16), STR_101(14), SIM800xHTTPRead@str(30), 
  7271 ;;		 -> SIM800xHTTPAction@str(30), SIM800xHTTPInputData@str(30), STR_97(24), STR_96(23), 
  7272 ;;		 -> SIM800xHTTPSetTimeout@str(30), SIM800xHTTPSetBreakEnd@str(30), SIM800xHTTPSetBreak@str(30), SIM800xHTTPSetRedir@
      +str(25), 
  7273 ;;		 -> SIM800xHTTPSetPort@str(30), STR_90(21), STR_89(18), STR_88(19), 
  7274 ;;		 -> STR_87(19), STR_86(13), STR_85(13), STR_84(10), 
  7275 ;;		 -> STR_83(11), STR_82(6), STR_81(10), STR_80(11), 
  7276 ;;		 -> STR_79(11), STR_78(12), STR_77(12), STR_76(2), 
  7277 ;;		 -> STR_75(3), STR_74(3), STR_73(2), STR_72(13), 
  7278 ;;		 -> SIM800xGPRSGetAddress@str(40), SIM800xGPRSSetDataMode@str(20), STR_69(12), STR_68(12), 
  7279 ;;		 -> STR_67(11), SIM800xGPRSSetQoSRequest@str(40), SIM800xGPRSSetQoSMin@str(40), STR_64(7), 
  7280 ;;		 -> STR_63(12), STR_62(12), STR_61(12), STR_60(11), 
  7281 ;;		 -> SIM800xIPGetParameters@str(30), STR_58(12), STR_57(12), STR_56(12), 
  7282 ;;		 -> STR_55(9), STR_54(12), SIM800xIPSetRate@str(8), STR_52(13), 
  7283 ;;		 -> STR_51(12), STR_50(8), STR_49(12), STR_48(9), 
  7284 ;;		 -> STR_47(12), STR_46(8), STR_45(12), STR_44(12), 
  7285 ;;		 -> STR_43(12), STR_42(9), STR_41(5), STR_40(8), 
  7286 ;;		 -> STR_39(8), STR_38(8), STR_37(8), STR_36(8), 
  7287 ;;		 -> STR_35(4), STR_34(6), SIM800xSetBaudRate@str(15), STR_32(13), 
  7288 ;;		 -> STR_31(6), SIM800xInit@str(15), STR_29(6), STR_28(4), 
  7289 ;;		 -> STR_10(17), STR_9(279), STR_4(9), STR_3(5), 
  7290 ;; Auto vars:     Size  Location     Type
  7291 ;;		None
  7292 ;; Return value:  Size  Location     Type
  7293 ;;                  1    wreg      void 
  7294 ;; Registers used:
  7295 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7296 ;; Tracked objects:
  7297 ;;		On entry : 0/0
  7298 ;;		On exit  : 0/0
  7299 ;;		Unchanged: 0/0
  7300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7301 ;;      Params:         2       0       0       0       0       0       0
  7302 ;;      Locals:         0       0       0       0       0       0       0
  7303 ;;      Temps:          0       0       0       0       0       0       0
  7304 ;;      Totals:         2       0       0       0       0       0       0
  7305 ;;Total ram usage:        2 bytes
  7306 ;; Hardware stack levels used: 1
  7307 ;; Hardware stack levels required when called: 4
  7308 ;; This function calls:
  7309 ;;		_SIM800xSDMSendByte
  7310 ;; This function is called by:
  7311 ;;		_SIM800xInit
  7312 ;;		_SIM800xIPSetConnectionType
  7313 ;;		_SIM800xIPSetAPN
  7314 ;;		_SIM800xIPOpen
  7315 ;;		_SIM800xIPGetState
  7316 ;;		_SIM800xHTTPInit
  7317 ;;		_SIM800xHTTPSetURL
  7318 ;;		_SIM800xHTTPSetContent
  7319 ;;		_SIM800xHTTPInputData
  7320 ;;		_SIM800xHTTPAction
  7321 ;;		_SIM800xHTTPRead
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324                           
  7325                           	psect	text32
  7326  001B56                     __ptext32:
  7327                           	callstack 0
  7328  001B56                     _SIM800xSDMPrint:
  7329                           	callstack 0
  7330  001B56  FFFF               	dw	65535	; assembler added errata NOP
  7331                           
  7332                           ;SIM800x_SDM.c: 168: while(*str!='\0')
  7333                           
  7334                           ;incstack = 0
  7335  001B58  D016               	goto	l4877
  7336  001B5A                     l4873:
  7337  001B5A  FFFF               	dw	65535	; assembler added errata NOP
  7338                           
  7339                           ;SIM800x_SDM.c: 169: {;SIM800x_SDM.c: 170: SIM800xSDMSendByte(*(str++));
  7340  001B5C  C00F  FFF6         	movff	SIM800xSDMPrint@str,tblptrl
  7341  001B60  C010  FFF7         	movff	SIM800xSDMPrint@str+1,tblptrh
  7342  001B64  6AF8               	clrf	tblptru,c
  7343  001B66  0E05               	movlw	(high __ramtop+-1)
  7344  001B68  64F7               	cpfsgt	tblptrh,c
  7345  001B6A  D004               	bra	u4117
  7346  001B6C  0008               	tblrd		*
  7347  001B6E  FFFF               	dw	65535	; errata NOP
  7348  001B70  50F5               	movf	tablat,w,c
  7349  001B72  D005               	bra	u4110
  7350  001B74                     u4117:
  7351  001B74  CFF6 FFE1          	movff	tblptrl,fsr1l
  7352  001B78  CFF7 FFE2          	movff	tblptrh,fsr1h
  7353  001B7C  50E7               	movf	indf1,w,c
  7354  001B7E                     u4110:
  7355  001B7E  ECAC  F010         	call	_SIM800xSDMSendByte
  7356  001B82  4A0F               	infsnz	SIM800xSDMPrint@str^0,f,c
  7357  001B84  2A10               	incf	(SIM800xSDMPrint@str+1)^0,f,c
  7358  001B86                     l4877:
  7359  001B86  FFFF               	dw	65535	; assembler added errata NOP
  7360  001B88  C00F  FFF6         	movff	SIM800xSDMPrint@str,tblptrl
  7361  001B8C  C010  FFF7         	movff	SIM800xSDMPrint@str+1,tblptrh
  7362  001B90  6AF8               	clrf	tblptru,c
  7363  001B92  0E05               	movlw	(high __ramtop+-1)
  7364  001B94  64F7               	cpfsgt	tblptrh,c
  7365  001B96  D004               	bra	u4127
  7366  001B98  0008               	tblrd		*
  7367  001B9A  FFFF               	dw	65535	; errata NOP
  7368  001B9C  50F5               	movf	tablat,w,c
  7369  001B9E  D005               	bra	u4120
  7370  001BA0                     u4127:
  7371  001BA0  CFF6 FFE1          	movff	tblptrl,fsr1l
  7372  001BA4  CFF7 FFE2          	movff	tblptrh,fsr1h
  7373  001BA8  50E7               	movf	indf1,w,c
  7374  001BAA                     u4120:
  7375  001BAA  0900               	iorlw	0
  7376  001BAC  B4D8               	btfsc	status,2,c
  7377  001BAE  0012               	return		;funcret
  7378  001BB0  FFFF               	dw	65535	; assembler added errata NOP
  7379  001BB2  D7D3               	goto	l4873
  7380  001BB4  FFFF               	dw	65535	; errata NOP
  7381  001BB6                     __end_of_SIM800xSDMPrint:
  7382                           	callstack 0
  7383                           
  7384 ;; *************** function _SIM800xSDMSendByte *****************
  7385 ;; Defined at:
  7386 ;;		line 126 in file "Src/SIM800x_SDM.c"
  7387 ;; Parameters:    Size  Location     Type
  7388 ;;  data            1    wreg     unsigned char 
  7389 ;; Auto vars:     Size  Location     Type
  7390 ;;  data            1   13[COMRAM] unsigned char 
  7391 ;; Return value:  Size  Location     Type
  7392 ;;                  1    wreg      void 
  7393 ;; Registers used:
  7394 ;;		wreg
  7395 ;; Tracked objects:
  7396 ;;		On entry : 0/0
  7397 ;;		On exit  : 0/0
  7398 ;;		Unchanged: 0/0
  7399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7400 ;;      Params:         0       0       0       0       0       0       0
  7401 ;;      Locals:         1       0       0       0       0       0       0
  7402 ;;      Temps:          0       0       0       0       0       0       0
  7403 ;;      Totals:         1       0       0       0       0       0       0
  7404 ;;Total ram usage:        1 bytes
  7405 ;; Hardware stack levels used: 1
  7406 ;; Hardware stack levels required when called: 3
  7407 ;; This function calls:
  7408 ;;		Nothing
  7409 ;; This function is called by:
  7410 ;;		_SIM800xIPSetConnectionType
  7411 ;;		_SIM800xIPSetAPN
  7412 ;;		_SIM800xIPOpen
  7413 ;;		_SIM800xIPGetState
  7414 ;;		_SIM800xHTTPSetURL
  7415 ;;		_SIM800xHTTPSetContent
  7416 ;;		_SIM800xSDMPrint
  7417 ;; This function uses a non-reentrant model
  7418 ;;
  7419                           
  7420                           	psect	text33
  7421  002158                     __ptext33:
  7422                           	callstack 0
  7423  002158                     _SIM800xSDMSendByte:
  7424                           	callstack 0
  7425  002158  FFFF               	dw	65535	; assembler added errata NOP
  7426                           
  7427                           ;incstack = 0
  7428                           ;SIM800xSDMSendByte@data stored from wreg
  7429  00215A  6E0E               	movwf	SIM800xSDMSendByte@data^0,c
  7430  00215C  FFFF               	dw	65535	; assembler added errata NOP
  7431                           
  7432                           ;SIM800x_SDM.c: 136: while(TXSTAbits.TRMT == 0); TXREG = data;;
  7433  00215E  A2AC               	btfss	172,1,c	;volatile
  7434  002160  D7FD               	goto	l4575
  7435  002162  C00E  FFAD         	movff	SIM800xSDMSendByte@data,4013	;volatile
  7436  002166  0012               	return		;funcret
  7437  002168  FFFF               	dw	65535	; errata NOP
  7438  00216A                     __end_of_SIM800xSDMSendByte:
  7439                           	callstack 0
  7440                           
  7441 ;; *************** function _ProcessResp4 *****************
  7442 ;; Defined at:
  7443 ;;		line 222 in file "Src/SIM800x.c"
  7444 ;; Parameters:    Size  Location     Type
  7445 ;;  ec              2   45[COMRAM] PTR unsigned int 
  7446 ;;		 -> SystemInit@err(2), 
  7447 ;; Auto vars:     Size  Location     Type
  7448 ;;  str            20   51[COMRAM] unsigned char [20]
  7449 ;;  time            4   71[COMRAM] unsigned long 
  7450 ;;  res             2   75[COMRAM] int 
  7451 ;; Return value:  Size  Location     Type
  7452 ;;                  1    wreg      enum E2114
  7453 ;; Registers used:
  7454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7455 ;; Tracked objects:
  7456 ;;		On entry : 0/0
  7457 ;;		On exit  : 0/0
  7458 ;;		Unchanged: 0/0
  7459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7460 ;;      Params:         2       0       0       0       0       0       0
  7461 ;;      Locals:        26       0       0       0       0       0       0
  7462 ;;      Temps:          4       0       0       0       0       0       0
  7463 ;;      Totals:        32       0       0       0       0       0       0
  7464 ;;Total ram usage:       32 bytes
  7465 ;; Hardware stack levels used: 1
  7466 ;; Hardware stack levels required when called: 6
  7467 ;; This function calls:
  7468 ;;		_SIM800xSDMReadF1Pkt
  7469 ;;		_SIM800xSDMRxAvailable
  7470 ;;		_StrToInt
  7471 ;;		_Tick_ms
  7472 ;; This function is called by:
  7473 ;;		_SIM800xHTTPInit
  7474 ;;		_SIM800xHTTPSetURL
  7475 ;;		_SIM800xHTTPSetContent
  7476 ;; This function uses a non-reentrant model
  7477 ;;
  7478                           
  7479                           	psect	text34
  7480  00137C                     __ptext34:
  7481                           	callstack 0
  7482  00137C                     _ProcessResp4:
  7483                           	callstack 0
  7484  00137C  FFFF               	dw	65535	; assembler added errata NOP
  7485                           
  7486                           ;SIM800x.c: 224: uint32_t time = Tick_ms();
  7487                           
  7488                           ;incstack = 0
  7489  00137E  EC82  F010         	call	_Tick_ms	;wreg free
  7490  001382  C00E  F048         	movff	?_Tick_ms,ProcessResp4@time
  7491  001386  C00F  F049         	movff	?_Tick_ms+1,ProcessResp4@time+1
  7492  00138A  C010  F04A         	movff	?_Tick_ms+2,ProcessResp4@time+2
  7493  00138E  C011  F04B         	movff	?_Tick_ms+3,ProcessResp4@time+3
  7494                           
  7495                           ;SIM800x.c: 225: while(SIM800xSDMRxAvailable() < 6)
  7496  001392  D01C               	goto	l4809
  7497  001394                     l4803:
  7498  001394  FFFF               	dw	65535	; assembler added errata NOP
  7499                           
  7500                           ;SIM800x.c: 226: {;SIM800x.c: 227: if((Tick_ms() - time) > Tout)
  7501  001396  EC82  F010         	call	_Tick_ms	;wreg free
  7502  00139A  5048               	movf	ProcessResp4@time^0,w,c
  7503  00139C  5C0E               	subwf	?_Tick_ms^0,w,c
  7504  00139E  6E30               	movwf	??_ProcessResp4^0,c
  7505  0013A0  5049               	movf	(ProcessResp4@time+1)^0,w,c
  7506  0013A2  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  7507  0013A4  6E31               	movwf	(??_ProcessResp4+1)^0,c
  7508  0013A6  504A               	movf	(ProcessResp4@time+2)^0,w,c
  7509  0013A8  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  7510  0013AA  6E32               	movwf	(??_ProcessResp4+2)^0,c
  7511  0013AC  504B               	movf	(ProcessResp4@time+3)^0,w,c
  7512  0013AE  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  7513  0013B0  6E33               	movwf	(??_ProcessResp4+3)^0,c
  7514  0013B2  5030               	movf	??_ProcessResp4^0,w,c
  7515  0013B4  5C64               	subwf	_Tout^0,w,c
  7516  0013B6  5031               	movf	(??_ProcessResp4+1)^0,w,c
  7517  0013B8  5865               	subwfb	(_Tout+1)^0,w,c
  7518  0013BA  5032               	movf	(??_ProcessResp4+2)^0,w,c
  7519  0013BC  5866               	subwfb	(_Tout+2)^0,w,c
  7520  0013BE  5033               	movf	(??_ProcessResp4+3)^0,w,c
  7521  0013C0  5867               	subwfb	(_Tout+3)^0,w,c
  7522  0013C2  B0D8               	btfsc	status,0,c
  7523  0013C4  D003               	goto	l4809
  7524  0013C6                     u4010:
  7525  0013C6  FFFF               	dw	65535	; assembler added errata NOP
  7526                           
  7527                           ;SIM800x.c: 228: {;SIM800x.c: 229: return SIM800X_TIME_OUT;
  7528  0013C8  0E05               	movlw	5
  7529  0013CA  D057               	goto	l386
  7530  0013CC                     l4809:
  7531  0013CC  FFFF               	dw	65535	; assembler added errata NOP
  7532  0013CE  EC24  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  7533  0013D2  5014               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  7534  0013D4  E104               	bnz	u4020
  7535  0013D6  0E06               	movlw	6
  7536  0013D8  5C13               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  7537  0013DA  A0D8               	btfss	status,0,c
  7538  0013DC  D7DB               	goto	l4803
  7539  0013DE                     u4020:
  7540                           
  7541                           ;SIM800x.c: 230: };SIM800x.c: 231: };SIM800x.c: 232: char str[20] = {0, 0, 0, 0};
  7542  0013DE  EE20  F034         	lfsr	2,ProcessResp4@str
  7543  0013E2  0E13               	movlw	19
  7544  0013E4                     u4031:
  7545  0013E4  6ADE               	clrf	postinc2,c
  7546  0013E6  06E8               	decf	wreg,f,c
  7547  0013E8  E2FD               	bc	u4031
  7548                           
  7549                           ;SIM800x.c: 235: int res = SIM800xSDMReadF1Pkt(str);
  7550  0013EA  0E34               	movlw	low ProcessResp4@str
  7551  0013EC  6E17               	movwf	SIM800xSDMReadF1Pkt@data^0,c
  7552  0013EE  0E00               	movlw	high ProcessResp4@str
  7553  0013F0  6E18               	movwf	(SIM800xSDMReadF1Pkt@data+1)^0,c
  7554  0013F2  EC27  F009         	call	_SIM800xSDMReadF1Pkt	;wreg free
  7555  0013F6  C017  F04C         	movff	?_SIM800xSDMReadF1Pkt,ProcessResp4@res
  7556  0013FA  C018  F04D         	movff	?_SIM800xSDMReadF1Pkt+1,ProcessResp4@res+1
  7557                           
  7558                           ;SIM800x.c: 236: if(res < 0)
  7559  0013FE  BE4D               	btfsc	(ProcessResp4@res+1)^0,7,c
  7560  001400  D7E2               	goto	u4010
  7561                           
  7562                           ;SIM800x.c: 240: else if(str[0] == 'O')
  7563  001402  0E4F               	movlw	79
  7564  001404  1834               	xorwf	ProcessResp4@str^0,w,c
  7565  001406  A4D8               	btfss	status,2,c
  7566  001408  D002               	goto	l4831
  7567                           
  7568                           ;SIM800x.c: 241: {;SIM800x.c: 242: return SIM800X_OK;
  7569  00140A  0E00               	movlw	0
  7570  00140C  D036               	goto	l386
  7571  00140E                     l4831:
  7572  00140E  FFFF               	dw	65535	; assembler added errata NOP
  7573                           
  7574                           ;SIM800x.c: 244: else if(str[0] == 'E')
  7575  001410  0E45               	movlw	69
  7576  001412  1834               	xorwf	ProcessResp4@str^0,w,c
  7577  001414  A4D8               	btfss	status,2,c
  7578  001416  D002               	goto	l4839
  7579                           
  7580                           ;SIM800x.c: 245: {;SIM800x.c: 246: return SIM800X_ERROR;
  7581  001418  0E01               	movlw	1
  7582  00141A  D02F               	goto	l386
  7583  00141C                     l4839:
  7584  00141C  FFFF               	dw	65535	; assembler added errata NOP
  7585                           
  7586                           ;SIM800x.c: 248: else if(str[0] == '+')
  7587  00141E  0E2B               	movlw	43
  7588  001420  1834               	xorwf	ProcessResp4@str^0,w,c
  7589  001422  A4D8               	btfss	status,2,c
  7590  001424  D01A               	goto	l393
  7591                           
  7592                           ;SIM800x.c: 249: {;SIM800x.c: 250: str[(uint8_t)res] = '\0';
  7593  001426  0E34               	movlw	low ProcessResp4@str
  7594  001428  244C               	addwf	ProcessResp4@res^0,w,c
  7595  00142A  6ED9               	movwf	fsr2l,c
  7596  00142C  6ADA               	clrf	fsr2h,c
  7597  00142E  0E00               	movlw	high ProcessResp4@str
  7598  001430  22DA               	addwfc	fsr2h,f,c
  7599  001432  0E00               	movlw	0
  7600  001434  6EDF               	movwf	indf2,c
  7601                           
  7602                           ;SIM800x.c: 251: *ec = (uint16_t)StrToInt(str, 12, (uint16_t)(res - 1));
  7603  001436  0E34               	movlw	low ProcessResp4@str
  7604  001438  6E1A               	movwf	StrToInt@str^0,c
  7605  00143A  0E00               	movlw	high ProcessResp4@str
  7606  00143C  6E1B               	movwf	(StrToInt@str+1)^0,c
  7607  00143E  0E0C               	movlw	12
  7608  001440  6E1C               	movwf	StrToInt@start^0,c
  7609  001442  044C               	decf	ProcessResp4@res^0,w,c
  7610  001444  6E1D               	movwf	StrToInt@stop^0,c
  7611  001446  ECBD  F007         	call	_StrToInt	;wreg free
  7612  00144A  C02E  FFD9         	movff	ProcessResp4@ec,fsr2l
  7613  00144E  C02F  FFDA         	movff	ProcessResp4@ec+1,fsr2h
  7614  001452  C01A  FFDE         	movff	?_StrToInt,postinc2
  7615  001456  C01B  FFDD         	movff	?_StrToInt+1,postdec2
  7616  00145A                     l393:
  7617  00145A  FFFF               	dw	65535	; assembler added errata NOP
  7618                           
  7619                           ;SIM800x.c: 252: };SIM800x.c: 254: if(str[3] == 'E')
  7620  00145C  0E45               	movlw	69
  7621  00145E  1837               	xorwf	(ProcessResp4@str+3)^0,w,c
  7622  001460  A4D8               	btfss	status,2,c
  7623  001462  D002               	goto	l4851
  7624                           
  7625                           ;SIM800x.c: 255: return SIM800X_CME_ERROR;
  7626  001464  0E02               	movlw	2
  7627  001466  D009               	goto	l386
  7628  001468                     l4851:
  7629  001468  FFFF               	dw	65535	; assembler added errata NOP
  7630                           
  7631                           ;SIM800x.c: 256: if(str[3] == 'S')
  7632  00146A  0E53               	movlw	83
  7633  00146C  1837               	xorwf	(ProcessResp4@str+3)^0,w,c
  7634  00146E  A4D8               	btfss	status,2,c
  7635  001470  D002               	goto	l4857
  7636                           
  7637                           ;SIM800x.c: 257: return SIM800X_CMS_ERROR;
  7638  001472  0E03               	movlw	3
  7639  001474  D002               	goto	l386
  7640  001476                     l4857:
  7641  001476  FFFF               	dw	65535	; assembler added errata NOP
  7642                           
  7643                           ;SIM800x.c: 259: return SIM800X_INVALID_RESPONSE;
  7644  001478  0E09               	movlw	9
  7645  00147A                     l386:
  7646  00147A  FFFF               	dw	65535	; assembler added errata NOP
  7647  00147C  0012               	return		;funcret
  7648  00147E  FFFF               	dw	65535	; errata NOP
  7649  001480                     __end_of_ProcessResp4:
  7650                           	callstack 0
  7651                           
  7652 ;; *************** function _StrToInt *****************
  7653 ;; Defined at:
  7654 ;;		line 131 in file "Src/SIM800x.c"
  7655 ;; Parameters:    Size  Location     Type
  7656 ;;  str             2   25[COMRAM] PTR const unsigned char 
  7657 ;;		 -> SIM800x3GPPGetSubscriberNumber@str(40), SIM800x3GPPGetSignalQuality@str(20), SIM800x3GPPGetOperatorName@str(40),
      + SIM800xHTTPReadHeader@str(30), 
  7658 ;;		 -> SIM800xHTTPReadState@str(30), SIM800xHTTPRead@str(30), SIM800xHTTPAction@str(30), SIM800xHTTPInputData@str(30), 
  7659 ;;		 -> SIM800xGPRSGetNRegState@str(20), SIM800xGPRSSetDataMode@str(20), SIM800xGetIMSI@str(20), ProcessResp4@str(20), 
  7660 ;;  start           1   27[COMRAM] unsigned char 
  7661 ;;  stop            1   28[COMRAM] unsigned char 
  7662 ;; Auto vars:     Size  Location     Type
  7663 ;;  j               1   38[COMRAM] unsigned char 
  7664 ;;  i               1   44[COMRAM] unsigned char 
  7665 ;;  po              4   40[COMRAM] unsigned long 
  7666 ;;  val             4   34[COMRAM] unsigned long 
  7667 ;;  ctrl            1   39[COMRAM] unsigned char 
  7668 ;; Return value:  Size  Location     Type
  7669 ;;                  4   25[COMRAM] unsigned long 
  7670 ;; Registers used:
  7671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7672 ;; Tracked objects:
  7673 ;;		On entry : 0/0
  7674 ;;		On exit  : 0/0
  7675 ;;		Unchanged: 0/0
  7676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7677 ;;      Params:         4       0       0       0       0       0       0
  7678 ;;      Locals:        11       0       0       0       0       0       0
  7679 ;;      Temps:          5       0       0       0       0       0       0
  7680 ;;      Totals:        20       0       0       0       0       0       0
  7681 ;;Total ram usage:       20 bytes
  7682 ;; Hardware stack levels used: 1
  7683 ;; Hardware stack levels required when called: 4
  7684 ;; This function calls:
  7685 ;;		___lmul
  7686 ;; This function is called by:
  7687 ;;		_ProcessResp4
  7688 ;;		_SIM800xHTTPInputData
  7689 ;;		_SIM800xHTTPAction
  7690 ;;		_SIM800xHTTPRead
  7691 ;; This function uses a non-reentrant model
  7692 ;;
  7693                           
  7694                           	psect	text35
  7695  000F7A                     __ptext35:
  7696                           	callstack 0
  7697  000F7A                     _StrToInt:
  7698                           	callstack 0
  7699  000F7A  FFFF               	dw	65535	; assembler added errata NOP
  7700                           
  7701                           ;SIM800x.c: 134: uint32_t val = 0, po = 1;
  7702                           
  7703                           ;incstack = 0
  7704  000F7C  0E00               	movlw	0
  7705  000F7E  6E23               	movwf	StrToInt@val^0,c
  7706  000F80  0E00               	movlw	0
  7707  000F82  6E24               	movwf	(StrToInt@val+1)^0,c
  7708  000F84  0E00               	movlw	0
  7709  000F86  6E25               	movwf	(StrToInt@val+2)^0,c
  7710  000F88  0E00               	movlw	0
  7711  000F8A  6E26               	movwf	(StrToInt@val+3)^0,c
  7712  000F8C  0E01               	movlw	1
  7713  000F8E  6E29               	movwf	StrToInt@po^0,c
  7714  000F90  0E00               	movlw	0
  7715  000F92  6E2A               	movwf	(StrToInt@po+1)^0,c
  7716  000F94  0E00               	movlw	0
  7717  000F96  6E2B               	movwf	(StrToInt@po+2)^0,c
  7718  000F98  0E00               	movlw	0
  7719  000F9A  6E2C               	movwf	(StrToInt@po+3)^0,c
  7720                           
  7721                           ;SIM800x.c: 135: uint8_t ctrl = 0;
  7722  000F9C  0E00               	movlw	0
  7723  000F9E  6E28               	movwf	StrToInt@ctrl^0,c
  7724                           
  7725                           ;SIM800x.c: 137: for(uint8_t i = start;i < stop + 1; i++)
  7726  000FA0  C01C  F02D         	movff	StrToInt@start,StrToInt@i
  7727  000FA4  D095               	goto	l4515
  7728  000FA6                     l4485:
  7729  000FA6  FFFF               	dw	65535	; assembler added errata NOP
  7730                           
  7731                           ;SIM800x.c: 138: {;SIM800x.c: 140: if((str[i] >= '0' && str[i] <= '9'))
  7732  000FA8  502D               	movf	StrToInt@i^0,w,c
  7733  000FAA  241A               	addwf	StrToInt@str^0,w,c
  7734  000FAC  6ED9               	movwf	fsr2l,c
  7735  000FAE  0E00               	movlw	0
  7736  000FB0  201B               	addwfc	(StrToInt@str+1)^0,w,c
  7737  000FB2  6EDA               	movwf	fsr2h,c
  7738  000FB4  0E2F               	movlw	47
  7739  000FB6  64DF               	cpfsgt	indf2,c
  7740  000FB8  D072               	goto	l4503
  7741  000FBA  502D               	movf	StrToInt@i^0,w,c
  7742  000FBC  241A               	addwf	StrToInt@str^0,w,c
  7743  000FBE  6ED9               	movwf	fsr2l,c
  7744  000FC0  0E00               	movlw	0
  7745  000FC2  201B               	addwfc	(StrToInt@str+1)^0,w,c
  7746  000FC4  6EDA               	movwf	fsr2h,c
  7747  000FC6  0E3A               	movlw	58
  7748  000FC8  60DF               	cpfslt	indf2,c
  7749  000FCA  D069               	goto	l4503
  7750                           
  7751                           ;SIM800x.c: 141: {;SIM800x.c: 143: ctrl = 1;
  7752  000FCC  0E01               	movlw	1
  7753  000FCE  6E28               	movwf	StrToInt@ctrl^0,c
  7754                           
  7755                           ;SIM800x.c: 145: for(uint8_t j = 0;j < stop - i;j++)
  7756  000FD0  0E00               	movlw	0
  7757  000FD2  6E27               	movwf	StrToInt@j^0,c
  7758  000FD4  D01C               	goto	l4495
  7759  000FD6                     l4491:
  7760  000FD6  FFFF               	dw	65535	; assembler added errata NOP
  7761                           
  7762                           ;SIM800x.c: 146: po = po * 10;
  7763  000FD8  C029  F00E         	movff	StrToInt@po,___lmul@multiplier
  7764  000FDC  C02A  F00F         	movff	StrToInt@po+1,___lmul@multiplier+1
  7765  000FE0  C02B  F010         	movff	StrToInt@po+2,___lmul@multiplier+2
  7766  000FE4  C02C  F011         	movff	StrToInt@po+3,___lmul@multiplier+3
  7767  000FE8  0E0A               	movlw	10
  7768  000FEA  6E12               	movwf	___lmul@multiplicand^0,c
  7769  000FEC  0E00               	movlw	0
  7770  000FEE  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  7771  000FF0  0E00               	movlw	0
  7772  000FF2  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  7773  000FF4  0E00               	movlw	0
  7774  000FF6  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  7775  000FF8  ECDB  F00D         	call	___lmul	;wreg free
  7776  000FFC  C00E  F029         	movff	?___lmul,StrToInt@po
  7777  001000  C00F  F02A         	movff	?___lmul+1,StrToInt@po+1
  7778  001004  C010  F02B         	movff	?___lmul+2,StrToInt@po+2
  7779  001008  C011  F02C         	movff	?___lmul+3,StrToInt@po+3
  7780  00100C  2A27               	incf	StrToInt@j^0,f,c
  7781  00100E                     l4495:
  7782  00100E  FFFF               	dw	65535	; assembler added errata NOP
  7783  001010  502D               	movf	StrToInt@i^0,w,c
  7784  001012  C01D  F01E         	movff	StrToInt@stop,??_StrToInt
  7785  001016  6A1F               	clrf	(??_StrToInt+1)^0,c
  7786  001018  5E1E               	subwf	??_StrToInt^0,f,c
  7787  00101A  0E00               	movlw	0
  7788  00101C  5A1F               	subwfb	(??_StrToInt+1)^0,f,c
  7789  00101E  5027               	movf	StrToInt@j^0,w,c
  7790  001020  6E20               	movwf	(??_StrToInt+2)^0,c
  7791  001022  6A21               	clrf	(??_StrToInt+3)^0,c
  7792  001024  501E               	movf	??_StrToInt^0,w,c
  7793  001026  5C20               	subwf	(??_StrToInt+2)^0,w,c
  7794  001028  5021               	movf	(??_StrToInt+3)^0,w,c
  7795  00102A  0A80               	xorlw	128
  7796  00102C  6E22               	movwf	(??_StrToInt+4)^0,c
  7797  00102E  501F               	movf	(??_StrToInt+1)^0,w,c
  7798  001030  0A80               	xorlw	128
  7799  001032  5822               	subwfb	(??_StrToInt+4)^0,w,c
  7800  001034  A0D8               	btfss	status,0,c
  7801  001036  D7CF               	goto	l4491
  7802                           
  7803                           ;SIM800x.c: 148: if(str[i] >= '0' && str[i] <= '9')
  7804  001038  502D               	movf	StrToInt@i^0,w,c
  7805  00103A  241A               	addwf	StrToInt@str^0,w,c
  7806  00103C  6ED9               	movwf	fsr2l,c
  7807  00103E  0E00               	movlw	0
  7808  001040  201B               	addwfc	(StrToInt@str+1)^0,w,c
  7809  001042  6EDA               	movwf	fsr2h,c
  7810  001044  0E2F               	movlw	47
  7811  001046  64DF               	cpfsgt	indf2,c
  7812  001048  D02A               	goto	l4503
  7813  00104A  502D               	movf	StrToInt@i^0,w,c
  7814  00104C  241A               	addwf	StrToInt@str^0,w,c
  7815  00104E  6ED9               	movwf	fsr2l,c
  7816  001050  0E00               	movlw	0
  7817  001052  201B               	addwfc	(StrToInt@str+1)^0,w,c
  7818  001054  6EDA               	movwf	fsr2h,c
  7819  001056  0E3A               	movlw	58
  7820  001058  60DF               	cpfslt	indf2,c
  7821  00105A  D021               	goto	l4503
  7822                           
  7823                           ;SIM800x.c: 149: val += (uint32_t)((uint8_t)(str[i] - 48) * po);
  7824  00105C  502D               	movf	StrToInt@i^0,w,c
  7825  00105E  241A               	addwf	StrToInt@str^0,w,c
  7826  001060  6ED9               	movwf	fsr2l,c
  7827  001062  0E00               	movlw	0
  7828  001064  201B               	addwfc	(StrToInt@str+1)^0,w,c
  7829  001066  6EDA               	movwf	fsr2h,c
  7830  001068  50DF               	movf	indf2,w,c
  7831  00106A  6E1E               	movwf	??_StrToInt^0,c
  7832  00106C  0ED0               	movlw	208
  7833  00106E  261E               	addwf	??_StrToInt^0,f,c
  7834  001070  501E               	movf	??_StrToInt^0,w,c
  7835  001072  6E0E               	movwf	___lmul@multiplier^0,c
  7836  001074  6A0F               	clrf	(___lmul@multiplier+1)^0,c
  7837  001076  6A10               	clrf	(___lmul@multiplier+2)^0,c
  7838  001078  6A11               	clrf	(___lmul@multiplier+3)^0,c
  7839  00107A  C029  F012         	movff	StrToInt@po,___lmul@multiplicand
  7840  00107E  C02A  F013         	movff	StrToInt@po+1,___lmul@multiplicand+1
  7841  001082  C02B  F014         	movff	StrToInt@po+2,___lmul@multiplicand+2
  7842  001086  C02C  F015         	movff	StrToInt@po+3,___lmul@multiplicand+3
  7843  00108A  ECDB  F00D         	call	___lmul	;wreg free
  7844  00108E  500E               	movf	?___lmul^0,w,c
  7845  001090  2623               	addwf	StrToInt@val^0,f,c
  7846  001092  500F               	movf	(?___lmul+1)^0,w,c
  7847  001094  2224               	addwfc	(StrToInt@val+1)^0,f,c
  7848  001096  5010               	movf	(?___lmul+2)^0,w,c
  7849  001098  2225               	addwfc	(StrToInt@val+2)^0,f,c
  7850  00109A  5011               	movf	(?___lmul+3)^0,w,c
  7851  00109C  2226               	addwfc	(StrToInt@val+3)^0,f,c
  7852  00109E                     l4503:
  7853  00109E  FFFF               	dw	65535	; assembler added errata NOP
  7854                           
  7855                           ;SIM800x.c: 151: };SIM800x.c: 153: po = 1;
  7856  0010A0  0E01               	movlw	1
  7857  0010A2  6E29               	movwf	StrToInt@po^0,c
  7858  0010A4  0E00               	movlw	0
  7859  0010A6  6E2A               	movwf	(StrToInt@po+1)^0,c
  7860  0010A8  0E00               	movlw	0
  7861  0010AA  6E2B               	movwf	(StrToInt@po+2)^0,c
  7862  0010AC  0E00               	movlw	0
  7863  0010AE  6E2C               	movwf	(StrToInt@po+3)^0,c
  7864                           
  7865                           ;SIM800x.c: 155: if(!ctrl)
  7866  0010B0  5028               	movf	StrToInt@ctrl^0,w,c
  7867  0010B2  A4D8               	btfss	status,2,c
  7868  0010B4  D009               	goto	l4511
  7869                           
  7870                           ;SIM800x.c: 156: return 0;
  7871  0010B6  0E00               	movlw	0
  7872  0010B8  6E1A               	movwf	?_StrToInt^0,c
  7873  0010BA  0E00               	movlw	0
  7874  0010BC  6E1B               	movwf	(?_StrToInt+1)^0,c
  7875  0010BE  0E00               	movlw	0
  7876  0010C0  6E1C               	movwf	(?_StrToInt+2)^0,c
  7877  0010C2  0E00               	movlw	0
  7878  0010C4  6E1D               	movwf	(?_StrToInt+3)^0,c
  7879  0010C6  D021               	goto	l358
  7880  0010C8                     l4511:
  7881  0010C8  FFFF               	dw	65535	; assembler added errata NOP
  7882                           
  7883                           ;SIM800x.c: 158: ctrl = 0;
  7884  0010CA  0E00               	movlw	0
  7885  0010CC  6E28               	movwf	StrToInt@ctrl^0,c
  7886  0010CE  2A2D               	incf	StrToInt@i^0,f,c
  7887  0010D0                     l4515:
  7888  0010D0  FFFF               	dw	65535	; assembler added errata NOP
  7889  0010D2  501D               	movf	StrToInt@stop^0,w,c
  7890  0010D4  6E1E               	movwf	??_StrToInt^0,c
  7891  0010D6  6A1F               	clrf	(??_StrToInt+1)^0,c
  7892  0010D8  0E01               	movlw	1
  7893  0010DA  261E               	addwf	??_StrToInt^0,f,c
  7894  0010DC  0E00               	movlw	0
  7895  0010DE  221F               	addwfc	(??_StrToInt+1)^0,f,c
  7896  0010E0  502D               	movf	StrToInt@i^0,w,c
  7897  0010E2  6E20               	movwf	(??_StrToInt+2)^0,c
  7898  0010E4  6A21               	clrf	(??_StrToInt+3)^0,c
  7899  0010E6  501E               	movf	??_StrToInt^0,w,c
  7900  0010E8  5C20               	subwf	(??_StrToInt+2)^0,w,c
  7901  0010EA  5021               	movf	(??_StrToInt+3)^0,w,c
  7902  0010EC  0A80               	xorlw	128
  7903  0010EE  6E22               	movwf	(??_StrToInt+4)^0,c
  7904  0010F0  501F               	movf	(??_StrToInt+1)^0,w,c
  7905  0010F2  0A80               	xorlw	128
  7906  0010F4  5822               	subwfb	(??_StrToInt+4)^0,w,c
  7907  0010F6  A0D8               	btfss	status,0,c
  7908  0010F8  D756               	goto	l4485
  7909                           
  7910                           ;SIM800x.c: 160: };SIM800x.c: 161: return val;
  7911  0010FA  C023  F01A         	movff	StrToInt@val,?_StrToInt
  7912  0010FE  C024  F01B         	movff	StrToInt@val+1,?_StrToInt+1
  7913  001102  C025  F01C         	movff	StrToInt@val+2,?_StrToInt+2
  7914  001106  C026  F01D         	movff	StrToInt@val+3,?_StrToInt+3
  7915  00110A                     l358:
  7916  00110A  FFFF               	dw	65535	; assembler added errata NOP
  7917  00110C  0012               	return		;funcret
  7918  00110E  FFFF               	dw	65535	; errata NOP
  7919  001110                     __end_of_StrToInt:
  7920                           	callstack 0
  7921                           
  7922 ;; *************** function ___lmul *****************
  7923 ;; Defined at:
  7924 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul32.c"
  7925 ;; Parameters:    Size  Location     Type
  7926 ;;  multiplier      4   13[COMRAM] unsigned long 
  7927 ;;  multiplicand    4   17[COMRAM] unsigned long 
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;  product         4   21[COMRAM] unsigned long 
  7930 ;; Return value:  Size  Location     Type
  7931 ;;                  4   13[COMRAM] unsigned long 
  7932 ;; Registers used:
  7933 ;;		wreg, status,2, status,0
  7934 ;; Tracked objects:
  7935 ;;		On entry : 0/0
  7936 ;;		On exit  : 0/0
  7937 ;;		Unchanged: 0/0
  7938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7939 ;;      Params:         8       0       0       0       0       0       0
  7940 ;;      Locals:         4       0       0       0       0       0       0
  7941 ;;      Temps:          0       0       0       0       0       0       0
  7942 ;;      Totals:        12       0       0       0       0       0       0
  7943 ;;Total ram usage:       12 bytes
  7944 ;; Hardware stack levels used: 1
  7945 ;; Hardware stack levels required when called: 3
  7946 ;; This function calls:
  7947 ;;		Nothing
  7948 ;; This function is called by:
  7949 ;;		_StrToInt
  7950 ;; This function uses a non-reentrant model
  7951 ;;
  7952                           
  7953                           	psect	text36
  7954  001BB6                     __ptext36:
  7955                           	callstack 0
  7956  001BB6                     ___lmul:
  7957                           	callstack 0
  7958  001BB6  FFFF               	dw	65535	; assembler added errata NOP
  7959                           
  7960                           ;incstack = 0
  7961  001BB8  0E00               	movlw	0
  7962  001BBA  6E16               	movwf	___lmul@product^0,c
  7963  001BBC  0E00               	movlw	0
  7964  001BBE  6E17               	movwf	(___lmul@product+1)^0,c
  7965  001BC0  0E00               	movlw	0
  7966  001BC2  6E18               	movwf	(___lmul@product+2)^0,c
  7967  001BC4  0E00               	movlw	0
  7968  001BC6  6E19               	movwf	(___lmul@product+3)^0,c
  7969  001BC8                     l4459:
  7970  001BC8  FFFF               	dw	65535	; assembler added errata NOP
  7971  001BCA  A00E               	btfss	___lmul@multiplier^0,0,c
  7972  001BCC  D008               	goto	l4463
  7973  001BCE  5012               	movf	___lmul@multiplicand^0,w,c
  7974  001BD0  2616               	addwf	___lmul@product^0,f,c
  7975  001BD2  5013               	movf	(___lmul@multiplicand+1)^0,w,c
  7976  001BD4  2217               	addwfc	(___lmul@product+1)^0,f,c
  7977  001BD6  5014               	movf	(___lmul@multiplicand+2)^0,w,c
  7978  001BD8  2218               	addwfc	(___lmul@product+2)^0,f,c
  7979  001BDA  5015               	movf	(___lmul@multiplicand+3)^0,w,c
  7980  001BDC  2219               	addwfc	(___lmul@product+3)^0,f,c
  7981  001BDE                     l4463:
  7982  001BDE  FFFF               	dw	65535	; assembler added errata NOP
  7983  001BE0  90D8               	bcf	status,0,c
  7984  001BE2  3612               	rlcf	___lmul@multiplicand^0,f,c
  7985  001BE4  3613               	rlcf	(___lmul@multiplicand+1)^0,f,c
  7986  001BE6  3614               	rlcf	(___lmul@multiplicand+2)^0,f,c
  7987  001BE8  3615               	rlcf	(___lmul@multiplicand+3)^0,f,c
  7988  001BEA  90D8               	bcf	status,0,c
  7989  001BEC  3211               	rrcf	(___lmul@multiplier+3)^0,f,c
  7990  001BEE  3210               	rrcf	(___lmul@multiplier+2)^0,f,c
  7991  001BF0  320F               	rrcf	(___lmul@multiplier+1)^0,f,c
  7992  001BF2  320E               	rrcf	___lmul@multiplier^0,f,c
  7993  001BF4  500E               	movf	___lmul@multiplier^0,w,c
  7994  001BF6  100F               	iorwf	(___lmul@multiplier+1)^0,w,c
  7995  001BF8  1010               	iorwf	(___lmul@multiplier+2)^0,w,c
  7996  001BFA  1011               	iorwf	(___lmul@multiplier+3)^0,w,c
  7997  001BFC  A4D8               	btfss	status,2,c
  7998  001BFE  D7E4               	goto	l4459
  7999  001C00  C016  F00E         	movff	___lmul@product,?___lmul
  8000  001C04  C017  F00F         	movff	___lmul@product+1,?___lmul+1
  8001  001C08  C018  F010         	movff	___lmul@product+2,?___lmul+2
  8002  001C0C  C019  F011         	movff	___lmul@product+3,?___lmul+3
  8003  001C10  0012               	return		;funcret
  8004  001C12  FFFF               	dw	65535	; errata NOP
  8005  001C14                     __end_of___lmul:
  8006                           	callstack 0
  8007                           
  8008 ;; *************** function _SIM800xSDMReadF1Pkt *****************
  8009 ;; Defined at:
  8010 ;;		line 236 in file "Src/SIM800x_SDM.c"
  8011 ;; Parameters:    Size  Location     Type
  8012 ;;  data            2   22[COMRAM] PTR unsigned char 
  8013 ;;		 -> SIM800x3GPPGetSubscriberNumber@str(40), SIM800x3GPPGetSignalQuality@str(20), SIM800x3GPPGetOperatorName@str(40),
      + SIM800xHTTPReadHeader@str(30), 
  8014 ;;		 -> SIM800xHTTPReadState@str(30), SIM800xHTTPRead@str(30), SIM800xHTTPAction@str(30), SIM800xHTTPInputData@str(30), 
  8015 ;;		 -> SIM800xGPRSGetNRegState@str(20), SIM800xGPRSGetAddress@str(40), SIM800xGPRSSetDataMode@str(20), SIM800xIPGetStat
      +e@str(30), 
  8016 ;;		 -> SIM800xGetIMSI@str(20), SIM800xGetSoftwareRevisionID@str(30), ProcessResp4@str(20), 
  8017 ;; Auto vars:     Size  Location     Type
  8018 ;;  time            4   31[COMRAM] unsigned long 
  8019 ;;  val             2   28[COMRAM] unsigned int 
  8020 ;;  tmp             1   35[COMRAM] unsigned char 
  8021 ;;  i               1   30[COMRAM] unsigned char 
  8022 ;; Return value:  Size  Location     Type
  8023 ;;                  2   22[COMRAM] int 
  8024 ;; Registers used:
  8025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8026 ;; Tracked objects:
  8027 ;;		On entry : 0/0
  8028 ;;		On exit  : 0/0
  8029 ;;		Unchanged: 0/0
  8030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8031 ;;      Params:         2       0       0       0       0       0       0
  8032 ;;      Locals:         8       0       0       0       0       0       0
  8033 ;;      Temps:          4       0       0       0       0       0       0
  8034 ;;      Totals:        14       0       0       0       0       0       0
  8035 ;;Total ram usage:       14 bytes
  8036 ;; Hardware stack levels used: 1
  8037 ;; Hardware stack levels required when called: 5
  8038 ;; This function calls:
  8039 ;;		_SIM800xSDMFlush
  8040 ;;		_SIM800xSDMReadByte
  8041 ;;		_SIM800xSDMRxAvailable
  8042 ;;		_Tick_ms
  8043 ;; This function is called by:
  8044 ;;		_ProcessResp2
  8045 ;;		_ProcessResp4
  8046 ;;		_SIM800xHTTPInputData
  8047 ;;		_SIM800xHTTPAction
  8048 ;;		_SIM800xHTTPRead
  8049 ;; This function uses a non-reentrant model
  8050 ;;
  8051                           
  8052                           	psect	text37
  8053  00124E                     __ptext37:
  8054                           	callstack 0
  8055  00124E                     _SIM800xSDMReadF1Pkt:
  8056                           	callstack 0
  8057  00124E  FFFF               	dw	65535	; assembler added errata NOP
  8058                           
  8059                           ;SIM800x_SDM.c: 239: uint8_t i = 0, tmp = 0;
  8060                           
  8061                           ;incstack = 0
  8062  001250  0E00               	movlw	0
  8063  001252  6E1F               	movwf	SIM800xSDMReadF1Pkt@i^0,c
  8064                           
  8065                           ;SIM800x_SDM.c: 240: uint16_t val = SIM800xSDMRxAvailable();
  8066  001254  EC24  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  8067  001258  C013  F01D         	movff	?_SIM800xSDMRxAvailable,SIM800xSDMReadF1Pkt@val
  8068  00125C  C014  F01E         	movff	?_SIM800xSDMRxAvailable+1,SIM800xSDMReadF1Pkt@val+1
  8069                           
  8070                           ;SIM800x_SDM.c: 242: if(val > 5)
  8071  001260  501E               	movf	(SIM800xSDMReadF1Pkt@val+1)^0,w,c
  8072  001262  E104               	bnz	u3610
  8073  001264  0E06               	movlw	6
  8074  001266  5C1D               	subwf	SIM800xSDMReadF1Pkt@val^0,w,c
  8075  001268  A0D8               	btfss	status,0,c
  8076  00126A  D081               	goto	u3680
  8077  00126C                     u3610:
  8078                           
  8079                           ;SIM800x_SDM.c: 243: {;SIM800x_SDM.c: 245: tmp = SIM800xSDMReadByte();
  8080  00126C  EC33  F00F         	call	_SIM800xSDMReadByte	;wreg free
  8081  001270  6E24               	movwf	SIM800xSDMReadF1Pkt@tmp^0,c
  8082                           
  8083                           ;SIM800x_SDM.c: 251: if(tmp == 0x0D)
  8084  001272  0E0D               	movlw	13
  8085  001274  1824               	xorwf	SIM800xSDMReadF1Pkt@tmp^0,w,c
  8086  001276  A4D8               	btfss	status,2,c
  8087  001278  D07A               	goto	u3680
  8088                           
  8089                           ;SIM800x_SDM.c: 252: {;SIM800x_SDM.c: 254: tmp = SIM800xSDMReadByte();
  8090  00127A  EC33  F00F         	call	_SIM800xSDMReadByte	;wreg free
  8091  00127E  6E24               	movwf	SIM800xSDMReadF1Pkt@tmp^0,c
  8092                           
  8093                           ;SIM800x_SDM.c: 256: if(tmp == 0x0A)
  8094  001280  0E0A               	movlw	10
  8095  001282  1824               	xorwf	SIM800xSDMReadF1Pkt@tmp^0,w,c
  8096  001284  A4D8               	btfss	status,2,c
  8097  001286  D073               	goto	u3680
  8098                           
  8099                           ;SIM800x_SDM.c: 257: {;SIM800x_SDM.c: 259: uint32_t time = Tick_ms();
  8100  001288  EC82  F010         	call	_Tick_ms	;wreg free
  8101  00128C  C00E  F020         	movff	?_Tick_ms,SIM800xSDMReadF1Pkt@time
  8102  001290  C00F  F021         	movff	?_Tick_ms+1,SIM800xSDMReadF1Pkt@time+1
  8103  001294  C010  F022         	movff	?_Tick_ms+2,SIM800xSDMReadF1Pkt@time+2
  8104  001298  C011  F023         	movff	?_Tick_ms+3,SIM800xSDMReadF1Pkt@time+3
  8105                           
  8106                           ;SIM800x_SDM.c: 261: while((tmp = SIM800xSDMReadByte()) != 0x0D)
  8107  00129C  D035               	goto	l4561
  8108  00129E                     l4543:
  8109  00129E  FFFF               	dw	65535	; assembler added errata NOP
  8110                           
  8111                           ;SIM800x_SDM.c: 262: {;SIM800x_SDM.c: 264: if(tmp != 0xFF)
  8112  0012A0  2824               	incf	SIM800xSDMReadF1Pkt@tmp^0,w,c
  8113  0012A2  B4D8               	btfsc	status,2,c
  8114  0012A4  D013               	goto	l4553
  8115                           
  8116                           ;SIM800x_SDM.c: 265: {;SIM800x_SDM.c: 272: *(data++) = tmp;
  8117  0012A6  C017  FFD9         	movff	SIM800xSDMReadF1Pkt@data,fsr2l
  8118  0012AA  C018  FFDA         	movff	SIM800xSDMReadF1Pkt@data+1,fsr2h
  8119  0012AE  C024  FFDF         	movff	SIM800xSDMReadF1Pkt@tmp,indf2
  8120  0012B2  4A17               	infsnz	SIM800xSDMReadF1Pkt@data^0,f,c
  8121  0012B4  2A18               	incf	(SIM800xSDMReadF1Pkt@data+1)^0,f,c
  8122                           
  8123                           ;SIM800x_SDM.c: 273: ++i;
  8124  0012B6  2A1F               	incf	SIM800xSDMReadF1Pkt@i^0,f,c
  8125                           
  8126                           ;SIM800x_SDM.c: 274: time = Tick_ms();
  8127  0012B8  EC82  F010         	call	_Tick_ms	;wreg free
  8128  0012BC  C00E  F020         	movff	?_Tick_ms,SIM800xSDMReadF1Pkt@time
  8129  0012C0  C00F  F021         	movff	?_Tick_ms+1,SIM800xSDMReadF1Pkt@time+1
  8130  0012C4  C010  F022         	movff	?_Tick_ms+2,SIM800xSDMReadF1Pkt@time+2
  8131  0012C8  C011  F023         	movff	?_Tick_ms+3,SIM800xSDMReadF1Pkt@time+3
  8132  0012CC                     l4553:
  8133  0012CC  FFFF               	dw	65535	; assembler added errata NOP
  8134                           
  8135                           ;SIM800x_SDM.c: 275: };SIM800x_SDM.c: 277: if((Tick_ms() - time) > Tout)
  8136  0012CE  EC82  F010         	call	_Tick_ms	;wreg free
  8137  0012D2  5020               	movf	SIM800xSDMReadF1Pkt@time^0,w,c
  8138  0012D4  5C0E               	subwf	?_Tick_ms^0,w,c
  8139  0012D6  6E19               	movwf	??_SIM800xSDMReadF1Pkt^0,c
  8140  0012D8  5021               	movf	(SIM800xSDMReadF1Pkt@time+1)^0,w,c
  8141  0012DA  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  8142  0012DC  6E1A               	movwf	(??_SIM800xSDMReadF1Pkt+1)^0,c
  8143  0012DE  5022               	movf	(SIM800xSDMReadF1Pkt@time+2)^0,w,c
  8144  0012E0  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  8145  0012E2  6E1B               	movwf	(??_SIM800xSDMReadF1Pkt+2)^0,c
  8146  0012E4  5023               	movf	(SIM800xSDMReadF1Pkt@time+3)^0,w,c
  8147  0012E6  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  8148  0012E8  6E1C               	movwf	(??_SIM800xSDMReadF1Pkt+3)^0,c
  8149  0012EA  501C               	movf	(??_SIM800xSDMReadF1Pkt+3)^0,w,c
  8150  0012EC  101B               	iorwf	(??_SIM800xSDMReadF1Pkt+2)^0,w,c
  8151  0012EE  E106               	bnz	u3650
  8152  0012F0  0ED1               	movlw	209
  8153  0012F2  5C19               	subwf	??_SIM800xSDMReadF1Pkt^0,w,c
  8154  0012F4  0E07               	movlw	7
  8155  0012F6  581A               	subwfb	(??_SIM800xSDMReadF1Pkt+1)^0,w,c
  8156  0012F8  A0D8               	btfss	status,0,c
  8157  0012FA  D006               	goto	l4561
  8158  0012FC                     u3650:
  8159  0012FC  FFFF               	dw	65535	; assembler added errata NOP
  8160  0012FE                     l4555:
  8161                           
  8162                           ;SIM800x_SDM.c: 278: {;SIM800x_SDM.c: 279: SIM800xSDMFlush();
  8163  0012FE  EC8D  F010         	call	_SIM800xSDMFlush	;wreg free
  8164                           
  8165                           ;SIM800x_SDM.c: 280: return -1;
  8166  001302  6817               	setf	?_SIM800xSDMReadF1Pkt^0,c
  8167  001304  6818               	setf	(?_SIM800xSDMReadF1Pkt+1)^0,c
  8168  001306  D037               	goto	l1043
  8169  001308                     l4561:
  8170  001308  FFFF               	dw	65535	; assembler added errata NOP
  8171  00130A  EC33  F00F         	call	_SIM800xSDMReadByte	;wreg free
  8172  00130E  6E24               	movwf	SIM800xSDMReadF1Pkt@tmp^0,c
  8173  001310  0E0D               	movlw	13
  8174  001312  1824               	xorwf	SIM800xSDMReadF1Pkt@tmp^0,w,c
  8175  001314  A4D8               	btfss	status,2,c
  8176  001316  D7C3               	goto	l4543
  8177                           
  8178                           ;SIM800x_SDM.c: 281: };SIM800x_SDM.c: 283: };SIM800x_SDM.c: 285: time = Tick_ms();
  8179  001318  EC82  F010         	call	_Tick_ms	;wreg free
  8180  00131C  C00E  F020         	movff	?_Tick_ms,SIM800xSDMReadF1Pkt@time
  8181  001320  C00F  F021         	movff	?_Tick_ms+1,SIM800xSDMReadF1Pkt@time+1
  8182  001324  C010  F022         	movff	?_Tick_ms+2,SIM800xSDMReadF1Pkt@time+2
  8183  001328  C011  F023         	movff	?_Tick_ms+3,SIM800xSDMReadF1Pkt@time+3
  8184                           
  8185                           ;SIM800x_SDM.c: 287: while((tmp = SIM800xSDMReadByte()) != 0x0A)
  8186  00132C  D018               	goto	l4573
  8187  00132E                     l4565:
  8188  00132E  FFFF               	dw	65535	; assembler added errata NOP
  8189                           
  8190                           ;SIM800x_SDM.c: 288: {;SIM800x_SDM.c: 290: if((Tick_ms() - time) > Tout)
  8191  001330  EC82  F010         	call	_Tick_ms	;wreg free
  8192  001334  5020               	movf	SIM800xSDMReadF1Pkt@time^0,w,c
  8193  001336  5C0E               	subwf	?_Tick_ms^0,w,c
  8194  001338  6E19               	movwf	??_SIM800xSDMReadF1Pkt^0,c
  8195  00133A  5021               	movf	(SIM800xSDMReadF1Pkt@time+1)^0,w,c
  8196  00133C  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  8197  00133E  6E1A               	movwf	(??_SIM800xSDMReadF1Pkt+1)^0,c
  8198  001340  5022               	movf	(SIM800xSDMReadF1Pkt@time+2)^0,w,c
  8199  001342  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  8200  001344  6E1B               	movwf	(??_SIM800xSDMReadF1Pkt+2)^0,c
  8201  001346  5023               	movf	(SIM800xSDMReadF1Pkt@time+3)^0,w,c
  8202  001348  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  8203  00134A  6E1C               	movwf	(??_SIM800xSDMReadF1Pkt+3)^0,c
  8204  00134C  501C               	movf	(??_SIM800xSDMReadF1Pkt+3)^0,w,c
  8205  00134E  101B               	iorwf	(??_SIM800xSDMReadF1Pkt+2)^0,w,c
  8206  001350  E1D6               	bnz	l4555
  8207  001352  0ED1               	movlw	209
  8208  001354  5C19               	subwf	??_SIM800xSDMReadF1Pkt^0,w,c
  8209  001356  0E07               	movlw	7
  8210  001358  581A               	subwfb	(??_SIM800xSDMReadF1Pkt+1)^0,w,c
  8211  00135A  B0D8               	btfsc	status,0,c
  8212  00135C  D7CF               	goto	u3650
  8213  00135E                     l4573:
  8214  00135E  FFFF               	dw	65535	; assembler added errata NOP
  8215  001360  EC33  F00F         	call	_SIM800xSDMReadByte	;wreg free
  8216  001364  6E24               	movwf	SIM800xSDMReadF1Pkt@tmp^0,c
  8217  001366  0E0A               	movlw	10
  8218  001368  1824               	xorwf	SIM800xSDMReadF1Pkt@tmp^0,w,c
  8219  00136A  A4D8               	btfss	status,2,c
  8220  00136C  D7E0               	goto	l4565
  8221  00136E                     u3680:
  8222  00136E  FFFF               	dw	65535	; assembler added errata NOP
  8223                           
  8224                           ;SIM800x_SDM.c: 294: };SIM800x_SDM.c: 296: };SIM800x_SDM.c: 297: };SIM800x_SDM.c: 298: }
      +                          ;SIM800x_SDM.c: 304: };SIM800x_SDM.c: 306: return i;
  8225  001370  C01F  F017         	movff	SIM800xSDMReadF1Pkt@i,?_SIM800xSDMReadF1Pkt
  8226  001374  6A18               	clrf	(?_SIM800xSDMReadF1Pkt+1)^0,c
  8227  001376                     l1043:
  8228  001376  FFFF               	dw	65535	; assembler added errata NOP
  8229  001378  0012               	return		;funcret
  8230  00137A  FFFF               	dw	65535	; errata NOP
  8231  00137C                     __end_of_SIM800xSDMReadF1Pkt:
  8232                           	callstack 0
  8233                           
  8234 ;; *************** function _Tick_ms *****************
  8235 ;; Defined at:
  8236 ;;		line 76 in file "Src/SystemTime.c"
  8237 ;; Parameters:    Size  Location     Type
  8238 ;;		None
  8239 ;; Auto vars:     Size  Location     Type
  8240 ;;		None
  8241 ;; Return value:  Size  Location     Type
  8242 ;;                  4   13[COMRAM] unsigned long 
  8243 ;; Registers used:
  8244 ;;		None
  8245 ;; Tracked objects:
  8246 ;;		On entry : 0/0
  8247 ;;		On exit  : 0/0
  8248 ;;		Unchanged: 0/0
  8249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8250 ;;      Params:         4       0       0       0       0       0       0
  8251 ;;      Locals:         0       0       0       0       0       0       0
  8252 ;;      Temps:          0       0       0       0       0       0       0
  8253 ;;      Totals:         4       0       0       0       0       0       0
  8254 ;;Total ram usage:        4 bytes
  8255 ;; Hardware stack levels used: 1
  8256 ;; Hardware stack levels required when called: 3
  8257 ;; This function calls:
  8258 ;;		Nothing
  8259 ;; This function is called by:
  8260 ;;		_ProcessResp1
  8261 ;;		_ProcessResp4
  8262 ;;		_SIM800xIPGetState
  8263 ;;		_SIM800xHTTPInputData
  8264 ;;		_SIM800xHTTPAction
  8265 ;;		_SIM800xHTTPRead
  8266 ;;		_SIM800xSDMReadF1Pkt
  8267 ;; This function uses a non-reentrant model
  8268 ;;
  8269                           
  8270                           	psect	text38
  8271  002104                     __ptext38:
  8272                           	callstack 0
  8273  002104                     _Tick_ms:
  8274                           	callstack 0
  8275  002104  FFFF               	dw	65535	; assembler added errata NOP
  8276                           
  8277                           ;SystemTime.c: 79: return IncVar;
  8278                           
  8279                           ;incstack = 0
  8280  002106  C056  F00E         	movff	_IncVar,?_Tick_ms	;volatile
  8281  00210A  C057  F00F         	movff	_IncVar+1,?_Tick_ms+1	;volatile
  8282  00210E  C058  F010         	movff	_IncVar+2,?_Tick_ms+2	;volatile
  8283  002112  C059  F011         	movff	_IncVar+3,?_Tick_ms+3	;volatile
  8284  002116  0012               	return		;funcret
  8285  002118  FFFF               	dw	65535	; errata NOP
  8286  00211A                     __end_of_Tick_ms:
  8287                           	callstack 0
  8288                           
  8289 ;; *************** function _SIM800xSDMRxAvailable *****************
  8290 ;; Defined at:
  8291 ;;		line 118 in file "Src/SIM800x_SDM.c"
  8292 ;; Parameters:    Size  Location     Type
  8293 ;;		None
  8294 ;; Auto vars:     Size  Location     Type
  8295 ;;		None
  8296 ;; Return value:  Size  Location     Type
  8297 ;;                  2   18[COMRAM] unsigned int 
  8298 ;; Registers used:
  8299 ;;		wreg, status,2, status,0, cstack
  8300 ;; Tracked objects:
  8301 ;;		On entry : 0/0
  8302 ;;		On exit  : 0/0
  8303 ;;		Unchanged: 0/0
  8304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8305 ;;      Params:         2       0       0       0       0       0       0
  8306 ;;      Locals:         0       0       0       0       0       0       0
  8307 ;;      Temps:          2       0       0       0       0       0       0
  8308 ;;      Totals:         4       0       0       0       0       0       0
  8309 ;;Total ram usage:        4 bytes
  8310 ;; Hardware stack levels used: 1
  8311 ;; Hardware stack levels required when called: 4
  8312 ;; This function calls:
  8313 ;;		___lwmod
  8314 ;; This function is called by:
  8315 ;;		_ProcessResp1
  8316 ;;		_ProcessResp4
  8317 ;;		_SIM800xInit
  8318 ;;		_SIM800xIPGetState
  8319 ;;		_SIM800xHTTPInputData
  8320 ;;		_SIM800xHTTPAction
  8321 ;;		_SIM800xHTTPRead
  8322 ;;		_SIM800xSDMReadF1Pkt
  8323 ;; This function uses a non-reentrant model
  8324 ;;
  8325                           
  8326                           	psect	text39
  8327  002048                     __ptext39:
  8328                           	callstack 0
  8329  002048                     _SIM800xSDMRxAvailable:
  8330                           	callstack 0
  8331  002048  FFFF               	dw	65535	; assembler added errata NOP
  8332                           
  8333                           ;SIM800x_SDM.c: 121: return (uint16_t)((Rxfifocurrent + 200 - Rxfifoptr) % 200);
  8334                           
  8335                           ;incstack = 0
  8336  00204A  505C               	movf	_Rxfifoptr@SIM800x_SDM$F1167^0,w,c	;volatile
  8337  00204C  5C5A               	subwf	_Rxfifocurrent@SIM800x_SDM$F1168^0,w,c	;volatile
  8338  00204E  6E15               	movwf	??_SIM800xSDMRxAvailable^0,c
  8339  002050  505D               	movf	(_Rxfifoptr@SIM800x_SDM$F1167+1)^0,w,c	;volatile
  8340  002052  585B               	subwfb	(_Rxfifocurrent@SIM800x_SDM$F1168+1)^0,w,c	;volatile
  8341  002054  6E16               	movwf	(??_SIM800xSDMRxAvailable+1)^0,c
  8342  002056  0EC8               	movlw	200
  8343  002058  2415               	addwf	??_SIM800xSDMRxAvailable^0,w,c
  8344  00205A  6E0E               	movwf	___lwmod@dividend^0,c
  8345  00205C  0E00               	movlw	0
  8346  00205E  2016               	addwfc	(??_SIM800xSDMRxAvailable+1)^0,w,c
  8347  002060  6E0F               	movwf	(___lwmod@dividend+1)^0,c
  8348  002062  0E00               	movlw	0
  8349  002064  6E11               	movwf	(___lwmod@divisor+1)^0,c
  8350  002066  0EC8               	movlw	200
  8351  002068  6E10               	movwf	___lwmod@divisor^0,c
  8352  00206A  ECE3  F00E         	call	___lwmod	;wreg free
  8353  00206E  C00E  F013         	movff	?___lwmod,?_SIM800xSDMRxAvailable
  8354  002072  C00F  F014         	movff	?___lwmod+1,?_SIM800xSDMRxAvailable+1
  8355  002076  0012               	return		;funcret
  8356  002078  FFFF               	dw	65535	; errata NOP
  8357  00207A                     __end_of_SIM800xSDMRxAvailable:
  8358                           	callstack 0
  8359                           
  8360 ;; *************** function _SIM800xSDMReadByte *****************
  8361 ;; Defined at:
  8362 ;;		line 175 in file "Src/SIM800x_SDM.c"
  8363 ;; Parameters:    Size  Location     Type
  8364 ;;		None
  8365 ;; Auto vars:     Size  Location     Type
  8366 ;;  data            1   18[COMRAM] unsigned char 
  8367 ;; Return value:  Size  Location     Type
  8368 ;;                  1    wreg      unsigned char 
  8369 ;; Registers used:
  8370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8371 ;; Tracked objects:
  8372 ;;		On entry : 0/0
  8373 ;;		On exit  : 0/0
  8374 ;;		Unchanged: 0/0
  8375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8376 ;;      Params:         0       0       0       0       0       0       0
  8377 ;;      Locals:         1       0       0       0       0       0       0
  8378 ;;      Temps:          0       0       0       0       0       0       0
  8379 ;;      Totals:         1       0       0       0       0       0       0
  8380 ;;Total ram usage:        1 bytes
  8381 ;; Hardware stack levels used: 1
  8382 ;; Hardware stack levels required when called: 4
  8383 ;; This function calls:
  8384 ;;		___lwmod
  8385 ;; This function is called by:
  8386 ;;		_SIM800xInit
  8387 ;;		_SIM800xHTTPRead
  8388 ;;		_SIM800xSDMReadF1Pkt
  8389 ;; This function uses a non-reentrant model
  8390 ;;
  8391                           
  8392                           	psect	text40
  8393  001E66                     __ptext40:
  8394                           	callstack 0
  8395  001E66                     _SIM800xSDMReadByte:
  8396                           	callstack 0
  8397  001E66  FFFF               	dw	65535	; assembler added errata NOP
  8398                           
  8399                           ;SIM800x_SDM.c: 178: if(Rxfifocurrent == Rxfifoptr)
  8400                           
  8401                           ;incstack = 0
  8402  001E68  505C               	movf	_Rxfifoptr@SIM800x_SDM$F1167^0,w,c	;volatile
  8403  001E6A  185A               	xorwf	_Rxfifocurrent@SIM800x_SDM$F1168^0,w,c	;volatile
  8404  001E6C  E106               	bnz	l4449
  8405  001E6E  505D               	movf	(_Rxfifoptr@SIM800x_SDM$F1167+1)^0,w,c	;volatile
  8406  001E70  185B               	xorwf	(_Rxfifocurrent@SIM800x_SDM$F1168+1)^0,w,c	;volatile
  8407  001E72  A4D8               	btfss	status,2,c
  8408  001E74  D002               	goto	l4449
  8409                           
  8410                           ;SIM800x_SDM.c: 179: return 0xFF;
  8411  001E76  0EFF               	movlw	255
  8412  001E78  D01A               	goto	l1018
  8413  001E7A                     l4449:
  8414  001E7A  FFFF               	dw	65535	; assembler added errata NOP
  8415                           
  8416                           ;SIM800x_SDM.c: 181: uint8_t data = RxFIFO[Rxfifoptr];
  8417  001E7C  0E00               	movlw	low _RxFIFO@SIM800x_SDM$F1166
  8418  001E7E  245C               	addwf	_Rxfifoptr@SIM800x_SDM$F1167^0,w,c	;volatile
  8419  001E80  6ED9               	movwf	fsr2l,c
  8420  001E82  0E03               	movlw	high _RxFIFO@SIM800x_SDM$F1166
  8421  001E84  205D               	addwfc	(_Rxfifoptr@SIM800x_SDM$F1167+1)^0,w,c	;volatile
  8422  001E86  6EDA               	movwf	fsr2h,c
  8423  001E88  50DF               	movf	indf2,w,c
  8424  001E8A  6E13               	movwf	SIM800xSDMReadByte@data^0,c
  8425                           
  8426                           ;SIM800x_SDM.c: 182: Rxfifoptr = (uint16_t)((Rxfifoptr + 1) % 200);
  8427  001E8C  0E01               	movlw	1
  8428  001E8E  245C               	addwf	_Rxfifoptr@SIM800x_SDM$F1167^0,w,c	;volatile
  8429  001E90  6E0E               	movwf	___lwmod@dividend^0,c
  8430  001E92  0E00               	movlw	0
  8431  001E94  205D               	addwfc	(_Rxfifoptr@SIM800x_SDM$F1167+1)^0,w,c	;volatile
  8432  001E96  6E0F               	movwf	(___lwmod@dividend+1)^0,c
  8433  001E98  0E00               	movlw	0
  8434  001E9A  6E11               	movwf	(___lwmod@divisor+1)^0,c
  8435  001E9C  0EC8               	movlw	200
  8436  001E9E  6E10               	movwf	___lwmod@divisor^0,c
  8437  001EA0  ECE3  F00E         	call	___lwmod	;wreg free
  8438  001EA4  C00E  F05C         	movff	?___lwmod,_Rxfifoptr@SIM800x_SDM$F1167	;volatile
  8439  001EA8  C00F  F05D         	movff	?___lwmod+1,_Rxfifoptr@SIM800x_SDM$F1167+1	;volatile
  8440                           
  8441                           ;SIM800x_SDM.c: 184: return data;
  8442  001EAC  5013               	movf	SIM800xSDMReadByte@data^0,w,c
  8443  001EAE                     l1018:
  8444  001EAE  FFFF               	dw	65535	; assembler added errata NOP
  8445  001EB0  0012               	return		;funcret
  8446  001EB2  FFFF               	dw	65535	; errata NOP
  8447  001EB4                     __end_of_SIM800xSDMReadByte:
  8448                           	callstack 0
  8449                           
  8450 ;; *************** function ___lwmod *****************
  8451 ;; Defined at:
  8452 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  8453 ;; Parameters:    Size  Location     Type
  8454 ;;  dividend        2   13[COMRAM] unsigned int 
  8455 ;;  divisor         2   15[COMRAM] unsigned int 
  8456 ;; Auto vars:     Size  Location     Type
  8457 ;;  counter         1   17[COMRAM] unsigned char 
  8458 ;; Return value:  Size  Location     Type
  8459 ;;                  2   13[COMRAM] unsigned int 
  8460 ;; Registers used:
  8461 ;;		wreg, status,2, status,0
  8462 ;; Tracked objects:
  8463 ;;		On entry : 0/0
  8464 ;;		On exit  : 0/0
  8465 ;;		Unchanged: 0/0
  8466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8467 ;;      Params:         4       0       0       0       0       0       0
  8468 ;;      Locals:         1       0       0       0       0       0       0
  8469 ;;      Temps:          0       0       0       0       0       0       0
  8470 ;;      Totals:         5       0       0       0       0       0       0
  8471 ;;Total ram usage:        5 bytes
  8472 ;; Hardware stack levels used: 1
  8473 ;; Hardware stack levels required when called: 3
  8474 ;; This function calls:
  8475 ;;		Nothing
  8476 ;; This function is called by:
  8477 ;;		_SIM800xSDMRxAvailable
  8478 ;;		_SIM800xSDMReadByte
  8479 ;; This function uses a non-reentrant model
  8480 ;;
  8481                           
  8482                           	psect	text41
  8483  001DC6                     __ptext41:
  8484                           	callstack 0
  8485  001DC6                     ___lwmod:
  8486                           	callstack 0
  8487  001DC6  FFFF               	dw	65535	; assembler added errata NOP
  8488                           
  8489                           ;incstack = 0
  8490  001DC8  5010               	movf	___lwmod@divisor^0,w,c
  8491  001DCA  1011               	iorwf	(___lwmod@divisor+1)^0,w,c
  8492  001DCC  B4D8               	btfsc	status,2,c
  8493  001DCE  D01C               	goto	l1703
  8494  001DD0  0E01               	movlw	1
  8495  001DD2  6E12               	movwf	___lwmod@counter^0,c
  8496  001DD4  D005               	goto	l4425
  8497  001DD6                     l4423:
  8498  001DD6  FFFF               	dw	65535	; assembler added errata NOP
  8499  001DD8  90D8               	bcf	status,0,c
  8500  001DDA  3610               	rlcf	___lwmod@divisor^0,f,c
  8501  001DDC  3611               	rlcf	(___lwmod@divisor+1)^0,f,c
  8502  001DDE  2A12               	incf	___lwmod@counter^0,f,c
  8503  001DE0                     l4425:
  8504  001DE0  FFFF               	dw	65535	; assembler added errata NOP
  8505  001DE2  AE11               	btfss	(___lwmod@divisor+1)^0,7,c
  8506  001DE4  D7F8               	goto	l4423
  8507  001DE6                     u3480:
  8508  001DE6  FFFF               	dw	65535	; assembler added errata NOP
  8509  001DE8  5010               	movf	___lwmod@divisor^0,w,c
  8510  001DEA  5C0E               	subwf	___lwmod@dividend^0,w,c
  8511  001DEC  5011               	movf	(___lwmod@divisor+1)^0,w,c
  8512  001DEE  580F               	subwfb	(___lwmod@dividend+1)^0,w,c
  8513  001DF0  A0D8               	btfss	status,0,c
  8514  001DF2  D004               	goto	l4431
  8515  001DF4  5010               	movf	___lwmod@divisor^0,w,c
  8516  001DF6  5E0E               	subwf	___lwmod@dividend^0,f,c
  8517  001DF8  5011               	movf	(___lwmod@divisor+1)^0,w,c
  8518  001DFA  5A0F               	subwfb	(___lwmod@dividend+1)^0,f,c
  8519  001DFC                     l4431:
  8520  001DFC  FFFF               	dw	65535	; assembler added errata NOP
  8521  001DFE  90D8               	bcf	status,0,c
  8522  001E00  3211               	rrcf	(___lwmod@divisor+1)^0,f,c
  8523  001E02  3210               	rrcf	___lwmod@divisor^0,f,c
  8524  001E04  2E12               	decfsz	___lwmod@counter^0,f,c
  8525  001E06  D7EF               	goto	u3480
  8526  001E08                     l1703:
  8527  001E08  FFFF               	dw	65535	; assembler added errata NOP
  8528  001E0A  C00E  F00E         	movff	___lwmod@dividend,?___lwmod
  8529  001E0E  C00F  F00F         	movff	___lwmod@dividend+1,?___lwmod+1
  8530  001E12  0012               	return		;funcret
  8531  001E14  FFFF               	dw	65535	; errata NOP
  8532  001E16                     __end_of___lwmod:
  8533                           	callstack 0
  8534                           
  8535 ;; *************** function _SIM800xSDMFlush *****************
  8536 ;; Defined at:
  8537 ;;		line 227 in file "Src/SIM800x_SDM.c"
  8538 ;; Parameters:    Size  Location     Type
  8539 ;;		None
  8540 ;; Auto vars:     Size  Location     Type
  8541 ;;		None
  8542 ;; Return value:  Size  Location     Type
  8543 ;;                  1    wreg      void 
  8544 ;; Registers used:
  8545 ;;		wreg, status,2
  8546 ;; Tracked objects:
  8547 ;;		On entry : 0/0
  8548 ;;		On exit  : 0/0
  8549 ;;		Unchanged: 0/0
  8550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8551 ;;      Params:         0       0       0       0       0       0       0
  8552 ;;      Locals:         0       0       0       0       0       0       0
  8553 ;;      Temps:          0       0       0       0       0       0       0
  8554 ;;      Totals:         0       0       0       0       0       0       0
  8555 ;;Total ram usage:        0 bytes
  8556 ;; Hardware stack levels used: 1
  8557 ;; Hardware stack levels required when called: 3
  8558 ;; This function calls:
  8559 ;;		Nothing
  8560 ;; This function is called by:
  8561 ;;		_SIM800xInit
  8562 ;;		_SIM800xIPSetConnectionType
  8563 ;;		_SIM800xIPSetAPN
  8564 ;;		_SIM800xIPOpen
  8565 ;;		_SIM800xIPGetState
  8566 ;;		_SIM800xHTTPInit
  8567 ;;		_SIM800xHTTPSetURL
  8568 ;;		_SIM800xHTTPSetContent
  8569 ;;		_SIM800xHTTPInputData
  8570 ;;		_SIM800xHTTPAction
  8571 ;;		_SIM800xHTTPRead
  8572 ;;		_SIM800xSDMReadF1Pkt
  8573 ;; This function uses a non-reentrant model
  8574 ;;
  8575                           
  8576                           	psect	text42
  8577  00211A                     __ptext42:
  8578                           	callstack 0
  8579  00211A                     _SIM800xSDMFlush:
  8580                           	callstack 0
  8581  00211A  FFFF               	dw	65535	; assembler added errata NOP
  8582                           
  8583                           ;SIM800x_SDM.c: 230: Rxfifoptr = 0;
  8584                           
  8585                           ;incstack = 0
  8586  00211C  0E00               	movlw	0
  8587  00211E  6E5D               	movwf	(_Rxfifoptr@SIM800x_SDM$F1167+1)^0,c	;volatile
  8588  002120  0E00               	movlw	0
  8589  002122  6E5C               	movwf	_Rxfifoptr@SIM800x_SDM$F1167^0,c	;volatile
  8590                           
  8591                           ;SIM800x_SDM.c: 231: Rxfifocurrent = 0;
  8592  002124  0E00               	movlw	0
  8593  002126  6E5B               	movwf	(_Rxfifocurrent@SIM800x_SDM$F1168+1)^0,c	;volatile
  8594  002128  0E00               	movlw	0
  8595  00212A  6E5A               	movwf	_Rxfifocurrent@SIM800x_SDM$F1168^0,c	;volatile
  8596  00212C  0012               	return		;funcret
  8597  00212E  FFFF               	dw	65535	; errata NOP
  8598  002130                     __end_of_SIM800xSDMFlush:
  8599                           	callstack 0
  8600                           
  8601 ;; *************** function _AddEntryToJsonObject *****************
  8602 ;; Defined at:
  8603 ;;		line 54 in file "Src/JSON.c"
  8604 ;; Parameters:    Size  Location     Type
  8605 ;;  JsonObject      2   13[COMRAM] PTR unsigned char 
  8606 ;;		 -> txmessage(100), 
  8607 ;;  key             2   15[COMRAM] PTR const unsigned char 
  8608 ;;		 -> STR_18(15), STR_16(20), STR_14(4), STR_12(23), 
  8609 ;;  value           2   17[COMRAM] PTR const unsigned char 
  8610 ;;		 -> STR_19(3), STR_17(3), STR_15(5), STR_13(3), 
  8611 ;;  Cpos            2   19[COMRAM] PTR unsigned int 
  8612 ;;		 -> cpos(2), 
  8613 ;; Auto vars:     Size  Location     Type
  8614 ;;  offset          1   25[COMRAM] unsigned char 
  8615 ;; Return value:  Size  Location     Type
  8616 ;;                  1    wreg      unsigned char 
  8617 ;; Registers used:
  8618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8619 ;; Tracked objects:
  8620 ;;		On entry : 0/0
  8621 ;;		On exit  : 0/0
  8622 ;;		Unchanged: 0/0
  8623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8624 ;;      Params:         8       0       0       0       0       0       0
  8625 ;;      Locals:         1       0       0       0       0       0       0
  8626 ;;      Temps:          4       0       0       0       0       0       0
  8627 ;;      Totals:        13       0       0       0       0       0       0
  8628 ;;Total ram usage:       13 bytes
  8629 ;; Hardware stack levels used: 1
  8630 ;; Hardware stack levels required when called: 3
  8631 ;; This function calls:
  8632 ;;		Nothing
  8633 ;; This function is called by:
  8634 ;;		_SystemInit
  8635 ;; This function uses a non-reentrant model
  8636 ;;
  8637                           
  8638                           	psect	text43
  8639  000032                     __ptext43:
  8640                           	callstack 0
  8641  000032                     _AddEntryToJsonObject:
  8642                           	callstack 0
  8643  000032  FFFF               	dw	65535	; assembler added errata NOP
  8644                           
  8645                           ;Src/JSON.c: 54: unsigned char AddEntryToJsonObject(char * JsonObject, const char * key,
      +                           const char * value, unsigned int *Cpos);Src/JSON.c: 55: {;Src/JSON.c: 57:  unsigned cha
      +                          r offset = 0;
  8646                           
  8647                           ;incstack = 0
  8648  000034  0E00               	movlw	0
  8649  000036  6E1A               	movwf	AddEntryToJsonObject@offset^0,c
  8650                           
  8651                           ;Src/JSON.c: 59:  if (!*Cpos)
  8652  000038  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8653  00003C  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8654  000040  50DE               	movf	postinc2,w,c
  8655  000042  10DE               	iorwf	postinc2,w,c
  8656  000044  A4D8               	btfss	status,2,c
  8657  000046  D009               	goto	l5157
  8658                           
  8659                           ;Src/JSON.c: 60:     {;Src/JSON.c: 61:   JsonObject[0] = '{';
  8660  000048  C00E  FFD9         	movff	AddEntryToJsonObject@JsonObject,fsr2l
  8661  00004C  C00F  FFDA         	movff	AddEntryToJsonObject@JsonObject+1,fsr2h
  8662  000050  0E7B               	movlw	123
  8663  000052  6EDF               	movwf	indf2,c
  8664                           
  8665                           ;Src/JSON.c: 62:   offset = 1;
  8666  000054  0E01               	movlw	1
  8667  000056  6E1A               	movwf	AddEntryToJsonObject@offset^0,c
  8668                           
  8669                           ;Src/JSON.c: 63:  }else
  8670  000058  D025               	goto	l108
  8671  00005A                     l5157:
  8672  00005A  FFFF               	dw	65535	; assembler added errata NOP
  8673                           
  8674                           ;Src/JSON.c: 64:  {;Src/JSON.c: 65:   JsonObject[*Cpos] = ',';
  8675  00005C  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8676  000060  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8677  000064  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8678  000068  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8679  00006C  5016               	movf	??_AddEntryToJsonObject^0,w,c
  8680  00006E  240E               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8681  000070  6ED9               	movwf	fsr2l,c
  8682  000072  5017               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8683  000074  200F               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8684  000076  6EDA               	movwf	fsr2h,c
  8685  000078  0E2C               	movlw	44
  8686  00007A  6EDF               	movwf	indf2,c
  8687                           
  8688                           ;Src/JSON.c: 66:   *Cpos = *Cpos + 1;
  8689  00007C  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8690  000080  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8691  000084  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8692  000088  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8693  00008C  0E01               	movlw	1
  8694  00008E  2616               	addwf	??_AddEntryToJsonObject^0,f,c
  8695  000090  0E00               	movlw	0
  8696  000092  2217               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8697  000094  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8698  000098  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8699  00009C  C016  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8700  0000A0  C017  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8701  0000A4                     l108:
  8702  0000A4  FFFF               	dw	65535	; assembler added errata NOP
  8703                           
  8704                           ;Src/JSON.c: 69:     JsonObject[*Cpos + offset] = '\"';
  8705  0000A6  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8706  0000AA  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8707  0000AE  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8708  0000B2  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8709  0000B6  501A               	movf	AddEntryToJsonObject@offset^0,w,c
  8710  0000B8  240E               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8711  0000BA  6E18               	movwf	(??_AddEntryToJsonObject+2)^0,c
  8712  0000BC  0E00               	movlw	0
  8713  0000BE  200F               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8714  0000C0  6E19               	movwf	(??_AddEntryToJsonObject+3)^0,c
  8715  0000C2  5016               	movf	??_AddEntryToJsonObject^0,w,c
  8716  0000C4  2418               	addwf	(??_AddEntryToJsonObject+2)^0,w,c
  8717  0000C6  6ED9               	movwf	fsr2l,c
  8718  0000C8  5017               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8719  0000CA  2019               	addwfc	(??_AddEntryToJsonObject+3)^0,w,c
  8720  0000CC  6EDA               	movwf	fsr2h,c
  8721  0000CE  0E22               	movlw	34
  8722  0000D0  6EDF               	movwf	indf2,c
  8723  0000D2  D01F               	goto	l5163
  8724  0000D4                     l5159:
  8725  0000D4  FFFF               	dw	65535	; assembler added errata NOP
  8726                           
  8727                           ;Src/JSON.c: 73:  {;Src/JSON.c: 74:   JsonObject[*Cpos + offset] = *key;
  8728  0000D6  C010  FFF6         	movff	AddEntryToJsonObject@key,tblptrl
  8729  0000DA  C011  FFF7         	movff	AddEntryToJsonObject@key+1,tblptrh
  8730  0000DE                     	if	0	;tblptru may be non-zero
  8731  0000DE                     	endif
  8732  0000DE                     	if	0	;tblptru may be non-zero
  8733  0000DE                     	endif
  8734  0000DE  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8735  0000E2  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8736  0000E6  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8737  0000EA  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8738  0000EE  501A               	movf	AddEntryToJsonObject@offset^0,w,c
  8739  0000F0  240E               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8740  0000F2  6E18               	movwf	(??_AddEntryToJsonObject+2)^0,c
  8741  0000F4  0E00               	movlw	0
  8742  0000F6  200F               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8743  0000F8  6E19               	movwf	(??_AddEntryToJsonObject+3)^0,c
  8744  0000FA  5016               	movf	??_AddEntryToJsonObject^0,w,c
  8745  0000FC  2418               	addwf	(??_AddEntryToJsonObject+2)^0,w,c
  8746  0000FE  6ED9               	movwf	fsr2l,c
  8747  000100  5017               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8748  000102  2019               	addwfc	(??_AddEntryToJsonObject+3)^0,w,c
  8749  000104  6EDA               	movwf	fsr2h,c
  8750  000106  0008               	tblrd		*
  8751  000108  FFFF               	dw	65535	; errata NOP
  8752  00010A  CFF5 FFDF          	movff	tablat,indf2
  8753                           
  8754                           ;Src/JSON.c: 75:   key++;
  8755  00010E  4A10               	infsnz	AddEntryToJsonObject@key^0,f,c
  8756  000110  2A11               	incf	(AddEntryToJsonObject@key+1)^0,f,c
  8757  000112                     l5163:
  8758  000112  FFFF               	dw	65535	; assembler added errata NOP
  8759                           
  8760                           ;Src/JSON.c: 76:   *Cpos = *Cpos + 1;
  8761  000114  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8762  000118  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8763  00011C  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8764  000120  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8765  000124  0E01               	movlw	1
  8766  000126  2616               	addwf	??_AddEntryToJsonObject^0,f,c
  8767  000128  0E00               	movlw	0
  8768  00012A  2217               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8769  00012C  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8770  000130  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8771  000134  C016  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8772  000138  C017  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8773                           
  8774                           ;Src/JSON.c: 72:  while (*key != 0)
  8775  00013C  C010  FFF6         	movff	AddEntryToJsonObject@key,tblptrl
  8776  000140  C011  FFF7         	movff	AddEntryToJsonObject@key+1,tblptrh
  8777  000144                     	if	0	;tblptru may be non-zero
  8778  000144                     	endif
  8779  000144                     	if	0	;tblptru may be non-zero
  8780  000144                     	endif
  8781  000144  0008               	tblrd		*
  8782  000146  FFFF               	dw	65535	; errata NOP
  8783  000148  50F5               	movf	tablat,w,c
  8784  00014A  0900               	iorlw	0
  8785  00014C  A4D8               	btfss	status,2,c
  8786  00014E  D7C2               	goto	l5159
  8787                           
  8788                           ;Src/JSON.c: 79:     JsonObject[*Cpos + offset] = '\"';
  8789  000150  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8790  000154  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8791  000158  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8792  00015C  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8793  000160  501A               	movf	AddEntryToJsonObject@offset^0,w,c
  8794  000162  240E               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8795  000164  6E18               	movwf	(??_AddEntryToJsonObject+2)^0,c
  8796  000166  0E00               	movlw	0
  8797  000168  200F               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8798  00016A  6E19               	movwf	(??_AddEntryToJsonObject+3)^0,c
  8799  00016C  5016               	movf	??_AddEntryToJsonObject^0,w,c
  8800  00016E  2418               	addwf	(??_AddEntryToJsonObject+2)^0,w,c
  8801  000170  6ED9               	movwf	fsr2l,c
  8802  000172  5017               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8803  000174  2019               	addwfc	(??_AddEntryToJsonObject+3)^0,w,c
  8804  000176  6EDA               	movwf	fsr2h,c
  8805  000178  0E22               	movlw	34
  8806  00017A  6EDF               	movwf	indf2,c
  8807                           
  8808                           ;Src/JSON.c: 80:     *Cpos = *Cpos + 1;
  8809  00017C  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8810  000180  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8811  000184  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8812  000188  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8813  00018C  0E01               	movlw	1
  8814  00018E  2616               	addwf	??_AddEntryToJsonObject^0,f,c
  8815  000190  0E00               	movlw	0
  8816  000192  2217               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8817  000194  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8818  000198  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8819  00019C  C016  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8820  0001A0  C017  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8821                           
  8822                           ;Src/JSON.c: 82:  if(offset)
  8823  0001A4  501A               	movf	AddEntryToJsonObject@offset^0,w,c
  8824  0001A6  B4D8               	btfsc	status,2,c
  8825  0001A8  D025               	goto	l5173
  8826                           
  8827                           ;Src/JSON.c: 83:  {;Src/JSON.c: 84:   *Cpos = *Cpos + 1;
  8828  0001AA  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8829  0001AE  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8830  0001B2  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8831  0001B6  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8832  0001BA  0E01               	movlw	1
  8833  0001BC  2616               	addwf	??_AddEntryToJsonObject^0,f,c
  8834  0001BE  0E00               	movlw	0
  8835  0001C0  2217               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8836  0001C2  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8837  0001C6  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8838  0001CA  C016  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8839  0001CE  C017  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8840                           
  8841                           ;Src/JSON.c: 85:   JsonObject[*Cpos] = ':';
  8842  0001D2  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8843  0001D6  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8844  0001DA  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8845  0001DE  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8846  0001E2  5016               	movf	??_AddEntryToJsonObject^0,w,c
  8847  0001E4  240E               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8848  0001E6  6ED9               	movwf	fsr2l,c
  8849  0001E8  5017               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8850  0001EA  200F               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8851  0001EC  6EDA               	movwf	fsr2h,c
  8852  0001EE  0E3A               	movlw	58
  8853  0001F0  6EDF               	movwf	indf2,c
  8854                           
  8855                           ;Src/JSON.c: 86:  }else
  8856  0001F2  D046               	goto	l5181
  8857  0001F4                     l5173:
  8858  0001F4  FFFF               	dw	65535	; assembler added errata NOP
  8859                           
  8860                           ;Src/JSON.c: 87:  {;Src/JSON.c: 88:   JsonObject[*Cpos] = ':';
  8861  0001F6  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8862  0001FA  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8863  0001FE  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8864  000202  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8865  000206  5016               	movf	??_AddEntryToJsonObject^0,w,c
  8866  000208  240E               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8867  00020A  6ED9               	movwf	fsr2l,c
  8868  00020C  5017               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8869  00020E  200F               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8870  000210  6EDA               	movwf	fsr2h,c
  8871  000212  0E3A               	movlw	58
  8872  000214  6EDF               	movwf	indf2,c
  8873  000216  D01F               	goto	l5179
  8874  000218                     l5175:
  8875  000218  FFFF               	dw	65535	; assembler added errata NOP
  8876                           
  8877                           ;Src/JSON.c: 93:  {;Src/JSON.c: 94:   JsonObject[*Cpos + offset] = *value;
  8878  00021A  C012  FFF6         	movff	AddEntryToJsonObject@value,tblptrl
  8879  00021E  C013  FFF7         	movff	AddEntryToJsonObject@value+1,tblptrh
  8880  000222                     	if	0	;tblptru may be non-zero
  8881  000222                     	endif
  8882  000222                     	if	0	;tblptru may be non-zero
  8883  000222                     	endif
  8884  000222  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8885  000226  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8886  00022A  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8887  00022E  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8888  000232  501A               	movf	AddEntryToJsonObject@offset^0,w,c
  8889  000234  240E               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8890  000236  6E18               	movwf	(??_AddEntryToJsonObject+2)^0,c
  8891  000238  0E00               	movlw	0
  8892  00023A  200F               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8893  00023C  6E19               	movwf	(??_AddEntryToJsonObject+3)^0,c
  8894  00023E  5016               	movf	??_AddEntryToJsonObject^0,w,c
  8895  000240  2418               	addwf	(??_AddEntryToJsonObject+2)^0,w,c
  8896  000242  6ED9               	movwf	fsr2l,c
  8897  000244  5017               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8898  000246  2019               	addwfc	(??_AddEntryToJsonObject+3)^0,w,c
  8899  000248  6EDA               	movwf	fsr2h,c
  8900  00024A  0008               	tblrd		*
  8901  00024C  FFFF               	dw	65535	; errata NOP
  8902  00024E  CFF5 FFDF          	movff	tablat,indf2
  8903                           
  8904                           ;Src/JSON.c: 95:   value++;
  8905  000252  4A12               	infsnz	AddEntryToJsonObject@value^0,f,c
  8906  000254  2A13               	incf	(AddEntryToJsonObject@value+1)^0,f,c
  8907  000256                     l5179:
  8908  000256  FFFF               	dw	65535	; assembler added errata NOP
  8909                           
  8910                           ;Src/JSON.c: 96:   *Cpos = *Cpos + 1;
  8911  000258  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8912  00025C  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8913  000260  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8914  000264  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8915  000268  0E01               	movlw	1
  8916  00026A  2616               	addwf	??_AddEntryToJsonObject^0,f,c
  8917  00026C  0E00               	movlw	0
  8918  00026E  2217               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8919  000270  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8920  000274  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8921  000278  C016  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8922  00027C  C017  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8923  000280                     l5181:
  8924  000280  FFFF               	dw	65535	; assembler added errata NOP
  8925                           
  8926                           ;Src/JSON.c: 92:  while (*value != 0)
  8927  000282  C012  FFF6         	movff	AddEntryToJsonObject@value,tblptrl
  8928  000286  C013  FFF7         	movff	AddEntryToJsonObject@value+1,tblptrh
  8929  00028A                     	if	0	;tblptru may be non-zero
  8930  00028A                     	endif
  8931  00028A                     	if	0	;tblptru may be non-zero
  8932  00028A                     	endif
  8933  00028A  0008               	tblrd		*
  8934  00028C  FFFF               	dw	65535	; errata NOP
  8935  00028E  50F5               	movf	tablat,w,c
  8936  000290  0900               	iorlw	0
  8937  000292  A4D8               	btfss	status,2,c
  8938  000294  D7C1               	goto	l5175
  8939                           
  8940                           ;Src/JSON.c: 99:  if(offset != 0)
  8941  000296  501A               	movf	AddEntryToJsonObject@offset^0,w,c
  8942  000298  B4D8               	btfsc	status,2,c
  8943  00029A  D014               	goto	l117
  8944                           
  8945                           ;Src/JSON.c: 100:   *Cpos = *Cpos + 1;
  8946  00029C  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8947  0002A0  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8948  0002A4  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8949  0002A8  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8950  0002AC  0E01               	movlw	1
  8951  0002AE  2616               	addwf	??_AddEntryToJsonObject^0,f,c
  8952  0002B0  0E00               	movlw	0
  8953  0002B2  2217               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8954  0002B4  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8955  0002B8  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8956  0002BC  C016  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8957  0002C0  C017  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8958  0002C4                     l117:
  8959  0002C4  FFFF               	dw	65535	; assembler added errata NOP
  8960                           
  8961                           ;Src/JSON.c: 101:  JsonObject[*Cpos] = '}';
  8962  0002C6  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8963  0002CA  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8964  0002CE  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8965  0002D2  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8966  0002D6  5016               	movf	??_AddEntryToJsonObject^0,w,c
  8967  0002D8  240E               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8968  0002DA  6ED9               	movwf	fsr2l,c
  8969  0002DC  5017               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8970  0002DE  200F               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8971  0002E0  6EDA               	movwf	fsr2h,c
  8972  0002E2  0E7D               	movlw	125
  8973  0002E4  6EDF               	movwf	indf2,c
  8974                           
  8975                           ;Src/JSON.c: 102:  JsonObject[*Cpos + 1] = 0;
  8976  0002E6  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8977  0002EA  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8978  0002EE  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8979  0002F2  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8980  0002F6  C00E  F018         	movff	AddEntryToJsonObject@JsonObject,??_AddEntryToJsonObject+2
  8981  0002FA  C00F  F019         	movff	AddEntryToJsonObject@JsonObject+1,??_AddEntryToJsonObject+3
  8982  0002FE  5016               	movf	??_AddEntryToJsonObject^0,w,c
  8983  000300  2618               	addwf	(??_AddEntryToJsonObject+2)^0,f,c
  8984  000302  5017               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8985  000304  2219               	addwfc	(??_AddEntryToJsonObject+3)^0,f,c
  8986  000306  0E01               	movlw	1
  8987  000308  2418               	addwf	(??_AddEntryToJsonObject+2)^0,w,c
  8988  00030A  6ED9               	movwf	fsr2l,c
  8989  00030C  0E00               	movlw	0
  8990  00030E  2019               	addwfc	(??_AddEntryToJsonObject+3)^0,w,c
  8991  000310  6EDA               	movwf	fsr2h,c
  8992  000312  0E00               	movlw	0
  8993  000314  6EDF               	movwf	indf2,c
  8994  000316  0012               	return		;funcret
  8995  000318  FFFF               	dw	65535	; errata NOP
  8996  00031A                     __end_of_AddEntryToJsonObject:
  8997                           	callstack 0
  8998                           
  8999 ;; *************** function _Isr *****************
  9000 ;; Defined at:
  9001 ;;		line 65 in file "C:/EmbeddedDevOps/M8M_APIs/PIC18.X/Src/ISR.c"
  9002 ;; Parameters:    Size  Location     Type
  9003 ;;		None
  9004 ;; Auto vars:     Size  Location     Type
  9005 ;;		None
  9006 ;; Return value:  Size  Location     Type
  9007 ;;                  1    wreg      void 
  9008 ;; Registers used:
  9009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9010 ;; Tracked objects:
  9011 ;;		On entry : 0/0
  9012 ;;		On exit  : 0/0
  9013 ;;		Unchanged: 0/0
  9014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9015 ;;      Params:         0       0       0       0       0       0       0
  9016 ;;      Locals:         0       0       0       0       0       0       0
  9017 ;;      Temps:          2       0       0       0       0       0       0
  9018 ;;      Totals:         2       0       0       0       0       0       0
  9019 ;;Total ram usage:        2 bytes
  9020 ;; Hardware stack levels used: 1
  9021 ;; Hardware stack levels required when called: 2
  9022 ;; This function calls:
  9023 ;;		_SIM800xSDMCallBack
  9024 ;;		_SoftUARTCallBack
  9025 ;;		_SysTimeCallBack
  9026 ;; This function is called by:
  9027 ;;		Interrupt level 2
  9028 ;; This function uses a non-reentrant model
  9029 ;;
  9030                           
  9031                           	psect	intcode
  9032  000008                     __pintcode:
  9033                           	callstack 0
  9034  000008                     _Isr:
  9035                           	callstack 0
  9036  000008  FFFF               	dw	65535	; assembler added errata NOP
  9037                           
  9038                           ;incstack = 0
  9039  00000A  8268               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9040  00000C  CFD9 F00C          	movff	fsr2l,??_Isr
  9041  000010  CFDA F00D          	movff	fsr2h,??_Isr+1
  9042                           
  9043                           ;ISR.c: 67: SysTimeCallBack();
  9044  000014  ECED  F00F         	call	_SysTimeCallBack	;wreg free
  9045                           
  9046                           ;ISR.c: 69: SoftUARTCallBack();
  9047  000018  ECC1  F00A         	call	_SoftUARTCallBack	;wreg free
  9048                           
  9049                           ;ISR.c: 70: SIM800xSDMCallBack();
  9050  00001C  EC38  F00E         	call	_SIM800xSDMCallBack	;wreg free
  9051  000020  C00D  FFDA         	movff	??_Isr+1,fsr2h
  9052  000024  C00C  FFD9         	movff	??_Isr,fsr2l
  9053  000028  9268               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9054  00002A  0011               	retfie		f
  9055  00002C  FFFF               	dw	65535	; errata NOP
  9056  00002E                     __end_of_Isr:
  9057                           	callstack 0
  9058                           
  9059 ;; *************** function _SysTimeCallBack *****************
  9060 ;; Defined at:
  9061 ;;		line 137 in file "Src/SystemTime.c"
  9062 ;; Parameters:    Size  Location     Type
  9063 ;;		None
  9064 ;; Auto vars:     Size  Location     Type
  9065 ;;		None
  9066 ;; Return value:  Size  Location     Type
  9067 ;;                  1    wreg      void 
  9068 ;; Registers used:
  9069 ;;		wreg, status,2, status,0
  9070 ;; Tracked objects:
  9071 ;;		On entry : 0/0
  9072 ;;		On exit  : 0/0
  9073 ;;		Unchanged: 0/0
  9074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9075 ;;      Params:         0       0       0       0       0       0       0
  9076 ;;      Locals:         0       0       0       0       0       0       0
  9077 ;;      Temps:          0       0       0       0       0       0       0
  9078 ;;      Totals:         0       0       0       0       0       0       0
  9079 ;;Total ram usage:        0 bytes
  9080 ;; Hardware stack levels used: 1
  9081 ;; This function calls:
  9082 ;;		Nothing
  9083 ;; This function is called by:
  9084 ;;		_Isr
  9085 ;; This function uses a non-reentrant model
  9086 ;;
  9087                           
  9088                           	psect	text45
  9089  001FDA                     __ptext45:
  9090                           	callstack 0
  9091  001FDA                     _SysTimeCallBack:
  9092                           	callstack 0
  9093  001FDA  FFFF               	dw	65535	; assembler added errata NOP
  9094                           
  9095                           ;SystemTime.c: 140: if(TMR0IF)
  9096                           
  9097                           ;incstack = 0
  9098  001FDC  A4F2               	btfss	4082,2,c	;volatile
  9099  001FDE  D018               	goto	i2l307
  9100                           
  9101                           ;SystemTime.c: 141: {;SystemTime.c: 142: if(DecVar != 0)
  9102  001FE0  0100               	movlb	0	; () banked
  9103  001FE2  51BC               	movf	_DecVar& (0+255),w,b	;volatile
  9104  001FE4  11BD               	iorwf	(_DecVar+1)& (0+255),w,b	;volatile
  9105  001FE6  11BE               	iorwf	(_DecVar+2)& (0+255),w,b	;volatile
  9106  001FE8  11BF               	iorwf	(_DecVar+3)& (0+255),w,b	;volatile
  9107  001FEA  B4D8               	btfsc	status,2,c
  9108  001FEC  D005               	goto	i2l306
  9109                           
  9110                           ; BSR set to: 0
  9111                           ;SystemTime.c: 143: --DecVar;
  9112  001FEE  07BC               	decf	_DecVar& (0+255),f,b	;volatile
  9113  001FF0  0E00               	movlw	0
  9114  001FF2  5BBD               	subwfb	(_DecVar+1)& (0+255),f,b	;volatile
  9115  001FF4  5BBE               	subwfb	(_DecVar+2)& (0+255),f,b	;volatile
  9116  001FF6  5BBF               	subwfb	(_DecVar+3)& (0+255),f,b	;volatile
  9117  001FF8                     i2l306:
  9118  001FF8  FFFF               	dw	65535	; assembler added errata NOP
  9119                           
  9120                           ; BSR set to: 0
  9121                           ;SystemTime.c: 145: ++IncVar;
  9122  001FFA  0E01               	movlw	1
  9123  001FFC  2656               	addwf	_IncVar^0,f,c	;volatile
  9124  001FFE  0E00               	movlw	0
  9125  002000  2257               	addwfc	(_IncVar+1)^0,f,c	;volatile
  9126  002002  2258               	addwfc	(_IncVar+2)^0,f,c	;volatile
  9127  002004  2259               	addwfc	(_IncVar+3)^0,f,c	;volatile
  9128                           
  9129                           ; BSR set to: 0
  9130                           ;SystemTime.c: 147: TMR0IF = 0;
  9131  002006  94F2               	bcf	4082,2,c	;volatile
  9132                           
  9133                           ; BSR set to: 0
  9134                           ;SystemTime.c: 148: TMR0 = val;
  9135  002008  C05E  FFD6         	movff	_val,4054	;volatile
  9136  00200C  C05F  FFD7         	movff	_val+1,4055	;volatile
  9137  002010                     i2l307:
  9138  002010  FFFF               	dw	65535	; assembler added errata NOP
  9139  002012  0012               	return		;funcret
  9140  002014  FFFF               	dw	65535	; errata NOP
  9141  002016                     __end_of_SysTimeCallBack:
  9142                           	callstack 0
  9143                           
  9144 ;; *************** function _SoftUARTCallBack *****************
  9145 ;; Defined at:
  9146 ;;		line 214 in file "Src/SoftwareUART.c"
  9147 ;; Parameters:    Size  Location     Type
  9148 ;;		None
  9149 ;; Auto vars:     Size  Location     Type
  9150 ;;  k               1   10[COMRAM] unsigned char 
  9151 ;;  next            1    9[COMRAM] unsigned char 
  9152 ;;  rxtmp           1    8[COMRAM] unsigned char 
  9153 ;; Return value:  Size  Location     Type
  9154 ;;                  1    wreg      void 
  9155 ;; Registers used:
  9156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9157 ;; Tracked objects:
  9158 ;;		On entry : 0/0
  9159 ;;		On exit  : 0/0
  9160 ;;		Unchanged: 0/0
  9161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9162 ;;      Params:         0       0       0       0       0       0       0
  9163 ;;      Locals:         3       0       0       0       0       0       0
  9164 ;;      Temps:          2       0       0       0       0       0       0
  9165 ;;      Totals:         5       0       0       0       0       0       0
  9166 ;;Total ram usage:        5 bytes
  9167 ;; Hardware stack levels used: 1
  9168 ;; Hardware stack levels required when called: 1
  9169 ;; This function calls:
  9170 ;;		i2___awmod
  9171 ;; This function is called by:
  9172 ;;		_Isr
  9173 ;; This function uses a non-reentrant model
  9174 ;;
  9175                           
  9176                           	psect	text46
  9177  001582                     __ptext46:
  9178                           	callstack 0
  9179  001582                     _SoftUARTCallBack:
  9180                           	callstack 0
  9181  001582  FFFF               	dw	65535	; assembler added errata NOP
  9182                           
  9183                           ;SoftwareUART.c: 218: if(INT0IF && INT0IE)
  9184                           
  9185                           ;incstack = 0
  9186  001584  B2F2               	btfsc	4082,1,c	;volatile
  9187  001586  A8F2               	btfss	4082,4,c	;volatile
  9188  001588  D049               	goto	i2l212
  9189                           
  9190                           ;SoftwareUART.c: 224: {;SoftwareUART.c: 225: uint8_t rxtmp = 0;
  9191  00158A  0E00               	movlw	0
  9192  00158C  6E09               	movwf	SoftUARTCallBack@rxtmp^0,c
  9193                           
  9194                           ;SoftwareUART.c: 227: if((uint8_t)((IO.Bytes[0x01 + 0] >> 0) & 0x01) == 0)
  9195  00158E  B081               	btfsc	129,0,c	;volatile
  9196  001590  D045               	goto	i2l212
  9197                           
  9198                           ;SoftwareUART.c: 228: {;SoftwareUART.c: 230: _delay((unsigned long)((((1000000/9600)/2))
      +                          *((16 * 1000000)/4000000.0)));
  9199  001592  0E34               	movlw	52
  9200  001594                     i2u502_47:
  9201  001594  FFFF               	dw	65535	; errata NOP
  9202  001596  2EE8               	decfsz	wreg,f,c
  9203  001598  D7FD               	bra	i2u502_47
  9204                           
  9205                           ;SoftwareUART.c: 232: for(uint8_t k = 0;k < 8;++k)
  9206  00159A  0E00               	movlw	0
  9207  00159C  6E0B               	movwf	SoftUARTCallBack@k^0,c
  9208  00159E                     i2l4379:
  9209  00159E  FFFF               	dw	65535	; assembler added errata NOP
  9210                           
  9211                           ;SoftwareUART.c: 233: {;SoftwareUART.c: 235: _delay((unsigned long)((((1000000/9600) - 3
      +                          ))*((16 * 1000000)/4000000.0)));
  9212  0015A0  0E65               	movlw	101
  9213  0015A2                     i2u503_47:
  9214  0015A2  FFFF               	dw	65535	; errata NOP
  9215  0015A4  2EE8               	decfsz	wreg,f,c
  9216  0015A6  D7FD               	bra	i2u503_47
  9217                           
  9218                           ;SoftwareUART.c: 236: if((uint8_t)((IO.Bytes[0x01 + 0] >> 0) & 0x01))
  9219  0015A8  A081               	btfss	129,0,c	;volatile
  9220  0015AA  D00E               	goto	i2l4385
  9221                           
  9222                           ;SoftwareUART.c: 237: {;SoftwareUART.c: 238: rxtmp |= (uint8_t)(1 << k);
  9223  0015AC  C00B  F007         	movff	SoftUARTCallBack@k,??_SoftUARTCallBack
  9224  0015B0  0E01               	movlw	1
  9225  0015B2  6E08               	movwf	(??_SoftUARTCallBack+1)^0,c
  9226  0015B4  2A07               	incf	??_SoftUARTCallBack^0,f,c
  9227  0015B6  D003               	goto	i2u342_44
  9228  0015B8                     i2u342_45:
  9229  0015B8  FFFF               	dw	65535	; assembler added errata NOP
  9230  0015BA  90D8               	bcf	status,0,c
  9231  0015BC  3608               	rlcf	(??_SoftUARTCallBack+1)^0,f,c
  9232  0015BE                     i2u342_44:
  9233  0015BE  FFFF               	dw	65535	; assembler added errata NOP
  9234  0015C0  2E07               	decfsz	??_SoftUARTCallBack^0,f,c
  9235  0015C2  D7FA               	goto	i2u342_45
  9236  0015C4  5008               	movf	(??_SoftUARTCallBack+1)^0,w,c
  9237  0015C6  1209               	iorwf	SoftUARTCallBack@rxtmp^0,f,c
  9238  0015C8                     i2l4385:
  9239  0015C8  FFFF               	dw	65535	; assembler added errata NOP
  9240  0015CA  2A0B               	incf	SoftUARTCallBack@k^0,f,c
  9241  0015CC  0E07               	movlw	7
  9242  0015CE  640B               	cpfsgt	SoftUARTCallBack@k^0,c
  9243  0015D0  D7E6               	goto	i2l4379
  9244                           
  9245                           ;SoftwareUART.c: 240: };SoftwareUART.c: 243: };SoftwareUART.c: 245: uint8_t next = (uint
      +                          8_t)((Rxfifocurrent + 1) % 100);
  9246  0015D2  0E01               	movlw	1
  9247  0015D4  2460               	addwf	_Rxfifocurrent^0,w,c	;volatile
  9248  0015D6  6E01               	movwf	i2___awmod@dividend^0,c
  9249  0015D8  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  9250  0015DA  0E00               	movlw	0
  9251  0015DC  2202               	addwfc	(i2___awmod@dividend+1)^0,f,c
  9252  0015DE  0E00               	movlw	0
  9253  0015E0  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  9254  0015E2  0E64               	movlw	100
  9255  0015E4  6E03               	movwf	i2___awmod@divisor^0,c
  9256  0015E6  ECE1  F00B         	call	i2___awmod	;wreg free
  9257  0015EA  5001               	movf	?i2___awmod^0,w,c
  9258  0015EC  6E0A               	movwf	SoftUARTCallBack@next^0,c
  9259                           
  9260                           ;SoftwareUART.c: 246: if (next != Rxfifoptr)
  9261  0015EE  5061               	movf	_Rxfifoptr^0,w,c	;volatile
  9262  0015F0  180A               	xorwf	SoftUARTCallBack@next^0,w,c
  9263  0015F2  B4D8               	btfsc	status,2,c
  9264  0015F4  D00B               	goto	i2l217
  9265                           
  9266                           ;SoftwareUART.c: 247: {;SoftwareUART.c: 248: RxFIFO[Rxfifocurrent] = rxtmp;
  9267  0015F6  0E00               	movlw	low _RxFIFO
  9268  0015F8  2460               	addwf	_Rxfifocurrent^0,w,c	;volatile
  9269  0015FA  6ED9               	movwf	fsr2l,c
  9270  0015FC  6ADA               	clrf	fsr2h,c
  9271  0015FE  0E02               	movlw	high _RxFIFO
  9272  001600  22DA               	addwfc	fsr2h,f,c
  9273  001602  C009  FFDF         	movff	SoftUARTCallBack@rxtmp,indf2
  9274                           
  9275                           ;SoftwareUART.c: 249: Rxfifocurrent = next;
  9276  001606  C00A  F060         	movff	SoftUARTCallBack@next,_Rxfifocurrent	;volatile
  9277                           
  9278                           ;SoftwareUART.c: 251: }
  9279  00160A  D003               	goto	i2l4397
  9280  00160C                     i2l217:
  9281  00160C  FFFF               	dw	65535	; assembler added errata NOP
  9282                           
  9283                           ;SoftwareUART.c: 252: else;SoftwareUART.c: 253: {;SoftwareUART.c: 254: Rxstatus.Buf = 1;
  9284  00160E  0100               	movlb	0	; () banked
  9285  001610  81C4               	bsf	_Rxstatus& (0+255),0,b	;volatile
  9286  001612                     i2l4397:
  9287  001612  FFFF               	dw	65535	; assembler added errata NOP
  9288                           
  9289                           ;SoftwareUART.c: 255: };SoftwareUART.c: 257: _delay((unsigned long)((((1000000/9600)))*(
      +                          (16 * 1000000)/4000000.0)));
  9290  001614  0E68               	movlw	104
  9291  001616                     i2u504_47:
  9292  001616  FFFF               	dw	65535	; errata NOP
  9293  001618  2EE8               	decfsz	wreg,f,c
  9294  00161A  D7FD               	bra	i2u504_47
  9295  00161C                     i2l212:
  9296  00161C  FFFF               	dw	65535	; assembler added errata NOP
  9297                           
  9298                           ;SoftwareUART.c: 263: };SoftwareUART.c: 264: };SoftwareUART.c: 266: INT0IF = 0;
  9299  00161E  92F2               	bcf	4082,1,c	;volatile
  9300  001620  0012               	return		;funcret
  9301  001622  FFFF               	dw	65535	; errata NOP
  9302  001624                     __end_of_SoftUARTCallBack:
  9303                           	callstack 0
  9304                           
  9305 ;; *************** function i2___awmod *****************
  9306 ;; Defined at:
  9307 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  9308 ;; Parameters:    Size  Location     Type
  9309 ;;  dividend        2    0[COMRAM] int 
  9310 ;;  divisor         2    2[COMRAM] int 
  9311 ;; Auto vars:     Size  Location     Type
  9312 ;;  sign            1    5[COMRAM] unsigned char 
  9313 ;;  counter         1    4[COMRAM] unsigned char 
  9314 ;; Return value:  Size  Location     Type
  9315 ;;                  2    0[COMRAM] int 
  9316 ;; Registers used:
  9317 ;;		wreg, status,2, status,0
  9318 ;; Tracked objects:
  9319 ;;		On entry : 0/0
  9320 ;;		On exit  : 0/0
  9321 ;;		Unchanged: 0/0
  9322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9323 ;;      Params:         4       0       0       0       0       0       0
  9324 ;;      Locals:         2       0       0       0       0       0       0
  9325 ;;      Temps:          0       0       0       0       0       0       0
  9326 ;;      Totals:         6       0       0       0       0       0       0
  9327 ;;Total ram usage:        6 bytes
  9328 ;; Hardware stack levels used: 1
  9329 ;; This function calls:
  9330 ;;		Nothing
  9331 ;; This function is called by:
  9332 ;;		_SoftUARTCallBack
  9333 ;; This function uses a non-reentrant model
  9334 ;;
  9335                           
  9336                           	psect	text47
  9337  0017C2                     __ptext47:
  9338                           	callstack 0
  9339  0017C2                     i2___awmod:
  9340                           	callstack 0
  9341  0017C2  FFFF               	dw	65535	; assembler added errata NOP
  9342                           
  9343                           ;incstack = 0
  9344  0017C4  0E00               	movlw	0
  9345  0017C6  6E06               	movwf	i2___awmod@sign^0,c
  9346  0017C8  AE02               	btfss	(i2___awmod@dividend+1)^0,7,c
  9347  0017CA  D006               	goto	i2l4237
  9348  0017CC  6C01               	negf	i2___awmod@dividend^0,c
  9349  0017CE  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  9350  0017D0  B0D8               	btfsc	status,0,c
  9351  0017D2  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  9352  0017D4  0E01               	movlw	1
  9353  0017D6  6E06               	movwf	i2___awmod@sign^0,c
  9354  0017D8                     i2l4237:
  9355  0017D8  FFFF               	dw	65535	; assembler added errata NOP
  9356  0017DA  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  9357  0017DC  D004               	goto	i2l4241
  9358  0017DE  6C03               	negf	i2___awmod@divisor^0,c
  9359  0017E0  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  9360  0017E2  B0D8               	btfsc	status,0,c
  9361  0017E4  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  9362  0017E6                     i2l4241:
  9363  0017E6  FFFF               	dw	65535	; assembler added errata NOP
  9364  0017E8  5003               	movf	i2___awmod@divisor^0,w,c
  9365  0017EA  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  9366  0017EC  B4D8               	btfsc	status,2,c
  9367  0017EE  D01C               	goto	i2l4257
  9368  0017F0  0E01               	movlw	1
  9369  0017F2  6E05               	movwf	i2___awmod@counter^0,c
  9370  0017F4  D005               	goto	i2l4247
  9371  0017F6                     i2l4245:
  9372  0017F6  FFFF               	dw	65535	; assembler added errata NOP
  9373  0017F8  90D8               	bcf	status,0,c
  9374  0017FA  3603               	rlcf	i2___awmod@divisor^0,f,c
  9375  0017FC  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  9376  0017FE  2A05               	incf	i2___awmod@counter^0,f,c
  9377  001800                     i2l4247:
  9378  001800  FFFF               	dw	65535	; assembler added errata NOP
  9379  001802  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  9380  001804  D7F8               	goto	i2l4245
  9381  001806                     i2u319_40:
  9382  001806  FFFF               	dw	65535	; assembler added errata NOP
  9383  001808  5003               	movf	i2___awmod@divisor^0,w,c
  9384  00180A  5C01               	subwf	i2___awmod@dividend^0,w,c
  9385  00180C  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  9386  00180E  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  9387  001810  A0D8               	btfss	status,0,c
  9388  001812  D004               	goto	i2l4253
  9389  001814  5003               	movf	i2___awmod@divisor^0,w,c
  9390  001816  5E01               	subwf	i2___awmod@dividend^0,f,c
  9391  001818  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  9392  00181A  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  9393  00181C                     i2l4253:
  9394  00181C  FFFF               	dw	65535	; assembler added errata NOP
  9395  00181E  90D8               	bcf	status,0,c
  9396  001820  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  9397  001822  3203               	rrcf	i2___awmod@divisor^0,f,c
  9398  001824  2E05               	decfsz	i2___awmod@counter^0,f,c
  9399  001826  D7EF               	goto	i2u319_40
  9400  001828                     i2l4257:
  9401  001828  FFFF               	dw	65535	; assembler added errata NOP
  9402  00182A  5006               	movf	i2___awmod@sign^0,w,c
  9403  00182C  B4D8               	btfsc	status,2,c
  9404  00182E  D004               	goto	i2l4261
  9405  001830  6C01               	negf	i2___awmod@dividend^0,c
  9406  001832  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  9407  001834  B0D8               	btfsc	status,0,c
  9408  001836  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  9409  001838                     i2l4261:
  9410  001838  FFFF               	dw	65535	; assembler added errata NOP
  9411  00183A  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  9412  00183E  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  9413  001842  0012               	return		;funcret
  9414  001844  FFFF               	dw	65535	; errata NOP
  9415  001846                     __end_ofi2___awmod:
  9416                           	callstack 0
  9417                           
  9418 ;; *************** function _SIM800xSDMCallBack *****************
  9419 ;; Defined at:
  9420 ;;		line 383 in file "Src/SIM800x_SDM.c"
  9421 ;; Parameters:    Size  Location     Type
  9422 ;;		None
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;  tmp             1    5[COMRAM] unsigned char 
  9425 ;;  next            2    6[COMRAM] unsigned int 
  9426 ;; Return value:  Size  Location     Type
  9427 ;;                  1    wreg      void 
  9428 ;; Registers used:
  9429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9430 ;; Tracked objects:
  9431 ;;		On entry : 0/0
  9432 ;;		On exit  : 0/0
  9433 ;;		Unchanged: 0/0
  9434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9435 ;;      Params:         0       0       0       0       0       0       0
  9436 ;;      Locals:         3       0       0       0       0       0       0
  9437 ;;      Temps:          0       0       0       0       0       0       0
  9438 ;;      Totals:         3       0       0       0       0       0       0
  9439 ;;Total ram usage:        3 bytes
  9440 ;; Hardware stack levels used: 1
  9441 ;; Hardware stack levels required when called: 1
  9442 ;; This function calls:
  9443 ;;		_USARTReceiveByte
  9444 ;;		i2___lwmod
  9445 ;; This function is called by:
  9446 ;;		_Isr
  9447 ;; This function uses a non-reentrant model
  9448 ;;
  9449                           
  9450                           	psect	text48
  9451  001C70                     __ptext48:
  9452                           	callstack 0
  9453  001C70                     _SIM800xSDMCallBack:
  9454                           	callstack 0
  9455  001C70  FFFF               	dw	65535	; assembler added errata NOP
  9456                           
  9457                           ;SIM800x_SDM.c: 386: if(RCIF)
  9458                           
  9459                           ;incstack = 0
  9460  001C72  AA9E               	btfss	3998,5,c	;volatile
  9461  001C74  D026               	goto	i2l1070
  9462                           
  9463                           ;SIM800x_SDM.c: 387: {;SIM800x_SDM.c: 389: uint16_t next = (Rxfifocurrent + 1) % 200;
  9464  001C76  0E01               	movlw	1
  9465  001C78  245A               	addwf	_Rxfifocurrent@SIM800x_SDM$F1168^0,w,c	;volatile
  9466  001C7A  6E01               	movwf	i2___lwmod@dividend^0,c
  9467  001C7C  0E00               	movlw	0
  9468  001C7E  205B               	addwfc	(_Rxfifocurrent@SIM800x_SDM$F1168+1)^0,w,c	;volatile
  9469  001C80  6E02               	movwf	(i2___lwmod@dividend+1)^0,c
  9470  001C82  0E00               	movlw	0
  9471  001C84  6E04               	movwf	(i2___lwmod@divisor+1)^0,c
  9472  001C86  0EC8               	movlw	200
  9473  001C88  6E03               	movwf	i2___lwmod@divisor^0,c
  9474  001C8A  EC0B  F00F         	call	i2___lwmod	;wreg free
  9475  001C8E  C001  F007         	movff	?i2___lwmod,SIM800xSDMCallBack@next
  9476  001C92  C002  F008         	movff	?i2___lwmod+1,SIM800xSDMCallBack@next+1
  9477                           
  9478                           ;SIM800x_SDM.c: 390: if (next != Rxfifoptr)
  9479  001C96  505C               	movf	_Rxfifoptr@SIM800x_SDM$F1167^0,w,c	;volatile
  9480  001C98  1807               	xorwf	SIM800xSDMCallBack@next^0,w,c
  9481  001C9A  E104               	bnz	i2u346_40
  9482  001C9C  505D               	movf	(_Rxfifoptr@SIM800x_SDM$F1167+1)^0,w,c	;volatile
  9483  001C9E  1808               	xorwf	(SIM800xSDMCallBack@next+1)^0,w,c
  9484  001CA0  B4D8               	btfsc	status,2,c
  9485  001CA2  D00F               	goto	i2l1070
  9486  001CA4                     i2u346_40:
  9487                           
  9488                           ;SIM800x_SDM.c: 391: {;SIM800x_SDM.c: 392: uint8_t tmp = USARTReceiveByte();
  9489  001CA4  EC76  F010         	call	_USARTReceiveByte	;wreg free
  9490  001CA8  6E06               	movwf	SIM800xSDMCallBack@tmp^0,c
  9491                           
  9492                           ;SIM800x_SDM.c: 393: RxFIFO[Rxfifocurrent] = tmp;
  9493  001CAA  0E00               	movlw	low _RxFIFO@SIM800x_SDM$F1166
  9494  001CAC  245A               	addwf	_Rxfifocurrent@SIM800x_SDM$F1168^0,w,c	;volatile
  9495  001CAE  6ED9               	movwf	fsr2l,c
  9496  001CB0  0E03               	movlw	high _RxFIFO@SIM800x_SDM$F1166
  9497  001CB2  205B               	addwfc	(_Rxfifocurrent@SIM800x_SDM$F1168+1)^0,w,c	;volatile
  9498  001CB4  6EDA               	movwf	fsr2h,c
  9499  001CB6  C006  FFDF         	movff	SIM800xSDMCallBack@tmp,indf2
  9500                           
  9501                           ;SIM800x_SDM.c: 394: Rxfifocurrent = next;
  9502  001CBA  C007  F05A         	movff	SIM800xSDMCallBack@next,_Rxfifocurrent@SIM800x_SDM$F1168	;volatile
  9503  001CBE  C008  F05B         	movff	SIM800xSDMCallBack@next+1,_Rxfifocurrent@SIM800x_SDM$F1168+1	;volatile
  9504  001CC2                     i2l1070:
  9505  001CC2  FFFF               	dw	65535	; assembler added errata NOP
  9506  001CC4  0012               	return		;funcret
  9507  001CC6  FFFF               	dw	65535	; errata NOP
  9508  001CC8                     __end_of_SIM800xSDMCallBack:
  9509                           	callstack 0
  9510                           
  9511 ;; *************** function i2___lwmod *****************
  9512 ;; Defined at:
  9513 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  9514 ;; Parameters:    Size  Location     Type
  9515 ;;  dividend        2    0[COMRAM] unsigned int 
  9516 ;;  divisor         2    2[COMRAM] unsigned int 
  9517 ;; Auto vars:     Size  Location     Type
  9518 ;;  counter         1    4[COMRAM] unsigned char 
  9519 ;; Return value:  Size  Location     Type
  9520 ;;                  2    0[COMRAM] unsigned int 
  9521 ;; Registers used:
  9522 ;;		wreg, status,2, status,0
  9523 ;; Tracked objects:
  9524 ;;		On entry : 0/0
  9525 ;;		On exit  : 0/0
  9526 ;;		Unchanged: 0/0
  9527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9528 ;;      Params:         4       0       0       0       0       0       0
  9529 ;;      Locals:         1       0       0       0       0       0       0
  9530 ;;      Temps:          0       0       0       0       0       0       0
  9531 ;;      Totals:         5       0       0       0       0       0       0
  9532 ;;Total ram usage:        5 bytes
  9533 ;; Hardware stack levels used: 1
  9534 ;; This function calls:
  9535 ;;		Nothing
  9536 ;; This function is called by:
  9537 ;;		_SIM800xSDMCallBack
  9538 ;; This function uses a non-reentrant model
  9539 ;;
  9540                           
  9541                           	psect	text49
  9542  001E16                     __ptext49:
  9543                           	callstack 0
  9544  001E16                     i2___lwmod:
  9545                           	callstack 0
  9546  001E16  FFFF               	dw	65535	; assembler added errata NOP
  9547                           
  9548                           ;incstack = 0
  9549  001E18  5003               	movf	i2___lwmod@divisor^0,w,c
  9550  001E1A  1004               	iorwf	(i2___lwmod@divisor+1)^0,w,c
  9551  001E1C  B4D8               	btfsc	status,2,c
  9552  001E1E  D01C               	goto	i2l1703
  9553  001E20  0E01               	movlw	1
  9554  001E22  6E05               	movwf	i2___lwmod@counter^0,c
  9555  001E24  D005               	goto	i2l4271
  9556  001E26                     i2l4269:
  9557  001E26  FFFF               	dw	65535	; assembler added errata NOP
  9558  001E28  90D8               	bcf	status,0,c
  9559  001E2A  3603               	rlcf	i2___lwmod@divisor^0,f,c
  9560  001E2C  3604               	rlcf	(i2___lwmod@divisor+1)^0,f,c
  9561  001E2E  2A05               	incf	i2___lwmod@counter^0,f,c
  9562  001E30                     i2l4271:
  9563  001E30  FFFF               	dw	65535	; assembler added errata NOP
  9564  001E32  AE04               	btfss	(i2___lwmod@divisor+1)^0,7,c
  9565  001E34  D7F8               	goto	i2l4269
  9566  001E36                     i2u323_40:
  9567  001E36  FFFF               	dw	65535	; assembler added errata NOP
  9568  001E38  5003               	movf	i2___lwmod@divisor^0,w,c
  9569  001E3A  5C01               	subwf	i2___lwmod@dividend^0,w,c
  9570  001E3C  5004               	movf	(i2___lwmod@divisor+1)^0,w,c
  9571  001E3E  5802               	subwfb	(i2___lwmod@dividend+1)^0,w,c
  9572  001E40  A0D8               	btfss	status,0,c
  9573  001E42  D004               	goto	i2l4277
  9574  001E44  5003               	movf	i2___lwmod@divisor^0,w,c
  9575  001E46  5E01               	subwf	i2___lwmod@dividend^0,f,c
  9576  001E48  5004               	movf	(i2___lwmod@divisor+1)^0,w,c
  9577  001E4A  5A02               	subwfb	(i2___lwmod@dividend+1)^0,f,c
  9578  001E4C                     i2l4277:
  9579  001E4C  FFFF               	dw	65535	; assembler added errata NOP
  9580  001E4E  90D8               	bcf	status,0,c
  9581  001E50  3204               	rrcf	(i2___lwmod@divisor+1)^0,f,c
  9582  001E52  3203               	rrcf	i2___lwmod@divisor^0,f,c
  9583  001E54  2E05               	decfsz	i2___lwmod@counter^0,f,c
  9584  001E56  D7EF               	goto	i2u323_40
  9585  001E58                     i2l1703:
  9586  001E58  FFFF               	dw	65535	; assembler added errata NOP
  9587  001E5A  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
  9588  001E5E  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  9589  001E62  0012               	return		;funcret
  9590  001E64  FFFF               	dw	65535	; errata NOP
  9591  001E66                     __end_ofi2___lwmod:
  9592                           	callstack 0
  9593                           
  9594 ;; *************** function _USARTReceiveByte *****************
  9595 ;; Defined at:
  9596 ;;		line 123 in file "C:/EmbeddedDevOps/M8M_APIs/PIC18.X/Src/USART.c"
  9597 ;; Parameters:    Size  Location     Type
  9598 ;;		None
  9599 ;; Auto vars:     Size  Location     Type
  9600 ;;  data            1    0[COMRAM] unsigned char 
  9601 ;; Return value:  Size  Location     Type
  9602 ;;                  1    wreg      unsigned char 
  9603 ;; Registers used:
  9604 ;;		wreg, status,2
  9605 ;; Tracked objects:
  9606 ;;		On entry : 0/0
  9607 ;;		On exit  : 0/0
  9608 ;;		Unchanged: 0/0
  9609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9610 ;;      Params:         0       0       0       0       0       0       0
  9611 ;;      Locals:         1       0       0       0       0       0       0
  9612 ;;      Temps:          0       0       0       0       0       0       0
  9613 ;;      Totals:         1       0       0       0       0       0       0
  9614 ;;Total ram usage:        1 bytes
  9615 ;; Hardware stack levels used: 1
  9616 ;; This function calls:
  9617 ;;		Nothing
  9618 ;; This function is called by:
  9619 ;;		_SIM800xSDMCallBack
  9620 ;; This function uses a non-reentrant model
  9621 ;;
  9622                           
  9623                           	psect	text50
  9624  0020EC                     __ptext50:
  9625                           	callstack 0
  9626  0020EC                     _USARTReceiveByte:
  9627                           	callstack 0
  9628  0020EC  FFFF               	dw	65535	; assembler added errata NOP
  9629                           
  9630                           ;USART.c: 126: uint8_t data = RCREG;
  9631                           
  9632                           ;incstack = 0
  9633  0020EE  CFAE F001          	movff	4014,USARTReceiveByte@data	;volatile
  9634                           
  9635                           ;USART.c: 128: if(RCSTA,OERR)
  9636  0020F2  50AB               	movf	171,w,c	;volatile
  9637  0020F4  A2AB               	btfss	4011,1,c	;volatile
  9638  0020F6  D002               	goto	i2l4225
  9639                           
  9640                           ;USART.c: 129: RCSTA,CREN = 0;
  9641  0020F8  50AB               	movf	171,w,c	;volatile
  9642  0020FA  98AB               	bcf	4011,4,c	;volatile
  9643  0020FC                     i2l4225:
  9644  0020FC  FFFF               	dw	65535	; assembler added errata NOP
  9645                           
  9646                           ;USART.c: 131: return data;
  9647  0020FE  5001               	movf	USARTReceiveByte@data^0,w,c
  9648  002100  0012               	return		;funcret
  9649  002102  FFFF               	dw	65535	; errata NOP
  9650  002104                     __end_of_USARTReceiveByte:
  9651                           	callstack 0
  9652                           
  9653                           	psect	rparam
  9654  0000                     
  9655                           	psect	temp
  9656  000068                     btemp:
  9657                           	callstack 0
  9658  000068                     	ds	1
  9659  0000                     int$flags	set	btemp
  9660  0000                     wtemp8	set	btemp+1
  9661  0000                     ttemp5	set	btemp+1
  9662  0000                     ttemp6	set	btemp+4
  9663  0000                     ttemp7	set	btemp+8
  9664                           
  9665                           	psect	idloc
  9666                           
  9667                           ;Config register IDLOC0 @ 0x200000
  9668                           ;	unspecified, using default values
  9669  200000                     	org	2097152
  9670  200000  FF                 	db	255
  9671                           
  9672                           ;Config register IDLOC1 @ 0x200001
  9673                           ;	unspecified, using default values
  9674  200001                     	org	2097153
  9675  200001  FF                 	db	255
  9676                           
  9677                           ;Config register IDLOC2 @ 0x200002
  9678                           ;	unspecified, using default values
  9679  200002                     	org	2097154
  9680  200002  FF                 	db	255
  9681                           
  9682                           ;Config register IDLOC3 @ 0x200003
  9683                           ;	unspecified, using default values
  9684  200003                     	org	2097155
  9685  200003  FF                 	db	255
  9686                           
  9687                           ;Config register IDLOC4 @ 0x200004
  9688                           ;	unspecified, using default values
  9689  200004                     	org	2097156
  9690  200004  FF                 	db	255
  9691                           
  9692                           ;Config register IDLOC5 @ 0x200005
  9693                           ;	unspecified, using default values
  9694  200005                     	org	2097157
  9695  200005  FF                 	db	255
  9696                           
  9697                           ;Config register IDLOC6 @ 0x200006
  9698                           ;	unspecified, using default values
  9699  200006                     	org	2097158
  9700  200006  FF                 	db	255
  9701                           
  9702                           ;Config register IDLOC7 @ 0x200007
  9703                           ;	unspecified, using default values
  9704  200007                     	org	2097159
  9705  200007  FF                 	db	255
  9706                           
  9707                           	psect	config
  9708                           
  9709                           ; Padding undefined space
  9710  300000                     	org	3145728
  9711  300000  FF                 	db	255
  9712                           
  9713                           ;Config register CONFIG1H @ 0x300001
  9714                           ;	Oscillator Selection bits
  9715                           ;	OSC = HS, HS oscillator
  9716                           ;	Oscillator System Clock Switch Enable bit
  9717                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  9718  300001                     	org	3145729
  9719  300001  22                 	db	34
  9720                           
  9721                           ;Config register CONFIG2L @ 0x300002
  9722                           ;	Power-up Timer Enable bit
  9723                           ;	PWRT = OFF, PWRT disabled
  9724                           ;	Brown-out Reset Enable bit
  9725                           ;	BOR = ON, Brown-out Reset enabled
  9726                           ;	Brown-out Reset Voltage bits
  9727                           ;	BORV = 20, VBOR set to 2.0V
  9728  300002                     	org	3145730
  9729  300002  0F                 	db	15
  9730                           
  9731                           ;Config register CONFIG2H @ 0x300003
  9732                           ;	Watchdog Timer Enable bit
  9733                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9734                           ;	Watchdog Timer Postscale Select bits
  9735                           ;	WDTPS = 128, 1:128
  9736  300003                     	org	3145731
  9737  300003  0E                 	db	14
  9738                           
  9739                           ; Padding undefined space
  9740  300004                     	org	3145732
  9741  300004  FF                 	db	255
  9742                           
  9743                           ;Config register CONFIG3H @ 0x300005
  9744                           ;	CCP2 Mux bit
  9745                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
  9746  300005                     	org	3145733
  9747  300005  01                 	db	1
  9748                           
  9749                           ;Config register CONFIG4L @ 0x300006
  9750                           ;	Stack Full/Underflow Reset Enable bit
  9751                           ;	STVR = OFF, Stack Full/Underflow will not cause RESET
  9752                           ;	Low Voltage ICSP Enable bit
  9753                           ;	LVP = OFF, Low Voltage ICSP disabled
  9754                           ;	Background Debugger Enable bit
  9755                           ;	DEBUG = 0x1, unprogrammed default
  9756  300006                     	org	3145734
  9757  300006  80                 	db	128
  9758                           
  9759                           ; Padding undefined space
  9760  300007                     	org	3145735
  9761  300007  FF                 	db	255
  9762                           
  9763                           ;Config register CONFIG5L @ 0x300008
  9764                           ;	Code Protection bit
  9765                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  9766                           ;	Code Protection bit
  9767                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  9768                           ;	Code Protection bit
  9769                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  9770                           ;	Code Protection bit
  9771                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  9772  300008                     	org	3145736
  9773  300008  0F                 	db	15
  9774                           
  9775                           ;Config register CONFIG5H @ 0x300009
  9776                           ;	Boot Block Code Protection bit
  9777                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  9778                           ;	Data EEPROM Code Protection bit
  9779                           ;	CPD = OFF, Data EEPROM not code protected
  9780  300009                     	org	3145737
  9781  300009  C0                 	db	192
  9782                           
  9783                           ;Config register CONFIG6L @ 0x30000A
  9784                           ;	Write Protection bit
  9785                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  9786                           ;	Write Protection bit
  9787                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  9788                           ;	Write Protection bit
  9789                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  9790                           ;	Write Protection bit
  9791                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  9792  30000A                     	org	3145738
  9793  30000A  0F                 	db	15
  9794                           
  9795                           ;Config register CONFIG6H @ 0x30000B
  9796                           ;	Configuration Register Write Protection bit
  9797                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  9798                           ;	Boot Block Write Protection bit
  9799                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  9800                           ;	Data EEPROM Write Protection bit
  9801                           ;	WRTD = OFF, Data EEPROM not write protected
  9802  30000B                     	org	3145739
  9803  30000B  E0                 	db	224
  9804                           
  9805                           ;Config register CONFIG7L @ 0x30000C
  9806                           ;	Table Read Protection bit
  9807                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  9808                           ;	Table Read Protection bit
  9809                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  9810                           ;	Table Read Protection bit
  9811                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  9812                           ;	Table Read Protection bit
  9813                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  9814  30000C                     	org	3145740
  9815  30000C  0F                 	db	15
  9816                           
  9817                           ;Config register CONFIG7H @ 0x30000D
  9818                           ;	Boot Block Table Read Protection bit
  9819                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  9820  30000D                     	org	3145741
  9821  30000D  40                 	db	64
  9822                           tosu	equ	0xFFF
  9823                           tosh	equ	0xFFE
  9824                           tosl	equ	0xFFD
  9825                           stkptr	equ	0xFFC
  9826                           pclatu	equ	0xFFB
  9827                           pclath	equ	0xFFA
  9828                           pcl	equ	0xFF9
  9829                           tblptru	equ	0xFF8
  9830                           tblptrh	equ	0xFF7
  9831                           tblptrl	equ	0xFF6
  9832                           tablat	equ	0xFF5
  9833                           prodh	equ	0xFF4
  9834                           prodl	equ	0xFF3
  9835                           indf0	equ	0xFEF
  9836                           postinc0	equ	0xFEE
  9837                           postdec0	equ	0xFED
  9838                           preinc0	equ	0xFEC
  9839                           plusw0	equ	0xFEB
  9840                           fsr0h	equ	0xFEA
  9841                           fsr0l	equ	0xFE9
  9842                           wreg	equ	0xFE8
  9843                           indf1	equ	0xFE7
  9844                           postinc1	equ	0xFE6
  9845                           postdec1	equ	0xFE5
  9846                           preinc1	equ	0xFE4
  9847                           plusw1	equ	0xFE3
  9848                           fsr1h	equ	0xFE2
  9849                           fsr1l	equ	0xFE1
  9850                           bsr	equ	0xFE0
  9851                           indf2	equ	0xFDF
  9852                           postinc2	equ	0xFDE
  9853                           postdec2	equ	0xFDD
  9854                           preinc2	equ	0xFDC
  9855                           plusw2	equ	0xFDB
  9856                           fsr2h	equ	0xFDA
  9857                           fsr2l	equ	0xFD9
  9858                           status	equ	0xFD8

Data Sizes:
    Strings     1606
    Constant    41
    Data        8
    BSS         743
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     85     103
    BANK0           128     41     114
    BANK1           256     29     249
    BANK2           256      0     240
    BANK3           256      0     200
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 279
		 -> SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xIPGetParameters@str(COMRAM[30]), SIM800xIPGetState@str(COMRAM[30]), txmessage(BANK2[100]), 
		 -> STR_10(CODE[17]), STR_9(CODE[279]), STR_4(CODE[9]), STR_3(CODE[5]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 279
		 -> SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xIPGetParameters@str(COMRAM[30]), SIM800xIPGetState@str(COMRAM[30]), txmessage(BANK2[100]), 
		 -> STR_10(CODE[17]), STR_9(CODE[279]), STR_4(CODE[9]), STR_3(CODE[5]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_100(CODE[21]), STR_99(CODE[18]), STR_98(CODE[21]), STR_95(CODE[26]), 
		 -> STR_94(CODE[28]), STR_93(CODE[25]), STR_92(CODE[24]), STR_91(CODE[26]), 
		 -> STR_71(CODE[15]), STR_70(CODE[20]), STR_66(CODE[29]), STR_65(CODE[29]), 
		 -> STR_59(CODE[15]), STR_53(CODE[4]), STR_33(CODE[12]), STR_30(CODE[12]), 
		 -> STR_24(CODE[27]), STR_23(CODE[24]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 40
		 -> SIM800xHTTPRead@str(BANK0[30]), SIM800xHTTPAction@str(BANK0[30]), SIM800xHTTPInputData@str(BANK0[30]), SIM800xHTTPSetTimeout@str(COMRAM[30]), 
		 -> SIM800xHTTPSetBreakEnd@str(COMRAM[30]), SIM800xHTTPSetBreak@str(COMRAM[30]), SIM800xHTTPSetRedir@str(COMRAM[25]), SIM800xHTTPSetPort@str(COMRAM[30]), 
		 -> SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xGPRSSetDataMode@str(COMRAM[20]), SIM800xGPRSSetQoSRequest@str(COMRAM[40]), SIM800xGPRSSetQoSMin@str(COMRAM[40]), 
		 -> SIM800xIPGetParameters@str(COMRAM[30]), SIM800xIPSetRate@str(COMRAM[8]), SIM800xSetBaudRate@str(COMRAM[15]), SIM800xInit@str(COMRAM[15]), 
		 -> SystemTask@msg(BANK1[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    SIM800xSDMReadF1Pkt@data	PTR unsigned char  size(2) Largest target is 40
		 -> SIM800x3GPPGetSubscriberNumber@str(COMRAM[40]), SIM800x3GPPGetSignalQuality@str(COMRAM[20]), SIM800x3GPPGetOperatorName@str(COMRAM[40]), SIM800xHTTPReadHeader@str(COMRAM[30]), 
		 -> SIM800xHTTPReadState@str(COMRAM[30]), SIM800xHTTPRead@str(BANK0[30]), SIM800xHTTPAction@str(BANK0[30]), SIM800xHTTPInputData@str(BANK0[30]), 
		 -> SIM800xGPRSGetNRegState@str(COMRAM[20]), SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xGPRSSetDataMode@str(COMRAM[20]), SIM800xIPGetState@str(COMRAM[30]), 
		 -> SIM800xGetIMSI@str(COMRAM[20]), SIM800xGetSoftwareRevisionID@str(COMRAM[30]), ProcessResp4@str(COMRAM[20]), 

    SIM800xSDMPrint@str	PTR const unsigned char  size(2) Largest target is 279
		 -> STR_107(CODE[9]), STR_106(CODE[8]), STR_105(CODE[10]), STR_104(CODE[16]), 
		 -> STR_103(CODE[13]), STR_102(CODE[16]), STR_101(CODE[14]), SIM800xHTTPRead@str(BANK0[30]), 
		 -> SIM800xHTTPAction@str(BANK0[30]), SIM800xHTTPInputData@str(BANK0[30]), STR_97(CODE[24]), STR_96(CODE[23]), 
		 -> SIM800xHTTPSetTimeout@str(COMRAM[30]), SIM800xHTTPSetBreakEnd@str(COMRAM[30]), SIM800xHTTPSetBreak@str(COMRAM[30]), SIM800xHTTPSetRedir@str(COMRAM[25]), 
		 -> SIM800xHTTPSetPort@str(COMRAM[30]), STR_90(CODE[21]), STR_89(CODE[18]), STR_88(CODE[19]), 
		 -> STR_87(CODE[19]), STR_86(CODE[13]), STR_85(CODE[13]), STR_84(CODE[10]), 
		 -> STR_83(CODE[11]), STR_82(CODE[6]), STR_81(CODE[10]), STR_80(CODE[11]), 
		 -> STR_79(CODE[11]), STR_78(CODE[12]), STR_77(CODE[12]), STR_76(CODE[2]), 
		 -> STR_75(CODE[3]), STR_74(CODE[3]), STR_73(CODE[2]), STR_72(CODE[13]), 
		 -> SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xGPRSSetDataMode@str(COMRAM[20]), STR_69(CODE[12]), STR_68(CODE[12]), 
		 -> STR_67(CODE[11]), SIM800xGPRSSetQoSRequest@str(COMRAM[40]), SIM800xGPRSSetQoSMin@str(COMRAM[40]), STR_64(CODE[7]), 
		 -> STR_63(CODE[12]), STR_62(CODE[12]), STR_61(CODE[12]), STR_60(CODE[11]), 
		 -> SIM800xIPGetParameters@str(COMRAM[30]), STR_58(CODE[12]), STR_57(CODE[12]), STR_56(CODE[12]), 
		 -> STR_55(CODE[9]), STR_54(CODE[12]), SIM800xIPSetRate@str(COMRAM[8]), STR_52(CODE[13]), 
		 -> STR_51(CODE[12]), STR_50(CODE[8]), STR_49(CODE[12]), STR_48(CODE[9]), 
		 -> STR_47(CODE[12]), STR_46(CODE[8]), STR_45(CODE[12]), STR_44(CODE[12]), 
		 -> STR_43(CODE[12]), STR_42(CODE[9]), STR_41(CODE[5]), STR_40(CODE[8]), 
		 -> STR_39(CODE[8]), STR_38(CODE[8]), STR_37(CODE[8]), STR_36(CODE[8]), 
		 -> STR_35(CODE[4]), STR_34(CODE[6]), SIM800xSetBaudRate@str(COMRAM[15]), STR_32(CODE[13]), 
		 -> STR_31(CODE[6]), SIM800xInit@str(COMRAM[15]), STR_29(CODE[6]), STR_28(CODE[4]), 
		 -> STR_10(CODE[17]), STR_9(CODE[279]), STR_4(CODE[9]), STR_3(CODE[5]), 

    SIM800xSDMSendBytes@data	PTR unsigned char  size(2) Largest target is 100
		 -> txmessage(BANK2[100]), 

    SIM800xHTTPRead@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemTask@errcode(BANK1[2]), 

    SIM800xHTTPRead@data	PTR unsigned char  size(2) Largest target is 30
		 -> rxmessage(BANK1[30]), 

    SIM800xHTTPRead@cnt	PTR unsigned long  size(2) Largest target is 4
		 -> SystemTask@cnt(BANK1[4]), 

    SIM800xHTTPAction@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemTask@errcode(BANK1[2]), 

    SIM800xHTTPAction@cnt	PTR unsigned long  size(2) Largest target is 4
		 -> SystemTask@cnt(BANK1[4]), 

    SIM800xHTTPAction@statuscode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemTask@scode(BANK1[2]), 

    SIM800xHTTPInputData@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemTask@errcode(BANK1[2]), 

    SIM800xHTTPInputData@data	PTR unsigned char  size(2) Largest target is 100
		 -> txmessage(BANK2[100]), 

    SIM800xHTTPSetContent@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemInit@err(BANK0[2]), 

    SIM800xHTTPSetContent@content	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_10(CODE[17]), 

    SIM800xHTTPSetURL@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemInit@err(BANK0[2]), 

    SIM800xHTTPSetURL@url	PTR const unsigned char  size(2) Largest target is 279
		 -> STR_9(CODE[279]), 

    SIM800xHTTPInit@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemInit@err(BANK0[2]), 

    SIM800xIPGetState@ip	PTR unsigned char  size(2) Largest target is 20
		 -> SystemInit@ip(BANK0[20]), 

    SIM800xIPSetAPN@apn	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_4(CODE[9]), 

    SIM800xIPSetConnectionType@contype	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 0

    ProcessResp4@ec	PTR unsigned int  size(2) Largest target is 2
		 -> SystemInit@err(BANK0[2]), 

    ProcessResp2@str	PTR unsigned char  size(2) Largest target is 40
		 -> SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xIPGetState@str(COMRAM[30]), SIM800xGetSoftwareRevisionID@str(COMRAM[30]), 

    StrToInt@str	PTR const unsigned char  size(2) Largest target is 40
		 -> SIM800x3GPPGetSubscriberNumber@str(COMRAM[40]), SIM800x3GPPGetSignalQuality@str(COMRAM[20]), SIM800x3GPPGetOperatorName@str(COMRAM[40]), SIM800xHTTPReadHeader@str(COMRAM[30]), 
		 -> SIM800xHTTPReadState@str(COMRAM[30]), SIM800xHTTPRead@str(BANK0[30]), SIM800xHTTPAction@str(BANK0[30]), SIM800xHTTPInputData@str(BANK0[30]), 
		 -> SIM800xGPRSGetNRegState@str(COMRAM[20]), SIM800xGPRSSetDataMode@str(COMRAM[20]), SIM800xGetIMSI@str(COMRAM[20]), ProcessResp4@str(COMRAM[20]), 

    SoftUARTPrint@str	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_27(CODE[17]), STR_26(CODE[3]), STR_25(CODE[7]), SystemTask@msg(BANK1[20]), 
		 -> STR_22(CODE[34]), STR_21(CODE[32]), STR_20(CODE[35]), STR_11(CODE[8]), 
		 -> STR_8(CODE[32]), STR_7(CODE[3]), STR_6(CODE[31]), SystemInit@ip(BANK0[20]), 
		 -> STR_5(CODE[8]), STR_2(CODE[30]), STR_1(CODE[21]), 

    AddEntryToJsonObject@value	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_19(CODE[3]), STR_17(CODE[3]), STR_15(CODE[5]), STR_13(CODE[3]), 

    AddEntryToJsonObject@key	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_18(CODE[15]), STR_16(CODE[20]), STR_14(CODE[4]), STR_12(CODE[23]), 

    AddEntryToJsonObject@JsonObject	PTR unsigned char  size(2) Largest target is 100
		 -> txmessage(BANK2[100]), 

    AddEntryToJsonObject@Cpos	PTR unsigned int  size(2) Largest target is 2
		 -> cpos(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _SystemTask->_SIM800xHTTPRead
    _SoftUARTRxAvailable->___awmod
    _SoftUARTReceiveByte->___awmod
    _SIM800xHTTPRead->_sprintf
    _SIM800xHTTPInputData->_sprintf
    _SIM800xHTTPAction->_sprintf
    _SystemInit->_SIM800xIPGetState
    _SoftUARTPrint->_SoftUARTTransmitByte
    _SIM800xInit->_sprintf
    _sprintf->___llmod
    ___llmod->___lldiv
    _SIM800xSDMInit->___lldiv
    _SIM800xIPSetConnectionType->_ProcessResp1
    _SIM800xIPSetAPN->_ProcessResp1
    _SIM800xIPOpen->_ProcessResp1
    _ProcessResp1->_SIM800xSDMRxAvailable
    _SIM800xIPGetState->_ProcessResp2
    _ProcessResp2->_SIM800xSDMReadF1Pkt
    _SIM800xHTTPSetURL->_ProcessResp4
    _SIM800xHTTPSetContent->_ProcessResp4
    _SIM800xHTTPInit->_ProcessResp4
    _SIM800xSDMPrint->_SIM800xSDMSendByte
    _ProcessResp4->_StrToInt
    _StrToInt->___lmul
    _SIM800xSDMReadF1Pkt->_SIM800xSDMRxAvailable
    _SIM800xSDMRxAvailable->___lwmod
    _SIM800xSDMReadByte->___lwmod

Critical Paths under _Isr in COMRAM

    _Isr->_SoftUARTCallBack
    _SoftUARTCallBack->i2___awmod
    _SIM800xSDMCallBack->i2___lwmod

Critical Paths under _main in BANK0

    _SystemTask->_SIM800xHTTPAction

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_SystemTask

Critical Paths under _Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  194914
                         _SystemInit
                         _SystemTask
 ---------------------------------------------------------------------------------
 (1) _SystemTask                                          31    31      0   77542
                                             77 COMRAM     2     2      0
                                              0 BANK1     29    29      0
                  _SIM800xHTTPAction
               _SIM800xHTTPInputData
                    _SIM800xHTTPRead
                      _SoftUARTPrint
                _SoftUARTReceiveByte
                _SoftUARTRxAvailable
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _SoftUARTRxAvailable                                  2     2      0     903
                                             19 COMRAM     2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _SoftUARTReceiveByte                                  3     1      2     937
                                             19 COMRAM     3     1      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     903
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPRead                                     58    44     14   22896
                                             59 COMRAM    18     4     14
                                              0 BANK0     40    40      0
                    _SIM800xSDMFlush
                     _SIM800xSDMPeek
                    _SIM800xSDMPrint
                 _SIM800xSDMReadByte
                _SIM800xSDMReadF1Pkt
              _SIM800xSDMRxAvailable
                           _StrToInt
                            _Tick_ms
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPInputData                                56    44     12   23795
                                             59 COMRAM    16     4     12
                                              0 BANK0     40    40      0
                    _SIM800xSDMFlush
                     _SIM800xSDMPeek
                    _SIM800xSDMPrint
                _SIM800xSDMReadF1Pkt
              _SIM800xSDMRxAvailable
                _SIM800xSDMSendBytes
                           _StrToInt
                            _Tick_ms
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMSendBytes                                  4     0      4     245
                                             13 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPAction                                   55    45     10   21909
                                             59 COMRAM    14     4     10
                                              0 BANK0     41    41      0
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                _SIM800xSDMReadF1Pkt
              _SIM800xSDMRxAvailable
                           _StrToInt
                            _Tick_ms
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                          22    22      0  117372
                                              0 BANK0     22    22      0
               _AddEntryToJsonObject
                    _SIM800xHTTPInit
              _SIM800xHTTPSetContent
                  _SIM800xHTTPSetURL
                  _SIM800xIPGetState
                      _SIM800xIPOpen
                    _SIM800xIPSetAPN
         _SIM800xIPSetConnectionType
                        _SIM800xInit
                       _SoftUARTInit
                      _SoftUARTPrint
 ---------------------------------------------------------------------------------
 (2) _SoftUARTPrint                                        2     0      2    1731
                                             16 COMRAM     2     0      2
               _SoftUARTTransmitByte
 ---------------------------------------------------------------------------------
 (3) _SoftUARTTransmitByte                                 3     3      0     136
                                             13 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _SoftUARTInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIM800xInit                                         22    18      4   15007
                                             59 COMRAM    22    18      4
                    _SIM800xSDMFlush
                     _SIM800xSDMInit
                     _SIM800xSDMPeek
                    _SIM800xSDMPrint
                 _SIM800xSDMReadByte
              _SIM800xSDMRxAvailable
                            _Wait_ms
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             33    21     12    4819
                                             35 COMRAM    24    12     12
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     412
                                             26 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _Wait_ms                                             12     8      4     762
                                             13 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMInit                                      12     8      4     927
                                             26 COMRAM    12     8      4
                        _SystimeInit
                     _USARTAsyncInit
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     741
                                             13 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _USARTAsyncInit                                       1     1      0      31
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _SystimeInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIM800xIPSetConnectionType                           3     1      2    9383
                                             31 COMRAM     3     1      2
                       _ProcessResp1
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                 _SIM800xSDMSendByte
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _SIM800xIPSetAPN                                      3     1      2    9383
                                             31 COMRAM     3     1      2
                       _ProcessResp1
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                 _SIM800xSDMSendByte
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _SIM800xIPOpen                                        1     1      0    7581
                                             31 COMRAM     1     1      0
                       _ProcessResp1
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                 _SIM800xSDMSendByte
 ---------------------------------------------------------------------------------
 (3) _ProcessResp1                                         9     9      0     832
                                             22 COMRAM     9     9      0
                     _SIM800xSDMPeek
              _SIM800xSDMRxAvailable
                            _Tick_ms
 ---------------------------------------------------------------------------------
 (2) _SIM800xIPGetState                                   45    43      2   13327
                                             41 COMRAM    44    42      2
                       _ProcessResp2
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
              _SIM800xSDMRxAvailable
                 _SIM800xSDMSendByte
                            _Tick_ms
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _ProcessResp2                                         5     3      2    3687
                                             36 COMRAM     5     3      2
                     _SIM800xSDMPeek
                _SIM800xSDMReadF1Pkt
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMPeek                                       3     3      0      62
                                             13 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPSetURL                                    4     0      4   19912
                                             77 COMRAM     4     0      4
                       _ProcessResp4
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                 _SIM800xSDMSendByte
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPSetContent                                4     0      4   19912
                                             77 COMRAM     4     0      4
                       _ProcessResp4
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                 _SIM800xSDMSendByte
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2    1650
                                             13 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPInit                                      2     0      2   18079
                                             77 COMRAM     2     0      2
                       _ProcessResp4
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMPrint                                      2     0      2    6656
                                             14 COMRAM     2     0      2
                 _SIM800xSDMSendByte
 ---------------------------------------------------------------------------------
 (4) _SIM800xSDMSendByte                                   1     1      0      31
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ProcessResp4                                        32    30      2   11302
                                             45 COMRAM    32    30      2
                _SIM800xSDMReadF1Pkt
              _SIM800xSDMRxAvailable
                           _StrToInt
                            _Tick_ms
 ---------------------------------------------------------------------------------
 (3) _StrToInt                                            20    16      4    5632
                                             25 COMRAM    20    16      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     776
                                             13 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMReadF1Pkt                                 14    12      2    2853
                                             22 COMRAM    14    12      2
                    _SIM800xSDMFlush
                 _SIM800xSDMReadByte
              _SIM800xSDMRxAvailable
                            _Tick_ms
 ---------------------------------------------------------------------------------
 (3) _Tick_ms                                              4     0      4       0
                                             13 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMRxAvailable                                4     2      2     702
                                             18 COMRAM     4     2      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) _SIM800xSDMReadByte                                   1     1      0     736
                                             18 COMRAM     1     1      0
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     702
                                             13 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _SIM800xSDMFlush                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AddEntryToJsonObject                                13     5      8    2878
                                             13 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Isr                                                  2     2      0     787
                                             11 COMRAM     2     2      0
                 _SIM800xSDMCallBack
                   _SoftUARTCallBack
                    _SysTimeCallBack
 ---------------------------------------------------------------------------------
 (8) _SysTimeCallBack                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _SoftUARTCallBack                                     5     5      0     485
                                              6 COMRAM     5     5      0
                          i2___awmod
 ---------------------------------------------------------------------------------
 (9) i2___awmod                                            6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _SIM800xSDMCallBack                                   3     3      0     302
                                              5 COMRAM     3     3      0
                   _USARTReceiveByte
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (9) i2___lwmod                                            5     1      4     211
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (9) _USARTReceiveByte                                     1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SystemInit
     _AddEntryToJsonObject
     _SIM800xHTTPInit
       _ProcessResp4
         _SIM800xSDMReadF1Pkt
           _SIM800xSDMFlush
           _SIM800xSDMReadByte
             ___lwmod
           _SIM800xSDMRxAvailable
             ___lwmod
           _Tick_ms
         _SIM800xSDMRxAvailable
         _StrToInt
           ___lmul
         _Tick_ms
       _SIM800xSDMFlush
       _SIM800xSDMPrint
         _SIM800xSDMSendByte
     _SIM800xHTTPSetContent
       _ProcessResp4
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMSendByte
       _strlen
     _SIM800xHTTPSetURL
       _ProcessResp4
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMSendByte
       _strlen
     _SIM800xIPGetState
       _ProcessResp2
         _SIM800xSDMPeek
         _SIM800xSDMReadF1Pkt
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMRxAvailable
       _SIM800xSDMSendByte
       _Tick_ms
       _strlen
     _SIM800xIPOpen
       _ProcessResp1
         _SIM800xSDMPeek
         _SIM800xSDMRxAvailable
         _Tick_ms
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMSendByte
     _SIM800xIPSetAPN
       _ProcessResp1
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMSendByte
       _strlen
     _SIM800xIPSetConnectionType
       _ProcessResp1
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMSendByte
       _strlen
     _SIM800xInit
       _SIM800xSDMFlush
       _SIM800xSDMInit
         _SystimeInit
         _USARTAsyncInit
         ___lldiv
       _SIM800xSDMPeek
       _SIM800xSDMPrint
       _SIM800xSDMReadByte
       _SIM800xSDMRxAvailable
       _Wait_ms
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
     _SoftUARTInit
     _SoftUARTPrint
       _SoftUARTTransmitByte
   _SystemTask
     _SIM800xHTTPAction
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMReadF1Pkt
       _SIM800xSDMRxAvailable
       _StrToInt
       _Tick_ms
       _sprintf
     _SIM800xHTTPInputData
       _SIM800xSDMFlush
       _SIM800xSDMPeek
       _SIM800xSDMPrint
       _SIM800xSDMReadF1Pkt
       _SIM800xSDMRxAvailable
       _SIM800xSDMSendBytes
       _StrToInt
       _Tick_ms
       _sprintf
       _strlen
     _SIM800xHTTPRead
       _SIM800xSDMFlush
       _SIM800xSDMPeek
       _SIM800xSDMPrint
       _SIM800xSDMReadByte
       _SIM800xSDMReadF1Pkt
       _SIM800xSDMRxAvailable
       _StrToInt
       _Tick_ms
       _sprintf
     _SoftUARTPrint
     _SoftUARTReceiveByte
       ___awmod
     _SoftUARTRxAvailable
       ___awmod
     _sprintf

 _Isr (ROOT)
   _SIM800xSDMCallBack
     _USARTReceiveByte
     i2___lwmod
   _SoftUARTCallBack
     i2___awmod
   _SysTimeCallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     1D      F9       7       97.3%
BITBANK0            80      0       0       4        0.0%
BANK0               80     29      72       5       89.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     55      67       1       81.7%
BITBIGSFRllhhh      25      0       0      18        0.0%
BITBIGSFRlh         19      0       0      17        0.0%
BITBIGSFRh           D      0       0      16        0.0%
BITBIGSFRllhl        C      0       0      19        0.0%
BITBIGSFRlll         6      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     38A      21        0.0%
DATA                 0      0     38A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Apr 01 13:30:40 2023

                                     SIM800xSDMReadF1Pkt@time 0020  
                                         ?_SIM800xSDMSendByte 0001  
                                                          l50 0DCE  
                                                          l54 0DDC  
                                                          l75 2170  
                                                          _IO 000F80  
                                        ?_SIM800xSDMSendBytes 000E  
                                                         l108 00A4  
                                                         l117 02C4  
                                                         l227 1CE6  
                                                         l251 1F44  
                                                         l501 1AF0  
                                                         l407 1248  
                                                         l290 19D8  
                                                         l371 1C6A  
                                                         l365 18BE  
                                                         l358 110A  
                                   __end_of_SIM800xHTTPAction 0A1E  
                                                         l544 157C  
                                                         l393 145A  
                                                         l529 1F8E  
                                                         l386 147A  
                                                         l723 1D6C  
                                                         l811 0594  
                                                         l495 1A84  
                                                         l755 1DC0  
                                                         l765 0C22  
                                                         l789 0A18  
                                                         _GIE 007F97  
                                                         _Isr 0008  
                                                         _val 005E  
                                                ___awmod@sign 0013  
                                        ??_SIM800xSDMReadByte 0013  
                                   __end_of_SIM800xHTTPSetURL 1D72  
                                                         wreg 000FE8  
                                   __end_of_SIM800xIPGetState 1582  
                                         SIM800xHTTPRead@data 003C  
                                                StrToInt@ctrl 0028  
                                         SIM800xHTTPRead@time 00E7  
                                         SIM800xHTTPRead@size 0042  
                                                StrToInt@stop 001D  
                                        ??_SIM800xSDMSendByte 000E  
                                             ?_USARTAsyncInit 0001  
                                                        ?_Isr 0001  
                                                        l1004 201A  
                                                        l1030 1FD4  
                                                        l1018 1EAE  
                                                        l1043 1376  
                                                        l1241 169E  
                                                        l1193 060E  
                                                        l1196 0674  
                                                        l1622 1922  
                                                        l1703 1E08  
                                                        l5005 1A46  
                                                        l5051 1F58  
                                                        l5029 1AB2  
                                                        l4431 1DFC  
                                                        l4423 1DD6  
                                                        l4511 10C8  
                                                        l4503 109E  
                                                        l5119 1D3C  
                                                        l5215 0A88  
                                                        l4425 1DE0  
                                                        l5137 1D90  
                                                        l4601 168E  
                                                        l5225 0AF0  
                                                        l5401 0492  
                                                        l5163 0112  
                                                        l4515 10D0  
                                                        l4523 1FB4  
                                                        l5083 14F2  
                                                        l4611 18E6  
                                                        l5323 0936  
                                                        l5251 0BBA  
                                                        l5181 0280  
                                                        l5173 01F4  
                                                        l5157 005A  
                                                        l4701 1EC0  
                                                        l5317 0902  
                                                        l5229 0B24  
                                                        l5413 04F6  
                                                        l5175 0218  
                                                        l5159 00D4  
                                                        l4543 129E  
                                                        l4463 1BDE  
                                                        l4703 1EC6  
                                                        l5095 152E  
                                                        l5079 14C0  
                                                        l4631 05CA  
                                                        l4623 05A6  
                                                        l5247 0B86  
                                                        l5407 04B2  
                                                        l5511 0F66  
                                                        l4449 1E7A  
                                                        l4553 12CC  
                                                        l4561 1308  
                                                        l4617 1912  
                                                        l4609 18D8  
                                                        l4633 05D0  
                                                        l4713 1CD4  
                                                        l5257 0BD4  
                                                        l5409 04C0  
                                                        l5513 0F74  
                                                        l5179 0256  
                                                        l4555 12FE  
                                                        l4459 1BC8  
                                                        l4491 0FD6  
                                                        l4803 1394  
                                                        l5099 155A  
                                                        l5339 09D8  
                                                        l5283 0810  
                                                        l5419 052A  
                                                        l5427 054C  
                                                        l5363 0352  
                                                        l4565 132E  
                                                        l4573 135E  
                                                        l4485 0FA6  
                                                        l4645 0634  
                                                        l4637 05D6  
                                                        l4629 05C2  
                                                        l5293 0866  
                                                        l5373 03BA  
                                                        l5197 1F10  
                                                        l4495 100E  
                                                        l4831 140E  
                                                        l4575 215C  
                                                        l4751 185E  
                                                        l4591 1656  
                                                        l4743 19C0  
                                                        l4663 06BE  
                                                        l4727 1CF0  
                                                        l5359 034E  
                                                        l4911 1798  
                                                        l4903 1772  
                                                        l4809 13CC  
                                                        l4729 1CF4  
                                                        l4905 177C  
                                                        l4851 1468  
                                                        l4691 07BC  
                                                        l4683 0722  
                                                        l4659 0696  
                                                        l5299 08A0  
                                                        l5379 03F4  
                                                        l4915 17A4  
                                                        l4781 1C32  
                                                        l4757 1894  
                                                        l4589 1648  
                                                        l4685 072C  
                                                        l4669 06C4  
                                                        l4839 141C  
                                                        l4767 18BA  
                                                        l4919 17B4  
                                                        l5495 0E1E  
                                                        l4857 1476  
                                                        l4873 1B5A  
                                                        l4945 1178  
                                                        l4787 1C40  
                                                        l4947 117E  
                                                        l4877 1B86  
                                                        l4797 1C66  
                                                        l4981 1244  
                                                        l4885 2030  
                                                        l4975 1236  
                                                        l4991 1AFA  
                                                        l4895 1754  
                                                        l4995 1B26  
                                                        l4899 1762  
                                                        STR_1 7D04  
                                                        STR_2 7B73  
                                                        STR_3 7FE0  
                                                        STR_4 7F6B  
                                                        STR_5 7FB4  
                                                        STR_6 7B54  
                                                        STR_7 7B31  
                                                        STR_8 7B34  
                                                        STR_9 79B8  
                                                        _CREN 007D5C  
                                                        u4010 13C6  
                                                        u4020 13DE  
                                                        u4110 1B7E  
                                                        u4031 13E4  
                                                        u4120 1BAA  
                                                        u4105 195C  
                                                        u4117 1B74  
                                                        u4310 1A40  
                                                        u4127 1BA0  
                                                        u5007 1CFC  
                                                        _PIE1 000F9D  
                                                        u5017 1D0E  
                                                        u3610 126C  
                                                        u4410 1D8C  
                                                        u4330 1AAC  
                                                        u4500 0A70  
                                                        u3710 165C  
                                                        u4270 1B1E  
                                                        u4510 0A86  
                                                        u4190 1782  
                                                        u3480 1DE6  
                                                        u4280 1B4A  
                                                        u4521 0A90  
                                                        u3650 12FC  
                                                        u4370 1504  
                                                        u3740 18EC  
                                                        u3820 0704  
                                                        u4620 080A  
                                                        u4540 0B36  
                                                        u4277 1B14  
                                                        u4287 1B40  
                                                        u4631 0818  
                                                        u3680 136E  
                                                        u3840 07CE  
                                                        u4640 089A  
                                                        u4481 0A4A  
                                                        u3930 1A0A  
                                                        u3850 07EA  
                                                        u4650 08B2  
                                                        u4491 0A5C  
                                                        u3860 1EEA  
                                                        u4580 0BCC  
                                                        u4740 034C  
                                                        _RCIF 007CF5  
                                                        u4751 035A  
                                                        u3960 18A6  
                                                        u4840 053C  
                                                        u4760 03EE  
                                                        u4690 0948  
                                                        u4770 0406  
                                                        u3867 1EE0  
                                                        _OERR 007D59  
                                        SIM800xHTTPRead@F2949 0164  
                                                        u4997 1CDC  
                                                        _TMR0 000FD6  
                                       ??_SIM800xSDMReadF1Pkt 0019  
                                                        _Tout 0064  
                                                        _cpos 0062  
                                                        _main 216A  
                                       SoftUARTTransmitByte@k 0010  
                                                        fsr1h 000FE2  
                                                        fsr2h 000FDA  
                                                        indf1 000FE7  
                                                        indf2 000FDF  
                                                        fsr1l 000FE1  
                                                        fsr2l 000FD9  
                                                        btemp 0068  
                                                        prodh 000FF4  
                                                        prodl 000FF3  
                                         SIM800xIPGetState@ip 002A  
                                                        start 002E  
                                      ?_SIM800xSDMRxAvailable 0013  
                                             ProcessResp2@res 0028  
                                             ProcessResp4@res 004C  
                                             ProcessResp2@str 0025  
                                             ProcessResp4@str 0034  
                                                ___param_bank 000000  
                                               StrToInt@start 001C  
                                                       ??_Isr 000C  
                                       ??_SIM800xSDMSendBytes 0012  
                                             __end_of_Tick_ms 211A  
                                             __end_of_Wait_ms 1A1E  
                                                ?_SIM800xInit 003C  
                                                       ?_main 0001  
                                                       STR_10 7D9C  
                                                       STR_11 7FB4  
                                                       STR_12 7CAE  
                                                       STR_20 7ACF  
                                                       STR_13 7FF3  
                                                       STR_21 7B14  
                                                       STR_14 7FE9  
                                                       STR_30 7E7A  
                                                       STR_22 7AF2  
                                                       STR_15 7FDB  
                                                       STR_31 7FD0  
                                                       STR_23 7C7F  
                                                       STR_40 7F8C  
                                                       STR_32 7E08  
                                                       STR_16 7D2D  
                                                       STR_24 7BE7  
                                                       STR_17 7FF9  
                                                       STR_41 7FD6  
                                                       STR_25 7FC3  
                                                       STR_26 7B31  
                                                       STR_50 7FA4  
                                                       STR_42 7F47  
                                                       STR_18 7DEB  
                                                       STR_19 7FF6  
                                                       STR_43 7ECE  
                                                       STR_27 7D8B  
                                                       STR_28 7FE5  
                                                       STR_36 7F74  
                                                       STR_60 7F13  
                                                       STR_44 7E86  
                                                       STR_52 7E49  
                                             __end_of___awmod 17C2  
                                                       STR_45 7ECE  
                                                       STR_29 7FCA  
                                                       STR_37 7F84  
                                                       STR_61 7E62  
                                                       STR_46 7FAC  
                                                       STR_38 7F9C  
                                                       STR_62 7E56  
                                                       STR_70 7D19  
                                                       STR_39 7F7C  
                                                       STR_55 7F59  
                                                       STR_63 7EE6  
                                                       STR_71 7DDC  
                                                       STR_64 7FBC  
                                                       STR_48 7F62  
                                                       STR_80 7EF2  
                                                       STR_56 7EAA  
                                                       STR_72 7E15  
                                                       STR_73 7FFC  
                                                       STR_81 7F33  
                                                       STR_57 7E92  
                                                       STR_65 7B91  
                                                       STR_74 7FF0  
                                                       STR_58 7EC2  
                                                       STR_90 7CEF  
                                                       STR_66 7BAE  
                                                       STR_75 7FED  
                                                       STR_67 7F08  
                                                       STR_83 7EFD  
                                                       STR_59 7DCD  
                                                       STR_91 7C02  
                                                       STR_84 7F3D  
                                                       STR_68 7EB6  
                                                       STR_92 7C4F  
                                                       STR_77 7EDA  
                                                       STR_69 7E9E  
                                                       STR_85 7E3C  
                                                       STR_93 7C36  
                                                       STR_78 7E6E  
                                                       STR_86 7E2F  
                                                       STR_94 7BCB  
                                                       STR_79 7F1E  
                                                       STR_87 7D41  
                                                       STR_95 7C1C  
                                                       STR_88 7D54  
                                                       STR_96 7C97  
                                                       STR_89 7D79  
                                                       STR_97 7C67  
                                                       STR_98 7CC5  
                                                       STR_99 7D67  
                                             __end_of___lldiv 16B4  
                                                       _T0CON 000FD5  
                                             __end_of___llmod 1938  
                                             __end_of___lwmod 1E16  
                                                       i2l212 161C  
                                                       i2l217 160C  
                                                       i2l306 1FF8  
                                                       i2l307 2010  
                                                       _RCREG 000FAE  
                                                       _RCSTA 000FAB  
                                                       _SPBRG 000FAF  
                                                       _TXREG 000FAD  
                                                       _TXSTA 000FAC  
                                         ___lmul@multiplicand 0012  
                                            __end_of_OSC_FREQ 79B8  
                                        SIM800xHTTPSetURL@url 004E  
                                             __end_of_dpowers 79B7  
                                     __end_of_SIM800xHTTPInit 20EC  
                                     __end_of_SIM800xHTTPRead 059A  
                                     __end_of_SIM800xIPSetAPN 1AF6  
                                                       tablat 000FF5  
                                     __end_of_SIM800xSDMFlush 2130  
                                     __end_of_SIM800xSDMPrint 1BB6  
                                        SIM800xIPGetState@cid 0053  
                                        SIM800xIPGetState@len 0054  
                                        SIM800xIPGetState@res 0052  
                                                       ttemp5 0069  
                                                       ttemp6 006C  
                                                       ttemp7 0070  
                                        SIM800xIPGetState@str 0030  
                                                       status 000FD8  
                                                       wtemp8 0069  
                                             __end_of_sprintf 07FC  
                                            ProcessResp1@time 001B  
                                            ProcessResp4@time 0048  
                                   SIM800xHTTPReadState@F2966 0146  
                                             __initialization 16B4  
                                                __end_of_main 2178  
                                            SIM800xSDMInit@br 001B  
                                                      ??_main 0056  
                                            SIM800xIPOpen@cid 0020  
                                               __activetblptr 000002  
                                       __end_of_SoftUARTPrint 1B56  
                                    AddEntryToJsonObject@Cpos 0014  
                                            __end_of_StrToInt 1110  
                                            ___llmod@dividend 001B  
                                                      STR_100 7CDA  
                                                      STR_101 7DFA  
                                                      STR_102 7DAD  
                                                      STR_103 7E22  
                                                      STR_104 7DBD  
                                                      STR_105 7F29  
                                                      STR_106 7F94  
                                                      STR_107 7F50  
                                                      _INT0IE 007F94  
                                                      _INT0IF 007F91  
                                                      i2l1070 1CC2  
                                                      i2l1703 1E58  
                                                      i2l4225 20FC  
                                                      i2l4241 17E6  
                                                      i2l4261 1838  
                                                      i2l4253 181C  
                                                      i2l4245 17F6  
                                                      i2l4237 17D8  
                                                      i2l4271 1E30  
                                                      i2l4247 1800  
                                                      i2l4257 1828  
                                                      i2l4277 1E4C  
                                                      i2l4269 1E26  
                                                      i2l4385 15C8  
                                                      i2l4379 159E  
                                                      i2l4397 1612  
                                                      _INTCON 000FF2  
                                                      _TMR0IE 007F95  
                                                      _TMR0IF 007F92  
                                                      _DecVar 00BC  
                                           ??_SysTimeCallBack 0001  
                                                      _IncVar 0056  
                                                      _RxFIFO 0200  
                               __end_of_SIM800xHTTPSetContent 1DC6  
                                                   ??_Tick_ms 0012  
                                         _SoftUARTReceiveByte 1F00  
                                                   ??_Wait_ms 0012  
                                                      ___lmul 1BB6  
                                                   ??___awmod 0012  
                                                   ??___lldiv 0016  
                                                   ??___llmod 0023  
                                                   ??___lwmod 0012  
                                                      clear_0 16FA  
                                                      clear_1 1706  
                                                      clear_2 1712  
                                                      clear_3 171E  
                                                      clear_4 172A  
                                             ___awmod@divisor 0010  
                                                      isa$std 000001  
                                             ___awmod@counter 0012  
                                     SoftUARTTransmitByte@tmp 000F  
                                                      _strlen 1EB4  
                                 SIM800xHTTPAction@statuscode 003C  
                                    __end_of_SoftUARTCallBack 1624  
                                        SoftUARTCallBack@next 000A  
                                                __pdataCOMRAM 0064  
                                           ProcessResp4@F2650 00A8  
                                           __end_ofi2___awmod 1846  
                                                __mediumconst 798E  
                                           __end_ofi2___lwmod 1E66  
                                        ?_SoftUARTReceiveByte 0014  
                                                      tblptrh 000FF7  
                                                      tblptrl 000FF6  
                                                      tblptru 000FF8  
                                              i2___awmod@sign 0006  
                                            SoftUARTPrint@str 0011  
                                                   ??_sprintf 0030  
                                         _SoftUARTRxAvailable 207A  
                                            ?_SIM800xHTTPInit 004E  
                                            ?_SIM800xHTTPRead 003C  
                                           ?_USARTReceiveByte 0001  
                                            ?_SIM800xIPSetAPN 0020  
                                            ?_SIM800xSDMFlush 0001  
                                               _SIM800xIPOpen 1F4A  
                                                  __accesstop 0080  
                                     __end_of__initialization 1730  
                                            ?_SIM800xSDMPrint 000F  
                                          ??_USARTReceiveByte 0001  
                                               ___rparam_used 000001  
                                      SIM800xHTTPInit@errcode 004E  
                                                  StrToInt@po 0029  
                                           SIM800xHTTPRead@sz 00E3  
                                        USARTReceiveByte@data 0001  
                                          i2___lwmod@dividend 0001  
                                              __pcstackCOMRAM 0001  
                                                __pidataBANK0 217C  
                                        ?_SoftUARTRxAvailable 0001  
                                      SIM800xHTTPRead@errcode 0048  
                                           SoftUARTCallBack@k 000B  
                                            ??_USARTAsyncInit 000E  
                                                  _SystemInit 0C28  
                                       ??_SoftUARTReceiveByte 0016  
                                                  _SystemTask 0DE2  
                                           SIM800xSDMInit@val 0023  
                                           SIM800xSDMPeek@idx 0010  
                                                  __pbssBANK0 0080  
                                                  __pbssBANK1 0100  
                                                  __pbssBANK2 0200  
                                                  __pbssBANK3 0300  
                                              ?_SIM800xIPOpen 0001  
                                     ??_SIM800xSDMRxAvailable 0015  
                              AddEntryToJsonObject@JsonObject 000E  
                                       ??_SoftUARTRxAvailable 0014  
                                SIM800xHTTPSetContent@content 004E  
                                                     ?___lmul 000E  
                                SIM800xHTTPSetContent@errcode 0050  
                                                   ?_StrToInt 001A  
                                               ?_SoftUARTInit 0001  
                                              ___lmul@product 0016  
                                       SIM800xSDMCallBack@tmp 0006  
                                                     ?_strlen 000E  
                                                     _INTCON2 000FF1  
                                 __end_of_SIM800xSDMReadF1Pkt 137C  
                                        SIM800xSDMReadF1Pkt@i 001F  
                                               ??_SystimeInit 000E  
                                 __end_of_SIM800xSDMSendBytes 2048  
                                                SIM800xInit@c 0051  
                                                     __Hparam 0000  
                                                     __Lparam 0000  
                                                     _Tick_ms 2104  
                                                     _Wait_ms 19AC  
                                               ?_ProcessResp1 0001  
                                               ?_ProcessResp2 0025  
                                               ?_ProcessResp4 002E  
                                                     ___awmod 173E  
                                              ??_SoftUARTInit 000E  
                                                     ___lldiv 1624  
                                                     ___llmod 18C4  
                                                  ??_StrToInt 001E  
                                                     ___lwmod 1DC6  
                                                     __pcinit 16B4  
                                                     __ramtop 0600  
                                                     __ptext0 216A  
                                                     __ptext1 0DE2  
                                                     __ptext2 207A  
                                                     __ptext3 1F00  
                                                     __ptext4 173E  
                                                     __ptext5 031A  
                                                     __ptext6 0A1E  
                                                     __ptext7 2016  
                                                     __ptext8 07FC  
                                                     __ptext9 0C28  
                                                     _dpowers 798F  
                                                 ?_SystemInit 0001  
                                                 ?_SystemTask 0001  
                                            ___awmod@dividend 000E  
                                             _SysTimeCallBack 1FDA  
                                    SoftUARTTransmitByte@data 000E  
                                             ??_SIM800xIPOpen 0020  
                                                     _sprintf 059A  
                                        end_of_initialization 1730  
                                       SoftUARTCallBack@rxtmp 0009  
                                               __Lmediumconst 798E  
                                             ___lldiv@divisor 0012  
                                             ___lldiv@counter 001A  
                                              ??_ProcessResp1 0017  
                                              ??_ProcessResp2 0027  
                                              ??_ProcessResp4 0030  
                                                     postdec1 000FE5  
                                                     postdec2 000FDD  
                                                     postinc0 000FEE  
                                                     postinc2 000FDE  
                                      SIM800xIPGetState@time1 004E  
                                         __end_of_SystimeInit 20CA  
                                                     strlen@s 000E  
                                                SystemInit@ip 00C5  
                                           ?_SoftUARTCallBack 0001  
                                          SIM800xHTTPAction@t 00E3  
                                              _SIM800xSDMInit 1938  
                                              _SIM800xSDMPeek 1F94  
                                      SIM800xSDMReadF1Pkt@val 001D  
                                      SIM800xSDMReadF1Pkt@tmp 0024  
                                          ??_SoftUARTCallBack 0007  
                                                   i2___awmod 17C2  
                                                   i2___lwmod 1E16  
                                ??_SIM800xIPSetConnectionType 0022  
                                          SIM800xHTTPRead@cnt 0046  
                                          SIM800xHTTPRead@res 00EB  
                                                 StrToInt@val 0023  
                                          SIM800xHTTPRead@str 00C5  
                                                 StrToInt@str 001A  
                                                   _TXSTAbits 000FAC  
                                          SIM800xIPGetState@i 0055  
                                              ProcessResp4@ec 002E  
                             _Rxfifocurrent@SIM800x_SDM$F1168 005A  
                                       _SIM800xHTTPSetContent 1D72  
                                    SIM800xHTTPInputData@data 003C  
                                    SIM800xHTTPInputData@time 00E7  
                                              __end_of___lmul 1C14  
                                               __pidataCOMRAM 2178  
                                     __end_of_SysTimeCallBack 2016  
                                      __end_of_SIM800xSDMInit 19AC  
                                      __end_of_SIM800xSDMPeek 1FDA  
                                __end_of_SoftUARTTransmitByte 1D1E  
                                              __end_of_strlen 1F00  
                                         start_initialization 16B4  
                                    SIM800xHTTPSetURL@errcode 0050  
                                                 __end_of_Isr 002E  
                                                  ?i2___awmod 0001  
                                                  ?i2___lwmod 0001  
                                        __end_of_SoftUARTInit 2144  
                                __end_of_AddEntryToJsonObject 031A  
                                              SIM800xInit@tmp 004F  
                                          SIM800xIPSetAPN@cid 0022  
                                              SIM800xInit@str 0040  
                                          SIM800xIPSetAPN@apn 0020  
                                     SIM800xHTTPRead@strindex 003E  
                                     AddEntryToJsonObject@key 0010  
                                             ___llmod@divisor 001F  
                               __end_of_SIM800xSDMRxAvailable 207A  
                                             ___llmod@counter 0023  
                                __end_of_SIM800xHTTPInputData 0C28  
                                                 _SystimeInit 20A8  
                                                    ??___lmul 0016  
                                                 __pdataBANK0 00EE  
                                               ??_SIM800xInit 0040  
                                 __end_of_SoftUARTReceiveByte 1F4A  
                                                    ??_strlen 0010  
                                      _Tout@SIM800x_SDM$F1169 00EE  
                                                   _Rxfifoptr 0061  
                                             ?_SIM800xSDMInit 001B  
                                             ?_SIM800xSDMPeek 0001  
                                  SIM800xHTTPReadHeader@F2986 0128  
                                                 __pbssCOMRAM 0056  
                                                   StrToInt@i 002D  
                                                   StrToInt@j 0027  
                                               _SoftUARTPrint 1AF6  
                                               __pcstackBANK0 00C5  
                                               __pcstackBANK1 01DC  
                                           i2___lwmod@divisor 0003  
                                           i2___lwmod@counter 0005  
                                        __end_of_ProcessResp1 18C4  
                                        __end_of_ProcessResp2 1C70  
                                        __end_of_ProcessResp4 1480  
                                 _Rxfifoptr@SIM800x_SDM$F1167 005C  
                                          SIM800xSDMPrint@str 000F  
                                                 sprintf@flag 0038  
                                   SIM800xHTTPInputData@F2918 01A0  
                                                 sprintf@prec 0032  
                           SIM800xIPSetConnectionType@contype 0020  
                                 __end_of_SoftUARTRxAvailable 20A8  
                                  __end_of_SIM800xSDMCallBack 1CC8  
                                      SIM800xSDMReadByte@data 0013  
                                                    ?_Tick_ms 000E  
                                      ?_SIM800xHTTPSetContent 004E  
                                                    ?_Wait_ms 000E  
                                                   __pintcode 0008  
                                               __pmediumconst 798E  
                                                    ?___awmod 000E  
                                                    ?___lldiv 000E  
                                                    ?___llmod 001B  
                                                    ?___lwmod 000E  
                                            ?_SysTimeCallBack 0001  
                                  __end_of_SIM800xSDMReadByte 1EB4  
                                              ?_SoftUARTPrint 0011  
                                                ??_SystemInit 0056  
                                                ??_SystemTask 004E  
                                  __end_of_SIM800xSDMSendByte 216A  
                            SIM800x3GPPGetSignalQuality@F3027 00C2  
                            SIM800x3GPPGetSignalQuality@F3019 0080  
                            SIM800x3GPPGetSignalQuality@F3029 00C0  
                                         __end_of_SIM800xInit 124E  
                                      SIM800xSDMCallBack@next 0007  
                                 SIM800xHTTPInputData@errcode 0046  
                                                 ??i2___awmod 0005  
                                                    ?_sprintf 0024  
                                                 ??i2___lwmod 0005  
                          __end_of_SIM800xIPSetConnectionType 1A8A  
                                  _SIM800xIPSetConnectionType 1A1E  
                                 SIM800xHTTPInputData@timeout 0042  
                               SIM800xIPSetConnectionType@cid 0022  
                                    SIM800xHTTPAction@errcode 0044  
                                    _RxFIFO@SIM800x_SDM$F1166 0300  
                                        _SoftUARTTransmitByte 1CC8  
                             SIM800x3GPPGetOperatorName@F3004 0100  
                                                    i2u323_40 1E36  
                                                    i2u342_44 15BE  
                                                    i2u342_45 15B8  
                                                    i2u502_47 1594  
                                                    i2u319_40 1806  
                                                    i2u503_47 15A2  
                                                    i2u504_47 1616  
                                                    i2u346_40 1CA4  
                                          __end_of_SystemInit 0DE2  
                                          __end_of_SystemTask 0F7A  
                                                    _OSC_FREQ 79B7  
                                            _USARTReceiveByte 20EC  
                                           ??_SIM800xHTTPInit 0050  
                                           ??_SIM800xHTTPRead 004A  
                                        _AddEntryToJsonObject 0032  
                                           ??_SIM800xIPSetAPN 0022  
                                           ??_SIM800xSDMFlush 000E  
                                           ??_SIM800xSDMPrint 0011  
                                        _SIM800xHTTPInputData 0A1E  
                                               ProcessResp1@c 001F  
                                               ProcessResp2@c 0027  
                                                   _rxmessage 01BE  
                                     SIM800xHTTPInputData@cnt 003E  
                                     SIM800xHTTPInputData@len 00E3  
                                     SIM800xHTTPInputData@res 00EB  
                                     SIM800xHTTPInputData@str 00C5  
                                           ___lmul@multiplier 000E  
                                                   copy_data0 16C8  
                                                   copy_data1 16E8  
                                                   _txmessage 028C  
                                          i2___awmod@dividend 0001  
                                       __end_of_SIM800xIPOpen 1F94  
                                                Wait_ms@value 000E  
                                               SIM800xInit@br 003C  
                                       ?_SoftUARTTransmitByte 0001  
                                                    __Hrparam 0000  
                                                    Wait_ms@x 0016  
                                                    __Lrparam 0000  
                                                    _StrToInt 0F7A  
                                                _SoftUARTInit 2130  
                                                 _SIM800xInit 1110  
                                       ?_AddEntryToJsonObject 000E  
                                             ??_SoftUARTPrint 0013  
                                                    _Rxstatus 00C4  
                                                  sprintf@val 0034  
                                       ?_SIM800xHTTPInputData 003C  
                                                    __ptext10 1AF6  
                                                    __ptext11 1CC8  
                                                    __ptext20 20A8  
                                                    __ptext12 2130  
                                                    __ptext21 1A1E  
                                                    __ptext13 1110  
                                                    __ptext30 1EB4  
                                                    __ptext22 1A8A  
                                                    __ptext14 059A  
                                                    __ptext31 20CA  
                                                    __ptext23 1F4A  
                                                    __ptext15 18C4  
                                                    __ptext40 1E66  
                                                    __ptext32 1B56  
                                                    __ptext24 1846  
                                                    __ptext16 19AC  
                                                    __ptext41 1DC6  
                                                    __ptext33 2158  
                                                    __ptext25 1480  
                                                    __ptext17 1938  
                                                    __ptext50 20EC  
                                                    __ptext42 211A  
                                                    __ptext34 137C  
                                                    __ptext26 1C14  
                                                    __ptext18 1624  
                                                    __ptext43 0032  
                                                    __ptext35 0F7A  
                                                    __ptext27 1F94  
                                                    __ptext19 2144  
                                                    __ptext36 1BB6  
                                                    __ptext28 1D1E  
                                                    __ptext45 1FDA  
                                                    __ptext37 124E  
                                                    __ptext29 1D72  
                                                    __ptext46 1582  
                                                    __ptext38 2104  
                                                    __ptext47 17C2  
                                                    __ptext39 2048  
                                                    __ptext48 1C70  
                                                    __ptext49 1E16  
                         SIM800x3GPPGetSubscriberNumber@F3042 0264  
                                     SIM800xHTTPAction@method 00E7  
                                                ?_SystimeInit 0001  
                                  AddEntryToJsonObject@offset 001A  
                                                    isa$xinst 000000  
                                                    int$flags 0068  
                                                _ProcessResp1 1846  
                                                _ProcessResp2 1C14  
                                                _ProcessResp4 137C  
                                            ??_SIM800xSDMInit 001F  
                                            ??_SIM800xSDMPeek 000E  
                                           i2___awmod@divisor 0003  
                                           i2___awmod@counter 0005  
                                                  _INTCONbits 000FF2  
                                      SIM800xHTTPAction@F2930 0182  
                                         SIM800xGetIMSI@F2687 0094  
                                                    intlevel2 2180  
                                                   sprintf@ap 0039  
                                                   sprintf@sp 0024  
                                              _USARTAsyncInit 2144  
                                     SIM800xSDMSendBytes@data 000E  
                                            ___lwmod@dividend 000E  
                                            ___lldiv@dividend 000E  
                                      ??_SoftUARTTransmitByte 000E  
                                     ??_SIM800xHTTPSetContent 0052  
                                       _SIM800xSDMRxAvailable 2048  
                                   AddEntryToJsonObject@value 0012  
                                     SoftUARTReceiveByte@data 0016  
                                      ??_AddEntryToJsonObject 0016  
                                      SIM800xSDMSendByte@data 000E  
                                          _SIM800xSDMCallBack 1C70  
                                         _SIM800xSDMReadF1Pkt 124E  
                                      ??_SIM800xHTTPInputData 0048  
                                                    sprintf@c 003B  
                                                    sprintf@f 0026  
                                           USARTAsyncInit@bgr 000E  
                                      SIM800xSDMSendBytes@cnt 0010  
                                            ___lldiv@quotient 0016  
                                             ___lwmod@divisor 0010  
                                                    strlen@cp 0010  
                                             ___lwmod@counter 0012  
                                           _SIM800xHTTPAction 07FC  
                                       SIM800xHTTPAction@time 00E8  
                                           SystemTask@errcode 01F3  
                                         ?_SIM800xSDMCallBack 0001  
                                       SIM800xHTTPAction@tout 0040  
                                           _SIM800xHTTPSetURL 1D1E  
                                          ?_SIM800xHTTPAction 003C  
                                           _SIM800xIPGetState 1480  
                                      __end_of_USARTAsyncInit 2158  
                                    __end_of_USARTReceiveByte 2104  
                                          ?_SIM800xHTTPSetURL 004E  
                                 ?_SIM800xIPSetConnectionType 0020  
                                          ?_SIM800xIPGetState 002A  
                                         _SIM800xSDMSendBytes 2016  
                                          _SIM800xSDMReadByte 1E66  
                                        SIM800xHTTPAction@cnt 003E  
                                        SIM800xHTTPAction@res 00EC  
                                        SIM800xHTTPAction@str 00C5  
                                        ?_SIM800xSDMReadF1Pkt 0017  
                                               SystemInit@err 00D9  
                                               _Rxfifocurrent 0060  
                                         ??_SIM800xHTTPAction 0046  
                                            _SoftUARTCallBack 1582  
                                          _SIM800xSDMSendByte 2158  
                                             _SIM800xHTTPInit 20CA  
                                             _SIM800xHTTPRead 031A  
                                             SystemTask@scode 01F1  
                                         ??_SIM800xHTTPSetURL 0052  
                                         ??_SIM800xIPGetState 002C  
                                             _SIM800xIPSetAPN 1A8A  
                                         ?_SIM800xSDMReadByte 0001  
                                               SystemTask@cmd 01F0  
                                             _SIM800xSDMFlush 211A  
                                               SystemTask@cnt 01F5  
                                               SystemTask@msg 01DC  
                                        ??_SIM800xSDMCallBack 0006  
                                     SIM800xSDMReadF1Pkt@data 0017  
                                             _SIM800xSDMPrint 1B56  
