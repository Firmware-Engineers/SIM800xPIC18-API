

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Mar 27 23:30:09 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=6
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=5
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=6
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=6
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=7
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=6
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=6
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75  0000                     
    76                           ; Version 2.36
    77                           ; Generated 28/01/2022 GMT
    78                           ; 
    79                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution. Publication is not required when
    93                           ;        this file is used in an embedded application.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F452 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     
   112                           	psect	idataCOMRAM
   113  00217A                     __pidataCOMRAM:
   114                           	callstack 0
   115                           
   116                           ;initializer for _Tout
   117  00217A  0FA0               	dw	4000
   118  00217C  0000               	dw	0
   119                           
   120                           	psect	idataBANK0
   121  00217E                     __pidataBANK0:
   122                           	callstack 0
   123                           
   124                           ;initializer for _Tout@SIM800x_SDM$F985
   125  00217E  07D0               	dw	2000
   126  002180  0000               	dw	0
   127                           
   128                           	psect	mediumconst
   129  0079B8                     __pmediumconst:
   130                           	callstack 0
   131  0079B8  00                 	db	0
   132  0079B9                     _dpowers:
   133                           	callstack 0
   134  0079B9  0001               	dw	1
   135  0079BB  0000               	dw	0
   136  0079BD  000A               	dw	10
   137  0079BF  0000               	dw	0
   138  0079C1  0064               	dw	100
   139  0079C3  0000               	dw	0
   140  0079C5  03E8               	dw	1000
   141  0079C7  0000               	dw	0
   142  0079C9  2710               	dw	10000
   143  0079CB  0000               	dw	0
   144  0079CD  86A0               	dw	34464
   145  0079CF  0001               	dw	1
   146  0079D1  4240               	dw	16960
   147  0079D3  000F               	dw	15
   148  0079D5  9680               	dw	38528
   149  0079D7  0098               	dw	152
   150  0079D9  E100               	dw	57600
   151  0079DB  05F5               	dw	1525
   152  0079DD  CA00               	dw	51712
   153  0079DF  3B9A               	dw	15258
   154  0079E1                     __end_of_dpowers:
   155                           	callstack 0
   156  0079E1                     _OSC_FREQ:
   157                           	callstack 0
   158  0079E1  10                 	db	16
   159  0079E2                     __end_of_OSC_FREQ:
   160                           	callstack 0
   161  0000                     _RCREG	set	4014
   162  0000                     _SPBRG	set	4015
   163  0000                     _TXREG	set	4013
   164  0000                     _INTCONbits	set	4082
   165  0000                     _TXSTA	set	4012
   166  0000                     _GIE	set	32663
   167  0000                     _INT0IE	set	32660
   168  0000                     _INT0IF	set	32657
   169  0000                     _CREN	set	32092
   170  0000                     _OERR	set	32089
   171  0000                     _TMR0IE	set	32661
   172  0000                     _TMR0IF	set	32658
   173  0000                     _PIE1	set	3997
   174  0000                     _T0CON	set	4053
   175  0000                     _INTCON	set	4082
   176  0000                     _TMR0	set	4054
   177  0000                     _INTCON2	set	4081
   178  0000                     _RCSTA	set	4011
   179  0000                     _TXSTAbits	set	4012
   180  0000                     _RCIF	set	31989
   181  0079E2                     STR_9:
   182  0079E2  68                 	db	104	;'h'
   183  0079E3  74                 	db	116	;'t'
   184  0079E4  74                 	db	116	;'t'
   185  0079E5  70                 	db	112	;'p'
   186  0079E6  3A                 	db	58	;':'
   187  0079E7  2F                 	db	47
   188  0079E8  2F                 	db	47
   189  0079E9  62                 	db	98	;'b'
   190  0079EA  61                 	db	97	;'a'
   191  0079EB  63                 	db	99	;'c'
   192  0079EC  6B                 	db	107	;'k'
   193  0079ED  65                 	db	101	;'e'
   194  0079EE  6E                 	db	110	;'n'
   195  0079EF  64                 	db	100	;'d'
   196  0079F0  2E                 	db	46
   197  0079F1  74                 	db	116	;'t'
   198  0079F2  68                 	db	104	;'h'
   199  0079F3  69                 	db	105	;'i'
   200  0079F4  6E                 	db	110	;'n'
   201  0079F5  67                 	db	103	;'g'
   202  0079F6  65                 	db	101	;'e'
   203  0079F7  72                 	db	114	;'r'
   204  0079F8  2E                 	db	46
   205  0079F9  69                 	db	105	;'i'
   206  0079FA  6F                 	db	111	;'o'
   207  0079FB  2F                 	db	47
   208  0079FC  76                 	db	118	;'v'
   209  0079FD  33                 	db	51	;'3'
   210  0079FE  2F                 	db	47
   211  0079FF  75                 	db	117	;'u'
   212  007A00  73                 	db	115	;'s'
   213  007A01  65                 	db	101	;'e'
   214  007A02  72                 	db	114	;'r'
   215  007A03  73                 	db	115	;'s'
   216  007A04  2F                 	db	47
   217  007A05  46                 	db	70	;'F'
   218  007A06  69                 	db	105	;'i'
   219  007A07  72                 	db	114	;'r'
   220  007A08  6D                 	db	109	;'m'
   221  007A09  77                 	db	119	;'w'
   222  007A0A  61                 	db	97	;'a'
   223  007A0B  72                 	db	114	;'r'
   224  007A0C  65                 	db	101	;'e'
   225  007A0D  45                 	db	69	;'E'
   226  007A0E  6E                 	db	110	;'n'
   227  007A0F  67                 	db	103	;'g'
   228  007A10  69                 	db	105	;'i'
   229  007A11  6E                 	db	110	;'n'
   230  007A12  65                 	db	101	;'e'
   231  007A13  65                 	db	101	;'e'
   232  007A14  72                 	db	114	;'r'
   233  007A15  73                 	db	115	;'s'
   234  007A16  2F                 	db	47
   235  007A17  64                 	db	100	;'d'
   236  007A18  65                 	db	101	;'e'
   237  007A19  76                 	db	118	;'v'
   238  007A1A  69                 	db	105	;'i'
   239  007A1B  63                 	db	99	;'c'
   240  007A1C  65                 	db	101	;'e'
   241  007A1D  73                 	db	115	;'s'
   242  007A1E  2F                 	db	47
   243  007A1F  53                 	db	83	;'S'
   244  007A20  49                 	db	73	;'I'
   245  007A21  4D                 	db	77	;'M'
   246  007A22  38                 	db	56	;'8'
   247  007A23  30                 	db	48	;'0'
   248  007A24  30                 	db	48	;'0'
   249  007A25  4C                 	db	76	;'L'
   250  007A26  2F                 	db	47
   251  007A27  63                 	db	99	;'c'
   252  007A28  61                 	db	97	;'a'
   253  007A29  6C                 	db	108	;'l'
   254  007A2A  6C                 	db	108	;'l'
   255  007A2B  62                 	db	98	;'b'
   256  007A2C  61                 	db	97	;'a'
   257  007A2D  63                 	db	99	;'c'
   258  007A2E  6B                 	db	107	;'k'
   259  007A2F  2F                 	db	47
   260  007A30  64                 	db	100	;'d'
   261  007A31  61                 	db	97	;'a'
   262  007A32  74                 	db	116	;'t'
   263  007A33  61                 	db	97	;'a'
   264  007A34  3F                 	db	63	;'?'
   265  007A35  61                 	db	97	;'a'
   266  007A36  75                 	db	117	;'u'
   267  007A37  74                 	db	116	;'t'
   268  007A38  68                 	db	104	;'h'
   269  007A39  6F                 	db	111	;'o'
   270  007A3A  72                 	db	114	;'r'
   271  007A3B  69                 	db	105	;'i'
   272  007A3C  7A                 	db	122	;'z'
   273  007A3D  61                 	db	97	;'a'
   274  007A3E  74                 	db	116	;'t'
   275  007A3F  69                 	db	105	;'i'
   276  007A40  6F                 	db	111	;'o'
   277  007A41  6E                 	db	110	;'n'
   278  007A42  3D                 	db	61	;'='
   279  007A43  65                 	db	101	;'e'
   280  007A44  79                 	db	121	;'y'
   281  007A45  4A                 	db	74	;'J'
   282  007A46  68                 	db	104	;'h'
   283  007A47  62                 	db	98	;'b'
   284  007A48  47                 	db	71	;'G'
   285  007A49  63                 	db	99	;'c'
   286  007A4A  69                 	db	105	;'i'
   287  007A4B  4F                 	db	79	;'O'
   288  007A4C  69                 	db	105	;'i'
   289  007A4D  4A                 	db	74	;'J'
   290  007A4E  49                 	db	73	;'I'
   291  007A4F  55                 	db	85	;'U'
   292  007A50  7A                 	db	122	;'z'
   293  007A51  49                 	db	73	;'I'
   294  007A52  31                 	db	49	;'1'
   295  007A53  4E                 	db	78	;'N'
   296  007A54  69                 	db	105	;'i'
   297  007A55  49                 	db	73	;'I'
   298  007A56  73                 	db	115	;'s'
   299  007A57  49                 	db	73	;'I'
   300  007A58  6E                 	db	110	;'n'
   301  007A59  52                 	db	82	;'R'
   302  007A5A  35                 	db	53	;'5'
   303  007A5B  63                 	db	99	;'c'
   304  007A5C  43                 	db	67	;'C'
   305  007A5D  49                 	db	73	;'I'
   306  007A5E  36                 	db	54	;'6'
   307  007A5F  49                 	db	73	;'I'
   308  007A60  6B                 	db	107	;'k'
   309  007A61  70                 	db	112	;'p'
   310  007A62  58                 	db	88	;'X'
   311  007A63  56                 	db	86	;'V'
   312  007A64  43                 	db	67	;'C'
   313  007A65  4A                 	db	74	;'J'
   314  007A66  39                 	db	57	;'9'
   315  007A67  2E                 	db	46
   316  007A68  65                 	db	101	;'e'
   317  007A69  79                 	db	121	;'y'
   318  007A6A  4A                 	db	74	;'J'
   319  007A6B  6C                 	db	108	;'l'
   320  007A6C  65                 	db	101	;'e'
   321  007A6D  48                 	db	72	;'H'
   322  007A6E  41                 	db	65	;'A'
   323  007A6F  69                 	db	105	;'i'
   324  007A70  4F                 	db	79	;'O'
   325  007A71  6A                 	db	106	;'j'
   326  007A72  45                 	db	69	;'E'
   327  007A73  32                 	db	50	;'2'
   328  007A74  4E                 	db	78	;'N'
   329  007A75  7A                 	db	122	;'z'
   330  007A76  6B                 	db	107	;'k'
   331  007A77  35                 	db	53	;'5'
   332  007A78  4E                 	db	78	;'N'
   333  007A79  54                 	db	84	;'T'
   334  007A7A  59                 	db	89	;'Y'
   335  007A7B  7A                 	db	122	;'z'
   336  007A7C  4E                 	db	78	;'N'
   337  007A7D  6A                 	db	106	;'j'
   338  007A7E  49                 	db	73	;'I'
   339  007A7F  73                 	db	115	;'s'
   340  007A80  49                 	db	73	;'I'
   341  007A81  6D                 	db	109	;'m'
   342  007A82  6C                 	db	108	;'l'
   343  007A83  68                 	db	104	;'h'
   344  007A84  64                 	db	100	;'d'
   345  007A85  43                 	db	67	;'C'
   346  007A86  49                 	db	73	;'I'
   347  007A87  36                 	db	54	;'6'
   348  007A88  4D                 	db	77	;'M'
   349  007A89  54                 	db	84	;'T'
   350  007A8A  59                 	db	89	;'Y'
   351  007A8B  33                 	db	51	;'3'
   352  007A8C  4F                 	db	79	;'O'
   353  007A8D  54                 	db	84	;'T'
   354  007A8E  6B                 	db	107	;'k'
   355  007A8F  30                 	db	48	;'0'
   356  007A90  4F                 	db	79	;'O'
   357  007A91  54                 	db	84	;'T'
   358  007A92  45                 	db	69	;'E'
   359  007A93  32                 	db	50	;'2'
   360  007A94  4D                 	db	77	;'M'
   361  007A95  69                 	db	105	;'i'
   362  007A96  77                 	db	119	;'w'
   363  007A97  69                 	db	105	;'i'
   364  007A98  63                 	db	99	;'c'
   365  007A99  6D                 	db	109	;'m'
   366  007A9A  39                 	db	57	;'9'
   367  007A9B  73                 	db	115	;'s'
   368  007A9C  5A                 	db	90	;'Z'
   369  007A9D  53                 	db	83	;'S'
   370  007A9E  49                 	db	73	;'I'
   371  007A9F  36                 	db	54	;'6'
   372  007AA0  49                 	db	73	;'I'
   373  007AA1  6E                 	db	110	;'n'
   374  007AA2  56                 	db	86	;'V'
   375  007AA3  7A                 	db	122	;'z'
   376  007AA4  5A                 	db	90	;'Z'
   377  007AA5  58                 	db	88	;'X'
   378  007AA6  49                 	db	73	;'I'
   379  007AA7  69                 	db	105	;'i'
   380  007AA8  4C                 	db	76	;'L'
   381  007AA9  43                 	db	67	;'C'
   382  007AAA  4A                 	db	74	;'J'
   383  007AAB  31                 	db	49	;'1'
   384  007AAC  63                 	db	99	;'c'
   385  007AAD  33                 	db	51	;'3'
   386  007AAE  49                 	db	73	;'I'
   387  007AAF  69                 	db	105	;'i'
   388  007AB0  4F                 	db	79	;'O'
   389  007AB1  69                 	db	105	;'i'
   390  007AB2  4A                 	db	74	;'J'
   391  007AB3  47                 	db	71	;'G'
   392  007AB4  61                 	db	97	;'a'
   393  007AB5  58                 	db	88	;'X'
   394  007AB6  4A                 	db	74	;'J'
   395  007AB7  74                 	db	116	;'t'
   396  007AB8  64                 	db	100	;'d'
   397  007AB9  32                 	db	50	;'2'
   398  007ABA  46                 	db	70	;'F'
   399  007ABB  79                 	db	121	;'y'
   400  007ABC  5A                 	db	90	;'Z'
   401  007ABD  55                 	db	85	;'U'
   402  007ABE  56                 	db	86	;'V'
   403  007ABF  75                 	db	117	;'u'
   404  007AC0  5A                 	db	90	;'Z'
   405  007AC1  32                 	db	50	;'2'
   406  007AC2  6C                 	db	108	;'l'
   407  007AC3  75                 	db	117	;'u'
   408  007AC4  5A                 	db	90	;'Z'
   409  007AC5  57                 	db	87	;'W'
   410  007AC6  56                 	db	86	;'V'
   411  007AC7  79                 	db	121	;'y'
   412  007AC8  63                 	db	99	;'c'
   413  007AC9  79                 	db	121	;'y'
   414  007ACA  4A                 	db	74	;'J'
   415  007ACB  39                 	db	57	;'9'
   416  007ACC  2E                 	db	46
   417  007ACD  76                 	db	118	;'v'
   418  007ACE  66                 	db	102	;'f'
   419  007ACF  36                 	db	54	;'6'
   420  007AD0  68                 	db	104	;'h'
   421  007AD1  50                 	db	80	;'P'
   422  007AD2  4E                 	db	78	;'N'
   423  007AD3  69                 	db	105	;'i'
   424  007AD4  53                 	db	83	;'S'
   425  007AD5  75                 	db	117	;'u'
   426  007AD6  73                 	db	115	;'s'
   427  007AD7  6C                 	db	108	;'l'
   428  007AD8  73                 	db	115	;'s'
   429  007AD9  70                 	db	112	;'p'
   430  007ADA  6D                 	db	109	;'m'
   431  007ADB  67                 	db	103	;'g'
   432  007ADC  69                 	db	105	;'i'
   433  007ADD  59                 	db	89	;'Y'
   434  007ADE  4D                 	db	77	;'M'
   435  007ADF  52                 	db	82	;'R'
   436  007AE0  61                 	db	97	;'a'
   437  007AE1  44                 	db	68	;'D'
   438  007AE2  54                 	db	84	;'T'
   439  007AE3  73                 	db	115	;'s'
   440  007AE4  4C                 	db	76	;'L'
   441  007AE5  4F                 	db	79	;'O'
   442  007AE6  6D                 	db	109	;'m'
   443  007AE7  36                 	db	54	;'6'
   444  007AE8  37                 	db	55	;'7'
   445  007AE9  36                 	db	54	;'6'
   446  007AEA  34                 	db	52	;'4'
   447  007AEB  4D                 	db	77	;'M'
   448  007AEC  52                 	db	82	;'R'
   449  007AED  38                 	db	56	;'8'
   450  007AEE  50                 	db	80	;'P'
   451  007AEF  49                 	db	73	;'I'
   452  007AF0  67                 	db	103	;'g'
   453  007AF1  73                 	db	115	;'s'
   454  007AF2  39                 	db	57	;'9'
   455  007AF3  55                 	db	85	;'U'
   456  007AF4  30                 	db	48	;'0'
   457  007AF5  69                 	db	105	;'i'
   458  007AF6  36                 	db	54	;'6'
   459  007AF7  41                 	db	65	;'A'
   460  007AF8  00                 	db	0
   461  007AF9                     STR_20:
   462  007AF9  53                 	db	83	;'S'
   463  007AFA  79                 	db	121	;'y'
   464  007AFB  73                 	db	115	;'s'
   465  007AFC  74                 	db	116	;'t'
   466  007AFD  65                 	db	101	;'e'
   467  007AFE  6D                 	db	109	;'m'
   468  007AFF  20                 	db	32
   469  007B00  49                 	db	73	;'I'
   470  007B01  6E                 	db	110	;'n'
   471  007B02  69                 	db	105	;'i'
   472  007B03  74                 	db	116	;'t'
   473  007B04  69                 	db	105	;'i'
   474  007B05  61                 	db	97	;'a'
   475  007B06  6C                 	db	108	;'l'
   476  007B07  69                 	db	105	;'i'
   477  007B08  7A                 	db	122	;'z'
   478  007B09  61                 	db	97	;'a'
   479  007B0A  74                 	db	116	;'t'
   480  007B0B  69                 	db	105	;'i'
   481  007B0C  6F                 	db	111	;'o'
   482  007B0D  6E                 	db	110	;'n'
   483  007B0E  20                 	db	32
   484  007B0F  63                 	db	99	;'c'
   485  007B10  6F                 	db	111	;'o'
   486  007B11  6D                 	db	109	;'m'
   487  007B12  70                 	db	112	;'p'
   488  007B13  6C                 	db	108	;'l'
   489  007B14  65                 	db	101	;'e'
   490  007B15  74                 	db	116	;'t'
   491  007B16  65                 	db	101	;'e'
   492  007B17  64                 	db	100	;'d'
   493  007B18  2E                 	db	46
   494  007B19  0D                 	db	13
   495  007B1A  0D                 	db	13
   496  007B1B  00                 	db	0
   497  007B1C                     STR_22:
   498  007B1C  53                 	db	83	;'S'
   499  007B1D  65                 	db	101	;'e'
   500  007B1E  6E                 	db	110	;'n'
   501  007B1F  64                 	db	100	;'d'
   502  007B20  69                 	db	105	;'i'
   503  007B21  6E                 	db	110	;'n'
   504  007B22  67                 	db	103	;'g'
   505  007B23  20                 	db	32
   506  007B24  6D                 	db	109	;'m'
   507  007B25  65                 	db	101	;'e'
   508  007B26  73                 	db	115	;'s'
   509  007B27  73                 	db	115	;'s'
   510  007B28  61                 	db	97	;'a'
   511  007B29  67                 	db	103	;'g'
   512  007B2A  65                 	db	101	;'e'
   513  007B2B  20                 	db	32
   514  007B2C  74                 	db	116	;'t'
   515  007B2D  6F                 	db	111	;'o'
   516  007B2E  20                 	db	32
   517  007B2F  74                 	db	116	;'t'
   518  007B30  68                 	db	104	;'h'
   519  007B31  69                 	db	105	;'i'
   520  007B32  6E                 	db	110	;'n'
   521  007B33  67                 	db	103	;'g'
   522  007B34  65                 	db	101	;'e'
   523  007B35  72                 	db	114	;'r'
   524  007B36  2E                 	db	46
   525  007B37  69                 	db	105	;'i'
   526  007B38  6F                 	db	111	;'o'
   527  007B39  2E                 	db	46
   528  007B3A  2E                 	db	46
   529  007B3B  2E                 	db	46
   530  007B3C  0D                 	db	13
   531  007B3D  00                 	db	0
   532  007B3E                     STR_21:
   533  007B3E  53                 	db	83	;'S'
   534  007B3F  79                 	db	121	;'y'
   535  007B40  73                 	db	115	;'s'
   536  007B41  74                 	db	116	;'t'
   537  007B42  65                 	db	101	;'e'
   538  007B43  6D                 	db	109	;'m'
   539  007B44  20                 	db	32
   540  007B45  49                 	db	73	;'I'
   541  007B46  6E                 	db	110	;'n'
   542  007B47  69                 	db	105	;'i'
   543  007B48  74                 	db	116	;'t'
   544  007B49  69                 	db	105	;'i'
   545  007B4A  61                 	db	97	;'a'
   546  007B4B  6C                 	db	108	;'l'
   547  007B4C  69                 	db	105	;'i'
   548  007B4D  7A                 	db	122	;'z'
   549  007B4E  61                 	db	97	;'a'
   550  007B4F  74                 	db	116	;'t'
   551  007B50  69                 	db	105	;'i'
   552  007B51  6F                 	db	111	;'o'
   553  007B52  6E                 	db	110	;'n'
   554  007B53  20                 	db	32
   555  007B54  66                 	db	102	;'f'
   556  007B55  61                 	db	97	;'a'
   557  007B56  69                 	db	105	;'i'
   558  007B57  6C                 	db	108	;'l'
   559  007B58  65                 	db	101	;'e'
   560  007B59  64                 	db	100	;'d'
   561  007B5A  2E                 	db	46
   562  007B5B  0D                 	db	13
   563  007B5C  0D                 	db	13
   564  007B5D  00                 	db	0
   565  007B5E                     STR_8:
   566  007B5E  53                 	db	83	;'S'
   567  007B5F  65                 	db	101	;'e'
   568  007B60  74                 	db	116	;'t'
   569  007B61  74                 	db	116	;'t'
   570  007B62  69                 	db	105	;'i'
   571  007B63  6E                 	db	110	;'n'
   572  007B64  67                 	db	103	;'g'
   573  007B65  20                 	db	32
   574  007B66  48                 	db	72	;'H'
   575  007B67  54                 	db	84	;'T'
   576  007B68  54                 	db	84	;'T'
   577  007B69  50                 	db	80	;'P'
   578  007B6A  20                 	db	32
   579  007B6B  63                 	db	99	;'c'
   580  007B6C  6F                 	db	111	;'o'
   581  007B6D  6E                 	db	110	;'n'
   582  007B6E  66                 	db	102	;'f'
   583  007B6F  69                 	db	105	;'i'
   584  007B70  67                 	db	103	;'g'
   585  007B71  75                 	db	117	;'u'
   586  007B72  72                 	db	114	;'r'
   587  007B73  61                 	db	97	;'a'
   588  007B74  74                 	db	116	;'t'
   589  007B75  69                 	db	105	;'i'
   590  007B76  6F                 	db	111	;'o'
   591  007B77  6E                 	db	110	;'n'
   592  007B78  73                 	db	115	;'s'
   593  007B79  2E                 	db	46
   594  007B7A  2E                 	db	46
   595  007B7B  2E                 	db	46
   596  007B7C  0D                 	db	13
   597  007B7D  00                 	db	0
   598  007B7E                     STR_6:
   599  007B7E  42                 	db	66	;'B'
   600  007B7F  65                 	db	101	;'e'
   601  007B80  61                 	db	97	;'a'
   602  007B81  72                 	db	114	;'r'
   603  007B82  65                 	db	101	;'e'
   604  007B83  72                 	db	114	;'r'
   605  007B84  20                 	db	32
   606  007B85  70                 	db	112	;'p'
   607  007B86  72                 	db	114	;'r'
   608  007B87  6F                 	db	111	;'o'
   609  007B88  66                 	db	102	;'f'
   610  007B89  69                 	db	105	;'i'
   611  007B8A  6C                 	db	108	;'l'
   612  007B8B  65                 	db	101	;'e'
   613  007B8C  20                 	db	32
   614  007B8D  41                 	db	65	;'A'
   615  007B8E  63                 	db	99	;'c'
   616  007B8F  74                 	db	116	;'t'
   617  007B90  69                 	db	105	;'i'
   618  007B91  76                 	db	118	;'v'
   619  007B92  61                 	db	97	;'a'
   620  007B93  74                 	db	116	;'t'
   621  007B94  65                 	db	101	;'e'
   622  007B95  64                 	db	100	;'d'
   623  007B96  2C                 	db	44
   624  007B97  20                 	db	32
   625  007B98  49                 	db	73	;'I'
   626  007B99  50                 	db	80	;'P'
   627  007B9A  3A                 	db	58	;':'
   628  007B9B  20                 	db	32
   629  007B9C  00                 	db	0
   630  007B9D                     STR_2:
   631  007B9D  53                 	db	83	;'S'
   632  007B9E  65                 	db	101	;'e'
   633  007B9F  74                 	db	116	;'t'
   634  007BA0  74                 	db	116	;'t'
   635  007BA1  69                 	db	105	;'i'
   636  007BA2  6E                 	db	110	;'n'
   637  007BA3  67                 	db	103	;'g'
   638  007BA4  20                 	db	32
   639  007BA5  49                 	db	73	;'I'
   640  007BA6  50                 	db	80	;'P'
   641  007BA7  20                 	db	32
   642  007BA8  63                 	db	99	;'c'
   643  007BA9  6F                 	db	111	;'o'
   644  007BAA  6E                 	db	110	;'n'
   645  007BAB  66                 	db	102	;'f'
   646  007BAC  69                 	db	105	;'i'
   647  007BAD  67                 	db	103	;'g'
   648  007BAE  75                 	db	117	;'u'
   649  007BAF  72                 	db	114	;'r'
   650  007BB0  61                 	db	97	;'a'
   651  007BB1  74                 	db	116	;'t'
   652  007BB2  69                 	db	105	;'i'
   653  007BB3  6F                 	db	111	;'o'
   654  007BB4  6E                 	db	110	;'n'
   655  007BB5  73                 	db	115	;'s'
   656  007BB6  2E                 	db	46
   657  007BB7  2E                 	db	46
   658  007BB8  2E                 	db	46
   659  007BB9  0D                 	db	13
   660  007BBA  00                 	db	0
   661  007BBB  41                 	db	65	;'A'
   662  007BBC  54                 	db	84	;'T'
   663  007BBD  2B                 	db	43
   664  007BBE  43                 	db	67	;'C'
   665  007BBF  47                 	db	71	;'G'
   666  007BC0  51                 	db	81	;'Q'
   667  007BC1  4D                 	db	77	;'M'
   668  007BC2  49                 	db	73	;'I'
   669  007BC3  4E                 	db	78	;'N'
   670  007BC4  3D                 	db	61	;'='
   671  007BC5  25                 	db	37
   672  007BC6  75                 	db	117	;'u'
   673  007BC7  2C                 	db	44
   674  007BC8  25                 	db	37
   675  007BC9  75                 	db	117	;'u'
   676  007BCA  2C                 	db	44
   677  007BCB  25                 	db	37
   678  007BCC  75                 	db	117	;'u'
   679  007BCD  2C                 	db	44
   680  007BCE  25                 	db	37
   681  007BCF  75                 	db	117	;'u'
   682  007BD0  2C                 	db	44
   683  007BD1  25                 	db	37
   684  007BD2  75                 	db	117	;'u'
   685  007BD3  2C                 	db	44
   686  007BD4  25                 	db	37
   687  007BD5  75                 	db	117	;'u'
   688  007BD6  0D                 	db	13
   689  007BD7  00                 	db	0
   690  007BD8  41                 	db	65	;'A'
   691  007BD9  54                 	db	84	;'T'
   692  007BDA  2B                 	db	43
   693  007BDB  43                 	db	67	;'C'
   694  007BDC  47                 	db	71	;'G'
   695  007BDD  51                 	db	81	;'Q'
   696  007BDE  52                 	db	82	;'R'
   697  007BDF  45                 	db	69	;'E'
   698  007BE0  51                 	db	81	;'Q'
   699  007BE1  3D                 	db	61	;'='
   700  007BE2  25                 	db	37
   701  007BE3  75                 	db	117	;'u'
   702  007BE4  2C                 	db	44
   703  007BE5  25                 	db	37
   704  007BE6  75                 	db	117	;'u'
   705  007BE7  2C                 	db	44
   706  007BE8  25                 	db	37
   707  007BE9  75                 	db	117	;'u'
   708  007BEA  2C                 	db	44
   709  007BEB  25                 	db	37
   710  007BEC  75                 	db	117	;'u'
   711  007BED  2C                 	db	44
   712  007BEE  25                 	db	37
   713  007BEF  75                 	db	117	;'u'
   714  007BF0  2C                 	db	44
   715  007BF1  25                 	db	37
   716  007BF2  75                 	db	117	;'u'
   717  007BF3  0D                 	db	13
   718  007BF4  00                 	db	0
   719  007BF5  41                 	db	65	;'A'
   720  007BF6  54                 	db	84	;'T'
   721  007BF7  2B                 	db	43
   722  007BF8  48                 	db	72	;'H'
   723  007BF9  54                 	db	84	;'T'
   724  007BFA  54                 	db	84	;'T'
   725  007BFB  50                 	db	80	;'P'
   726  007BFC  50                 	db	80	;'P'
   727  007BFD  41                 	db	65	;'A'
   728  007BFE  52                 	db	82	;'R'
   729  007BFF  41                 	db	65	;'A'
   730  007C00  3D                 	db	61	;'='
   731  007C01  22                 	db	34
   732  007C02  42                 	db	66	;'B'
   733  007C03  52                 	db	82	;'R'
   734  007C04  45                 	db	69	;'E'
   735  007C05  41                 	db	65	;'A'
   736  007C06  4B                 	db	75	;'K'
   737  007C07  45                 	db	69	;'E'
   738  007C08  4E                 	db	78	;'N'
   739  007C09  44                 	db	68	;'D'
   740  007C0A  22                 	db	34
   741  007C0B  2C                 	db	44
   742  007C0C  25                 	db	37
   743  007C0D  6C                 	db	108	;'l'
   744  007C0E  64                 	db	100	;'d'
   745  007C0F  0D                 	db	13
   746  007C10  00                 	db	0
   747  007C11                     STR_24:
   748  007C11  52                 	db	82	;'R'
   749  007C12  65                 	db	101	;'e'
   750  007C13  63                 	db	99	;'c'
   751  007C14  65                 	db	101	;'e'
   752  007C15  69                 	db	105	;'i'
   753  007C16  76                 	db	118	;'v'
   754  007C17  65                 	db	101	;'e'
   755  007C18  64                 	db	100	;'d'
   756  007C19  20                 	db	32
   757  007C1A  64                 	db	100	;'d'
   758  007C1B  61                 	db	97	;'a'
   759  007C1C  74                 	db	116	;'t'
   760  007C1D  61                 	db	97	;'a'
   761  007C1E  20                 	db	32
   762  007C1F  6C                 	db	108	;'l'
   763  007C20  65                 	db	101	;'e'
   764  007C21  6E                 	db	110	;'n'
   765  007C22  67                 	db	103	;'g'
   766  007C23  74                 	db	116	;'t'
   767  007C24  68                 	db	104	;'h'
   768  007C25  3A                 	db	58	;':'
   769  007C26  20                 	db	32
   770  007C27  25                 	db	37
   771  007C28  6C                 	db	108	;'l'
   772  007C29  64                 	db	100	;'d'
   773  007C2A  0D                 	db	13
   774  007C2B  00                 	db	0
   775  007C2C  41                 	db	65	;'A'
   776  007C2D  54                 	db	84	;'T'
   777  007C2E  2B                 	db	43
   778  007C2F  48                 	db	72	;'H'
   779  007C30  54                 	db	84	;'T'
   780  007C31  54                 	db	84	;'T'
   781  007C32  50                 	db	80	;'P'
   782  007C33  50                 	db	80	;'P'
   783  007C34  41                 	db	65	;'A'
   784  007C35  52                 	db	82	;'R'
   785  007C36  41                 	db	65	;'A'
   786  007C37  3D                 	db	61	;'='
   787  007C38  22                 	db	34
   788  007C39  50                 	db	80	;'P'
   789  007C3A  52                 	db	82	;'R'
   790  007C3B  4F                 	db	79	;'O'
   791  007C3C  50                 	db	80	;'P'
   792  007C3D  4F                 	db	79	;'O'
   793  007C3E  52                 	db	82	;'R'
   794  007C3F  54                 	db	84	;'T'
   795  007C40  22                 	db	34
   796  007C41  2C                 	db	44
   797  007C42  25                 	db	37
   798  007C43  75                 	db	117	;'u'
   799  007C44  0D                 	db	13
   800  007C45  00                 	db	0
   801  007C46  41                 	db	65	;'A'
   802  007C47  54                 	db	84	;'T'
   803  007C48  2B                 	db	43
   804  007C49  48                 	db	72	;'H'
   805  007C4A  54                 	db	84	;'T'
   806  007C4B  54                 	db	84	;'T'
   807  007C4C  50                 	db	80	;'P'
   808  007C4D  50                 	db	80	;'P'
   809  007C4E  41                 	db	65	;'A'
   810  007C4F  52                 	db	82	;'R'
   811  007C50  41                 	db	65	;'A'
   812  007C51  3D                 	db	61	;'='
   813  007C52  22                 	db	34
   814  007C53  54                 	db	84	;'T'
   815  007C54  49                 	db	73	;'I'
   816  007C55  4D                 	db	77	;'M'
   817  007C56  45                 	db	69	;'E'
   818  007C57  4F                 	db	79	;'O'
   819  007C58  55                 	db	85	;'U'
   820  007C59  54                 	db	84	;'T'
   821  007C5A  22                 	db	34
   822  007C5B  2C                 	db	44
   823  007C5C  25                 	db	37
   824  007C5D  75                 	db	117	;'u'
   825  007C5E  0D                 	db	13
   826  007C5F  00                 	db	0
   827  007C60  41                 	db	65	;'A'
   828  007C61  54                 	db	84	;'T'
   829  007C62  2B                 	db	43
   830  007C63  48                 	db	72	;'H'
   831  007C64  54                 	db	84	;'T'
   832  007C65  54                 	db	84	;'T'
   833  007C66  50                 	db	80	;'P'
   834  007C67  50                 	db	80	;'P'
   835  007C68  41                 	db	65	;'A'
   836  007C69  52                 	db	82	;'R'
   837  007C6A  41                 	db	65	;'A'
   838  007C6B  3D                 	db	61	;'='
   839  007C6C  22                 	db	34
   840  007C6D  42                 	db	66	;'B'
   841  007C6E  52                 	db	82	;'R'
   842  007C6F  45                 	db	69	;'E'
   843  007C70  41                 	db	65	;'A'
   844  007C71  4B                 	db	75	;'K'
   845  007C72  22                 	db	34
   846  007C73  2C                 	db	44
   847  007C74  25                 	db	37
   848  007C75  6C                 	db	108	;'l'
   849  007C76  64                 	db	100	;'d'
   850  007C77  0D                 	db	13
   851  007C78  00                 	db	0
   852  007C79  41                 	db	65	;'A'
   853  007C7A  54                 	db	84	;'T'
   854  007C7B  2B                 	db	43
   855  007C7C  48                 	db	72	;'H'
   856  007C7D  54                 	db	84	;'T'
   857  007C7E  54                 	db	84	;'T'
   858  007C7F  50                 	db	80	;'P'
   859  007C80  50                 	db	80	;'P'
   860  007C81  41                 	db	65	;'A'
   861  007C82  52                 	db	82	;'R'
   862  007C83  41                 	db	65	;'A'
   863  007C84  3D                 	db	61	;'='
   864  007C85  22                 	db	34
   865  007C86  52                 	db	82	;'R'
   866  007C87  45                 	db	69	;'E'
   867  007C88  44                 	db	68	;'D'
   868  007C89  49                 	db	73	;'I'
   869  007C8A  52                 	db	82	;'R'
   870  007C8B  22                 	db	34
   871  007C8C  2C                 	db	44
   872  007C8D  25                 	db	37
   873  007C8E  75                 	db	117	;'u'
   874  007C8F  0D                 	db	13
   875  007C90  00                 	db	0
   876  007C91  41                 	db	65	;'A'
   877  007C92  54                 	db	84	;'T'
   878  007C93  2B                 	db	43
   879  007C94  48                 	db	72	;'H'
   880  007C95  54                 	db	84	;'T'
   881  007C96  54                 	db	84	;'T'
   882  007C97  50                 	db	80	;'P'
   883  007C98  50                 	db	80	;'P'
   884  007C99  41                 	db	65	;'A'
   885  007C9A  52                 	db	82	;'R'
   886  007C9B  41                 	db	65	;'A'
   887  007C9C  3D                 	db	61	;'='
   888  007C9D  22                 	db	34
   889  007C9E  55                 	db	85	;'U'
   890  007C9F  53                 	db	83	;'S'
   891  007CA0  45                 	db	69	;'E'
   892  007CA1  52                 	db	82	;'R'
   893  007CA2  44                 	db	68	;'D'
   894  007CA3  41                 	db	65	;'A'
   895  007CA4  54                 	db	84	;'T'
   896  007CA5  41                 	db	65	;'A'
   897  007CA6  22                 	db	34
   898  007CA7  2C                 	db	44
   899  007CA8  00                 	db	0
   900  007CA9                     STR_23:
   901  007CA9  48                 	db	72	;'H'
   902  007CAA  54                 	db	84	;'T'
   903  007CAB  54                 	db	84	;'T'
   904  007CAC  50                 	db	80	;'P'
   905  007CAD  20                 	db	32
   906  007CAE  72                 	db	114	;'r'
   907  007CAF  65                 	db	101	;'e'
   908  007CB0  73                 	db	115	;'s'
   909  007CB1  70                 	db	112	;'p'
   910  007CB2  6F                 	db	111	;'o'
   911  007CB3  6E                 	db	110	;'n'
   912  007CB4  73                 	db	115	;'s'
   913  007CB5  65                 	db	101	;'e'
   914  007CB6  20                 	db	32
   915  007CB7  63                 	db	99	;'c'
   916  007CB8  6F                 	db	111	;'o'
   917  007CB9  64                 	db	100	;'d'
   918  007CBA  65                 	db	101	;'e'
   919  007CBB  3A                 	db	58	;':'
   920  007CBC  20                 	db	32
   921  007CBD  25                 	db	37
   922  007CBE  75                 	db	117	;'u'
   923  007CBF  0D                 	db	13
   924  007CC0  00                 	db	0
   925  007CC1                     STR_94:
   926  007CC1  41                 	db	65	;'A'
   927  007CC2  54                 	db	84	;'T'
   928  007CC3  2B                 	db	43
   929  007CC4  48                 	db	72	;'H'
   930  007CC5  54                 	db	84	;'T'
   931  007CC6  54                 	db	84	;'T'
   932  007CC7  50                 	db	80	;'P'
   933  007CC8  50                 	db	80	;'P'
   934  007CC9  41                 	db	65	;'A'
   935  007CCA  52                 	db	82	;'R'
   936  007CCB  41                 	db	65	;'A'
   937  007CCC  3D                 	db	61	;'='
   938  007CCD  22                 	db	34
   939  007CCE  43                 	db	67	;'C'
   940  007CCF  4F                 	db	79	;'O'
   941  007CD0  4E                 	db	78	;'N'
   942  007CD1  54                 	db	84	;'T'
   943  007CD2  45                 	db	69	;'E'
   944  007CD3  4E                 	db	78	;'N'
   945  007CD4  54                 	db	84	;'T'
   946  007CD5  22                 	db	34
   947  007CD6  2C                 	db	44
   948  007CD7  00                 	db	0
   949  007CD8                     STR_12:
   950  007CD8  45                 	db	69	;'E'
   951  007CD9  6E                 	db	110	;'n'
   952  007CDA  67                 	db	103	;'g'
   953  007CDB  69                 	db	105	;'i'
   954  007CDC  6E                 	db	110	;'n'
   955  007CDD  65                 	db	101	;'e'
   956  007CDE  20                 	db	32
   957  007CDF  54                 	db	84	;'T'
   958  007CE0  65                 	db	101	;'e'
   959  007CE1  6D                 	db	109	;'m'
   960  007CE2  70                 	db	112	;'p'
   961  007CE3  65                 	db	101	;'e'
   962  007CE4  72                 	db	114	;'r'
   963  007CE5  61                 	db	97	;'a'
   964  007CE6  74                 	db	116	;'t'
   965  007CE7  75                 	db	117	;'u'
   966  007CE8  72                 	db	114	;'r'
   967  007CE9  65                 	db	101	;'e'
   968  007CEA  20                 	db	32
   969  007CEB  28                 	db	40
   970  007CEC  43                 	db	67	;'C'
   971  007CED  29                 	db	41
   972  007CEE  00                 	db	0
   973  007CEF                     STR_96:
   974  007CEF  41                 	db	65	;'A'
   975  007CF0  54                 	db	84	;'T'
   976  007CF1  2B                 	db	43
   977  007CF2  48                 	db	72	;'H'
   978  007CF3  54                 	db	84	;'T'
   979  007CF4  54                 	db	84	;'T'
   980  007CF5  50                 	db	80	;'P'
   981  007CF6  44                 	db	68	;'D'
   982  007CF7  41                 	db	65	;'A'
   983  007CF8  54                 	db	84	;'T'
   984  007CF9  41                 	db	65	;'A'
   985  007CFA  3D                 	db	61	;'='
   986  007CFB  25                 	db	37
   987  007CFC  6C                 	db	108	;'l'
   988  007CFD  64                 	db	100	;'d'
   989  007CFE  2C                 	db	44
   990  007CFF  25                 	db	37
   991  007D00  6C                 	db	108	;'l'
   992  007D01  64                 	db	100	;'d'
   993  007D02  0D                 	db	13
   994  007D03  00                 	db	0
   995  007D04                     STR_98:
   996  007D04  41                 	db	65	;'A'
   997  007D05  54                 	db	84	;'T'
   998  007D06  2B                 	db	43
   999  007D07  48                 	db	72	;'H'
  1000  007D08  54                 	db	84	;'T'
  1001  007D09  54                 	db	84	;'T'
  1002  007D0A  50                 	db	80	;'P'
  1003  007D0B  52                 	db	82	;'R'
  1004  007D0C  45                 	db	69	;'E'
  1005  007D0D  41                 	db	65	;'A'
  1006  007D0E  44                 	db	68	;'D'
  1007  007D0F  3D                 	db	61	;'='
  1008  007D10  25                 	db	37
  1009  007D11  6C                 	db	108	;'l'
  1010  007D12  64                 	db	100	;'d'
  1011  007D13  2C                 	db	44
  1012  007D14  25                 	db	37
  1013  007D15  6C                 	db	108	;'l'
  1014  007D16  64                 	db	100	;'d'
  1015  007D17  0D                 	db	13
  1016  007D18  00                 	db	0
  1017  007D19  41                 	db	65	;'A'
  1018  007D1A  54                 	db	84	;'T'
  1019  007D1B  2B                 	db	43
  1020  007D1C  48                 	db	72	;'H'
  1021  007D1D  54                 	db	84	;'T'
  1022  007D1E  54                 	db	84	;'T'
  1023  007D1F  50                 	db	80	;'P'
  1024  007D20  50                 	db	80	;'P'
  1025  007D21  41                 	db	65	;'A'
  1026  007D22  52                 	db	82	;'R'
  1027  007D23  41                 	db	65	;'A'
  1028  007D24  3D                 	db	61	;'='
  1029  007D25  22                 	db	34
  1030  007D26  50                 	db	80	;'P'
  1031  007D27  52                 	db	82	;'R'
  1032  007D28  4F                 	db	79	;'O'
  1033  007D29  49                 	db	73	;'I'
  1034  007D2A  50                 	db	80	;'P'
  1035  007D2B  22                 	db	34
  1036  007D2C  2C                 	db	44
  1037  007D2D  00                 	db	0
  1038  007D2E                     STR_1:
  1039  007D2E  4D                 	db	77	;'M'
  1040  007D2F  6F                 	db	111	;'o'
  1041  007D30  64                 	db	100	;'d'
  1042  007D31  65                 	db	101	;'e'
  1043  007D32  6D                 	db	109	;'m'
  1044  007D33  20                 	db	32
  1045  007D34  49                 	db	73	;'I'
  1046  007D35  6E                 	db	110	;'n'
  1047  007D36  69                 	db	105	;'i'
  1048  007D37  74                 	db	116	;'t'
  1049  007D38  69                 	db	105	;'i'
  1050  007D39  61                 	db	97	;'a'
  1051  007D3A  6C                 	db	108	;'l'
  1052  007D3B  69                 	db	105	;'i'
  1053  007D3C  7A                 	db	122	;'z'
  1054  007D3D  65                 	db	101	;'e'
  1055  007D3E  64                 	db	100	;'d'
  1056  007D3F  2E                 	db	46
  1057  007D40  0D                 	db	13
  1058  007D41  0D                 	db	13
  1059  007D42  00                 	db	0
  1060  007D43  41                 	db	65	;'A'
  1061  007D44  54                 	db	84	;'T'
  1062  007D45  2B                 	db	43
  1063  007D46  43                 	db	67	;'C'
  1064  007D47  47                 	db	71	;'G'
  1065  007D48  44                 	db	68	;'D'
  1066  007D49  41                 	db	65	;'A'
  1067  007D4A  54                 	db	84	;'T'
  1068  007D4B  41                 	db	65	;'A'
  1069  007D4C  3D                 	db	61	;'='
  1070  007D4D  22                 	db	34
  1071  007D4E  50                 	db	80	;'P'
  1072  007D4F  50                 	db	80	;'P'
  1073  007D50  50                 	db	80	;'P'
  1074  007D51  22                 	db	34
  1075  007D52  2C                 	db	44
  1076  007D53  25                 	db	37
  1077  007D54  75                 	db	117	;'u'
  1078  007D55  0D                 	db	13
  1079  007D56  00                 	db	0
  1080  007D57                     STR_16:
  1081  007D57  56                 	db	86	;'V'
  1082  007D58  65                 	db	101	;'e'
  1083  007D59  68                 	db	104	;'h'
  1084  007D5A  69                 	db	105	;'i'
  1085  007D5B  63                 	db	99	;'c'
  1086  007D5C  6C                 	db	108	;'l'
  1087  007D5D  65                 	db	101	;'e'
  1088  007D5E  20                 	db	32
  1089  007D5F  53                 	db	83	;'S'
  1090  007D60  70                 	db	112	;'p'
  1091  007D61  65                 	db	101	;'e'
  1092  007D62  65                 	db	101	;'e'
  1093  007D63  64                 	db	100	;'d'
  1094  007D64  20                 	db	32
  1095  007D65  28                 	db	40
  1096  007D66  4D                 	db	77	;'M'
  1097  007D67  50                 	db	80	;'P'
  1098  007D68  48                 	db	72	;'H'
  1099  007D69  29                 	db	41
  1100  007D6A  00                 	db	0
  1101  007D6B  41                 	db	65	;'A'
  1102  007D6C  54                 	db	84	;'T'
  1103  007D6D  2B                 	db	43
  1104  007D6E  48                 	db	72	;'H'
  1105  007D6F  54                 	db	84	;'T'
  1106  007D70  54                 	db	84	;'T'
  1107  007D71  50                 	db	80	;'P'
  1108  007D72  50                 	db	80	;'P'
  1109  007D73  41                 	db	65	;'A'
  1110  007D74  52                 	db	82	;'R'
  1111  007D75  41                 	db	65	;'A'
  1112  007D76  3D                 	db	61	;'='
  1113  007D77  22                 	db	34
  1114  007D78  43                 	db	67	;'C'
  1115  007D79  49                 	db	73	;'I'
  1116  007D7A  44                 	db	68	;'D'
  1117  007D7B  22                 	db	34
  1118  007D7C  2C                 	db	44
  1119  007D7D  00                 	db	0
  1120  007D7E                     STR_86:
  1121  007D7E  41                 	db	65	;'A'
  1122  007D7F  54                 	db	84	;'T'
  1123  007D80  2B                 	db	43
  1124  007D81  48                 	db	72	;'H'
  1125  007D82  54                 	db	84	;'T'
  1126  007D83  54                 	db	84	;'T'
  1127  007D84  50                 	db	80	;'P'
  1128  007D85  50                 	db	80	;'P'
  1129  007D86  41                 	db	65	;'A'
  1130  007D87  52                 	db	82	;'R'
  1131  007D88  41                 	db	65	;'A'
  1132  007D89  3D                 	db	61	;'='
  1133  007D8A  22                 	db	34
  1134  007D8B  55                 	db	85	;'U'
  1135  007D8C  52                 	db	82	;'R'
  1136  007D8D  4C                 	db	76	;'L'
  1137  007D8E  22                 	db	34
  1138  007D8F  2C                 	db	44
  1139  007D90  00                 	db	0
  1140  007D91                     STR_97:
  1141  007D91  41                 	db	65	;'A'
  1142  007D92  54                 	db	84	;'T'
  1143  007D93  2B                 	db	43
  1144  007D94  48                 	db	72	;'H'
  1145  007D95  54                 	db	84	;'T'
  1146  007D96  54                 	db	84	;'T'
  1147  007D97  50                 	db	80	;'P'
  1148  007D98  41                 	db	65	;'A'
  1149  007D99  43                 	db	67	;'C'
  1150  007D9A  54                 	db	84	;'T'
  1151  007D9B  49                 	db	73	;'I'
  1152  007D9C  4F                 	db	79	;'O'
  1153  007D9D  4E                 	db	78	;'N'
  1154  007D9E  3D                 	db	61	;'='
  1155  007D9F  25                 	db	37
  1156  007DA0  75                 	db	117	;'u'
  1157  007DA1  0D                 	db	13
  1158  007DA2  00                 	db	0
  1159  007DA3  41                 	db	65	;'A'
  1160  007DA4  54                 	db	84	;'T'
  1161  007DA5  2B                 	db	43
  1162  007DA6  48                 	db	72	;'H'
  1163  007DA7  54                 	db	84	;'T'
  1164  007DA8  54                 	db	84	;'T'
  1165  007DA9  50                 	db	80	;'P'
  1166  007DAA  50                 	db	80	;'P'
  1167  007DAB  41                 	db	65	;'A'
  1168  007DAC  52                 	db	82	;'R'
  1169  007DAD  41                 	db	65	;'A'
  1170  007DAE  3D                 	db	61	;'='
  1171  007DAF  22                 	db	34
  1172  007DB0  55                 	db	85	;'U'
  1173  007DB1  41                 	db	65	;'A'
  1174  007DB2  22                 	db	34
  1175  007DB3  2C                 	db	44
  1176  007DB4  00                 	db	0
  1177  007DB5                     STR_27:
  1178  007DB5  53                 	db	83	;'S'
  1179  007DB6  65                 	db	101	;'e'
  1180  007DB7  6E                 	db	110	;'n'
  1181  007DB8  64                 	db	100	;'d'
  1182  007DB9  69                 	db	105	;'i'
  1183  007DBA  6E                 	db	110	;'n'
  1184  007DBB  67                 	db	103	;'g'
  1185  007DBC  20                 	db	32
  1186  007DBD  66                 	db	102	;'f'
  1187  007DBE  61                 	db	97	;'a'
  1188  007DBF  69                 	db	105	;'i'
  1189  007DC0  6C                 	db	108	;'l'
  1190  007DC1  65                 	db	101	;'e'
  1191  007DC2  64                 	db	100	;'d'
  1192  007DC3  2E                 	db	46
  1193  007DC4  0D                 	db	13
  1194  007DC5  00                 	db	0
  1195  007DC6                     STR_10:
  1196  007DC6  61                 	db	97	;'a'
  1197  007DC7  70                 	db	112	;'p'
  1198  007DC8  70                 	db	112	;'p'
  1199  007DC9  6C                 	db	108	;'l'
  1200  007DCA  69                 	db	105	;'i'
  1201  007DCB  63                 	db	99	;'c'
  1202  007DCC  61                 	db	97	;'a'
  1203  007DCD  74                 	db	116	;'t'
  1204  007DCE  69                 	db	105	;'i'
  1205  007DCF  6F                 	db	111	;'o'
  1206  007DD0  6E                 	db	110	;'n'
  1207  007DD1  2F                 	db	47
  1208  007DD2  6A                 	db	106	;'j'
  1209  007DD3  73                 	db	115	;'s'
  1210  007DD4  6F                 	db	111	;'o'
  1211  007DD5  6E                 	db	110	;'n'
  1212  007DD6  00                 	db	0
  1213  007DD7  41                 	db	65	;'A'
  1214  007DD8  54                 	db	84	;'T'
  1215  007DD9  2B                 	db	43
  1216  007DDA  48                 	db	72	;'H'
  1217  007DDB  54                 	db	84	;'T'
  1218  007DDC  54                 	db	84	;'T'
  1219  007DDD  50                 	db	80	;'P'
  1220  007DDE  53                 	db	83	;'S'
  1221  007DDF  54                 	db	84	;'T'
  1222  007DE0  41                 	db	65	;'A'
  1223  007DE1  54                 	db	84	;'T'
  1224  007DE2  55                 	db	85	;'U'
  1225  007DE3  53                 	db	83	;'S'
  1226  007DE4  3F                 	db	63	;'?'
  1227  007DE5  0D                 	db	13
  1228  007DE6  00                 	db	0
  1229  007DE7  41                 	db	65	;'A'
  1230  007DE8  54                 	db	84	;'T'
  1231  007DE9  2B                 	db	43
  1232  007DEA  48                 	db	72	;'H'
  1233  007DEB  54                 	db	84	;'T'
  1234  007DEC  54                 	db	84	;'T'
  1235  007DED  50                 	db	80	;'P'
  1236  007DEE  47                 	db	71	;'G'
  1237  007DEF  45                 	db	69	;'E'
  1238  007DF0  54                 	db	84	;'T'
  1239  007DF1  48                 	db	72	;'H'
  1240  007DF2  45                 	db	69	;'E'
  1241  007DF3  41                 	db	65	;'A'
  1242  007DF4  44                 	db	68	;'D'
  1243  007DF5  3D                 	db	61	;'='
  1244  007DF6  00                 	db	0
  1245  007DF7  41                 	db	65	;'A'
  1246  007DF8  54                 	db	84	;'T'
  1247  007DF9  2B                 	db	43
  1248  007DFA  53                 	db	83	;'S'
  1249  007DFB  41                 	db	65	;'A'
  1250  007DFC  50                 	db	80	;'P'
  1251  007DFD  42                 	db	66	;'B'
  1252  007DFE  52                 	db	82	;'R'
  1253  007DFF  3D                 	db	61	;'='
  1254  007E00  34                 	db	52	;'4'
  1255  007E01  2C                 	db	44
  1256  007E02  25                 	db	37
  1257  007E03  75                 	db	117	;'u'
  1258  007E04  0D                 	db	13
  1259  007E05  00                 	db	0
  1260  007E06  41                 	db	65	;'A'
  1261  007E07  54                 	db	84	;'T'
  1262  007E08  2B                 	db	43
  1263  007E09  43                 	db	67	;'C'
  1264  007E0A  47                 	db	71	;'G'
  1265  007E0B  50                 	db	80	;'P'
  1266  007E0C  41                 	db	65	;'A'
  1267  007E0D  44                 	db	68	;'D'
  1268  007E0E  44                 	db	68	;'D'
  1269  007E0F  52                 	db	82	;'R'
  1270  007E10  3D                 	db	61	;'='
  1271  007E11  25                 	db	37
  1272  007E12  75                 	db	117	;'u'
  1273  007E13  0D                 	db	13
  1274  007E14  00                 	db	0
  1275  007E15                     STR_18:
  1276  007E15  46                 	db	70	;'F'
  1277  007E16  75                 	db	117	;'u'
  1278  007E17  65                 	db	101	;'e'
  1279  007E18  6C                 	db	108	;'l'
  1280  007E19  20                 	db	32
  1281  007E1A  4C                 	db	76	;'L'
  1282  007E1B  65                 	db	101	;'e'
  1283  007E1C  76                 	db	118	;'v'
  1284  007E1D  65                 	db	101	;'e'
  1285  007E1E  6C                 	db	108	;'l'
  1286  007E1F  20                 	db	32
  1287  007E20  28                 	db	40
  1288  007E21  25                 	db	37
  1289  007E22  29                 	db	41
  1290  007E23  00                 	db	0
  1291  007E24  41                 	db	65	;'A'
  1292  007E25  54                 	db	84	;'T'
  1293  007E26  2B                 	db	43
  1294  007E27  48                 	db	72	;'H'
  1295  007E28  54                 	db	84	;'T'
  1296  007E29  54                 	db	84	;'T'
  1297  007E2A  50                 	db	80	;'P'
  1298  007E2B  53                 	db	83	;'S'
  1299  007E2C  43                 	db	67	;'C'
  1300  007E2D  4F                 	db	79	;'O'
  1301  007E2E  4E                 	db	78	;'N'
  1302  007E2F  54                 	db	84	;'T'
  1303  007E30  0D                 	db	13
  1304  007E31  00                 	db	0
  1305  007E32  41                 	db	65	;'A'
  1306  007E33  54                 	db	84	;'T'
  1307  007E34  2B                 	db	43
  1308  007E35  43                 	db	67	;'C'
  1309  007E36  46                 	db	70	;'F'
  1310  007E37  55                 	db	85	;'U'
  1311  007E38  4E                 	db	78	;'N'
  1312  007E39  3D                 	db	61	;'='
  1313  007E3A  31                 	db	49	;'1'
  1314  007E3B  2C                 	db	44
  1315  007E3C  31                 	db	49	;'1'
  1316  007E3D  0D                 	db	13
  1317  007E3E  00                 	db	0
  1318  007E3F  41                 	db	65	;'A'
  1319  007E40  54                 	db	84	;'T'
  1320  007E41  2B                 	db	43
  1321  007E42  43                 	db	67	;'C'
  1322  007E43  47                 	db	71	;'G'
  1323  007E44  43                 	db	67	;'C'
  1324  007E45  4C                 	db	76	;'L'
  1325  007E46  41                 	db	65	;'A'
  1326  007E47  53                 	db	83	;'S'
  1327  007E48  53                 	db	83	;'S'
  1328  007E49  3F                 	db	63	;'?'
  1329  007E4A  0D                 	db	13
  1330  007E4B  00                 	db	0
  1331  007E4C  41                 	db	65	;'A'
  1332  007E4D  54                 	db	84	;'T'
  1333  007E4E  2B                 	db	43
  1334  007E4F  48                 	db	72	;'H'
  1335  007E50  54                 	db	84	;'T'
  1336  007E51  54                 	db	84	;'T'
  1337  007E52  50                 	db	80	;'P'
  1338  007E53  48                 	db	72	;'H'
  1339  007E54  45                 	db	69	;'E'
  1340  007E55  41                 	db	65	;'A'
  1341  007E56  44                 	db	68	;'D'
  1342  007E57  0D                 	db	13
  1343  007E58  00                 	db	0
  1344  007E59  41                 	db	65	;'A'
  1345  007E5A  54                 	db	84	;'T'
  1346  007E5B  2B                 	db	43
  1347  007E5C  48                 	db	72	;'H'
  1348  007E5D  54                 	db	84	;'T'
  1349  007E5E  54                 	db	84	;'T'
  1350  007E5F  50                 	db	80	;'P'
  1351  007E60  54                 	db	84	;'T'
  1352  007E61  45                 	db	69	;'E'
  1353  007E62  52                 	db	82	;'R'
  1354  007E63  4D                 	db	77	;'M'
  1355  007E64  0D                 	db	13
  1356  007E65  00                 	db	0
  1357  007E66                     STR_83:
  1358  007E66  41                 	db	65	;'A'
  1359  007E67  54                 	db	84	;'T'
  1360  007E68  2B                 	db	43
  1361  007E69  48                 	db	72	;'H'
  1362  007E6A  54                 	db	84	;'T'
  1363  007E6B  54                 	db	84	;'T'
  1364  007E6C  50                 	db	80	;'P'
  1365  007E6D  49                 	db	73	;'I'
  1366  007E6E  4E                 	db	78	;'N'
  1367  007E6F  49                 	db	73	;'I'
  1368  007E70  54                 	db	84	;'T'
  1369  007E71  0D                 	db	13
  1370  007E72  00                 	db	0
  1371  007E73  2C                 	db	44
  1372  007E74  22                 	db	34
  1373  007E75  50                 	db	80	;'P'
  1374  007E76  48                 	db	72	;'H'
  1375  007E77  4F                 	db	79	;'O'
  1376  007E78  4E                 	db	78	;'N'
  1377  007E79  45                 	db	69	;'E'
  1378  007E7A  4E                 	db	78	;'N'
  1379  007E7B  55                 	db	85	;'U'
  1380  007E7C  4D                 	db	77	;'M'
  1381  007E7D  22                 	db	34
  1382  007E7E  2C                 	db	44
  1383  007E7F  00                 	db	0
  1384  007E80  41                 	db	65	;'A'
  1385  007E81  54                 	db	84	;'T'
  1386  007E82  2B                 	db	43
  1387  007E83  43                 	db	67	;'C'
  1388  007E84  47                 	db	71	;'G'
  1389  007E85  41                 	db	65	;'A'
  1390  007E86  54                 	db	84	;'T'
  1391  007E87  54                 	db	84	;'T'
  1392  007E88  3D                 	db	61	;'='
  1393  007E89  30                 	db	48	;'0'
  1394  007E8A  0D                 	db	13
  1395  007E8B  00                 	db	0
  1396  007E8C  41                 	db	65	;'A'
  1397  007E8D  54                 	db	84	;'T'
  1398  007E8E  2B                 	db	43
  1399  007E8F  43                 	db	67	;'C'
  1400  007E90  47                 	db	71	;'G'
  1401  007E91  41                 	db	65	;'A'
  1402  007E92  54                 	db	84	;'T'
  1403  007E93  54                 	db	84	;'T'
  1404  007E94  3D                 	db	61	;'='
  1405  007E95  31                 	db	49	;'1'
  1406  007E96  0D                 	db	13
  1407  007E97  00                 	db	0
  1408  007E98  41                 	db	65	;'A'
  1409  007E99  54                 	db	84	;'T'
  1410  007E9A  2B                 	db	43
  1411  007E9B  43                 	db	67	;'C'
  1412  007E9C  47                 	db	71	;'G'
  1413  007E9D  45                 	db	69	;'E'
  1414  007E9E  52                 	db	82	;'R'
  1415  007E9F  45                 	db	69	;'E'
  1416  007EA0  50                 	db	80	;'P'
  1417  007EA1  3F                 	db	63	;'?'
  1418  007EA2  0D                 	db	13
  1419  007EA3  00                 	db	0
  1420  007EA4                     STR_30:
  1421  007EA4  41                 	db	65	;'A'
  1422  007EA5  54                 	db	84	;'T'
  1423  007EA6  2B                 	db	43
  1424  007EA7  49                 	db	73	;'I'
  1425  007EA8  50                 	db	80	;'P'
  1426  007EA9  52                 	db	82	;'R'
  1427  007EAA  3D                 	db	61	;'='
  1428  007EAB  25                 	db	37
  1429  007EAC  6C                 	db	108	;'l'
  1430  007EAD  64                 	db	100	;'d'
  1431  007EAE  0D                 	db	13
  1432  007EAF  00                 	db	0
  1433  007EB0                     STR_42:
  1434  007EB0  2C                 	db	44
  1435  007EB1  22                 	db	34
  1436  007EB2  43                 	db	67	;'C'
  1437  007EB3  4F                 	db	79	;'O'
  1438  007EB4  4E                 	db	78	;'N'
  1439  007EB5  54                 	db	84	;'T'
  1440  007EB6  59                 	db	89	;'Y'
  1441  007EB7  50                 	db	80	;'P'
  1442  007EB8  45                 	db	69	;'E'
  1443  007EB9  22                 	db	34
  1444  007EBA  2C                 	db	44
  1445  007EBB  00                 	db	0
  1446  007EBC  41                 	db	65	;'A'
  1447  007EBD  54                 	db	84	;'T'
  1448  007EBE  2B                 	db	43
  1449  007EBF  53                 	db	83	;'S'
  1450  007EC0  41                 	db	65	;'A'
  1451  007EC1  50                 	db	80	;'P'
  1452  007EC2  42                 	db	66	;'B'
  1453  007EC3  52                 	db	82	;'R'
  1454  007EC4  3D                 	db	61	;'='
  1455  007EC5  30                 	db	48	;'0'
  1456  007EC6  2C                 	db	44
  1457  007EC7  00                 	db	0
  1458  007EC8  41                 	db	65	;'A'
  1459  007EC9  54                 	db	84	;'T'
  1460  007ECA  2B                 	db	43
  1461  007ECB  43                 	db	67	;'C'
  1462  007ECC  47                 	db	71	;'G'
  1463  007ECD  41                 	db	65	;'A'
  1464  007ECE  43                 	db	67	;'C'
  1465  007ECF  54                 	db	84	;'T'
  1466  007ED0  3D                 	db	61	;'='
  1467  007ED1  30                 	db	48	;'0'
  1468  007ED2  2C                 	db	44
  1469  007ED3  00                 	db	0
  1470  007ED4                     STR_54:
  1471  007ED4  41                 	db	65	;'A'
  1472  007ED5  54                 	db	84	;'T'
  1473  007ED6  2B                 	db	43
  1474  007ED7  53                 	db	83	;'S'
  1475  007ED8  41                 	db	65	;'A'
  1476  007ED9  50                 	db	80	;'P'
  1477  007EDA  42                 	db	66	;'B'
  1478  007EDB  52                 	db	82	;'R'
  1479  007EDC  3D                 	db	61	;'='
  1480  007EDD  31                 	db	49	;'1'
  1481  007EDE  2C                 	db	44
  1482  007EDF  00                 	db	0
  1483  007EE0  41                 	db	65	;'A'
  1484  007EE1  54                 	db	84	;'T'
  1485  007EE2  2B                 	db	43
  1486  007EE3  43                 	db	67	;'C'
  1487  007EE4  47                 	db	71	;'G'
  1488  007EE5  41                 	db	65	;'A'
  1489  007EE6  43                 	db	67	;'C'
  1490  007EE7  54                 	db	84	;'T'
  1491  007EE8  3D                 	db	61	;'='
  1492  007EE9  31                 	db	49	;'1'
  1493  007EEA  2C                 	db	44
  1494  007EEB  00                 	db	0
  1495  007EEC                     STR_56:
  1496  007EEC  41                 	db	65	;'A'
  1497  007EED  54                 	db	84	;'T'
  1498  007EEE  2B                 	db	43
  1499  007EEF  53                 	db	83	;'S'
  1500  007EF0  41                 	db	65	;'A'
  1501  007EF1  50                 	db	80	;'P'
  1502  007EF2  42                 	db	66	;'B'
  1503  007EF3  52                 	db	82	;'R'
  1504  007EF4  3D                 	db	61	;'='
  1505  007EF5  32                 	db	50	;'2'
  1506  007EF6  2C                 	db	44
  1507  007EF7  00                 	db	0
  1508  007EF8                     STR_41:
  1509  007EF8  41                 	db	65	;'A'
  1510  007EF9  54                 	db	84	;'T'
  1511  007EFA  2B                 	db	43
  1512  007EFB  53                 	db	83	;'S'
  1513  007EFC  41                 	db	65	;'A'
  1514  007EFD  50                 	db	80	;'P'
  1515  007EFE  42                 	db	66	;'B'
  1516  007EFF  52                 	db	82	;'R'
  1517  007F00  3D                 	db	61	;'='
  1518  007F01  33                 	db	51	;'3'
  1519  007F02  2C                 	db	44
  1520  007F03  00                 	db	0
  1521  007F04  41                 	db	65	;'A'
  1522  007F05  54                 	db	84	;'T'
  1523  007F06  2B                 	db	43
  1524  007F07  43                 	db	67	;'C'
  1525  007F08  47                 	db	71	;'G'
  1526  007F09  43                 	db	67	;'C'
  1527  007F0A  4C                 	db	76	;'L'
  1528  007F0B  41                 	db	65	;'A'
  1529  007F0C  53                 	db	83	;'S'
  1530  007F0D  53                 	db	83	;'S'
  1531  007F0E  3D                 	db	61	;'='
  1532  007F0F  00                 	db	0
  1533  007F10  41                 	db	65	;'A'
  1534  007F11  54                 	db	84	;'T'
  1535  007F12  2B                 	db	43
  1536  007F13  43                 	db	67	;'C'
  1537  007F14  47                 	db	71	;'G'
  1538  007F15  44                 	db	68	;'D'
  1539  007F16  43                 	db	67	;'C'
  1540  007F17  4F                 	db	79	;'O'
  1541  007F18  4E                 	db	78	;'N'
  1542  007F19  54                 	db	84	;'T'
  1543  007F1A  3D                 	db	61	;'='
  1544  007F1B  00                 	db	0
  1545  007F1C  41                 	db	65	;'A'
  1546  007F1D  54                 	db	84	;'T'
  1547  007F1E  2B                 	db	43
  1548  007F1F  43                 	db	67	;'C'
  1549  007F20  47                 	db	71	;'G'
  1550  007F21  52                 	db	82	;'R'
  1551  007F22  45                 	db	69	;'E'
  1552  007F23  47                 	db	71	;'G'
  1553  007F24  3F                 	db	63	;'?'
  1554  007F25  0D                 	db	13
  1555  007F26  00                 	db	0
  1556  007F27  41                 	db	65	;'A'
  1557  007F28  54                 	db	84	;'T'
  1558  007F29  2B                 	db	43
  1559  007F2A  43                 	db	67	;'C'
  1560  007F2B  47                 	db	71	;'G'
  1561  007F2C  53                 	db	83	;'S'
  1562  007F2D  4D                 	db	77	;'M'
  1563  007F2E  53                 	db	83	;'S'
  1564  007F2F  3F                 	db	63	;'?'
  1565  007F30  0D                 	db	13
  1566  007F31  00                 	db	0
  1567  007F32  41                 	db	65	;'A'
  1568  007F33  54                 	db	84	;'T'
  1569  007F34  2B                 	db	43
  1570  007F35  43                 	db	67	;'C'
  1571  007F36  47                 	db	71	;'G'
  1572  007F37  41                 	db	65	;'A'
  1573  007F38  43                 	db	67	;'C'
  1574  007F39  54                 	db	84	;'T'
  1575  007F3A  3F                 	db	63	;'?'
  1576  007F3B  0D                 	db	13
  1577  007F3C  00                 	db	0
  1578  007F3D  41                 	db	65	;'A'
  1579  007F3E  54                 	db	84	;'T'
  1580  007F3F  2B                 	db	43
  1581  007F40  43                 	db	67	;'C'
  1582  007F41  47                 	db	71	;'G'
  1583  007F42  41                 	db	65	;'A'
  1584  007F43  54                 	db	84	;'T'
  1585  007F44  54                 	db	84	;'T'
  1586  007F45  3F                 	db	63	;'?'
  1587  007F46  0D                 	db	13
  1588  007F47  00                 	db	0
  1589  007F48  41                 	db	65	;'A'
  1590  007F49  54                 	db	84	;'T'
  1591  007F4A  2B                 	db	43
  1592  007F4B  43                 	db	67	;'C'
  1593  007F4C  47                 	db	71	;'G'
  1594  007F4D  45                 	db	69	;'E'
  1595  007F4E  52                 	db	82	;'R'
  1596  007F4F  45                 	db	69	;'E'
  1597  007F50  50                 	db	80	;'P'
  1598  007F51  3D                 	db	61	;'='
  1599  007F52  00                 	db	0
  1600  007F53  41                 	db	65	;'A'
  1601  007F54  54                 	db	84	;'T'
  1602  007F55  2B                 	db	43
  1603  007F56  43                 	db	67	;'C'
  1604  007F57  47                 	db	71	;'G'
  1605  007F58  52                 	db	82	;'R'
  1606  007F59  45                 	db	69	;'E'
  1607  007F5A  47                 	db	71	;'G'
  1608  007F5B  3D                 	db	61	;'='
  1609  007F5C  00                 	db	0
  1610  007F5D  41                 	db	65	;'A'
  1611  007F5E  54                 	db	84	;'T'
  1612  007F5F  2B                 	db	43
  1613  007F60  43                 	db	67	;'C'
  1614  007F61  47                 	db	71	;'G'
  1615  007F62  53                 	db	83	;'S'
  1616  007F63  4D                 	db	77	;'M'
  1617  007F64  53                 	db	83	;'S'
  1618  007F65  3D                 	db	61	;'='
  1619  007F66  00                 	db	0
  1620  007F67  2C                 	db	44
  1621  007F68  22                 	db	34
  1622  007F69  52                 	db	82	;'R'
  1623  007F6A  41                 	db	65	;'A'
  1624  007F6B  54                 	db	84	;'T'
  1625  007F6C  45                 	db	69	;'E'
  1626  007F6D  22                 	db	34
  1627  007F6E  2C                 	db	44
  1628  007F6F  00                 	db	0
  1629  007F70  2C                 	db	44
  1630  007F71  22                 	db	34
  1631  007F72  55                 	db	85	;'U'
  1632  007F73  53                 	db	83	;'S'
  1633  007F74  45                 	db	69	;'E'
  1634  007F75  52                 	db	82	;'R'
  1635  007F76  22                 	db	34
  1636  007F77  2C                 	db	44
  1637  007F78  00                 	db	0
  1638  007F79                     STR_4:
  1639  007F79  49                 	db	73	;'I'
  1640  007F7A  6E                 	db	110	;'n'
  1641  007F7B  74                 	db	116	;'t'
  1642  007F7C  65                 	db	101	;'e'
  1643  007F7D  72                 	db	114	;'r'
  1644  007F7E  6E                 	db	110	;'n'
  1645  007F7F  65                 	db	101	;'e'
  1646  007F80  74                 	db	116	;'t'
  1647  007F81  00                 	db	0
  1648  007F82  41                 	db	65	;'A'
  1649  007F83  54                 	db	84	;'T'
  1650  007F84  2B                 	db	43
  1651  007F85  47                 	db	71	;'G'
  1652  007F86  4D                 	db	77	;'M'
  1653  007F87  49                 	db	73	;'I'
  1654  007F88  0D                 	db	13
  1655  007F89  00                 	db	0
  1656  007F8A  41                 	db	65	;'A'
  1657  007F8B  54                 	db	84	;'T'
  1658  007F8C  2B                 	db	43
  1659  007F8D  47                 	db	71	;'G'
  1660  007F8E  4F                 	db	79	;'O'
  1661  007F8F  49                 	db	73	;'I'
  1662  007F90  0D                 	db	13
  1663  007F91  00                 	db	0
  1664  007F92  41                 	db	65	;'A'
  1665  007F93  54                 	db	84	;'T'
  1666  007F94  2B                 	db	43
  1667  007F95  47                 	db	71	;'G'
  1668  007F96  4D                 	db	77	;'M'
  1669  007F97  4D                 	db	77	;'M'
  1670  007F98  0D                 	db	13
  1671  007F99  00                 	db	0
  1672  007F9A  41                 	db	65	;'A'
  1673  007F9B  54                 	db	84	;'T'
  1674  007F9C  2B                 	db	43
  1675  007F9D  47                 	db	71	;'G'
  1676  007F9E  53                 	db	83	;'S'
  1677  007F9F  4E                 	db	78	;'N'
  1678  007FA0  0D                 	db	13
  1679  007FA1  00                 	db	0
  1680  007FA2  41                 	db	65	;'A'
  1681  007FA3  54                 	db	84	;'T'
  1682  007FA4  2B                 	db	43
  1683  007FA5  47                 	db	71	;'G'
  1684  007FA6  4D                 	db	77	;'M'
  1685  007FA7  52                 	db	82	;'R'
  1686  007FA8  0D                 	db	13
  1687  007FA9  00                 	db	0
  1688  007FAA  2C                 	db	44
  1689  007FAB  22                 	db	34
  1690  007FAC  50                 	db	80	;'P'
  1691  007FAD  57                 	db	87	;'W'
  1692  007FAE  44                 	db	68	;'D'
  1693  007FAF  22                 	db	34
  1694  007FB0  2C                 	db	44
  1695  007FB1  00                 	db	0
  1696  007FB2                     STR_44:
  1697  007FB2  2C                 	db	44
  1698  007FB3  22                 	db	34
  1699  007FB4  41                 	db	65	;'A'
  1700  007FB5  50                 	db	80	;'P'
  1701  007FB6  4E                 	db	78	;'N'
  1702  007FB7  22                 	db	34
  1703  007FB8  2C                 	db	44
  1704  007FB9  00                 	db	0
  1705  007FBA                     STR_5:
  1706  007FBA  44                 	db	68	;'D'
  1707  007FBB  6F                 	db	111	;'o'
  1708  007FBC  6E                 	db	110	;'n'
  1709  007FBD  65                 	db	101	;'e'
  1710  007FBE  2E                 	db	46
  1711  007FBF  0D                 	db	13
  1712  007FC0  0D                 	db	13
  1713  007FC1  00                 	db	0
  1714  007FC2  2C                 	db	44
  1715  007FC3  22                 	db	34
  1716  007FC4  49                 	db	73	;'I'
  1717  007FC5  50                 	db	80	;'P'
  1718  007FC6  22                 	db	34
  1719  007FC7  2C                 	db	44
  1720  007FC8  00                 	db	0
  1721  007FC9                     STR_25:
  1722  007FC9  44                 	db	68	;'D'
  1723  007FCA  61                 	db	97	;'a'
  1724  007FCB  74                 	db	116	;'t'
  1725  007FCC  61                 	db	97	;'a'
  1726  007FCD  3A                 	db	58	;':'
  1727  007FCE  20                 	db	32
  1728  007FCF  00                 	db	0
  1729  007FD0                     STR_29:
  1730  007FD0  41                 	db	65	;'A'
  1731  007FD1  54                 	db	84	;'T'
  1732  007FD2  45                 	db	69	;'E'
  1733  007FD3  30                 	db	48	;'0'
  1734  007FD4  0D                 	db	13
  1735  007FD5  00                 	db	0
  1736  007FD6                     STR_31:
  1737  007FD6  41                 	db	65	;'A'
  1738  007FD7  54                 	db	84	;'T'
  1739  007FD8  26                 	db	38
  1740  007FD9  57                 	db	87	;'W'
  1741  007FDA  0D                 	db	13
  1742  007FDB  00                 	db	0
  1743  007FDC                     STR_15:
  1744  007FDC  33                 	db	51	;'3'
  1745  007FDD  35                 	db	53	;'5'
  1746  007FDE  30                 	db	48	;'0'
  1747  007FDF  30                 	db	48	;'0'
  1748  007FE0  00                 	db	0
  1749  007FE1                     STR_3:
  1750  007FE1  47                 	db	71	;'G'
  1751  007FE2  50                 	db	80	;'P'
  1752  007FE3  52                 	db	82	;'R'
  1753  007FE4  53                 	db	83	;'S'
  1754  007FE5  00                 	db	0
  1755  007FE6                     STR_28:
  1756  007FE6  41                 	db	65	;'A'
  1757  007FE7  54                 	db	84	;'T'
  1758  007FE8  0D                 	db	13
  1759  007FE9  00                 	db	0
  1760  007FEA                     STR_14:
  1761  007FEA  52                 	db	82	;'R'
  1762  007FEB  50                 	db	80	;'P'
  1763  007FEC  4D                 	db	77	;'M'
  1764  007FED  00                 	db	0
  1765  007FEE  43                 	db	67	;'C'
  1766  007FEF  43                 	db	67	;'C'
  1767  007FF0  00                 	db	0
  1768  007FF1  43                 	db	67	;'C'
  1769  007FF2  47                 	db	71	;'G'
  1770  007FF3  00                 	db	0
  1771  007FF4                     STR_13:
  1772  007FF4  33                 	db	51	;'3'
  1773  007FF5  30                 	db	48	;'0'
  1774  007FF6  00                 	db	0
  1775  007FF7                     STR_19:
  1776  007FF7  35                 	db	53	;'5'
  1777  007FF8  30                 	db	48	;'0'
  1778  007FF9  00                 	db	0
  1779  007FFA                     STR_17:
  1780  007FFA  33                 	db	51	;'3'
  1781  007FFB  35                 	db	53	;'5'
  1782  007FFC  00                 	db	0
  1783  007FFD                     STR_71:
  1784  007FFD  42                 	db	66	;'B'
  1785  007FFE  00                 	db	0
  1786  007FFF  00                 	db	0	; dummy byte at the end
  1787  0000                     
  1788                           ; #config settings
  1789                           
  1790                           	psect	cinit
  1791  0016B4                     __pcinit:
  1792                           	callstack 0
  1793  0016B4                     start_initialization:
  1794                           	callstack 0
  1795  0016B4                     __initialization:
  1796                           	callstack 0
  1797                           
  1798                           ; Initialize objects allocated to BANK0 (4 bytes)
  1799                           ; load TBLPTR registers with __pidataBANK0
  1800  0016B4  0E7E               	movlw	low __pidataBANK0
  1801  0016B6  6EF6               	movwf	tblptrl,c
  1802  0016B8  0E21               	movlw	high __pidataBANK0
  1803  0016BA  6EF7               	movwf	tblptrh,c
  1804  0016BC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1805  0016BE  6EF8               	movwf	tblptru,c
  1806  0016C0  EE00  F0E0         	lfsr	0,__pdataBANK0
  1807  0016C4  EE10 F004          	lfsr	1,4
  1808  0016C8                     copy_data0:
  1809  0016C8  0009               	tblrd		*+
  1810  0016CA  CFF5 FFEE          	movff	tablat,postinc0
  1811  0016CE  50E5               	movf	postdec1,w,c
  1812  0016D0  50E1               	movf	fsr1l,w,c
  1813  0016D2  E1FA               	bnz	copy_data0
  1814                           
  1815                           ; Initialize objects allocated to COMRAM (4 bytes)
  1816                           ; load TBLPTR registers with __pidataCOMRAM
  1817  0016D4  0E7A               	movlw	low __pidataCOMRAM
  1818  0016D6  6EF6               	movwf	tblptrl,c
  1819  0016D8  0E21               	movlw	high __pidataCOMRAM
  1820  0016DA  6EF7               	movwf	tblptrh,c
  1821  0016DC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1822  0016DE  6EF8               	movwf	tblptru,c
  1823  0016E0  EE00  F064         	lfsr	0,__pdataCOMRAM
  1824  0016E4  EE10 F004          	lfsr	1,4
  1825  0016E8                     copy_data1:
  1826  0016E8  0009               	tblrd		*+
  1827  0016EA  CFF5 FFEE          	movff	tablat,postinc0
  1828  0016EE  50E5               	movf	postdec1,w,c
  1829  0016F0  50E1               	movf	fsr1l,w,c
  1830  0016F2  E1FA               	bnz	copy_data1
  1831                           
  1832                           ; Clear objects allocated to BANK3 (200 bytes)
  1833  0016F4  EE03  F000         	lfsr	0,__pbssBANK3
  1834  0016F8  0EC8               	movlw	200
  1835  0016FA                     clear_0:
  1836  0016FA  6AEE               	clrf	postinc0,c
  1837  0016FC  06E8               	decf	wreg,f,c
  1838  0016FE  E1FD               	bnz	clear_0
  1839                           
  1840                           ; Clear objects allocated to BANK2 (100 bytes)
  1841  001700  EE02  F000         	lfsr	0,__pbssBANK2
  1842  001704  0E64               	movlw	100
  1843  001706                     clear_1:
  1844  001706  6AEE               	clrf	postinc0,c
  1845  001708  06E8               	decf	wreg,f,c
  1846  00170A  E1FD               	bnz	clear_1
  1847                           
  1848                           ; Clear objects allocated to BANK1 (250 bytes)
  1849  00170C  EE01  F000         	lfsr	0,__pbssBANK1
  1850  001710  0EFA               	movlw	250
  1851  001712                     clear_2:
  1852  001712  6AEE               	clrf	postinc0,c
  1853  001714  06E8               	decf	wreg,f,c
  1854  001716  E1FD               	bnz	clear_2
  1855                           
  1856                           ; Clear objects allocated to BANK0 (55 bytes)
  1857  001718  EE00  F080         	lfsr	0,__pbssBANK0
  1858  00171C  0E37               	movlw	55
  1859  00171E                     clear_3:
  1860  00171E  6AEE               	clrf	postinc0,c
  1861  001720  06E8               	decf	wreg,f,c
  1862  001722  E1FD               	bnz	clear_3
  1863                           
  1864                           ; Clear objects allocated to COMRAM (14 bytes)
  1865  001724  EE00  F056         	lfsr	0,__pbssCOMRAM
  1866  001728  0E0E               	movlw	14
  1867  00172A                     clear_4:
  1868  00172A  6AEE               	clrf	postinc0,c
  1869  00172C  06E8               	decf	wreg,f,c
  1870  00172E  E1FD               	bnz	clear_4
  1871  001730                     end_of_initialization:
  1872                           	callstack 0
  1873  001730                     __end_of__initialization:
  1874                           	callstack 0
  1875  001730  9068               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1876  001732  9268               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1877  001734  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1878  001736  6EF8               	movwf	tblptru,c
  1879  001738  0100               	movlb	0
  1880  00173A  EFB6  F010         	goto	_main	;jump to C main() function
  1881                           
  1882                           	psect	bssCOMRAM
  1883  000056                     __pbssCOMRAM:
  1884                           	callstack 0
  1885  000056                     _IncVar:
  1886                           	callstack 0
  1887  000056                     	ds	4
  1888  00005A                     _Rxfifocurrent:
  1889                           	callstack 0
  1890  00005A                     	ds	2
  1891  00005C                     _Rxfifoptr:
  1892                           	callstack 0
  1893  00005C                     	ds	2
  1894  00005E                     _val:
  1895                           	callstack 0
  1896  00005E                     	ds	2
  1897  000060                     _Rxfifocurrent@SoftwareUART$F1247:
  1898                           	callstack 0
  1899  000060                     	ds	1
  1900  000061                     _Rxfifoptr@SoftwareUART$F1246:
  1901                           	callstack 0
  1902  000061                     	ds	1
  1903  000062                     _cpos:
  1904                           	callstack 0
  1905  000062                     	ds	2
  1906                           
  1907                           	psect	dataCOMRAM
  1908  000064                     __pdataCOMRAM:
  1909                           	callstack 0
  1910  000064                     _Tout:
  1911                           	callstack 0
  1912  000064                     	ds	4
  1913                           
  1914                           	psect	bssBANK0
  1915  000080                     __pbssBANK0:
  1916                           	callstack 0
  1917  000080                     	ds	20
  1918  000094                     _DecVar:
  1919                           	callstack 0
  1920  000094                     	ds	4
  1921  000098                     _Rxstatus:
  1922                           	callstack 0
  1923  000098                     	ds	1
  1924  000099                     _rxmessage:
  1925                           	callstack 0
  1926  000099                     	ds	30
  1927                           
  1928                           	psect	dataBANK0
  1929  0000E0                     __pdataBANK0:
  1930                           	callstack 0
  1931  0000E0                     	ds	4
  1932                           
  1933                           	psect	bssBANK1
  1934  000100                     __pbssBANK1:
  1935                           	callstack 0
  1936  000100                     	ds	30
  1937  00011E                     	ds	30
  1938  00013C                     	ds	30
  1939  00015A                     	ds	30
  1940  000178                     	ds	30
  1941  000196                     _txmessage:
  1942                           	callstack 0
  1943  000196                     	ds	100
  1944                           
  1945                           	psect	bssBANK2
  1946  000200                     __pbssBANK2:
  1947                           	callstack 0
  1948  000200                     _RxFIFO@SoftwareUART$F1245:
  1949                           	callstack 0
  1950  000200                     	ds	100
  1951                           
  1952                           	psect	bssBANK3
  1953  000300                     __pbssBANK3:
  1954                           	callstack 0
  1955  000300                     _RxFIFO:
  1956                           	callstack 0
  1957  000300                     	ds	200
  1958                           
  1959                           	psect	cstackBANK2
  1960  000264                     __pcstackBANK2:
  1961                           	callstack 0
  1962  000264                     SystemTask@msg:
  1963                           	callstack 0
  1964                           
  1965                           ; 20 bytes @ 0x0
  1966  000264                     	ds	20
  1967  000278                     SystemTask@cmd:
  1968                           	callstack 0
  1969                           
  1970                           ; 1 bytes @ 0x14
  1971  000278                     	ds	1
  1972  000279                     SystemTask@scode:
  1973                           	callstack 0
  1974                           
  1975                           ; 2 bytes @ 0x15
  1976  000279                     	ds	2
  1977  00027B                     SystemTask@errcode:
  1978                           	callstack 0
  1979                           
  1980                           ; 2 bytes @ 0x17
  1981  00027B                     	ds	2
  1982  00027D                     SystemTask@cnt:
  1983                           	callstack 0
  1984                           
  1985                           ; 4 bytes @ 0x19
  1986  00027D                     	ds	4
  1987                           
  1988                           	psect	cstackBANK0
  1989  0000B7                     __pcstackBANK0:
  1990                           	callstack 0
  1991  0000B7                     SystemInit@ip:
  1992                           	callstack 0
  1993  0000B7                     SIM800xHTTPInputData@str:
  1994                           	callstack 0
  1995  0000B7                     SIM800xHTTPAction@str:
  1996                           	callstack 0
  1997  0000B7                     SIM800xHTTPRead@str:
  1998                           	callstack 0
  1999                           
  2000                           ; 30 bytes @ 0x0
  2001  0000B7                     	ds	20
  2002  0000CB                     SystemInit@err:
  2003                           	callstack 0
  2004                           
  2005                           ; 2 bytes @ 0x14
  2006  0000CB                     	ds	10
  2007  0000D5                     SIM800xHTTPInputData@len:
  2008                           	callstack 0
  2009  0000D5                     SIM800xHTTPAction@t:
  2010                           	callstack 0
  2011  0000D5                     SIM800xHTTPRead@sz:
  2012                           	callstack 0
  2013                           
  2014                           ; 4 bytes @ 0x1E
  2015  0000D5                     	ds	4
  2016  0000D9                     SIM800xHTTPAction@method:
  2017                           	callstack 0
  2018  0000D9                     SIM800xHTTPInputData@time:
  2019                           	callstack 0
  2020  0000D9                     SIM800xHTTPRead@time:
  2021                           	callstack 0
  2022                           
  2023                           ; 4 bytes @ 0x22
  2024  0000D9                     	ds	1
  2025  0000DA                     SIM800xHTTPAction@time:
  2026                           	callstack 0
  2027                           
  2028                           ; 4 bytes @ 0x23
  2029  0000DA                     	ds	3
  2030  0000DD                     SIM800xHTTPInputData@res:
  2031                           	callstack 0
  2032  0000DD                     SIM800xHTTPRead@res:
  2033                           	callstack 0
  2034                           
  2035                           ; 2 bytes @ 0x26
  2036  0000DD                     	ds	1
  2037  0000DE                     SIM800xHTTPAction@res:
  2038                           	callstack 0
  2039                           
  2040                           ; 2 bytes @ 0x27
  2041  0000DE                     	ds	2
  2042                           
  2043                           	psect	cstackCOMRAM
  2044  000001                     __pcstackCOMRAM:
  2045                           	callstack 0
  2046  000001                     ?i2___awmod:
  2047                           	callstack 0
  2048  000001                     ?i2___lwmod:
  2049                           	callstack 0
  2050  000001                     USARTReceiveByte@data:
  2051                           	callstack 0
  2052  000001                     i2___awmod@dividend:
  2053                           	callstack 0
  2054  000001                     i2___lwmod@dividend:
  2055                           	callstack 0
  2056                           
  2057                           ; 2 bytes @ 0x0
  2058  000001                     	ds	2
  2059  000003                     i2___awmod@divisor:
  2060                           	callstack 0
  2061  000003                     i2___lwmod@divisor:
  2062                           	callstack 0
  2063                           
  2064                           ; 2 bytes @ 0x2
  2065  000003                     	ds	2
  2066  000005                     i2___awmod@counter:
  2067                           	callstack 0
  2068  000005                     i2___lwmod@counter:
  2069                           	callstack 0
  2070                           
  2071                           ; 1 bytes @ 0x4
  2072  000005                     	ds	1
  2073  000006                     SIM800xSDMCallBack@tmp:
  2074                           	callstack 0
  2075  000006                     i2___awmod@sign:
  2076                           	callstack 0
  2077                           
  2078                           ; 1 bytes @ 0x5
  2079  000006                     	ds	1
  2080  000007                     ??_SoftUARTCallBack:
  2081  000007                     SIM800xSDMCallBack@next:
  2082                           	callstack 0
  2083                           
  2084                           ; 2 bytes @ 0x6
  2085  000007                     	ds	2
  2086  000009                     SoftUARTCallBack@rxtmp:
  2087                           	callstack 0
  2088                           
  2089                           ; 1 bytes @ 0x8
  2090  000009                     	ds	1
  2091  00000A                     SoftUARTCallBack@next:
  2092                           	callstack 0
  2093                           
  2094                           ; 1 bytes @ 0x9
  2095  00000A                     	ds	1
  2096  00000B                     SoftUARTCallBack@k:
  2097                           	callstack 0
  2098                           
  2099                           ; 1 bytes @ 0xA
  2100  00000B                     	ds	1
  2101  00000C                     ??_Isr:
  2102                           
  2103                           ; 1 bytes @ 0xB
  2104  00000C                     	ds	2
  2105  00000E                     ??_SIM800xSDMPeek:
  2106  00000E                     ?_strlen:
  2107                           	callstack 0
  2108  00000E                     ?___awmod:
  2109                           	callstack 0
  2110  00000E                     ?___lwmod:
  2111                           	callstack 0
  2112  00000E                     ?_Tick_ms:
  2113                           	callstack 0
  2114  00000E                     ?___lmul:
  2115                           	callstack 0
  2116  00000E                     ?___lldiv:
  2117                           	callstack 0
  2118  00000E                     SIM800xSDMSendByte@data:
  2119                           	callstack 0
  2120  00000E                     USARTAsyncInit@bgr:
  2121                           	callstack 0
  2122  00000E                     SoftUARTTransmitByte@data:
  2123                           	callstack 0
  2124  00000E                     AddEntryToJsonObject@JsonObject:
  2125                           	callstack 0
  2126  00000E                     SIM800xSDMSendBytes@data:
  2127                           	callstack 0
  2128  00000E                     ___awmod@dividend:
  2129                           	callstack 0
  2130  00000E                     ___lwmod@dividend:
  2131                           	callstack 0
  2132  00000E                     strlen@s:
  2133                           	callstack 0
  2134  00000E                     Wait_ms@value:
  2135                           	callstack 0
  2136  00000E                     ___lmul@multiplier:
  2137                           	callstack 0
  2138  00000E                     ___lldiv@dividend:
  2139                           	callstack 0
  2140                           
  2141                           ; 4 bytes @ 0xD
  2142  00000E                     	ds	1
  2143  00000F                     SoftUARTTransmitByte@tmp:
  2144                           	callstack 0
  2145  00000F                     SIM800xSDMPrint@str:
  2146                           	callstack 0
  2147                           
  2148                           ; 2 bytes @ 0xE
  2149  00000F                     	ds	1
  2150  000010                     SIM800xSDMPeek@idx:
  2151                           	callstack 0
  2152  000010                     SoftUARTTransmitByte@k:
  2153                           	callstack 0
  2154  000010                     AddEntryToJsonObject@key:
  2155                           	callstack 0
  2156  000010                     SIM800xSDMSendBytes@cnt:
  2157                           	callstack 0
  2158  000010                     ___awmod@divisor:
  2159                           	callstack 0
  2160  000010                     ___lwmod@divisor:
  2161                           	callstack 0
  2162  000010                     strlen@cp:
  2163                           	callstack 0
  2164                           
  2165                           ; 2 bytes @ 0xF
  2166  000010                     	ds	1
  2167  000011                     SoftUARTPrint@str:
  2168                           	callstack 0
  2169                           
  2170                           ; 2 bytes @ 0x10
  2171  000011                     	ds	1
  2172  000012                     ??_Wait_ms:
  2173  000012                     ___awmod@counter:
  2174                           	callstack 0
  2175  000012                     ___lwmod@counter:
  2176                           	callstack 0
  2177  000012                     AddEntryToJsonObject@value:
  2178                           	callstack 0
  2179  000012                     ___lmul@multiplicand:
  2180                           	callstack 0
  2181  000012                     ___lldiv@divisor:
  2182                           	callstack 0
  2183                           
  2184                           ; 4 bytes @ 0x11
  2185  000012                     	ds	1
  2186  000013                     ?_SIM800xSDMRxAvailable:
  2187                           	callstack 0
  2188  000013                     SIM800xSDMReadByte@data:
  2189                           	callstack 0
  2190  000013                     ___awmod@sign:
  2191                           	callstack 0
  2192                           
  2193                           ; 1 bytes @ 0x12
  2194  000013                     	ds	1
  2195  000014                     ??_SoftUARTRxAvailable:
  2196  000014                     ?_SoftUARTReceiveByte:
  2197                           	callstack 0
  2198  000014                     AddEntryToJsonObject@Cpos:
  2199                           	callstack 0
  2200                           
  2201                           ; 2 bytes @ 0x13
  2202  000014                     	ds	1
  2203  000015                     ??_SIM800xSDMRxAvailable:
  2204                           
  2205                           ; 1 bytes @ 0x14
  2206  000015                     	ds	1
  2207  000016                     ??_AddEntryToJsonObject:
  2208  000016                     SoftUARTReceiveByte@data:
  2209                           	callstack 0
  2210  000016                     Wait_ms@x:
  2211                           	callstack 0
  2212  000016                     ___lmul@product:
  2213                           	callstack 0
  2214  000016                     ___lldiv@quotient:
  2215                           	callstack 0
  2216                           
  2217                           ; 4 bytes @ 0x15
  2218  000016                     	ds	1
  2219  000017                     ??_ProcessResp1:
  2220  000017                     ?_SIM800xSDMReadF1Pkt:
  2221                           	callstack 0
  2222  000017                     SIM800xSDMReadF1Pkt@data:
  2223                           	callstack 0
  2224                           
  2225                           ; 2 bytes @ 0x16
  2226  000017                     	ds	2
  2227  000019                     ??_SIM800xSDMReadF1Pkt:
  2228                           
  2229                           ; 1 bytes @ 0x18
  2230  000019                     	ds	1
  2231  00001A                     ?_StrToInt:
  2232                           	callstack 0
  2233  00001A                     AddEntryToJsonObject@offset:
  2234                           	callstack 0
  2235  00001A                     ___lldiv@counter:
  2236                           	callstack 0
  2237  00001A                     StrToInt@str:
  2238                           	callstack 0
  2239                           
  2240                           ; 2 bytes @ 0x19
  2241  00001A                     	ds	1
  2242  00001B                     ?___llmod:
  2243                           	callstack 0
  2244  00001B                     ProcessResp1@time:
  2245                           	callstack 0
  2246  00001B                     SIM800xSDMInit@br:
  2247                           	callstack 0
  2248  00001B                     ___llmod@dividend:
  2249                           	callstack 0
  2250                           
  2251                           ; 4 bytes @ 0x1A
  2252  00001B                     	ds	1
  2253  00001C                     StrToInt@start:
  2254                           	callstack 0
  2255                           
  2256                           ; 1 bytes @ 0x1B
  2257  00001C                     	ds	1
  2258  00001D                     StrToInt@stop:
  2259                           	callstack 0
  2260  00001D                     SIM800xSDMReadF1Pkt@val:
  2261                           	callstack 0
  2262                           
  2263                           ; 2 bytes @ 0x1C
  2264  00001D                     	ds	1
  2265  00001E                     ??_StrToInt:
  2266                           
  2267                           ; 1 bytes @ 0x1D
  2268  00001E                     	ds	1
  2269  00001F                     ??_SIM800xSDMInit:
  2270  00001F                     ProcessResp1@c:
  2271                           	callstack 0
  2272  00001F                     SIM800xSDMReadF1Pkt@i:
  2273                           	callstack 0
  2274  00001F                     ___llmod@divisor:
  2275                           	callstack 0
  2276                           
  2277                           ; 4 bytes @ 0x1E
  2278  00001F                     	ds	1
  2279  000020                     SIM800xIPOpen@cid:
  2280                           	callstack 0
  2281  000020                     SIM800xIPSetConnectionType@contype:
  2282                           	callstack 0
  2283  000020                     SIM800xIPSetAPN@apn:
  2284                           	callstack 0
  2285  000020                     SIM800xSDMReadF1Pkt@time:
  2286                           	callstack 0
  2287                           
  2288                           ; 4 bytes @ 0x1F
  2289  000020                     	ds	2
  2290  000022                     SIM800xIPSetConnectionType@cid:
  2291                           	callstack 0
  2292  000022                     SIM800xIPSetAPN@cid:
  2293                           	callstack 0
  2294                           
  2295                           ; 1 bytes @ 0x21
  2296  000022                     	ds	1
  2297  000023                     ___llmod@counter:
  2298                           	callstack 0
  2299  000023                     StrToInt@val:
  2300                           	callstack 0
  2301  000023                     SIM800xSDMInit@val:
  2302                           	callstack 0
  2303                           
  2304                           ; 4 bytes @ 0x22
  2305  000023                     	ds	1
  2306  000024                     ?_sprintf:
  2307                           	callstack 0
  2308  000024                     SIM800xSDMReadF1Pkt@tmp:
  2309                           	callstack 0
  2310  000024                     sprintf@sp:
  2311                           	callstack 0
  2312                           
  2313                           ; 2 bytes @ 0x23
  2314  000024                     	ds	1
  2315  000025                     ProcessResp2@str:
  2316                           	callstack 0
  2317                           
  2318                           ; 2 bytes @ 0x24
  2319  000025                     	ds	1
  2320  000026                     sprintf@f:
  2321                           	callstack 0
  2322                           
  2323                           ; 2 bytes @ 0x25
  2324  000026                     	ds	1
  2325  000027                     StrToInt@j:
  2326                           	callstack 0
  2327  000027                     ProcessResp2@c:
  2328                           	callstack 0
  2329                           
  2330                           ; 1 bytes @ 0x26
  2331  000027                     	ds	1
  2332  000028                     StrToInt@ctrl:
  2333                           	callstack 0
  2334  000028                     ProcessResp2@res:
  2335                           	callstack 0
  2336                           
  2337                           ; 2 bytes @ 0x27
  2338  000028                     	ds	1
  2339  000029                     StrToInt@po:
  2340                           	callstack 0
  2341                           
  2342                           ; 4 bytes @ 0x28
  2343  000029                     	ds	1
  2344  00002A                     SIM800xIPGetState@ip:
  2345                           	callstack 0
  2346                           
  2347                           ; 2 bytes @ 0x29
  2348  00002A                     	ds	2
  2349  00002C                     ??_SIM800xIPGetState:
  2350                           
  2351                           ; 1 bytes @ 0x2B
  2352  00002C                     	ds	1
  2353  00002D                     StrToInt@i:
  2354                           	callstack 0
  2355                           
  2356                           ; 1 bytes @ 0x2C
  2357  00002D                     	ds	1
  2358  00002E                     ProcessResp4@ec:
  2359                           	callstack 0
  2360                           
  2361                           ; 2 bytes @ 0x2D
  2362  00002E                     	ds	2
  2363  000030                     ??_sprintf:
  2364  000030                     ??_ProcessResp4:
  2365  000030                     SIM800xIPGetState@str:
  2366                           	callstack 0
  2367                           
  2368                           ; 30 bytes @ 0x2F
  2369  000030                     	ds	2
  2370  000032                     sprintf@prec:
  2371                           	callstack 0
  2372                           
  2373                           ; 2 bytes @ 0x31
  2374  000032                     	ds	2
  2375  000034                     sprintf@val:
  2376                           	callstack 0
  2377  000034                     ProcessResp4@str:
  2378                           	callstack 0
  2379                           
  2380                           ; 20 bytes @ 0x33
  2381  000034                     	ds	4
  2382  000038                     sprintf@flag:
  2383                           	callstack 0
  2384                           
  2385                           ; 1 bytes @ 0x37
  2386  000038                     	ds	1
  2387  000039                     sprintf@ap:
  2388                           	callstack 0
  2389                           
  2390                           ; 2 bytes @ 0x38
  2391  000039                     	ds	2
  2392  00003B                     sprintf@c:
  2393                           	callstack 0
  2394                           
  2395                           ; 1 bytes @ 0x3A
  2396  00003B                     	ds	1
  2397  00003C                     SIM800xHTTPInputData@data:
  2398                           	callstack 0
  2399  00003C                     SIM800xHTTPAction@statuscode:
  2400                           	callstack 0
  2401  00003C                     SIM800xHTTPRead@data:
  2402                           	callstack 0
  2403  00003C                     SIM800xInit@br:
  2404                           	callstack 0
  2405                           
  2406                           ; 4 bytes @ 0x3B
  2407  00003C                     	ds	2
  2408  00003E                     SIM800xHTTPAction@cnt:
  2409                           	callstack 0
  2410  00003E                     SIM800xHTTPInputData@cnt:
  2411                           	callstack 0
  2412  00003E                     SIM800xHTTPRead@strindex:
  2413                           	callstack 0
  2414                           
  2415                           ; 4 bytes @ 0x3D
  2416  00003E                     	ds	2
  2417  000040                     SIM800xHTTPAction@tout:
  2418                           	callstack 0
  2419  000040                     SIM800xInit@str:
  2420                           	callstack 0
  2421                           
  2422                           ; 15 bytes @ 0x3F
  2423  000040                     	ds	2
  2424  000042                     SIM800xHTTPInputData@timeout:
  2425                           	callstack 0
  2426  000042                     SIM800xHTTPRead@size:
  2427                           	callstack 0
  2428                           
  2429                           ; 4 bytes @ 0x41
  2430  000042                     	ds	2
  2431  000044                     SIM800xHTTPAction@errcode:
  2432                           	callstack 0
  2433                           
  2434                           ; 2 bytes @ 0x43
  2435  000044                     	ds	2
  2436  000046                     ??_SIM800xHTTPAction:
  2437  000046                     SIM800xHTTPInputData@errcode:
  2438                           	callstack 0
  2439  000046                     SIM800xHTTPRead@cnt:
  2440                           	callstack 0
  2441                           
  2442                           ; 2 bytes @ 0x45
  2443  000046                     	ds	2
  2444  000048                     ??_SIM800xHTTPInputData:
  2445  000048                     SIM800xHTTPRead@errcode:
  2446                           	callstack 0
  2447  000048                     ProcessResp4@time:
  2448                           	callstack 0
  2449                           
  2450                           ; 4 bytes @ 0x47
  2451  000048                     	ds	2
  2452  00004A                     ??_SIM800xHTTPRead:
  2453                           
  2454                           ; 1 bytes @ 0x49
  2455  00004A                     	ds	2
  2456  00004C                     ProcessResp4@res:
  2457                           	callstack 0
  2458                           
  2459                           ; 2 bytes @ 0x4B
  2460  00004C                     	ds	2
  2461  00004E                     ??_SystemTask:
  2462  00004E                     SIM800xHTTPInit@errcode:
  2463                           	callstack 0
  2464  00004E                     SIM800xHTTPSetURL@url:
  2465                           	callstack 0
  2466  00004E                     SIM800xHTTPSetContent@content:
  2467                           	callstack 0
  2468  00004E                     SIM800xIPGetState@time1:
  2469                           	callstack 0
  2470                           
  2471                           ; 4 bytes @ 0x4D
  2472  00004E                     	ds	1
  2473  00004F                     SIM800xInit@tmp:
  2474                           	callstack 0
  2475                           
  2476                           ; 2 bytes @ 0x4E
  2477  00004F                     	ds	1
  2478  000050                     SIM800xHTTPSetURL@errcode:
  2479                           	callstack 0
  2480  000050                     SIM800xHTTPSetContent@errcode:
  2481                           	callstack 0
  2482                           
  2483                           ; 2 bytes @ 0x4F
  2484  000050                     	ds	1
  2485  000051                     SIM800xInit@c:
  2486                           	callstack 0
  2487                           
  2488                           ; 1 bytes @ 0x50
  2489  000051                     	ds	1
  2490  000052                     SIM800xIPGetState@res:
  2491                           	callstack 0
  2492                           
  2493                           ; 1 bytes @ 0x51
  2494  000052                     	ds	1
  2495  000053                     SIM800xIPGetState@cid:
  2496                           	callstack 0
  2497                           
  2498                           ; 1 bytes @ 0x52
  2499  000053                     	ds	1
  2500  000054                     SIM800xIPGetState@len:
  2501                           	callstack 0
  2502                           
  2503                           ; 1 bytes @ 0x53
  2504  000054                     	ds	1
  2505  000055                     SIM800xIPGetState@i:
  2506                           	callstack 0
  2507                           
  2508                           ; 1 bytes @ 0x54
  2509  000055                     	ds	1
  2510  000056                     
  2511                           ; 1 bytes @ 0x55
  2512 ;;
  2513 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2514 ;;
  2515 ;; *************** function _main *****************
  2516 ;; Defined at:
  2517 ;;		line 12 in file "Src/main.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;		None
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;		None
  2522 ;; Return value:  Size  Location     Type
  2523 ;;                  1    wreg      void 
  2524 ;; Registers used:
  2525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2531 ;;      Params:         0       0       0       0       0       0       0
  2532 ;;      Locals:         0       0       0       0       0       0       0
  2533 ;;      Temps:          0       0       0       0       0       0       0
  2534 ;;      Totals:         0       0       0       0       0       0       0
  2535 ;;Total ram usage:        0 bytes
  2536 ;; Hardware stack levels required when called: 9
  2537 ;; This function calls:
  2538 ;;		_SystemInit
  2539 ;;		_SystemTask
  2540 ;; This function is called by:
  2541 ;;		Startup code after reset
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text0
  2546  00216C                     __ptext0:
  2547                           	callstack 0
  2548  00216C                     _main:
  2549                           	callstack 0
  2550  00216C  FFFF               	dw	65535	; assembler added errata NOP
  2551                           
  2552                           ;main.c: 15: SystemInit();
  2553                           
  2554                           ;incstack = 0
  2555  00216E  EC14  F006         	call	_SystemInit	;wreg free
  2556  002172                     l75:
  2557  002172  FFFF               	dw	65535	; assembler added errata NOP
  2558                           
  2559                           ;main.c: 18: {;main.c: 19: SystemTask();
  2560  002174  ECF1  F006         	call	_SystemTask	;wreg free
  2561  002178  D7FC               	goto	l75
  2562  00217A                     __end_of_main:
  2563                           	callstack 0
  2564                           
  2565 ;; *************** function _SystemTask *****************
  2566 ;; Defined at:
  2567 ;;		line 96 in file "Src/ApplicationExample.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;		None
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;  msg            20    0[BANK2 ] unsigned char [20]
  2572 ;;  cnt             4   25[BANK2 ] unsigned long 
  2573 ;;  errcode         2   23[BANK2 ] unsigned int 
  2574 ;;  scode           2   21[BANK2 ] unsigned int 
  2575 ;;  cmd             1   20[BANK2 ] unsigned char 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      void 
  2578 ;; Registers used:
  2579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2585 ;;      Params:         0       0       0       0       0       0       0
  2586 ;;      Locals:         0       0       0      29       0       0       0
  2587 ;;      Temps:          2       0       0       0       0       0       0
  2588 ;;      Totals:         2       0       0      29       0       0       0
  2589 ;;Total ram usage:       31 bytes
  2590 ;; Hardware stack levels used: 1
  2591 ;; Hardware stack levels required when called: 7
  2592 ;; This function calls:
  2593 ;;		_SIM800xHTTPAction
  2594 ;;		_SIM800xHTTPInputData
  2595 ;;		_SIM800xHTTPRead
  2596 ;;		_SoftUARTPrint
  2597 ;;		_SoftUARTReceiveByte
  2598 ;;		_SoftUARTRxAvailable
  2599 ;;		_sprintf
  2600 ;; This function is called by:
  2601 ;;		_main
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           	psect	text1
  2606  000DE2                     __ptext1:
  2607                           	callstack 0
  2608  000DE2                     _SystemTask:
  2609                           	callstack 0
  2610  000DE2  FFFF               	dw	65535	; assembler added errata NOP
  2611                           
  2612                           ;ApplicationExample.c: 98: uint8_t cmd = 0;
  2613                           
  2614                           ;incstack = 0
  2615  000DE4  0E00               	movlw	0
  2616  000DE6  0102               	movlb	2	; () banked
  2617  000DE8  6F78               	movwf	SystemTask@cmd& (0+255),b
  2618                           
  2619                           ;ApplicationExample.c: 99: uint16_t scode = 0, errcode = 0;
  2620  000DEA  0E00               	movlw	0
  2621  000DEC  6F7A               	movwf	(SystemTask@scode+1)& (0+255),b
  2622  000DEE  0E00               	movlw	0
  2623  000DF0  6F79               	movwf	SystemTask@scode& (0+255),b
  2624  000DF2  0E00               	movlw	0
  2625  000DF4  6F7C               	movwf	(SystemTask@errcode+1)& (0+255),b
  2626  000DF6  0E00               	movlw	0
  2627  000DF8  6F7B               	movwf	SystemTask@errcode& (0+255),b
  2628                           
  2629                           ;ApplicationExample.c: 100: uint32_t cnt = 0;
  2630  000DFA  0E00               	movlw	0
  2631  000DFC  6F7D               	movwf	SystemTask@cnt& (0+255),b
  2632  000DFE  0E00               	movlw	0
  2633  000E00  6F7E               	movwf	(SystemTask@cnt+1)& (0+255),b
  2634  000E02  0E00               	movlw	0
  2635  000E04  6F7F               	movwf	(SystemTask@cnt+2)& (0+255),b
  2636  000E06  0E00               	movlw	0
  2637  000E08  6F80               	movwf	(SystemTask@cnt+3)& (0+255),b
  2638                           
  2639                           ; BSR set to: 2
  2640                           ;ApplicationExample.c: 101: if(SoftUARTRxAvailable())
  2641  000E0A  EC3E  F010         	call	_SoftUARTRxAvailable	;wreg free
  2642  000E0E  0900               	iorlw	0
  2643  000E10  B4D8               	btfsc	status,2,c
  2644  000E12  D005               	goto	l5407
  2645                           
  2646                           ;ApplicationExample.c: 102: cmd = (uint8_t)SoftUARTReceiveByte();
  2647  000E14  EC80  F00F         	call	_SoftUARTReceiveByte	;wreg free
  2648  000E18  5014               	movf	?_SoftUARTReceiveByte^0,w,c
  2649  000E1A  0102               	movlb	2	; () banked
  2650  000E1C  6F78               	movwf	SystemTask@cmd& (0+255),b
  2651  000E1E                     l5407:
  2652  000E1E  FFFF               	dw	65535	; assembler added errata NOP
  2653                           
  2654                           ;ApplicationExample.c: 103: if(cmd == '1')
  2655  000E20  0E31               	movlw	49
  2656  000E22  0102               	movlb	2	; () banked
  2657  000E24  1978               	xorwf	SystemTask@cmd& (0+255),w,b
  2658  000E26  A4D8               	btfss	status,2,c
  2659  000E28  D0A5               	goto	l5425
  2660                           
  2661                           ; BSR set to: 2
  2662                           ;ApplicationExample.c: 104: {;ApplicationExample.c: 106: SoftUARTPrint("Sending message 
      +                          to thinger.io...\r");
  2663  000E2A  0E1C               	movlw	low STR_22
  2664  000E2C  6E11               	movwf	SoftUARTPrint@str^0,c
  2665  000E2E  0E7B               	movlw	high STR_22
  2666  000E30  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  2667  000E32  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  2668                           
  2669                           ;ApplicationExample.c: 108: SIM800xHTTPInputData(txmessage, (uint32_t)(cpos + 1), 5000, 
      +                          &errcode);
  2670  000E36  0E96               	movlw	low _txmessage
  2671  000E38  6E3C               	movwf	SIM800xHTTPInputData@data^0,c
  2672  000E3A  0E01               	movlw	high _txmessage
  2673  000E3C  6E3D               	movwf	(SIM800xHTTPInputData@data+1)^0,c
  2674  000E3E  0E01               	movlw	1
  2675  000E40  2462               	addwf	_cpos^0,w,c
  2676  000E42  6E4E               	movwf	??_SystemTask^0,c
  2677  000E44  0E00               	movlw	0
  2678  000E46  2063               	addwfc	(_cpos+1)^0,w,c
  2679  000E48  6E4F               	movwf	(??_SystemTask+1)^0,c
  2680  000E4A  C04E  F03E         	movff	??_SystemTask,SIM800xHTTPInputData@cnt
  2681  000E4E  C04F  F03F         	movff	??_SystemTask+1,SIM800xHTTPInputData@cnt+1
  2682  000E52  6A40               	clrf	(SIM800xHTTPInputData@cnt+2)^0,c
  2683  000E54  6A41               	clrf	(SIM800xHTTPInputData@cnt+3)^0,c
  2684  000E56  0E88               	movlw	136
  2685  000E58  6E42               	movwf	SIM800xHTTPInputData@timeout^0,c
  2686  000E5A  0E13               	movlw	19
  2687  000E5C  6E43               	movwf	(SIM800xHTTPInputData@timeout+1)^0,c
  2688  000E5E  0E00               	movlw	0
  2689  000E60  6E44               	movwf	(SIM800xHTTPInputData@timeout+2)^0,c
  2690  000E62  0E00               	movlw	0
  2691  000E64  6E45               	movwf	(SIM800xHTTPInputData@timeout+3)^0,c
  2692  000E66  0E7B               	movlw	low SystemTask@errcode
  2693  000E68  6E46               	movwf	SIM800xHTTPInputData@errcode^0,c
  2694  000E6A  0E02               	movlw	high SystemTask@errcode
  2695  000E6C  6E47               	movwf	(SIM800xHTTPInputData@errcode+1)^0,c
  2696  000E6E  EC0F  F005         	call	_SIM800xHTTPInputData	;wreg free
  2697                           
  2698                           ;ApplicationExample.c: 110: if(SIM800xHTTPAction(1, &scode, &cnt, 10000, &errcode) == OK
      +                          )
  2699  000E72  0E79               	movlw	low SystemTask@scode
  2700  000E74  6E3C               	movwf	SIM800xHTTPAction@statuscode^0,c
  2701  000E76  0E02               	movlw	high SystemTask@scode
  2702  000E78  6E3D               	movwf	(SIM800xHTTPAction@statuscode+1)^0,c
  2703  000E7A  0E7D               	movlw	low SystemTask@cnt
  2704  000E7C  6E3E               	movwf	SIM800xHTTPAction@cnt^0,c
  2705  000E7E  0E02               	movlw	high SystemTask@cnt
  2706  000E80  6E3F               	movwf	(SIM800xHTTPAction@cnt+1)^0,c
  2707  000E82  0E10               	movlw	16
  2708  000E84  6E40               	movwf	SIM800xHTTPAction@tout^0,c
  2709  000E86  0E27               	movlw	39
  2710  000E88  6E41               	movwf	(SIM800xHTTPAction@tout+1)^0,c
  2711  000E8A  0E00               	movlw	0
  2712  000E8C  6E42               	movwf	(SIM800xHTTPAction@tout+2)^0,c
  2713  000E8E  0E00               	movlw	0
  2714  000E90  6E43               	movwf	(SIM800xHTTPAction@tout+3)^0,c
  2715  000E92  0E7B               	movlw	low SystemTask@errcode
  2716  000E94  6E44               	movwf	SIM800xHTTPAction@errcode^0,c
  2717  000E96  0E02               	movlw	high SystemTask@errcode
  2718  000E98  6E45               	movwf	(SIM800xHTTPAction@errcode+1)^0,c
  2719  000E9A  0E01               	movlw	1
  2720  000E9C  ECFE  F003         	call	_SIM800xHTTPAction
  2721  000EA0  0900               	iorlw	0
  2722  000EA2  A4D8               	btfss	status,2,c
  2723  000EA4  D060               	goto	l5423
  2724                           
  2725                           ;ApplicationExample.c: 111: {;ApplicationExample.c: 112: if(SIM800xHTTPRead(rxmessage, 0
      +                          , cnt, &cnt, &errcode) == OK)
  2726  000EA6  0E99               	movlw	low _rxmessage
  2727  000EA8  6E3C               	movwf	SIM800xHTTPRead@data^0,c
  2728  000EAA  0E00               	movlw	high _rxmessage
  2729  000EAC  6E3D               	movwf	(SIM800xHTTPRead@data+1)^0,c
  2730  000EAE  0E00               	movlw	0
  2731  000EB0  6E3E               	movwf	SIM800xHTTPRead@strindex^0,c
  2732  000EB2  0E00               	movlw	0
  2733  000EB4  6E3F               	movwf	(SIM800xHTTPRead@strindex+1)^0,c
  2734  000EB6  0E00               	movlw	0
  2735  000EB8  6E40               	movwf	(SIM800xHTTPRead@strindex+2)^0,c
  2736  000EBA  0E00               	movlw	0
  2737  000EBC  6E41               	movwf	(SIM800xHTTPRead@strindex+3)^0,c
  2738  000EBE  C27D  F042         	movff	SystemTask@cnt,SIM800xHTTPRead@size
  2739  000EC2  C27E  F043         	movff	SystemTask@cnt+1,SIM800xHTTPRead@size+1
  2740  000EC6  C27F  F044         	movff	SystemTask@cnt+2,SIM800xHTTPRead@size+2
  2741  000ECA  C280  F045         	movff	SystemTask@cnt+3,SIM800xHTTPRead@size+3
  2742  000ECE  0E7D               	movlw	low SystemTask@cnt
  2743  000ED0  6E46               	movwf	SIM800xHTTPRead@cnt^0,c
  2744  000ED2  0E02               	movlw	high SystemTask@cnt
  2745  000ED4  6E47               	movwf	(SIM800xHTTPRead@cnt+1)^0,c
  2746  000ED6  0E7B               	movlw	low SystemTask@errcode
  2747  000ED8  6E48               	movwf	SIM800xHTTPRead@errcode^0,c
  2748  000EDA  0E02               	movlw	high SystemTask@errcode
  2749  000EDC  6E49               	movwf	(SIM800xHTTPRead@errcode+1)^0,c
  2750  000EDE  EC8D  F001         	call	_SIM800xHTTPRead	;wreg free
  2751  000EE2  0900               	iorlw	0
  2752  000EE4  A4D8               	btfss	status,2,c
  2753  000EE6  D046               	goto	l5425
  2754                           
  2755                           ;ApplicationExample.c: 113: {;ApplicationExample.c: 114: char msg[20];;ApplicationExampl
      +                          e.c: 115: sprintf(msg, "HTTP response code: %u\r", scode);
  2756  000EE8  0E64               	movlw	low SystemTask@msg
  2757  000EEA  6E24               	movwf	sprintf@sp^0,c
  2758  000EEC  0E02               	movlw	high SystemTask@msg
  2759  000EEE  6E25               	movwf	(sprintf@sp+1)^0,c
  2760  000EF0  0EA9               	movlw	low STR_23
  2761  000EF2  6E26               	movwf	sprintf@f^0,c
  2762  000EF4  0E7C               	movlw	high STR_23
  2763  000EF6  6E27               	movwf	(sprintf@f+1)^0,c
  2764  000EF8  C279  F028         	movff	SystemTask@scode,?_sprintf+4
  2765  000EFC  C27A  F029         	movff	SystemTask@scode+1,?_sprintf+5
  2766  000F00  ECCD  F002         	call	_sprintf	;wreg free
  2767                           
  2768                           ;ApplicationExample.c: 116: SoftUARTPrint(msg);
  2769  000F04  0E64               	movlw	low SystemTask@msg
  2770  000F06  6E11               	movwf	SoftUARTPrint@str^0,c
  2771  000F08  0E02               	movlw	high SystemTask@msg
  2772  000F0A  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  2773  000F0C  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  2774                           
  2775                           ;ApplicationExample.c: 117: sprintf(msg, "Received data length: %ld\r", cnt);
  2776  000F10  0E64               	movlw	low SystemTask@msg
  2777  000F12  6E24               	movwf	sprintf@sp^0,c
  2778  000F14  0E02               	movlw	high SystemTask@msg
  2779  000F16  6E25               	movwf	(sprintf@sp+1)^0,c
  2780  000F18  0E11               	movlw	low STR_24
  2781  000F1A  6E26               	movwf	sprintf@f^0,c
  2782  000F1C  0E7C               	movlw	high STR_24
  2783  000F1E  6E27               	movwf	(sprintf@f+1)^0,c
  2784  000F20  C27D  F028         	movff	SystemTask@cnt,?_sprintf+4
  2785  000F24  C27E  F029         	movff	SystemTask@cnt+1,?_sprintf+5
  2786  000F28  C27F  F02A         	movff	SystemTask@cnt+2,?_sprintf+6
  2787  000F2C  C280  F02B         	movff	SystemTask@cnt+3,?_sprintf+7
  2788  000F30  ECCD  F002         	call	_sprintf	;wreg free
  2789                           
  2790                           ;ApplicationExample.c: 118: SoftUARTPrint(msg);
  2791  000F34  0E64               	movlw	low SystemTask@msg
  2792  000F36  6E11               	movwf	SoftUARTPrint@str^0,c
  2793  000F38  0E02               	movlw	high SystemTask@msg
  2794  000F3A  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  2795  000F3C  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  2796                           
  2797                           ;ApplicationExample.c: 119: SoftUARTPrint("Data: ");
  2798  000F40  0EC9               	movlw	low STR_25
  2799  000F42  6E11               	movwf	SoftUARTPrint@str^0,c
  2800  000F44  0E7F               	movlw	high STR_25
  2801  000F46  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  2802  000F48  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  2803                           
  2804                           ;ApplicationExample.c: 120: SoftUARTPrint(msg);
  2805  000F4C  0E64               	movlw	low SystemTask@msg
  2806  000F4E  6E11               	movwf	SoftUARTPrint@str^0,c
  2807  000F50  0E02               	movlw	high SystemTask@msg
  2808  000F52  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  2809  000F54  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  2810                           
  2811                           ;ApplicationExample.c: 121: SoftUARTPrint("\r\r");
  2812  000F58  0E5B               	movlw	low (STR_21+29)
  2813  000F5A  6E11               	movwf	SoftUARTPrint@str^0,c
  2814  000F5C  0E7B               	movlw	high (STR_21+29)
  2815  000F5E  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  2816  000F60  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  2817  000F64  D007               	goto	l5425
  2818  000F66                     l5423:
  2819  000F66  FFFF               	dw	65535	; assembler added errata NOP
  2820                           
  2821                           ;ApplicationExample.c: 124: {;ApplicationExample.c: 125: SoftUARTPrint("Sending failed.\
      +                          r");
  2822  000F68  0EB5               	movlw	low STR_27
  2823  000F6A  6E11               	movwf	SoftUARTPrint@str^0,c
  2824  000F6C  0E7D               	movlw	high STR_27
  2825  000F6E  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  2826  000F70  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  2827  000F74                     l5425:
  2828  000F74  FFFF               	dw	65535	; assembler added errata NOP
  2829  000F76  0012               	return		;funcret
  2830  000F78  FFFF               	dw	65535	; errata NOP
  2831  000F7A                     __end_of_SystemTask:
  2832                           	callstack 0
  2833                           
  2834 ;; *************** function _SoftUARTRxAvailable *****************
  2835 ;; Defined at:
  2836 ;;		line 352 in file "Src/SoftwareUART.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;		None
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;		None
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  1    wreg      unsigned char 
  2843 ;; Registers used:
  2844 ;;		wreg, status,2, status,0, cstack
  2845 ;; Tracked objects:
  2846 ;;		On entry : 0/0
  2847 ;;		On exit  : 0/0
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2850 ;;      Params:         0       0       0       0       0       0       0
  2851 ;;      Locals:         0       0       0       0       0       0       0
  2852 ;;      Temps:          2       0       0       0       0       0       0
  2853 ;;      Totals:         2       0       0       0       0       0       0
  2854 ;;Total ram usage:        2 bytes
  2855 ;; Hardware stack levels used: 1
  2856 ;; Hardware stack levels required when called: 4
  2857 ;; This function calls:
  2858 ;;		___awmod
  2859 ;; This function is called by:
  2860 ;;		_SystemTask
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           	psect	text2
  2865  00207C                     __ptext2:
  2866                           	callstack 0
  2867  00207C                     _SoftUARTRxAvailable:
  2868                           	callstack 0
  2869  00207C  FFFF               	dw	65535	; assembler added errata NOP
  2870                           
  2871                           ;SoftwareUART.c: 355: return (uint8_t)((Rxfifocurrent + 100 - Rxfifoptr) % 100);
  2872                           
  2873                           ;incstack = 0
  2874  00207E  5061               	movf	_Rxfifoptr@SoftwareUART$F1246^0,w,c	;volatile
  2875  002080  C060  F014         	movff	_Rxfifocurrent@SoftwareUART$F1247,??_SoftUARTRxAvailable	;volatile
  2876  002084  6A15               	clrf	(??_SoftUARTRxAvailable+1)^0,c
  2877  002086  5E14               	subwf	??_SoftUARTRxAvailable^0,f,c
  2878  002088  0E00               	movlw	0
  2879  00208A  5A15               	subwfb	(??_SoftUARTRxAvailable+1)^0,f,c
  2880  00208C  0E64               	movlw	100
  2881  00208E  2414               	addwf	??_SoftUARTRxAvailable^0,w,c
  2882  002090  6E0E               	movwf	___awmod@dividend^0,c
  2883  002092  0E00               	movlw	0
  2884  002094  2015               	addwfc	(??_SoftUARTRxAvailable+1)^0,w,c
  2885  002096  6E0F               	movwf	(___awmod@dividend+1)^0,c
  2886  002098  0E00               	movlw	0
  2887  00209A  6E11               	movwf	(___awmod@divisor+1)^0,c
  2888  00209C  0E64               	movlw	100
  2889  00209E  6E10               	movwf	___awmod@divisor^0,c
  2890  0020A0  EC9F  F00B         	call	___awmod	;wreg free
  2891  0020A4  500E               	movf	?___awmod^0,w,c
  2892  0020A6  0012               	return		;funcret
  2893  0020A8  FFFF               	dw	65535	; errata NOP
  2894  0020AA                     __end_of_SoftUARTRxAvailable:
  2895                           	callstack 0
  2896                           
  2897 ;; *************** function _SoftUARTReceiveByte *****************
  2898 ;; Defined at:
  2899 ;;		line 360 in file "Src/SoftwareUART.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;		None
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;  data            1   21[COMRAM] unsigned char 
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  2   19[COMRAM] int 
  2906 ;; Registers used:
  2907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2913 ;;      Params:         2       0       0       0       0       0       0
  2914 ;;      Locals:         1       0       0       0       0       0       0
  2915 ;;      Temps:          0       0       0       0       0       0       0
  2916 ;;      Totals:         3       0       0       0       0       0       0
  2917 ;;Total ram usage:        3 bytes
  2918 ;; Hardware stack levels used: 1
  2919 ;; Hardware stack levels required when called: 4
  2920 ;; This function calls:
  2921 ;;		___awmod
  2922 ;; This function is called by:
  2923 ;;		_SystemTask
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text3
  2928  001F00                     __ptext3:
  2929                           	callstack 0
  2930  001F00                     _SoftUARTReceiveByte:
  2931                           	callstack 0
  2932  001F00  FFFF               	dw	65535	; assembler added errata NOP
  2933                           
  2934                           ;SoftwareUART.c: 363: if(Rxfifocurrent == Rxfifoptr)
  2935                           
  2936                           ;incstack = 0
  2937  001F02  5061               	movf	_Rxfifoptr@SoftwareUART$F1246^0,w,c	;volatile
  2938  001F04  1860               	xorwf	_Rxfifocurrent@SoftwareUART$F1247^0,w,c	;volatile
  2939  001F06  A4D8               	btfss	status,2,c
  2940  001F08  D003               	goto	l5109
  2941                           
  2942                           ;SoftwareUART.c: 364: return -1;
  2943  001F0A  6814               	setf	?_SoftUARTReceiveByte^0,c
  2944  001F0C  6815               	setf	(?_SoftUARTReceiveByte+1)^0,c
  2945  001F0E  D01A               	goto	l1091
  2946  001F10                     l5109:
  2947  001F10  FFFF               	dw	65535	; assembler added errata NOP
  2948                           
  2949                           ;SoftwareUART.c: 366: uint8_t data = RxFIFO[Rxfifoptr];
  2950  001F12  0E00               	movlw	low _RxFIFO@SoftwareUART$F1245
  2951  001F14  2461               	addwf	_Rxfifoptr@SoftwareUART$F1246^0,w,c	;volatile
  2952  001F16  6ED9               	movwf	fsr2l,c
  2953  001F18  6ADA               	clrf	fsr2h,c
  2954  001F1A  0E02               	movlw	high _RxFIFO@SoftwareUART$F1245
  2955  001F1C  22DA               	addwfc	fsr2h,f,c
  2956  001F1E  50DF               	movf	indf2,w,c
  2957  001F20  6E16               	movwf	SoftUARTReceiveByte@data^0,c
  2958                           
  2959                           ;SoftwareUART.c: 367: Rxfifoptr = (uint8_t)((Rxfifoptr + 1) % 100);
  2960  001F22  0E01               	movlw	1
  2961  001F24  2461               	addwf	_Rxfifoptr@SoftwareUART$F1246^0,w,c	;volatile
  2962  001F26  6E0E               	movwf	___awmod@dividend^0,c
  2963  001F28  6A0F               	clrf	(___awmod@dividend+1)^0,c
  2964  001F2A  0E00               	movlw	0
  2965  001F2C  220F               	addwfc	(___awmod@dividend+1)^0,f,c
  2966  001F2E  0E00               	movlw	0
  2967  001F30  6E11               	movwf	(___awmod@divisor+1)^0,c
  2968  001F32  0E64               	movlw	100
  2969  001F34  6E10               	movwf	___awmod@divisor^0,c
  2970  001F36  EC9F  F00B         	call	___awmod	;wreg free
  2971  001F3A  500E               	movf	?___awmod^0,w,c
  2972  001F3C  6E61               	movwf	_Rxfifoptr@SoftwareUART$F1246^0,c	;volatile
  2973                           
  2974                           ;SoftwareUART.c: 369: return data;
  2975  001F3E  C016  F014         	movff	SoftUARTReceiveByte@data,?_SoftUARTReceiveByte
  2976  001F42  6A15               	clrf	(?_SoftUARTReceiveByte+1)^0,c
  2977  001F44                     l1091:
  2978  001F44  FFFF               	dw	65535	; assembler added errata NOP
  2979  001F46  0012               	return		;funcret
  2980  001F48  FFFF               	dw	65535	; errata NOP
  2981  001F4A                     __end_of_SoftUARTReceiveByte:
  2982                           	callstack 0
  2983                           
  2984 ;; *************** function ___awmod *****************
  2985 ;; Defined at:
  2986 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;  dividend        2   13[COMRAM] int 
  2989 ;;  divisor         2   15[COMRAM] int 
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;  sign            1   18[COMRAM] unsigned char 
  2992 ;;  counter         1   17[COMRAM] unsigned char 
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  2   13[COMRAM] int 
  2995 ;; Registers used:
  2996 ;;		wreg, status,2, status,0
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3002 ;;      Params:         4       0       0       0       0       0       0
  3003 ;;      Locals:         2       0       0       0       0       0       0
  3004 ;;      Temps:          0       0       0       0       0       0       0
  3005 ;;      Totals:         6       0       0       0       0       0       0
  3006 ;;Total ram usage:        6 bytes
  3007 ;; Hardware stack levels used: 1
  3008 ;; Hardware stack levels required when called: 3
  3009 ;; This function calls:
  3010 ;;		Nothing
  3011 ;; This function is called by:
  3012 ;;		_SoftUARTRxAvailable
  3013 ;;		_SoftUARTReceiveByte
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           	psect	text4
  3018  00173E                     __ptext4:
  3019                           	callstack 0
  3020  00173E                     ___awmod:
  3021                           	callstack 0
  3022  00173E  FFFF               	dw	65535	; assembler added errata NOP
  3023                           
  3024                           ;incstack = 0
  3025  001740  0E00               	movlw	0
  3026  001742  6E13               	movwf	___awmod@sign^0,c
  3027  001744  AE0F               	btfss	(___awmod@dividend+1)^0,7,c
  3028  001746  D006               	goto	l4807
  3029  001748  6C0E               	negf	___awmod@dividend^0,c
  3030  00174A  1E0F               	comf	(___awmod@dividend+1)^0,f,c
  3031  00174C  B0D8               	btfsc	status,0,c
  3032  00174E  2A0F               	incf	(___awmod@dividend+1)^0,f,c
  3033  001750  0E01               	movlw	1
  3034  001752  6E13               	movwf	___awmod@sign^0,c
  3035  001754                     l4807:
  3036  001754  FFFF               	dw	65535	; assembler added errata NOP
  3037  001756  AE11               	btfss	(___awmod@divisor+1)^0,7,c
  3038  001758  D004               	goto	l4811
  3039  00175A  6C10               	negf	___awmod@divisor^0,c
  3040  00175C  1E11               	comf	(___awmod@divisor+1)^0,f,c
  3041  00175E  B0D8               	btfsc	status,0,c
  3042  001760  2A11               	incf	(___awmod@divisor+1)^0,f,c
  3043  001762                     l4811:
  3044  001762  FFFF               	dw	65535	; assembler added errata NOP
  3045  001764  5010               	movf	___awmod@divisor^0,w,c
  3046  001766  1011               	iorwf	(___awmod@divisor+1)^0,w,c
  3047  001768  B4D8               	btfsc	status,2,c
  3048  00176A  D01C               	goto	l4827
  3049  00176C  0E01               	movlw	1
  3050  00176E  6E12               	movwf	___awmod@counter^0,c
  3051  001770  D005               	goto	l4817
  3052  001772                     l4815:
  3053  001772  FFFF               	dw	65535	; assembler added errata NOP
  3054  001774  90D8               	bcf	status,0,c
  3055  001776  3610               	rlcf	___awmod@divisor^0,f,c
  3056  001778  3611               	rlcf	(___awmod@divisor+1)^0,f,c
  3057  00177A  2A12               	incf	___awmod@counter^0,f,c
  3058  00177C                     l4817:
  3059  00177C  FFFF               	dw	65535	; assembler added errata NOP
  3060  00177E  AE11               	btfss	(___awmod@divisor+1)^0,7,c
  3061  001780  D7F8               	goto	l4815
  3062  001782                     u4210:
  3063  001782  FFFF               	dw	65535	; assembler added errata NOP
  3064  001784  5010               	movf	___awmod@divisor^0,w,c
  3065  001786  5C0E               	subwf	___awmod@dividend^0,w,c
  3066  001788  5011               	movf	(___awmod@divisor+1)^0,w,c
  3067  00178A  580F               	subwfb	(___awmod@dividend+1)^0,w,c
  3068  00178C  A0D8               	btfss	status,0,c
  3069  00178E  D004               	goto	l4823
  3070  001790  5010               	movf	___awmod@divisor^0,w,c
  3071  001792  5E0E               	subwf	___awmod@dividend^0,f,c
  3072  001794  5011               	movf	(___awmod@divisor+1)^0,w,c
  3073  001796  5A0F               	subwfb	(___awmod@dividend+1)^0,f,c
  3074  001798                     l4823:
  3075  001798  FFFF               	dw	65535	; assembler added errata NOP
  3076  00179A  90D8               	bcf	status,0,c
  3077  00179C  3211               	rrcf	(___awmod@divisor+1)^0,f,c
  3078  00179E  3210               	rrcf	___awmod@divisor^0,f,c
  3079  0017A0  2E12               	decfsz	___awmod@counter^0,f,c
  3080  0017A2  D7EF               	goto	u4210
  3081  0017A4                     l4827:
  3082  0017A4  FFFF               	dw	65535	; assembler added errata NOP
  3083  0017A6  5013               	movf	___awmod@sign^0,w,c
  3084  0017A8  B4D8               	btfsc	status,2,c
  3085  0017AA  D004               	goto	l4831
  3086  0017AC  6C0E               	negf	___awmod@dividend^0,c
  3087  0017AE  1E0F               	comf	(___awmod@dividend+1)^0,f,c
  3088  0017B0  B0D8               	btfsc	status,0,c
  3089  0017B2  2A0F               	incf	(___awmod@dividend+1)^0,f,c
  3090  0017B4                     l4831:
  3091  0017B4  FFFF               	dw	65535	; assembler added errata NOP
  3092  0017B6  C00E  F00E         	movff	___awmod@dividend,?___awmod
  3093  0017BA  C00F  F00F         	movff	___awmod@dividend+1,?___awmod+1
  3094  0017BE  0012               	return		;funcret
  3095  0017C0  FFFF               	dw	65535	; errata NOP
  3096  0017C2                     __end_of___awmod:
  3097                           	callstack 0
  3098                           
  3099 ;; *************** function _SIM800xHTTPRead *****************
  3100 ;; Defined at:
  3101 ;;		line 1609 in file "Src/SIM800x.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;  data            2   59[COMRAM] PTR unsigned char 
  3104 ;;		 -> rxmessage(30), 
  3105 ;;  strindex        4   61[COMRAM] unsigned long 
  3106 ;;  size            4   65[COMRAM] unsigned long 
  3107 ;;  cnt             2   69[COMRAM] PTR unsigned long 
  3108 ;;		 -> SystemTask@cnt(4), 
  3109 ;;  errcode         2   71[COMRAM] PTR unsigned int 
  3110 ;;		 -> SystemTask@errcode(2), 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;  sz              4   30[BANK0 ] unsigned long 
  3113 ;;  str            30    0[BANK0 ] unsigned char [30]
  3114 ;;  time            4   34[BANK0 ] unsigned long 
  3115 ;;  res             2   38[BANK0 ] int 
  3116 ;; Return value:  Size  Location     Type
  3117 ;;                  1    wreg      enum E2115
  3118 ;; Registers used:
  3119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3125 ;;      Params:        14       0       0       0       0       0       0
  3126 ;;      Locals:         0      40       0       0       0       0       0
  3127 ;;      Temps:          4       0       0       0       0       0       0
  3128 ;;      Totals:        18      40       0       0       0       0       0
  3129 ;;Total ram usage:       58 bytes
  3130 ;; Hardware stack levels used: 1
  3131 ;; Hardware stack levels required when called: 6
  3132 ;; This function calls:
  3133 ;;		_SIM800xSDMFlush
  3134 ;;		_SIM800xSDMPeek
  3135 ;;		_SIM800xSDMPrint
  3136 ;;		_SIM800xSDMReadByte
  3137 ;;		_SIM800xSDMReadF1Pkt
  3138 ;;		_SIM800xSDMRxAvailable
  3139 ;;		_StrToInt
  3140 ;;		_Tick_ms
  3141 ;;		_sprintf
  3142 ;; This function is called by:
  3143 ;;		_SystemTask
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147                           	psect	text5
  3148  00031A                     __ptext5:
  3149                           	callstack 0
  3150  00031A                     _SIM800xHTTPRead:
  3151                           	callstack 0
  3152  00031A  FFFF               	dw	65535	; assembler added errata NOP
  3153                           
  3154                           ;SIM800x.c: 1612: if((strindex > 0x4E000) || (size > 0x4E000) || (size < 1))
  3155                           
  3156                           ;incstack = 0
  3157  00031C  5041               	movf	(SIM800xHTTPRead@strindex+3)^0,w,c
  3158  00031E  E117               	bnz	l5271
  3159  000320  043E               	decf	SIM800xHTTPRead@strindex^0,w,c
  3160  000322  0EE0               	movlw	224
  3161  000324  583F               	subwfb	(SIM800xHTTPRead@strindex+1)^0,w,c
  3162  000326  0E04               	movlw	4
  3163  000328  5840               	subwfb	(SIM800xHTTPRead@strindex+2)^0,w,c
  3164  00032A  B0D8               	btfsc	status,0,c
  3165  00032C  D00F               	goto	u4760
  3166  00032E  5045               	movf	(SIM800xHTTPRead@size+3)^0,w,c
  3167  000330  E10E               	bnz	l5271
  3168  000332  0442               	decf	SIM800xHTTPRead@size^0,w,c
  3169  000334  0EE0               	movlw	224
  3170  000336  5843               	subwfb	(SIM800xHTTPRead@size+1)^0,w,c
  3171  000338  0E04               	movlw	4
  3172  00033A  5844               	subwfb	(SIM800xHTTPRead@size+2)^0,w,c
  3173  00033C  B0D8               	btfsc	status,0,c
  3174  00033E  D006               	goto	u4760
  3175  000340  5042               	movf	SIM800xHTTPRead@size^0,w,c
  3176  000342  1043               	iorwf	(SIM800xHTTPRead@size+1)^0,w,c
  3177  000344  1044               	iorwf	(SIM800xHTTPRead@size+2)^0,w,c
  3178  000346  1045               	iorwf	(SIM800xHTTPRead@size+3)^0,w,c
  3179  000348  A4D8               	btfss	status,2,c
  3180  00034A  D003               	goto	l5275
  3181  00034C                     u4760:
  3182  00034C  FFFF               	dw	65535	; assembler added errata NOP
  3183  00034E                     l5271:
  3184                           
  3185                           ;SIM800x.c: 1613: return ERROR;
  3186  00034E  0E01               	movlw	1
  3187  000350  D121               	goto	l713
  3188  000352                     l5275:
  3189  000352  FFFF               	dw	65535	; assembler added errata NOP
  3190                           
  3191                           ;SIM800x.c: 1615: char str[30] = {0, 0, 0, 0};
  3192  000354  EE20  F0B7         	lfsr	2,SIM800xHTTPRead@str
  3193  000358  0E1D               	movlw	29
  3194  00035A                     u4771:
  3195  00035A  6ADE               	clrf	postinc2,c
  3196  00035C  06E8               	decf	wreg,f,c
  3197  00035E  E2FD               	bc	u4771
  3198                           
  3199                           ;SIM800x.c: 1617: sprintf(str, "AT+HTTPREAD=%ld,%ld\r", strindex, size);
  3200  000360  0EB7               	movlw	low SIM800xHTTPRead@str
  3201  000362  6E24               	movwf	sprintf@sp^0,c
  3202  000364  0E00               	movlw	high SIM800xHTTPRead@str
  3203  000366  6E25               	movwf	(sprintf@sp+1)^0,c
  3204  000368  0E04               	movlw	low STR_98
  3205  00036A  6E26               	movwf	sprintf@f^0,c
  3206  00036C  0E7D               	movlw	high STR_98
  3207  00036E  6E27               	movwf	(sprintf@f+1)^0,c
  3208  000370  C03E  F028         	movff	SIM800xHTTPRead@strindex,?_sprintf+4
  3209  000374  C03F  F029         	movff	SIM800xHTTPRead@strindex+1,?_sprintf+5
  3210  000378  C040  F02A         	movff	SIM800xHTTPRead@strindex+2,?_sprintf+6
  3211  00037C  C041  F02B         	movff	SIM800xHTTPRead@strindex+3,?_sprintf+7
  3212  000380  C042  F02C         	movff	SIM800xHTTPRead@size,?_sprintf+8
  3213  000384  C043  F02D         	movff	SIM800xHTTPRead@size+1,?_sprintf+9
  3214  000388  C044  F02E         	movff	SIM800xHTTPRead@size+2,?_sprintf+10
  3215  00038C  C045  F02F         	movff	SIM800xHTTPRead@size+3,?_sprintf+11
  3216  000390  ECCD  F002         	call	_sprintf	;wreg free
  3217                           
  3218                           ;SIM800x.c: 1618: SIM800xSDMFlush();
  3219  000394  EC8E  F010         	call	_SIM800xSDMFlush	;wreg free
  3220                           
  3221                           ;SIM800x.c: 1619: SIM800xSDMPrint(str);
  3222  000398  0EB7               	movlw	low SIM800xHTTPRead@str
  3223  00039A  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  3224  00039C  0E00               	movlw	high SIM800xHTTPRead@str
  3225  00039E  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  3226  0003A0  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  3227                           
  3228                           ;SIM800x.c: 1621: uint32_t time = Tick_ms();
  3229  0003A4  EC83  F010         	call	_Tick_ms	;wreg free
  3230  0003A8  C00E  F0D9         	movff	?_Tick_ms,SIM800xHTTPRead@time
  3231  0003AC  C00F  F0DA         	movff	?_Tick_ms+1,SIM800xHTTPRead@time+1
  3232  0003B0  C010  F0DB         	movff	?_Tick_ms+2,SIM800xHTTPRead@time+2
  3233  0003B4  C011  F0DC         	movff	?_Tick_ms+3,SIM800xHTTPRead@time+3
  3234                           
  3235                           ;SIM800x.c: 1622: while(SIM800xSDMRxAvailable() < 16)
  3236  0003B8  D01D               	goto	l5291
  3237  0003BA                     l5285:
  3238  0003BA  FFFF               	dw	65535	; assembler added errata NOP
  3239                           
  3240                           ;SIM800x.c: 1623: {;SIM800x.c: 1624: if((Tick_ms() - time) > Tout)
  3241  0003BC  EC83  F010         	call	_Tick_ms	;wreg free
  3242  0003C0  0100               	movlb	0	; () banked
  3243  0003C2  51D9               	movf	SIM800xHTTPRead@time& (0+255),w,b
  3244  0003C4  5C0E               	subwf	?_Tick_ms^0,w,c
  3245  0003C6  6E4A               	movwf	??_SIM800xHTTPRead^0,c
  3246  0003C8  51DA               	movf	(SIM800xHTTPRead@time+1)& (0+255),w,b
  3247  0003CA  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  3248  0003CC  6E4B               	movwf	(??_SIM800xHTTPRead+1)^0,c
  3249  0003CE  51DB               	movf	(SIM800xHTTPRead@time+2)& (0+255),w,b
  3250  0003D0  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  3251  0003D2  6E4C               	movwf	(??_SIM800xHTTPRead+2)^0,c
  3252  0003D4  51DC               	movf	(SIM800xHTTPRead@time+3)& (0+255),w,b
  3253  0003D6  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  3254  0003D8  6E4D               	movwf	(??_SIM800xHTTPRead+3)^0,c
  3255  0003DA  504A               	movf	??_SIM800xHTTPRead^0,w,c
  3256  0003DC  5C64               	subwf	_Tout^0,w,c
  3257  0003DE  504B               	movf	(??_SIM800xHTTPRead+1)^0,w,c
  3258  0003E0  5865               	subwfb	(_Tout+1)^0,w,c
  3259  0003E2  504C               	movf	(??_SIM800xHTTPRead+2)^0,w,c
  3260  0003E4  5866               	subwfb	(_Tout+2)^0,w,c
  3261  0003E6  504D               	movf	(??_SIM800xHTTPRead+3)^0,w,c
  3262  0003E8  5867               	subwfb	(_Tout+3)^0,w,c
  3263  0003EA  B0D8               	btfsc	status,0,c
  3264  0003EC  D003               	goto	l5291
  3265  0003EE                     u4780:
  3266  0003EE  FFFF               	dw	65535	; assembler added errata NOP
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;SIM800x.c: 1625: {;SIM800x.c: 1626: return TIME_OUT;
  3270  0003F0  0E05               	movlw	5
  3271  0003F2  D0D0               	goto	l713
  3272  0003F4                     l5291:
  3273  0003F4  FFFF               	dw	65535	; assembler added errata NOP
  3274  0003F6  EC25  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  3275  0003FA  5014               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  3276  0003FC  E104               	bnz	u4790
  3277  0003FE  0E10               	movlw	16
  3278  000400  5C13               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  3279  000402  A0D8               	btfss	status,0,c
  3280  000404  D7DA               	goto	l5285
  3281  000406                     u4790:
  3282                           
  3283                           ;SIM800x.c: 1627: };SIM800x.c: 1628: };SIM800x.c: 1630: int res = SIM800xSDMReadF1Pkt(st
      +                          r);
  3284  000406  0EB7               	movlw	low SIM800xHTTPRead@str
  3285  000408  6E17               	movwf	SIM800xSDMReadF1Pkt@data^0,c
  3286  00040A  0E00               	movlw	high SIM800xHTTPRead@str
  3287  00040C  6E18               	movwf	(SIM800xSDMReadF1Pkt@data+1)^0,c
  3288  00040E  EC27  F009         	call	_SIM800xSDMReadF1Pkt	;wreg free
  3289  000412  C017  F0DD         	movff	?_SIM800xSDMReadF1Pkt,SIM800xHTTPRead@res
  3290  000416  C018  F0DE         	movff	?_SIM800xSDMReadF1Pkt+1,SIM800xHTTPRead@res+1
  3291                           
  3292                           ;SIM800x.c: 1631: if(res < 0)
  3293  00041A  0100               	movlb	0	; () banked
  3294  00041C  BFDE               	btfsc	(SIM800xHTTPRead@res+1)& (0+255),7,b
  3295  00041E  D7E7               	goto	u4780
  3296                           
  3297                           ; BSR set to: 0
  3298                           ;SIM800x.c: 1635: else if((str[0] == '+') && (str[1] == 'H'))
  3299  000420  0E2B               	movlw	43
  3300  000422  19B7               	xorwf	SIM800xHTTPRead@str& (0+255),w,b
  3301  000424  A4D8               	btfss	status,2,c
  3302  000426  D092               	goto	l5339
  3303                           
  3304                           ; BSR set to: 0
  3305  000428  0E48               	movlw	72
  3306  00042A  19B8               	xorwf	(SIM800xHTTPRead@str+1)& (0+255),w,b
  3307  00042C  A4D8               	btfss	status,2,c
  3308  00042E  D08E               	goto	l5339
  3309                           
  3310                           ; BSR set to: 0
  3311                           ;SIM800x.c: 1636: {;SIM800x.c: 1638: str[(uint8_t)res] = '\0';
  3312  000430  0EB7               	movlw	low SIM800xHTTPRead@str
  3313  000432  25DD               	addwf	SIM800xHTTPRead@res& (0+255),w,b
  3314  000434  6ED9               	movwf	fsr2l,c
  3315  000436  6ADA               	clrf	fsr2h,c
  3316  000438  0E00               	movlw	high SIM800xHTTPRead@str
  3317  00043A  22DA               	addwfc	fsr2h,f,c
  3318  00043C  0E00               	movlw	0
  3319  00043E  6EDF               	movwf	indf2,c
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;SIM800x.c: 1639: *cnt = (uint16_t)StrToInt(str, 11, (uint16_t)(res - 1));
  3323  000440  0EB7               	movlw	low SIM800xHTTPRead@str
  3324  000442  6E1A               	movwf	StrToInt@str^0,c
  3325  000444  0E00               	movlw	high SIM800xHTTPRead@str
  3326  000446  6E1B               	movwf	(StrToInt@str+1)^0,c
  3327  000448  0E0B               	movlw	11
  3328  00044A  6E1C               	movwf	StrToInt@start^0,c
  3329  00044C  05DD               	decf	SIM800xHTTPRead@res& (0+255),w,b
  3330  00044E  6E1D               	movwf	StrToInt@stop^0,c
  3331  000450  ECBD  F007         	call	_StrToInt	;wreg free
  3332  000454  501A               	movf	?_StrToInt^0,w,c
  3333  000456  6E4A               	movwf	??_SIM800xHTTPRead^0,c
  3334  000458  501B               	movf	(?_StrToInt+1)^0,w,c
  3335  00045A  6E4B               	movwf	(??_SIM800xHTTPRead+1)^0,c
  3336  00045C  6A4C               	clrf	(??_SIM800xHTTPRead+2)^0,c
  3337  00045E  6A4D               	clrf	(??_SIM800xHTTPRead+3)^0,c
  3338  000460  C046  FFD9         	movff	SIM800xHTTPRead@cnt,fsr2l
  3339  000464  C047  FFDA         	movff	SIM800xHTTPRead@cnt+1,fsr2h
  3340  000468  C04A  FFDE         	movff	??_SIM800xHTTPRead,postinc2
  3341  00046C  C04B  FFDE         	movff	??_SIM800xHTTPRead+1,postinc2
  3342  000470  C04C  FFDE         	movff	??_SIM800xHTTPRead+2,postinc2
  3343  000474  C04D  FFDE         	movff	??_SIM800xHTTPRead+3,postinc2
  3344                           
  3345                           ;SIM800x.c: 1641: uint32_t sz = *cnt;
  3346  000478  C046  FFD9         	movff	SIM800xHTTPRead@cnt,fsr2l
  3347  00047C  C047  FFDA         	movff	SIM800xHTTPRead@cnt+1,fsr2h
  3348  000480  CFDE F0D5          	movff	postinc2,SIM800xHTTPRead@sz
  3349  000484  CFDE F0D6          	movff	postinc2,SIM800xHTTPRead@sz+1
  3350  000488  CFDE F0D7          	movff	postinc2,SIM800xHTTPRead@sz+2
  3351  00048C  CFDE F0D8          	movff	postinc2,SIM800xHTTPRead@sz+3
  3352                           
  3353                           ;SIM800x.c: 1642: while((sz--) != 0)
  3354  000490  D017               	goto	l5321
  3355  000492                     l5313:
  3356  000492  FFFF               	dw	65535	; assembler added errata NOP
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;SIM800x.c: 1643: {;SIM800x.c: 1644: if(SIM800xSDMRxAvailable())
  3360  000494  EC25  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  3361  000498  5013               	movf	?_SIM800xSDMRxAvailable^0,w,c
  3362  00049A  1014               	iorwf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  3363  00049C  B4D8               	btfsc	status,2,c
  3364  00049E  D009               	goto	l5319
  3365                           
  3366                           ;SIM800x.c: 1645: {;SIM800x.c: 1646: *(data++) = SIM800xSDMReadByte();
  3367  0004A0  EC33  F00F         	call	_SIM800xSDMReadByte	;wreg free
  3368  0004A4  C03C  FFD9         	movff	SIM800xHTTPRead@data,fsr2l
  3369  0004A8  C03D  FFDA         	movff	SIM800xHTTPRead@data+1,fsr2h
  3370  0004AC  6EDF               	movwf	indf2,c
  3371  0004AE  4A3C               	infsnz	SIM800xHTTPRead@data^0,f,c
  3372  0004B0  2A3D               	incf	(SIM800xHTTPRead@data+1)^0,f,c
  3373  0004B2                     l5319:
  3374  0004B2  FFFF               	dw	65535	; assembler added errata NOP
  3375                           
  3376                           ;SIM800x.c: 1647: };SIM800x.c: 1648: *data = '\0';
  3377  0004B4  C03C  FFD9         	movff	SIM800xHTTPRead@data,fsr2l
  3378  0004B8  C03D  FFDA         	movff	SIM800xHTTPRead@data+1,fsr2h
  3379  0004BC  0E00               	movlw	0
  3380  0004BE  6EDF               	movwf	indf2,c
  3381  0004C0                     l5321:
  3382  0004C0  FFFF               	dw	65535	; assembler added errata NOP
  3383  0004C2  0100               	movlb	0	; () banked
  3384  0004C4  07D5               	decf	SIM800xHTTPRead@sz& (0+255),f,b
  3385  0004C6  0E00               	movlw	0
  3386  0004C8  5BD6               	subwfb	(SIM800xHTTPRead@sz+1)& (0+255),f,b
  3387  0004CA  5BD7               	subwfb	(SIM800xHTTPRead@sz+2)& (0+255),f,b
  3388  0004CC  5BD8               	subwfb	(SIM800xHTTPRead@sz+3)& (0+255),f,b
  3389  0004CE  29D5               	incf	SIM800xHTTPRead@sz& (0+255),w,b
  3390  0004D0  E1E0               	bnz	l5313
  3391  0004D2  29D6               	incf	(SIM800xHTTPRead@sz+1)& (0+255),w,b
  3392  0004D4  E1DE               	bnz	l5313
  3393  0004D6  29D7               	incf	(SIM800xHTTPRead@sz+2)& (0+255),w,b
  3394  0004D8  E1DC               	bnz	l5313
  3395  0004DA  29D8               	incf	(SIM800xHTTPRead@sz+3)& (0+255),w,b
  3396  0004DC  A4D8               	btfss	status,2,c
  3397  0004DE  D7D9               	goto	l5313
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;SIM800x.c: 1649: };SIM800x.c: 1651: time = Tick_ms();
  3401  0004E0  EC83  F010         	call	_Tick_ms	;wreg free
  3402  0004E4  C00E  F0D9         	movff	?_Tick_ms,SIM800xHTTPRead@time
  3403  0004E8  C00F  F0DA         	movff	?_Tick_ms+1,SIM800xHTTPRead@time+1
  3404  0004EC  C010  F0DB         	movff	?_Tick_ms+2,SIM800xHTTPRead@time+2
  3405  0004F0  C011  F0DC         	movff	?_Tick_ms+3,SIM800xHTTPRead@time+3
  3406                           
  3407                           ;SIM800x.c: 1652: while(SIM800xSDMRxAvailable() < 6)
  3408  0004F4  D01A               	goto	l5331
  3409  0004F6                     l5325:
  3410  0004F6  FFFF               	dw	65535	; assembler added errata NOP
  3411                           
  3412                           ;SIM800x.c: 1653: {;SIM800x.c: 1654: if((Tick_ms() - time) > Tout)
  3413  0004F8  EC83  F010         	call	_Tick_ms	;wreg free
  3414  0004FC  0100               	movlb	0	; () banked
  3415  0004FE  51D9               	movf	SIM800xHTTPRead@time& (0+255),w,b
  3416  000500  5C0E               	subwf	?_Tick_ms^0,w,c
  3417  000502  6E4A               	movwf	??_SIM800xHTTPRead^0,c
  3418  000504  51DA               	movf	(SIM800xHTTPRead@time+1)& (0+255),w,b
  3419  000506  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  3420  000508  6E4B               	movwf	(??_SIM800xHTTPRead+1)^0,c
  3421  00050A  51DB               	movf	(SIM800xHTTPRead@time+2)& (0+255),w,b
  3422  00050C  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  3423  00050E  6E4C               	movwf	(??_SIM800xHTTPRead+2)^0,c
  3424  000510  51DC               	movf	(SIM800xHTTPRead@time+3)& (0+255),w,b
  3425  000512  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  3426  000514  6E4D               	movwf	(??_SIM800xHTTPRead+3)^0,c
  3427  000516  504A               	movf	??_SIM800xHTTPRead^0,w,c
  3428  000518  5C64               	subwf	_Tout^0,w,c
  3429  00051A  504B               	movf	(??_SIM800xHTTPRead+1)^0,w,c
  3430  00051C  5865               	subwfb	(_Tout+1)^0,w,c
  3431  00051E  504C               	movf	(??_SIM800xHTTPRead+2)^0,w,c
  3432  000520  5866               	subwfb	(_Tout+2)^0,w,c
  3433  000522  504D               	movf	(??_SIM800xHTTPRead+3)^0,w,c
  3434  000524  5867               	subwfb	(_Tout+3)^0,w,c
  3435  000526  A0D8               	btfss	status,0,c
  3436  000528  D762               	goto	u4780
  3437  00052A                     l5331:
  3438  00052A  FFFF               	dw	65535	; assembler added errata NOP
  3439  00052C  EC25  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  3440  000530  5014               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  3441  000532  E104               	bnz	u4860
  3442  000534  0E06               	movlw	6
  3443  000536  5C13               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  3444  000538  A0D8               	btfss	status,0,c
  3445  00053A  D7DD               	goto	l5325
  3446  00053C                     u4860:
  3447                           
  3448                           ;SIM800x.c: 1657: };SIM800x.c: 1658: };SIM800x.c: 1660: if(SIM800xSDMPeek(2) == 'O')
  3449  00053C  0E02               	movlw	2
  3450  00053E  ECCA  F00F         	call	_SIM800xSDMPeek
  3451  000542  0A4F               	xorlw	79
  3452  000544  A4D8               	btfss	status,2,c
  3453  000546  D702               	goto	u4760
  3454                           
  3455                           ;SIM800x.c: 1661: {;SIM800x.c: 1662: return OK;
  3456  000548  0E00               	movlw	0
  3457  00054A  D024               	goto	l713
  3458  00054C                     l5339:
  3459  00054C  FFFF               	dw	65535	; assembler added errata NOP
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;SIM800x.c: 1666: else if((str[0] == '+') && (str[3] == 'E'))
  3463  00054E  0E2B               	movlw	43
  3464  000550  19B7               	xorwf	SIM800xHTTPRead@str& (0+255),w,b
  3465  000552  A4D8               	btfss	status,2,c
  3466  000554  D6FB               	goto	u4760
  3467                           
  3468                           ; BSR set to: 0
  3469  000556  0E45               	movlw	69
  3470  000558  19BA               	xorwf	(SIM800xHTTPRead@str+3)& (0+255),w,b
  3471  00055A  A4D8               	btfss	status,2,c
  3472  00055C  D6F7               	goto	u4760
  3473                           
  3474                           ; BSR set to: 0
  3475                           ;SIM800x.c: 1667: {;SIM800x.c: 1668: str[(uint8_t)res] = '\0';
  3476  00055E  0EB7               	movlw	low SIM800xHTTPRead@str
  3477  000560  25DD               	addwf	SIM800xHTTPRead@res& (0+255),w,b
  3478  000562  6ED9               	movwf	fsr2l,c
  3479  000564  6ADA               	clrf	fsr2h,c
  3480  000566  0E00               	movlw	high SIM800xHTTPRead@str
  3481  000568  22DA               	addwfc	fsr2h,f,c
  3482  00056A  0E00               	movlw	0
  3483  00056C  6EDF               	movwf	indf2,c
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;SIM800x.c: 1669: *errcode = (uint16_t)StrToInt(str, 12, (uint16_t)(res - 1));
  3487  00056E  0EB7               	movlw	low SIM800xHTTPRead@str
  3488  000570  6E1A               	movwf	StrToInt@str^0,c
  3489  000572  0E00               	movlw	high SIM800xHTTPRead@str
  3490  000574  6E1B               	movwf	(StrToInt@str+1)^0,c
  3491  000576  0E0C               	movlw	12
  3492  000578  6E1C               	movwf	StrToInt@start^0,c
  3493  00057A  05DD               	decf	SIM800xHTTPRead@res& (0+255),w,b
  3494  00057C  6E1D               	movwf	StrToInt@stop^0,c
  3495  00057E  ECBD  F007         	call	_StrToInt	;wreg free
  3496  000582  C048  FFD9         	movff	SIM800xHTTPRead@errcode,fsr2l
  3497  000586  C049  FFDA         	movff	SIM800xHTTPRead@errcode+1,fsr2h
  3498  00058A  C01A  FFDE         	movff	?_StrToInt,postinc2
  3499  00058E  C01B  FFDD         	movff	?_StrToInt+1,postdec2
  3500                           
  3501                           ;SIM800x.c: 1670: return CME_ERROR;
  3502  000592  0E02               	movlw	2
  3503  000594                     l713:
  3504  000594  FFFF               	dw	65535	; assembler added errata NOP
  3505  000596  0012               	return		;funcret
  3506  000598  FFFF               	dw	65535	; errata NOP
  3507  00059A                     __end_of_SIM800xHTTPRead:
  3508                           	callstack 0
  3509                           
  3510 ;; *************** function _SIM800xHTTPInputData *****************
  3511 ;; Defined at:
  3512 ;;		line 1486 in file "Src/SIM800x.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;  data            2   59[COMRAM] PTR unsigned char 
  3515 ;;		 -> txmessage(100), 
  3516 ;;  cnt             4   61[COMRAM] unsigned long 
  3517 ;;  timeout         4   65[COMRAM] unsigned long 
  3518 ;;  errcode         2   69[COMRAM] PTR unsigned int 
  3519 ;;		 -> SystemTask@errcode(2), 
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;  str            30    0[BANK0 ] unsigned char [30]
  3522 ;;  time            4   34[BANK0 ] unsigned long 
  3523 ;;  len             4   30[BANK0 ] unsigned long 
  3524 ;;  res             2   38[BANK0 ] int 
  3525 ;; Return value:  Size  Location     Type
  3526 ;;                  1    wreg      enum E2115
  3527 ;; Registers used:
  3528 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3534 ;;      Params:        12       0       0       0       0       0       0
  3535 ;;      Locals:         0      40       0       0       0       0       0
  3536 ;;      Temps:          4       0       0       0       0       0       0
  3537 ;;      Totals:        16      40       0       0       0       0       0
  3538 ;;Total ram usage:       56 bytes
  3539 ;; Hardware stack levels used: 1
  3540 ;; Hardware stack levels required when called: 6
  3541 ;; This function calls:
  3542 ;;		_SIM800xSDMFlush
  3543 ;;		_SIM800xSDMPeek
  3544 ;;		_SIM800xSDMPrint
  3545 ;;		_SIM800xSDMReadF1Pkt
  3546 ;;		_SIM800xSDMRxAvailable
  3547 ;;		_SIM800xSDMSendBytes
  3548 ;;		_StrToInt
  3549 ;;		_Tick_ms
  3550 ;;		_sprintf
  3551 ;;		_strlen
  3552 ;; This function is called by:
  3553 ;;		_SystemTask
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557                           	psect	text6
  3558  000A1E                     __ptext6:
  3559                           	callstack 0
  3560  000A1E                     _SIM800xHTTPInputData:
  3561                           	callstack 0
  3562  000A1E  FFFF               	dw	65535	; assembler added errata NOP
  3563                           
  3564                           ;SIM800x.c: 1488: uint32_t len = strlen(data);
  3565                           
  3566                           ;incstack = 0
  3567  000A20  C03C  F00E         	movff	SIM800xHTTPInputData@data,strlen@s
  3568  000A24  C03D  F00F         	movff	SIM800xHTTPInputData@data+1,strlen@s+1
  3569  000A28  EC5A  F00F         	call	_strlen	;wreg free
  3570  000A2C  C00E  F0D5         	movff	?_strlen,SIM800xHTTPInputData@len
  3571  000A30  C00F  F0D6         	movff	?_strlen+1,SIM800xHTTPInputData@len+1
  3572  000A34  0100               	movlb	0	; () banked
  3573  000A36  6BD7               	clrf	(SIM800xHTTPInputData@len+2)& (0+255),b
  3574  000A38  6BD8               	clrf	(SIM800xHTTPInputData@len+3)& (0+255),b
  3575                           
  3576                           ; BSR set to: 0
  3577                           ;SIM800x.c: 1490: if((cnt > 0x4E000) || (len > 0x4E000) || (timeout < 1000) || (timeout 
      +                          > 120000))
  3578  000A3A  5041               	movf	(SIM800xHTTPInputData@cnt+3)^0,w,c
  3579  000A3C  E106               	bnz	u4501
  3580  000A3E  043E               	decf	SIM800xHTTPInputData@cnt^0,w,c
  3581  000A40  0EE0               	movlw	224
  3582  000A42  583F               	subwfb	(SIM800xHTTPInputData@cnt+1)^0,w,c
  3583  000A44  0E04               	movlw	4
  3584  000A46  5840               	subwfb	(SIM800xHTTPInputData@cnt+2)^0,w,c
  3585  000A48  B0D8               	btfsc	status,0,c
  3586  000A4A                     u4501:
  3587  000A4A  D0EB               	goto	l667
  3588                           
  3589                           ; BSR set to: 0
  3590  000A4C  51D8               	movf	(SIM800xHTTPInputData@len+3)& (0+255),w,b
  3591  000A4E  E106               	bnz	u4511
  3592  000A50  05D5               	decf	SIM800xHTTPInputData@len& (0+255),w,b
  3593  000A52  0EE0               	movlw	224
  3594  000A54  59D6               	subwfb	(SIM800xHTTPInputData@len+1)& (0+255),w,b
  3595  000A56  0E04               	movlw	4
  3596  000A58  59D7               	subwfb	(SIM800xHTTPInputData@len+2)& (0+255),w,b
  3597  000A5A  B0D8               	btfsc	status,0,c
  3598  000A5C                     u4511:
  3599  000A5C  D0E2               	goto	l667
  3600                           
  3601                           ; BSR set to: 0
  3602  000A5E  5045               	movf	(SIM800xHTTPInputData@timeout+3)^0,w,c
  3603  000A60  1044               	iorwf	(SIM800xHTTPInputData@timeout+2)^0,w,c
  3604  000A62  E106               	bnz	u4520
  3605  000A64  0EE8               	movlw	232
  3606  000A66  5C42               	subwf	SIM800xHTTPInputData@timeout^0,w,c
  3607  000A68  0E03               	movlw	3
  3608  000A6A  5843               	subwfb	(SIM800xHTTPInputData@timeout+1)^0,w,c
  3609  000A6C  A0D8               	btfss	status,0,c
  3610  000A6E  D0D9               	goto	l667
  3611  000A70                     u4520:
  3612                           
  3613                           ; BSR set to: 0
  3614  000A70  5045               	movf	(SIM800xHTTPInputData@timeout+3)^0,w,c
  3615  000A72  E109               	bnz	u4530
  3616  000A74  0EC1               	movlw	193
  3617  000A76  5C42               	subwf	SIM800xHTTPInputData@timeout^0,w,c
  3618  000A78  0ED4               	movlw	212
  3619  000A7A  5843               	subwfb	(SIM800xHTTPInputData@timeout+1)^0,w,c
  3620  000A7C  0E01               	movlw	1
  3621  000A7E  5844               	subwfb	(SIM800xHTTPInputData@timeout+2)^0,w,c
  3622  000A80  B0D8               	btfsc	status,0,c
  3623  000A82  D0CF               	goto	l667
  3624  000A84  D001               	goto	l5127
  3625  000A86                     u4530:
  3626  000A86  D0CD               	goto	l667
  3627  000A88                     l5127:
  3628  000A88  FFFF               	dw	65535	; assembler added errata NOP
  3629                           
  3630                           ; BSR set to: 0
  3631                           ;SIM800x.c: 1493: char str[30] = {0, 0, 0, 0};
  3632  000A8A  EE20  F0B7         	lfsr	2,SIM800xHTTPInputData@str
  3633  000A8E  0E1D               	movlw	29
  3634  000A90                     u4541:
  3635  000A90  6ADE               	clrf	postinc2,c
  3636  000A92  06E8               	decf	wreg,f,c
  3637  000A94  E2FD               	bc	u4541
  3638                           
  3639                           ; BSR set to: 0
  3640                           ;SIM800x.c: 1495: sprintf(str, "AT+HTTPDATA=%ld,%ld\r", cnt, timeout);
  3641  000A96  0EB7               	movlw	low SIM800xHTTPInputData@str
  3642  000A98  6E24               	movwf	sprintf@sp^0,c
  3643  000A9A  0E00               	movlw	high SIM800xHTTPInputData@str
  3644  000A9C  6E25               	movwf	(sprintf@sp+1)^0,c
  3645  000A9E  0EEF               	movlw	low STR_96
  3646  000AA0  6E26               	movwf	sprintf@f^0,c
  3647  000AA2  0E7C               	movlw	high STR_96
  3648  000AA4  6E27               	movwf	(sprintf@f+1)^0,c
  3649  000AA6  C03E  F028         	movff	SIM800xHTTPInputData@cnt,?_sprintf+4
  3650  000AAA  C03F  F029         	movff	SIM800xHTTPInputData@cnt+1,?_sprintf+5
  3651  000AAE  C040  F02A         	movff	SIM800xHTTPInputData@cnt+2,?_sprintf+6
  3652  000AB2  C041  F02B         	movff	SIM800xHTTPInputData@cnt+3,?_sprintf+7
  3653  000AB6  C042  F02C         	movff	SIM800xHTTPInputData@timeout,?_sprintf+8
  3654  000ABA  C043  F02D         	movff	SIM800xHTTPInputData@timeout+1,?_sprintf+9
  3655  000ABE  C044  F02E         	movff	SIM800xHTTPInputData@timeout+2,?_sprintf+10
  3656  000AC2  C045  F02F         	movff	SIM800xHTTPInputData@timeout+3,?_sprintf+11
  3657  000AC6  ECCD  F002         	call	_sprintf	;wreg free
  3658                           
  3659                           ;SIM800x.c: 1496: SIM800xSDMFlush();
  3660  000ACA  EC8E  F010         	call	_SIM800xSDMFlush	;wreg free
  3661                           
  3662                           ;SIM800x.c: 1497: SIM800xSDMPrint(str);
  3663  000ACE  0EB7               	movlw	low SIM800xHTTPInputData@str
  3664  000AD0  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  3665  000AD2  0E00               	movlw	high SIM800xHTTPInputData@str
  3666  000AD4  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  3667  000AD6  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  3668                           
  3669                           ;SIM800x.c: 1499: uint32_t time = Tick_ms();
  3670  000ADA  EC83  F010         	call	_Tick_ms	;wreg free
  3671  000ADE  C00E  F0D9         	movff	?_Tick_ms,SIM800xHTTPInputData@time
  3672  000AE2  C00F  F0DA         	movff	?_Tick_ms+1,SIM800xHTTPInputData@time+1
  3673  000AE6  C010  F0DB         	movff	?_Tick_ms+2,SIM800xHTTPInputData@time+2
  3674  000AEA  C011  F0DC         	movff	?_Tick_ms+3,SIM800xHTTPInputData@time+3
  3675                           
  3676                           ;SIM800x.c: 1500: while(SIM800xSDMRxAvailable() < 6)
  3677  000AEE  D01A               	goto	l5141
  3678  000AF0                     l5137:
  3679  000AF0  FFFF               	dw	65535	; assembler added errata NOP
  3680                           
  3681                           ;SIM800x.c: 1501: {;SIM800x.c: 1502: if((Tick_ms() - time) > Tout)
  3682  000AF2  EC83  F010         	call	_Tick_ms	;wreg free
  3683  000AF6  0100               	movlb	0	; () banked
  3684  000AF8  51D9               	movf	SIM800xHTTPInputData@time& (0+255),w,b
  3685  000AFA  5C0E               	subwf	?_Tick_ms^0,w,c
  3686  000AFC  6E48               	movwf	??_SIM800xHTTPInputData^0,c
  3687  000AFE  51DA               	movf	(SIM800xHTTPInputData@time+1)& (0+255),w,b
  3688  000B00  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  3689  000B02  6E49               	movwf	(??_SIM800xHTTPInputData+1)^0,c
  3690  000B04  51DB               	movf	(SIM800xHTTPInputData@time+2)& (0+255),w,b
  3691  000B06  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  3692  000B08  6E4A               	movwf	(??_SIM800xHTTPInputData+2)^0,c
  3693  000B0A  51DC               	movf	(SIM800xHTTPInputData@time+3)& (0+255),w,b
  3694  000B0C  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  3695  000B0E  6E4B               	movwf	(??_SIM800xHTTPInputData+3)^0,c
  3696  000B10  5048               	movf	??_SIM800xHTTPInputData^0,w,c
  3697  000B12  5C64               	subwf	_Tout^0,w,c
  3698  000B14  5049               	movf	(??_SIM800xHTTPInputData+1)^0,w,c
  3699  000B16  5865               	subwfb	(_Tout+1)^0,w,c
  3700  000B18  504A               	movf	(??_SIM800xHTTPInputData+2)^0,w,c
  3701  000B1A  5866               	subwfb	(_Tout+2)^0,w,c
  3702  000B1C  504B               	movf	(??_SIM800xHTTPInputData+3)^0,w,c
  3703  000B1E  5867               	subwfb	(_Tout+3)^0,w,c
  3704  000B20  A0D8               	btfss	status,0,c
  3705  000B22  D07F               	goto	l667
  3706  000B24                     l5141:
  3707  000B24  FFFF               	dw	65535	; assembler added errata NOP
  3708  000B26  EC25  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  3709  000B2A  5014               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  3710  000B2C  E104               	bnz	u4560
  3711  000B2E  0E06               	movlw	6
  3712  000B30  5C13               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  3713  000B32  A0D8               	btfss	status,0,c
  3714  000B34  D7DD               	goto	l5137
  3715  000B36                     u4560:
  3716                           
  3717                           ;SIM800x.c: 1505: };SIM800x.c: 1506: };SIM800x.c: 1508: int res = SIM800xSDMReadF1Pkt(st
      +                          r);
  3718  000B36  0EB7               	movlw	low SIM800xHTTPInputData@str
  3719  000B38  6E17               	movwf	SIM800xSDMReadF1Pkt@data^0,c
  3720  000B3A  0E00               	movlw	high SIM800xHTTPInputData@str
  3721  000B3C  6E18               	movwf	(SIM800xSDMReadF1Pkt@data+1)^0,c
  3722  000B3E  EC27  F009         	call	_SIM800xSDMReadF1Pkt	;wreg free
  3723  000B42  C017  F0DD         	movff	?_SIM800xSDMReadF1Pkt,SIM800xHTTPInputData@res
  3724  000B46  C018  F0DE         	movff	?_SIM800xSDMReadF1Pkt+1,SIM800xHTTPInputData@res+1
  3725                           
  3726                           ;SIM800x.c: 1509: if(res < 0)
  3727  000B4A  0100               	movlb	0	; () banked
  3728  000B4C  BFDE               	btfsc	(SIM800xHTTPInputData@res+1)& (0+255),7,b
  3729  000B4E  D069               	goto	l667
  3730                           
  3731                           ; BSR set to: 0
  3732                           ;SIM800x.c: 1513: else if(str[0] == 'D')
  3733  000B50  0E44               	movlw	68
  3734  000B52  19B7               	xorwf	SIM800xHTTPInputData@str& (0+255),w,b
  3735  000B54  A4D8               	btfss	status,2,c
  3736  000B56  D03E               	goto	l5169
  3737                           
  3738                           ; BSR set to: 0
  3739                           ;SIM800x.c: 1514: {;SIM800x.c: 1515: SIM800xSDMFlush();
  3740  000B58  EC8E  F010         	call	_SIM800xSDMFlush	;wreg free
  3741                           
  3742                           ;SIM800x.c: 1517: SIM800xSDMSendBytes(data, cnt);
  3743  000B5C  C03C  F00E         	movff	SIM800xHTTPInputData@data,SIM800xSDMSendBytes@data
  3744  000B60  C03D  F00F         	movff	SIM800xHTTPInputData@data+1,SIM800xSDMSendBytes@data+1
  3745  000B64  C03E  F010         	movff	SIM800xHTTPInputData@cnt,SIM800xSDMSendBytes@cnt
  3746  000B68  C03F  F011         	movff	SIM800xHTTPInputData@cnt+1,SIM800xSDMSendBytes@cnt+1
  3747  000B6C  EC0C  F010         	call	_SIM800xSDMSendBytes	;wreg free
  3748                           
  3749                           ;SIM800x.c: 1519: time = Tick_ms();
  3750  000B70  EC83  F010         	call	_Tick_ms	;wreg free
  3751  000B74  C00E  F0D9         	movff	?_Tick_ms,SIM800xHTTPInputData@time
  3752  000B78  C00F  F0DA         	movff	?_Tick_ms+1,SIM800xHTTPInputData@time+1
  3753  000B7C  C010  F0DB         	movff	?_Tick_ms+2,SIM800xHTTPInputData@time+2
  3754  000B80  C011  F0DC         	movff	?_Tick_ms+3,SIM800xHTTPInputData@time+3
  3755                           
  3756                           ;SIM800x.c: 1520: while(SIM800xSDMRxAvailable() < 6)
  3757  000B84  D01A               	goto	l5163
  3758  000B86                     l5159:
  3759  000B86  FFFF               	dw	65535	; assembler added errata NOP
  3760                           
  3761                           ;SIM800x.c: 1521: {;SIM800x.c: 1522: if((Tick_ms() - time) > Tout)
  3762  000B88  EC83  F010         	call	_Tick_ms	;wreg free
  3763  000B8C  0100               	movlb	0	; () banked
  3764  000B8E  51D9               	movf	SIM800xHTTPInputData@time& (0+255),w,b
  3765  000B90  5C0E               	subwf	?_Tick_ms^0,w,c
  3766  000B92  6E48               	movwf	??_SIM800xHTTPInputData^0,c
  3767  000B94  51DA               	movf	(SIM800xHTTPInputData@time+1)& (0+255),w,b
  3768  000B96  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  3769  000B98  6E49               	movwf	(??_SIM800xHTTPInputData+1)^0,c
  3770  000B9A  51DB               	movf	(SIM800xHTTPInputData@time+2)& (0+255),w,b
  3771  000B9C  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  3772  000B9E  6E4A               	movwf	(??_SIM800xHTTPInputData+2)^0,c
  3773  000BA0  51DC               	movf	(SIM800xHTTPInputData@time+3)& (0+255),w,b
  3774  000BA2  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  3775  000BA4  6E4B               	movwf	(??_SIM800xHTTPInputData+3)^0,c
  3776  000BA6  5048               	movf	??_SIM800xHTTPInputData^0,w,c
  3777  000BA8  5C64               	subwf	_Tout^0,w,c
  3778  000BAA  5049               	movf	(??_SIM800xHTTPInputData+1)^0,w,c
  3779  000BAC  5865               	subwfb	(_Tout+1)^0,w,c
  3780  000BAE  504A               	movf	(??_SIM800xHTTPInputData+2)^0,w,c
  3781  000BB0  5866               	subwfb	(_Tout+2)^0,w,c
  3782  000BB2  504B               	movf	(??_SIM800xHTTPInputData+3)^0,w,c
  3783  000BB4  5867               	subwfb	(_Tout+3)^0,w,c
  3784  000BB6  A0D8               	btfss	status,0,c
  3785  000BB8  D034               	goto	l667
  3786  000BBA                     l5163:
  3787  000BBA  FFFF               	dw	65535	; assembler added errata NOP
  3788  000BBC  EC25  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  3789  000BC0  5014               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  3790  000BC2  E104               	bnz	u4600
  3791  000BC4  0E06               	movlw	6
  3792  000BC6  5C13               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  3793  000BC8  A0D8               	btfss	status,0,c
  3794  000BCA  D7DD               	goto	l5159
  3795  000BCC                     u4600:
  3796                           
  3797                           ;SIM800x.c: 1525: };SIM800x.c: 1526: };SIM800x.c: 1528: if(SIM800xSDMPeek(2) == 'O')
  3798  000BCC  0E02               	movlw	2
  3799  000BCE  ECCA  F00F         	call	_SIM800xSDMPeek
  3800  000BD2  D027               	goto	l667
  3801  000BD4                     l5169:
  3802  000BD4  FFFF               	dw	65535	; assembler added errata NOP
  3803                           
  3804                           ; BSR set to: 0
  3805                           ;SIM800x.c: 1531: else if(str[0] == 'O')
  3806  000BD6  0E4F               	movlw	79
  3807  000BD8  19B7               	xorwf	SIM800xHTTPInputData@str& (0+255),w,b
  3808  000BDA  B4D8               	btfsc	status,2,c
  3809  000BDC  D022               	goto	l667
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;SIM800x.c: 1535: else if(str[0] == 'E')
  3813  000BDE  0E45               	movlw	69
  3814  000BE0  19B7               	xorwf	SIM800xHTTPInputData@str& (0+255),w,b
  3815  000BE2  B4D8               	btfsc	status,2,c
  3816  000BE4  D01E               	goto	l667
  3817                           
  3818                           ; BSR set to: 0
  3819                           ;SIM800x.c: 1539: else if(str[0] == '+')
  3820  000BE6  0E2B               	movlw	43
  3821  000BE8  19B7               	xorwf	SIM800xHTTPInputData@str& (0+255),w,b
  3822  000BEA  A4D8               	btfss	status,2,c
  3823  000BEC  D01A               	goto	l667
  3824                           
  3825                           ; BSR set to: 0
  3826                           ;SIM800x.c: 1540: {;SIM800x.c: 1541: str[(uint8_t)res] = '\0';
  3827  000BEE  0EB7               	movlw	low SIM800xHTTPInputData@str
  3828  000BF0  25DD               	addwf	SIM800xHTTPInputData@res& (0+255),w,b
  3829  000BF2  6ED9               	movwf	fsr2l,c
  3830  000BF4  6ADA               	clrf	fsr2h,c
  3831  000BF6  0E00               	movlw	high SIM800xHTTPInputData@str
  3832  000BF8  22DA               	addwfc	fsr2h,f,c
  3833  000BFA  0E00               	movlw	0
  3834  000BFC  6EDF               	movwf	indf2,c
  3835                           
  3836                           ; BSR set to: 0
  3837                           ;SIM800x.c: 1542: *errcode = (uint16_t)StrToInt(str, 12, (uint16_t)(res - 1));
  3838  000BFE  0EB7               	movlw	low SIM800xHTTPInputData@str
  3839  000C00  6E1A               	movwf	StrToInt@str^0,c
  3840  000C02  0E00               	movlw	high SIM800xHTTPInputData@str
  3841  000C04  6E1B               	movwf	(StrToInt@str+1)^0,c
  3842  000C06  0E0C               	movlw	12
  3843  000C08  6E1C               	movwf	StrToInt@start^0,c
  3844  000C0A  05DD               	decf	SIM800xHTTPInputData@res& (0+255),w,b
  3845  000C0C  6E1D               	movwf	StrToInt@stop^0,c
  3846  000C0E  ECBD  F007         	call	_StrToInt	;wreg free
  3847  000C12  C046  FFD9         	movff	SIM800xHTTPInputData@errcode,fsr2l
  3848  000C16  C047  FFDA         	movff	SIM800xHTTPInputData@errcode+1,fsr2h
  3849  000C1A  C01A  FFDE         	movff	?_StrToInt,postinc2
  3850  000C1E  C01B  FFDD         	movff	?_StrToInt+1,postdec2
  3851  000C22                     l667:
  3852  000C22  FFFF               	dw	65535	; assembler added errata NOP
  3853  000C24  0012               	return		;funcret
  3854  000C26  FFFF               	dw	65535	; errata NOP
  3855  000C28                     __end_of_SIM800xHTTPInputData:
  3856                           	callstack 0
  3857                           
  3858 ;; *************** function _SIM800xSDMSendBytes *****************
  3859 ;; Defined at:
  3860 ;;		line 137 in file "Src/SIM800x_SDM.c"
  3861 ;; Parameters:    Size  Location     Type
  3862 ;;  data            2   13[COMRAM] PTR unsigned char 
  3863 ;;		 -> txmessage(100), 
  3864 ;;  cnt             2   15[COMRAM] unsigned int 
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;		None
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  1    wreg      void 
  3869 ;; Registers used:
  3870 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3876 ;;      Params:         4       0       0       0       0       0       0
  3877 ;;      Locals:         0       0       0       0       0       0       0
  3878 ;;      Temps:          0       0       0       0       0       0       0
  3879 ;;      Totals:         4       0       0       0       0       0       0
  3880 ;;Total ram usage:        4 bytes
  3881 ;; Hardware stack levels used: 1
  3882 ;; Hardware stack levels required when called: 3
  3883 ;; This function calls:
  3884 ;;		Nothing
  3885 ;; This function is called by:
  3886 ;;		_SIM800xHTTPInputData
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           	psect	text7
  3891  002018                     __ptext7:
  3892                           	callstack 0
  3893  002018                     _SIM800xSDMSendBytes:
  3894                           	callstack 0
  3895  002018  FFFF               	dw	65535	; assembler added errata NOP
  3896                           
  3897                           ;SIM800x_SDM.c: 140: while((cnt--) != 0)
  3898                           
  3899                           ;incstack = 0
  3900  00201A  D00B               	goto	l4765
  3901  00201C                     l849:
  3902  00201C  FFFF               	dw	65535	; assembler added errata NOP
  3903  00201E  A2AC               	btfss	172,1,c	;volatile
  3904  002020  D7FD               	goto	l849
  3905  002022  C00E  FFD9         	movff	SIM800xSDMSendBytes@data,fsr2l
  3906  002026  C00F  FFDA         	movff	SIM800xSDMSendBytes@data+1,fsr2h
  3907  00202A  50DF               	movf	indf2,w,c
  3908  00202C  6EAD               	movwf	173,c	;volatile
  3909  00202E  4A0E               	infsnz	SIM800xSDMSendBytes@data^0,f,c
  3910  002030  2A0F               	incf	(SIM800xSDMSendBytes@data+1)^0,f,c
  3911  002032                     l4765:
  3912  002032  FFFF               	dw	65535	; assembler added errata NOP
  3913  002034  0610               	decf	SIM800xSDMSendBytes@cnt^0,f,c
  3914  002036  A0D8               	btfss	status,0,c
  3915  002038  0611               	decf	(SIM800xSDMSendBytes@cnt+1)^0,f,c
  3916  00203A  2810               	incf	SIM800xSDMSendBytes@cnt^0,w,c
  3917  00203C  E1EF               	bnz	l849
  3918  00203E  2811               	incf	(SIM800xSDMSendBytes@cnt+1)^0,w,c
  3919  002040  B4D8               	btfsc	status,2,c
  3920  002042  0012               	return		;funcret
  3921  002044  FFFF               	dw	65535	; assembler added errata NOP
  3922  002046  D7EA               	goto	l849
  3923  002048  FFFF               	dw	65535	; errata NOP
  3924  00204A                     __end_of_SIM800xSDMSendBytes:
  3925                           	callstack 0
  3926                           
  3927 ;; *************** function _SIM800xHTTPAction *****************
  3928 ;; Defined at:
  3929 ;;		line 1550 in file "Src/SIM800x.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;  method          1    wreg     unsigned char 
  3932 ;;  statuscode      2   59[COMRAM] PTR unsigned int 
  3933 ;;		 -> SystemTask@scode(2), 
  3934 ;;  cnt             2   61[COMRAM] PTR unsigned long 
  3935 ;;		 -> SystemTask@cnt(4), 
  3936 ;;  tout            4   63[COMRAM] unsigned long 
  3937 ;;  errcode         2   67[COMRAM] PTR unsigned int 
  3938 ;;		 -> SystemTask@errcode(2), 
  3939 ;; Auto vars:     Size  Location     Type
  3940 ;;  method          1   34[BANK0 ] unsigned char 
  3941 ;;  t               4   30[BANK0 ] unsigned long 
  3942 ;;  str            30    0[BANK0 ] unsigned char [30]
  3943 ;;  time            4   35[BANK0 ] unsigned long 
  3944 ;;  res             2   39[BANK0 ] int 
  3945 ;; Return value:  Size  Location     Type
  3946 ;;                  1    wreg      enum E2115
  3947 ;; Registers used:
  3948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3949 ;; Tracked objects:
  3950 ;;		On entry : 0/0
  3951 ;;		On exit  : 0/0
  3952 ;;		Unchanged: 0/0
  3953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3954 ;;      Params:        10       0       0       0       0       0       0
  3955 ;;      Locals:         0      41       0       0       0       0       0
  3956 ;;      Temps:          4       0       0       0       0       0       0
  3957 ;;      Totals:        14      41       0       0       0       0       0
  3958 ;;Total ram usage:       55 bytes
  3959 ;; Hardware stack levels used: 1
  3960 ;; Hardware stack levels required when called: 6
  3961 ;; This function calls:
  3962 ;;		_SIM800xSDMFlush
  3963 ;;		_SIM800xSDMPrint
  3964 ;;		_SIM800xSDMReadF1Pkt
  3965 ;;		_SIM800xSDMRxAvailable
  3966 ;;		_StrToInt
  3967 ;;		_Tick_ms
  3968 ;;		_sprintf
  3969 ;; This function is called by:
  3970 ;;		_SystemTask
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974                           	psect	text8
  3975  0007FC                     __ptext8:
  3976                           	callstack 0
  3977  0007FC                     _SIM800xHTTPAction:
  3978                           	callstack 0
  3979  0007FC  FFFF               	dw	65535	; assembler added errata NOP
  3980                           
  3981                           ;incstack = 0
  3982                           ;SIM800xHTTPAction@method stored from wreg
  3983  0007FE  0100               	movlb	0	; () banked
  3984  000800  6FD9               	movwf	SIM800xHTTPAction@method& (0+255),b
  3985                           
  3986                           ;SIM800x.c: 1553: if(method > 3)
  3987  000802  0E03               	movlw	3
  3988  000804  0100               	movlb	0	; () banked
  3989  000806  65D9               	cpfsgt	SIM800xHTTPAction@method& (0+255),b
  3990  000808  D003               	goto	l5195
  3991  00080A                     u4640:
  3992  00080A  FFFF               	dw	65535	; assembler added errata NOP
  3993                           
  3994                           ; BSR set to: 0
  3995                           ;SIM800x.c: 1554: return ERROR;
  3996  00080C  0E01               	movlw	1
  3997  00080E  D104               	goto	l691
  3998  000810                     l5195:
  3999  000810  FFFF               	dw	65535	; assembler added errata NOP
  4000                           
  4001                           ; BSR set to: 0
  4002                           ;SIM800x.c: 1556: char str[30] = {0, 0, 0, 0};
  4003  000812  EE20  F0B7         	lfsr	2,SIM800xHTTPAction@str
  4004  000816  0E1D               	movlw	29
  4005  000818                     u4651:
  4006  000818  6ADE               	clrf	postinc2,c
  4007  00081A  06E8               	decf	wreg,f,c
  4008  00081C  E2FD               	bc	u4651
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;SIM800x.c: 1558: sprintf(str, "AT+HTTPACTION=%u\r", (uint8_t)(method & 0x03));
  4012  00081E  0EB7               	movlw	low SIM800xHTTPAction@str
  4013  000820  6E24               	movwf	sprintf@sp^0,c
  4014  000822  0E00               	movlw	high SIM800xHTTPAction@str
  4015  000824  6E25               	movwf	(sprintf@sp+1)^0,c
  4016  000826  0E91               	movlw	low STR_97
  4017  000828  6E26               	movwf	sprintf@f^0,c
  4018  00082A  0E7D               	movlw	high STR_97
  4019  00082C  6E27               	movwf	(sprintf@f+1)^0,c
  4020  00082E  C0D9  F046         	movff	SIM800xHTTPAction@method,??_SIM800xHTTPAction
  4021  000832  0E03               	movlw	3
  4022  000834  1646               	andwf	??_SIM800xHTTPAction^0,f,c
  4023  000836  5046               	movf	??_SIM800xHTTPAction^0,w,c
  4024  000838  6E28               	movwf	(?_sprintf+4)^0,c
  4025  00083A  6A29               	clrf	(?_sprintf+5)^0,c
  4026  00083C  ECCD  F002         	call	_sprintf	;wreg free
  4027                           
  4028                           ;SIM800x.c: 1559: SIM800xSDMFlush();
  4029  000840  EC8E  F010         	call	_SIM800xSDMFlush	;wreg free
  4030                           
  4031                           ;SIM800x.c: 1560: SIM800xSDMPrint(str);
  4032  000844  0EB7               	movlw	low SIM800xHTTPAction@str
  4033  000846  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  4034  000848  0E00               	movlw	high SIM800xHTTPAction@str
  4035  00084A  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  4036  00084C  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  4037                           
  4038                           ;SIM800x.c: 1562: uint32_t time = Tick_ms();
  4039  000850  EC83  F010         	call	_Tick_ms	;wreg free
  4040  000854  C00E  F0DA         	movff	?_Tick_ms,SIM800xHTTPAction@time
  4041  000858  C00F  F0DB         	movff	?_Tick_ms+1,SIM800xHTTPAction@time+1
  4042  00085C  C010  F0DC         	movff	?_Tick_ms+2,SIM800xHTTPAction@time+2
  4043  000860  C011  F0DD         	movff	?_Tick_ms+3,SIM800xHTTPAction@time+3
  4044                           
  4045                           ;SIM800x.c: 1563: while(SIM800xSDMRxAvailable() < 6)
  4046  000864  D01D               	goto	l5211
  4047  000866                     l5205:
  4048  000866  FFFF               	dw	65535	; assembler added errata NOP
  4049                           
  4050                           ;SIM800x.c: 1564: {;SIM800x.c: 1565: if((Tick_ms() - time) > Tout)
  4051  000868  EC83  F010         	call	_Tick_ms	;wreg free
  4052  00086C  0100               	movlb	0	; () banked
  4053  00086E  51DA               	movf	SIM800xHTTPAction@time& (0+255),w,b
  4054  000870  5C0E               	subwf	?_Tick_ms^0,w,c
  4055  000872  6E46               	movwf	??_SIM800xHTTPAction^0,c
  4056  000874  51DB               	movf	(SIM800xHTTPAction@time+1)& (0+255),w,b
  4057  000876  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  4058  000878  6E47               	movwf	(??_SIM800xHTTPAction+1)^0,c
  4059  00087A  51DC               	movf	(SIM800xHTTPAction@time+2)& (0+255),w,b
  4060  00087C  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  4061  00087E  6E48               	movwf	(??_SIM800xHTTPAction+2)^0,c
  4062  000880  51DD               	movf	(SIM800xHTTPAction@time+3)& (0+255),w,b
  4063  000882  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  4064  000884  6E49               	movwf	(??_SIM800xHTTPAction+3)^0,c
  4065  000886  5046               	movf	??_SIM800xHTTPAction^0,w,c
  4066  000888  5C64               	subwf	_Tout^0,w,c
  4067  00088A  5047               	movf	(??_SIM800xHTTPAction+1)^0,w,c
  4068  00088C  5865               	subwfb	(_Tout+1)^0,w,c
  4069  00088E  5048               	movf	(??_SIM800xHTTPAction+2)^0,w,c
  4070  000890  5866               	subwfb	(_Tout+2)^0,w,c
  4071  000892  5049               	movf	(??_SIM800xHTTPAction+3)^0,w,c
  4072  000894  5867               	subwfb	(_Tout+3)^0,w,c
  4073  000896  B0D8               	btfsc	status,0,c
  4074  000898  D003               	goto	l5211
  4075  00089A                     u4660:
  4076  00089A  FFFF               	dw	65535	; assembler added errata NOP
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;SIM800x.c: 1566: {;SIM800x.c: 1567: return TIME_OUT;
  4080  00089C  0E05               	movlw	5
  4081  00089E  D0BC               	goto	l691
  4082  0008A0                     l5211:
  4083  0008A0  FFFF               	dw	65535	; assembler added errata NOP
  4084  0008A2  EC25  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  4085  0008A6  5014               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  4086  0008A8  E104               	bnz	u4670
  4087  0008AA  0E06               	movlw	6
  4088  0008AC  5C13               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  4089  0008AE  A0D8               	btfss	status,0,c
  4090  0008B0  D7DA               	goto	l5205
  4091  0008B2                     u4670:
  4092                           
  4093                           ;SIM800x.c: 1568: };SIM800x.c: 1569: };SIM800x.c: 1571: int res = SIM800xSDMReadF1Pkt(st
      +                          r);
  4094  0008B2  0EB7               	movlw	low SIM800xHTTPAction@str
  4095  0008B4  6E17               	movwf	SIM800xSDMReadF1Pkt@data^0,c
  4096  0008B6  0E00               	movlw	high SIM800xHTTPAction@str
  4097  0008B8  6E18               	movwf	(SIM800xSDMReadF1Pkt@data+1)^0,c
  4098  0008BA  EC27  F009         	call	_SIM800xSDMReadF1Pkt	;wreg free
  4099  0008BE  C017  F0DE         	movff	?_SIM800xSDMReadF1Pkt,SIM800xHTTPAction@res
  4100  0008C2  C018  F0DF         	movff	?_SIM800xSDMReadF1Pkt+1,SIM800xHTTPAction@res+1
  4101                           
  4102                           ;SIM800x.c: 1572: if(res < 0)
  4103  0008C6  0100               	movlb	0	; () banked
  4104  0008C8  BFDF               	btfsc	(SIM800xHTTPAction@res+1)& (0+255),7,b
  4105  0008CA  D7E7               	goto	u4660
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;SIM800x.c: 1576: else if(str[0] == 'O')
  4109  0008CC  0E4F               	movlw	79
  4110  0008CE  19B7               	xorwf	SIM800xHTTPAction@str& (0+255),w,b
  4111  0008D0  A4D8               	btfss	status,2,c
  4112  0008D2  D082               	goto	l5251
  4113                           
  4114                           ; BSR set to: 0
  4115                           ;SIM800x.c: 1577: {;SIM800x.c: 1579: uint32_t t = (uint32_t)(tout + 5000);
  4116  0008D4  0E88               	movlw	136
  4117  0008D6  2440               	addwf	SIM800xHTTPAction@tout^0,w,c
  4118  0008D8  6FD5               	movwf	SIM800xHTTPAction@t& (0+255),b
  4119  0008DA  0E13               	movlw	19
  4120  0008DC  2041               	addwfc	(SIM800xHTTPAction@tout+1)^0,w,c
  4121  0008DE  6FD6               	movwf	(SIM800xHTTPAction@t+1)& (0+255),b
  4122  0008E0  0E00               	movlw	0
  4123  0008E2  2042               	addwfc	(SIM800xHTTPAction@tout+2)^0,w,c
  4124  0008E4  6FD7               	movwf	(SIM800xHTTPAction@t+2)& (0+255),b
  4125  0008E6  0E00               	movlw	0
  4126  0008E8  2043               	addwfc	(SIM800xHTTPAction@tout+3)^0,w,c
  4127  0008EA  6FD8               	movwf	(SIM800xHTTPAction@t+3)& (0+255),b
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;SIM800x.c: 1580: time = Tick_ms();
  4131  0008EC  EC83  F010         	call	_Tick_ms	;wreg free
  4132  0008F0  C00E  F0DA         	movff	?_Tick_ms,SIM800xHTTPAction@time
  4133  0008F4  C00F  F0DB         	movff	?_Tick_ms+1,SIM800xHTTPAction@time+1
  4134  0008F8  C010  F0DC         	movff	?_Tick_ms+2,SIM800xHTTPAction@time+2
  4135  0008FC  C011  F0DD         	movff	?_Tick_ms+3,SIM800xHTTPAction@time+3
  4136                           
  4137                           ;SIM800x.c: 1581: while(SIM800xSDMRxAvailable() < 24)
  4138  000900  D01A               	goto	l5235
  4139  000902                     l5229:
  4140  000902  FFFF               	dw	65535	; assembler added errata NOP
  4141                           
  4142                           ;SIM800x.c: 1582: {;SIM800x.c: 1583: if((Tick_ms() - time) > t)
  4143  000904  EC83  F010         	call	_Tick_ms	;wreg free
  4144  000908  0100               	movlb	0	; () banked
  4145  00090A  51DA               	movf	SIM800xHTTPAction@time& (0+255),w,b
  4146  00090C  5C0E               	subwf	?_Tick_ms^0,w,c
  4147  00090E  6E46               	movwf	??_SIM800xHTTPAction^0,c
  4148  000910  51DB               	movf	(SIM800xHTTPAction@time+1)& (0+255),w,b
  4149  000912  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  4150  000914  6E47               	movwf	(??_SIM800xHTTPAction+1)^0,c
  4151  000916  51DC               	movf	(SIM800xHTTPAction@time+2)& (0+255),w,b
  4152  000918  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  4153  00091A  6E48               	movwf	(??_SIM800xHTTPAction+2)^0,c
  4154  00091C  51DD               	movf	(SIM800xHTTPAction@time+3)& (0+255),w,b
  4155  00091E  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  4156  000920  6E49               	movwf	(??_SIM800xHTTPAction+3)^0,c
  4157  000922  5046               	movf	??_SIM800xHTTPAction^0,w,c
  4158  000924  5DD5               	subwf	SIM800xHTTPAction@t& (0+255),w,b
  4159  000926  5047               	movf	(??_SIM800xHTTPAction+1)^0,w,c
  4160  000928  59D6               	subwfb	(SIM800xHTTPAction@t+1)& (0+255),w,b
  4161  00092A  5048               	movf	(??_SIM800xHTTPAction+2)^0,w,c
  4162  00092C  59D7               	subwfb	(SIM800xHTTPAction@t+2)& (0+255),w,b
  4163  00092E  5049               	movf	(??_SIM800xHTTPAction+3)^0,w,c
  4164  000930  59D8               	subwfb	(SIM800xHTTPAction@t+3)& (0+255),w,b
  4165  000932  A0D8               	btfss	status,0,c
  4166  000934  D7B2               	goto	u4660
  4167  000936                     l5235:
  4168  000936  FFFF               	dw	65535	; assembler added errata NOP
  4169  000938  EC25  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  4170  00093C  5014               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  4171  00093E  E104               	bnz	u4710
  4172  000940  0E18               	movlw	24
  4173  000942  5C13               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  4174  000944  A0D8               	btfss	status,0,c
  4175  000946  D7DD               	goto	l5229
  4176  000948                     u4710:
  4177                           
  4178                           ;SIM800x.c: 1586: };SIM800x.c: 1587: };SIM800x.c: 1589: res = SIM800xSDMReadF1Pkt(str);
  4179  000948  0EB7               	movlw	low SIM800xHTTPAction@str
  4180  00094A  6E17               	movwf	SIM800xSDMReadF1Pkt@data^0,c
  4181  00094C  0E00               	movlw	high SIM800xHTTPAction@str
  4182  00094E  6E18               	movwf	(SIM800xSDMReadF1Pkt@data+1)^0,c
  4183  000950  EC27  F009         	call	_SIM800xSDMReadF1Pkt	;wreg free
  4184  000954  C017  F0DE         	movff	?_SIM800xSDMReadF1Pkt,SIM800xHTTPAction@res
  4185  000958  C018  F0DF         	movff	?_SIM800xSDMReadF1Pkt+1,SIM800xHTTPAction@res+1
  4186                           
  4187                           ;SIM800x.c: 1590: if(str[0] == '+')
  4188  00095C  0E2B               	movlw	43
  4189  00095E  0100               	movlb	0	; () banked
  4190  000960  19B7               	xorwf	SIM800xHTTPAction@str& (0+255),w,b
  4191  000962  A4D8               	btfss	status,2,c
  4192  000964  D752               	goto	u4640
  4193                           
  4194                           ; BSR set to: 0
  4195                           ;SIM800x.c: 1591: {;SIM800x.c: 1592: str[(uint8_t)res] = '\0';
  4196  000966  0EB7               	movlw	low SIM800xHTTPAction@str
  4197  000968  25DE               	addwf	SIM800xHTTPAction@res& (0+255),w,b
  4198  00096A  6ED9               	movwf	fsr2l,c
  4199  00096C  6ADA               	clrf	fsr2h,c
  4200  00096E  0E00               	movlw	high SIM800xHTTPAction@str
  4201  000970  22DA               	addwfc	fsr2h,f,c
  4202  000972  0E00               	movlw	0
  4203  000974  6EDF               	movwf	indf2,c
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;SIM800x.c: 1593: *statuscode = (uint16_t)StrToInt(str, 15, 17);
  4207  000976  0EB7               	movlw	low SIM800xHTTPAction@str
  4208  000978  6E1A               	movwf	StrToInt@str^0,c
  4209  00097A  0E00               	movlw	high SIM800xHTTPAction@str
  4210  00097C  6E1B               	movwf	(StrToInt@str+1)^0,c
  4211  00097E  0E0F               	movlw	15
  4212  000980  6E1C               	movwf	StrToInt@start^0,c
  4213  000982  0E11               	movlw	17
  4214  000984  6E1D               	movwf	StrToInt@stop^0,c
  4215  000986  ECBD  F007         	call	_StrToInt	;wreg free
  4216  00098A  C03C  FFD9         	movff	SIM800xHTTPAction@statuscode,fsr2l
  4217  00098E  C03D  FFDA         	movff	SIM800xHTTPAction@statuscode+1,fsr2h
  4218  000992  C01A  FFDE         	movff	?_StrToInt,postinc2
  4219  000996  C01B  FFDD         	movff	?_StrToInt+1,postdec2
  4220                           
  4221                           ;SIM800x.c: 1594: *cnt = (uint16_t)StrToInt(str, 19, (uint16_t)(res - 1));
  4222  00099A  0EB7               	movlw	low SIM800xHTTPAction@str
  4223  00099C  6E1A               	movwf	StrToInt@str^0,c
  4224  00099E  0E00               	movlw	high SIM800xHTTPAction@str
  4225  0009A0  6E1B               	movwf	(StrToInt@str+1)^0,c
  4226  0009A2  0E13               	movlw	19
  4227  0009A4  6E1C               	movwf	StrToInt@start^0,c
  4228  0009A6  0100               	movlb	0	; () banked
  4229  0009A8  05DE               	decf	SIM800xHTTPAction@res& (0+255),w,b
  4230  0009AA  6E1D               	movwf	StrToInt@stop^0,c
  4231  0009AC  ECBD  F007         	call	_StrToInt	;wreg free
  4232  0009B0  501A               	movf	?_StrToInt^0,w,c
  4233  0009B2  6E46               	movwf	??_SIM800xHTTPAction^0,c
  4234  0009B4  501B               	movf	(?_StrToInt+1)^0,w,c
  4235  0009B6  6E47               	movwf	(??_SIM800xHTTPAction+1)^0,c
  4236  0009B8  6A48               	clrf	(??_SIM800xHTTPAction+2)^0,c
  4237  0009BA  6A49               	clrf	(??_SIM800xHTTPAction+3)^0,c
  4238  0009BC  C03E  FFD9         	movff	SIM800xHTTPAction@cnt,fsr2l
  4239  0009C0  C03F  FFDA         	movff	SIM800xHTTPAction@cnt+1,fsr2h
  4240  0009C4  C046  FFDE         	movff	??_SIM800xHTTPAction,postinc2
  4241  0009C8  C047  FFDE         	movff	??_SIM800xHTTPAction+1,postinc2
  4242  0009CC  C048  FFDE         	movff	??_SIM800xHTTPAction+2,postinc2
  4243  0009D0  C049  FFDE         	movff	??_SIM800xHTTPAction+3,postinc2
  4244                           
  4245                           ;SIM800x.c: 1595: return OK;
  4246  0009D4  0E00               	movlw	0
  4247  0009D6  D020               	goto	l691
  4248  0009D8                     l5251:
  4249  0009D8  FFFF               	dw	65535	; assembler added errata NOP
  4250                           
  4251                           ; BSR set to: 0
  4252                           ;SIM800x.c: 1598: else if(str[0] == '+')
  4253  0009DA  0E2B               	movlw	43
  4254  0009DC  19B7               	xorwf	SIM800xHTTPAction@str& (0+255),w,b
  4255  0009DE  A4D8               	btfss	status,2,c
  4256  0009E0  D714               	goto	u4640
  4257                           
  4258                           ; BSR set to: 0
  4259                           ;SIM800x.c: 1599: {;SIM800x.c: 1600: str[(uint8_t)res] = '\0';
  4260  0009E2  0EB7               	movlw	low SIM800xHTTPAction@str
  4261  0009E4  25DE               	addwf	SIM800xHTTPAction@res& (0+255),w,b
  4262  0009E6  6ED9               	movwf	fsr2l,c
  4263  0009E8  6ADA               	clrf	fsr2h,c
  4264  0009EA  0E00               	movlw	high SIM800xHTTPAction@str
  4265  0009EC  22DA               	addwfc	fsr2h,f,c
  4266  0009EE  0E00               	movlw	0
  4267  0009F0  6EDF               	movwf	indf2,c
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;SIM800x.c: 1601: *errcode = (uint16_t)StrToInt(str, 12, (uint16_t)(res - 1));
  4271  0009F2  0EB7               	movlw	low SIM800xHTTPAction@str
  4272  0009F4  6E1A               	movwf	StrToInt@str^0,c
  4273  0009F6  0E00               	movlw	high SIM800xHTTPAction@str
  4274  0009F8  6E1B               	movwf	(StrToInt@str+1)^0,c
  4275  0009FA  0E0C               	movlw	12
  4276  0009FC  6E1C               	movwf	StrToInt@start^0,c
  4277  0009FE  05DE               	decf	SIM800xHTTPAction@res& (0+255),w,b
  4278  000A00  6E1D               	movwf	StrToInt@stop^0,c
  4279  000A02  ECBD  F007         	call	_StrToInt	;wreg free
  4280  000A06  C044  FFD9         	movff	SIM800xHTTPAction@errcode,fsr2l
  4281  000A0A  C045  FFDA         	movff	SIM800xHTTPAction@errcode+1,fsr2h
  4282  000A0E  C01A  FFDE         	movff	?_StrToInt,postinc2
  4283  000A12  C01B  FFDD         	movff	?_StrToInt+1,postdec2
  4284                           
  4285                           ;SIM800x.c: 1602: return CME_ERROR;
  4286  000A16  0E02               	movlw	2
  4287  000A18                     l691:
  4288  000A18  FFFF               	dw	65535	; assembler added errata NOP
  4289  000A1A  0012               	return		;funcret
  4290  000A1C  FFFF               	dw	65535	; errata NOP
  4291  000A1E                     __end_of_SIM800xHTTPAction:
  4292                           	callstack 0
  4293                           
  4294 ;; *************** function _SystemInit *****************
  4295 ;; Defined at:
  4296 ;;		line 34 in file "Src/ApplicationExample.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;		None
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;  ip             20    0[BANK0 ] unsigned char [20]
  4301 ;;  err             2   20[BANK0 ] unsigned int 
  4302 ;; Return value:  Size  Location     Type
  4303 ;;                  1    wreg      unsigned char 
  4304 ;; Registers used:
  4305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4306 ;; Tracked objects:
  4307 ;;		On entry : 0/0
  4308 ;;		On exit  : 0/0
  4309 ;;		Unchanged: 0/0
  4310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4311 ;;      Params:         0       0       0       0       0       0       0
  4312 ;;      Locals:         0      22       0       0       0       0       0
  4313 ;;      Temps:          0       0       0       0       0       0       0
  4314 ;;      Totals:         0      22       0       0       0       0       0
  4315 ;;Total ram usage:       22 bytes
  4316 ;; Hardware stack levels used: 1
  4317 ;; Hardware stack levels required when called: 8
  4318 ;; This function calls:
  4319 ;;		_AddEntryToJsonObject
  4320 ;;		_SIM800xHTTPInit
  4321 ;;		_SIM800xHTTPSetContent
  4322 ;;		_SIM800xHTTPSetURL
  4323 ;;		_SIM800xIPGetState
  4324 ;;		_SIM800xIPOpen
  4325 ;;		_SIM800xIPSetAPN
  4326 ;;		_SIM800xIPSetConnectionType
  4327 ;;		_SIM800xInit
  4328 ;;		_SoftUARTInit
  4329 ;;		_SoftUARTPrint
  4330 ;; This function is called by:
  4331 ;;		_main
  4332 ;; This function uses a non-reentrant model
  4333 ;;
  4334                           
  4335                           	psect	text9
  4336  000C28                     __ptext9:
  4337                           	callstack 0
  4338  000C28                     _SystemInit:
  4339                           	callstack 0
  4340  000C28  FFFF               	dw	65535	; assembler added errata NOP
  4341                           
  4342                           ;ApplicationExample.c: 36: SoftUARTInit();
  4343                           
  4344                           ;incstack = 0
  4345  000C2A  EC99  F010         	call	_SoftUARTInit	;wreg free
  4346                           
  4347                           ;ApplicationExample.c: 38: if(SIM800xInit(9600) == OK)
  4348  000C2E  0E80               	movlw	128
  4349  000C30  6E3C               	movwf	SIM800xInit@br^0,c
  4350  000C32  0E25               	movlw	37
  4351  000C34  6E3D               	movwf	(SIM800xInit@br+1)^0,c
  4352  000C36  0E00               	movlw	0
  4353  000C38  6E3E               	movwf	(SIM800xInit@br+2)^0,c
  4354  000C3A  0E00               	movlw	0
  4355  000C3C  6E3F               	movwf	(SIM800xInit@br+3)^0,c
  4356  000C3E  EC88  F008         	call	_SIM800xInit	;wreg free
  4357  000C42  0900               	iorlw	0
  4358  000C44  A4D8               	btfss	status,2,c
  4359  000C46  D0C3               	goto	l50
  4360                           
  4361                           ;ApplicationExample.c: 39: {;ApplicationExample.c: 40: SoftUARTPrint("Modem Initialized.
      +                          \r\r");
  4362  000C48  0E2E               	movlw	low STR_1
  4363  000C4A  6E11               	movwf	SoftUARTPrint@str^0,c
  4364  000C4C  0E7D               	movlw	high STR_1
  4365  000C4E  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4366  000C50  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  4367                           
  4368                           ;ApplicationExample.c: 44: SoftUARTPrint("Setting IP configurations...\r");
  4369  000C54  0E9D               	movlw	low STR_2
  4370  000C56  6E11               	movwf	SoftUARTPrint@str^0,c
  4371  000C58  0E7B               	movlw	high STR_2
  4372  000C5A  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4373  000C5C  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  4374                           
  4375                           ;ApplicationExample.c: 45: if(SIM800xIPSetConnectionType(1, "GPRS") == OK)
  4376  000C60  0EE1               	movlw	low STR_3
  4377  000C62  6E20               	movwf	SIM800xIPSetConnectionType@contype^0,c
  4378  000C64  0E7F               	movlw	high STR_3
  4379  000C66  6E21               	movwf	(SIM800xIPSetConnectionType@contype+1)^0,c
  4380  000C68  0E01               	movlw	1
  4381  000C6A  EC0F  F00D         	call	_SIM800xIPSetConnectionType
  4382  000C6E  0900               	iorlw	0
  4383  000C70  A4D8               	btfss	status,2,c
  4384  000C72  D0AD               	goto	l50
  4385                           
  4386                           ;ApplicationExample.c: 46: {;ApplicationExample.c: 47: if(SIM800xIPSetAPN(1, "Internet")
      +                           == OK)
  4387  000C74  0E79               	movlw	low STR_4
  4388  000C76  6E20               	movwf	SIM800xIPSetAPN@apn^0,c
  4389  000C78  0E7F               	movlw	high STR_4
  4390  000C7A  6E21               	movwf	(SIM800xIPSetAPN@apn+1)^0,c
  4391  000C7C  0E01               	movlw	1
  4392  000C7E  EC45  F00D         	call	_SIM800xIPSetAPN
  4393  000C82  0900               	iorlw	0
  4394  000C84  A4D8               	btfss	status,2,c
  4395  000C86  D0A3               	goto	l50
  4396                           
  4397                           ;ApplicationExample.c: 48: {;ApplicationExample.c: 49: if(SIM800xIPOpen(1) == OK)
  4398  000C88  0E01               	movlw	1
  4399  000C8A  ECA5  F00F         	call	_SIM800xIPOpen
  4400  000C8E  0900               	iorlw	0
  4401  000C90  A4D8               	btfss	status,2,c
  4402  000C92  D09D               	goto	l50
  4403                           
  4404                           ;ApplicationExample.c: 50: {;ApplicationExample.c: 51: char ip[20];;ApplicationExample.c
      +                          : 52: SoftUARTPrint("Done.\r\r");
  4405  000C94  0EBA               	movlw	low STR_5
  4406  000C96  6E11               	movwf	SoftUARTPrint@str^0,c
  4407  000C98  0E7F               	movlw	high STR_5
  4408  000C9A  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4409  000C9C  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  4410                           
  4411                           ;ApplicationExample.c: 53: SIM800xIPGetState(1, ip);
  4412  000CA0  0EB7               	movlw	low SystemInit@ip
  4413  000CA2  6E2A               	movwf	SIM800xIPGetState@ip^0,c
  4414  000CA4  0E00               	movlw	high SystemInit@ip
  4415  000CA6  6E2B               	movwf	(SIM800xIPGetState@ip+1)^0,c
  4416  000CA8  0E01               	movlw	1
  4417  000CAA  EC40  F00A         	call	_SIM800xIPGetState
  4418                           
  4419                           ;ApplicationExample.c: 54: SoftUARTPrint("Bearer profile Activated, IP: ");
  4420  000CAE  0E7E               	movlw	low STR_6
  4421  000CB0  6E11               	movwf	SoftUARTPrint@str^0,c
  4422  000CB2  0E7B               	movlw	high STR_6
  4423  000CB4  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4424  000CB6  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  4425                           
  4426                           ;ApplicationExample.c: 55: SoftUARTPrint(ip);
  4427  000CBA  0EB7               	movlw	low SystemInit@ip
  4428  000CBC  6E11               	movwf	SoftUARTPrint@str^0,c
  4429  000CBE  0E00               	movlw	high SystemInit@ip
  4430  000CC0  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4431  000CC2  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  4432                           
  4433                           ;ApplicationExample.c: 56: SoftUARTPrint("\r\r");
  4434  000CC6  0E5B               	movlw	low (STR_21+29)
  4435  000CC8  6E11               	movwf	SoftUARTPrint@str^0,c
  4436  000CCA  0E7B               	movlw	high (STR_21+29)
  4437  000CCC  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4438  000CCE  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  4439                           
  4440                           ;ApplicationExample.c: 57: uint16_t err;;ApplicationExample.c: 61: SoftUARTPrint("Settin
      +                          g HTTP configurations...\r");
  4441  000CD2  0E5E               	movlw	low STR_8
  4442  000CD4  6E11               	movwf	SoftUARTPrint@str^0,c
  4443  000CD6  0E7B               	movlw	high STR_8
  4444  000CD8  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4445  000CDA  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  4446                           
  4447                           ;ApplicationExample.c: 62: if(SIM800xHTTPInit(&err) == OK)
  4448  000CDE  0ECB               	movlw	low SystemInit@err
  4449  000CE0  6E4E               	movwf	SIM800xHTTPInit@errcode^0,c
  4450  000CE2  0E00               	movlw	high SystemInit@err
  4451  000CE4  6E4F               	movwf	(SIM800xHTTPInit@errcode+1)^0,c
  4452  000CE6  EC66  F010         	call	_SIM800xHTTPInit	;wreg free
  4453  000CEA  0900               	iorlw	0
  4454  000CEC  A4D8               	btfss	status,2,c
  4455  000CEE  D06F               	goto	l50
  4456                           
  4457                           ;ApplicationExample.c: 63: {;ApplicationExample.c: 64: if(SIM800xHTTPSetURL("http://back
      +                          end.thinger.io/v3/users/FirmwareEngineers/devices/SIM800L/callback/data?authorization=ey
      +                          JhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2Nzk5NTYzNjIsImlhdCI6MTY3OTk0OTE2Miwicm9sZ
      +                          SI6InVzZXIiLCJ1c3IiOiJGaXJtd2FyZUVuZ2luZW
  4458  000CF0  0EE2               	movlw	low STR_9
  4459  000CF2  6E4E               	movwf	SIM800xHTTPSetURL@url^0,c
  4460  000CF4  0E79               	movlw	high STR_9
  4461  000CF6  6E4F               	movwf	(SIM800xHTTPSetURL@url+1)^0,c
  4462  000CF8  0ECB               	movlw	low SystemInit@err
  4463  000CFA  6E50               	movwf	SIM800xHTTPSetURL@errcode^0,c
  4464  000CFC  0E00               	movlw	high SystemInit@err
  4465  000CFE  6E51               	movwf	(SIM800xHTTPSetURL@errcode+1)^0,c
  4466  000D00  EC8F  F00E         	call	_SIM800xHTTPSetURL	;wreg free
  4467  000D04  0900               	iorlw	0
  4468  000D06  A4D8               	btfss	status,2,c
  4469  000D08  D062               	goto	l50
  4470                           
  4471                           ;ApplicationExample.c: 65: {;ApplicationExample.c: 66: if(SIM800xHTTPSetContent("applica
      +                          tion/json", &err) == OK)
  4472  000D0A  0EC6               	movlw	low STR_10
  4473  000D0C  6E4E               	movwf	SIM800xHTTPSetContent@content^0,c
  4474  000D0E  0E7D               	movlw	high STR_10
  4475  000D10  6E4F               	movwf	(SIM800xHTTPSetContent@content+1)^0,c
  4476  000D12  0ECB               	movlw	low SystemInit@err
  4477  000D14  6E50               	movwf	SIM800xHTTPSetContent@errcode^0,c
  4478  000D16  0E00               	movlw	high SystemInit@err
  4479  000D18  6E51               	movwf	(SIM800xHTTPSetContent@errcode+1)^0,c
  4480  000D1A  ECB9  F00E         	call	_SIM800xHTTPSetContent	;wreg free
  4481  000D1E  0900               	iorlw	0
  4482  000D20  A4D8               	btfss	status,2,c
  4483  000D22  D055               	goto	l50
  4484                           
  4485                           ;ApplicationExample.c: 67: {;ApplicationExample.c: 68: SoftUARTPrint("Done.\r\r");
  4486  000D24  0EBA               	movlw	low STR_5
  4487  000D26  6E11               	movwf	SoftUARTPrint@str^0,c
  4488  000D28  0E7F               	movlw	high STR_5
  4489  000D2A  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4490  000D2C  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  4491                           
  4492                           ;ApplicationExample.c: 73: AddEntryToJsonObject(txmessage, "Engine Temperature (C)", "30
      +                          ", &cpos);
  4493  000D30  0E96               	movlw	low _txmessage
  4494  000D32  6E0E               	movwf	AddEntryToJsonObject@JsonObject^0,c
  4495  000D34  0E01               	movlw	high _txmessage
  4496  000D36  6E0F               	movwf	(AddEntryToJsonObject@JsonObject+1)^0,c
  4497  000D38  0ED8               	movlw	low STR_12
  4498  000D3A  6E10               	movwf	AddEntryToJsonObject@key^0,c
  4499  000D3C  0E7C               	movlw	high STR_12
  4500  000D3E  6E11               	movwf	(AddEntryToJsonObject@key+1)^0,c
  4501  000D40  0EF4               	movlw	low STR_13
  4502  000D42  6E12               	movwf	AddEntryToJsonObject@value^0,c
  4503  000D44  0E7F               	movlw	high STR_13
  4504  000D46  6E13               	movwf	(AddEntryToJsonObject@value+1)^0,c
  4505  000D48  0E62               	movlw	low _cpos
  4506  000D4A  6E14               	movwf	AddEntryToJsonObject@Cpos^0,c
  4507  000D4C  0E00               	movlw	high _cpos
  4508  000D4E  6E15               	movwf	(AddEntryToJsonObject@Cpos+1)^0,c
  4509  000D50  EC19  F000         	call	_AddEntryToJsonObject	;wreg free
  4510                           
  4511                           ;ApplicationExample.c: 74: AddEntryToJsonObject(txmessage, "RPM", "3500", &cpos);
  4512  000D54  0E96               	movlw	low _txmessage
  4513  000D56  6E0E               	movwf	AddEntryToJsonObject@JsonObject^0,c
  4514  000D58  0E01               	movlw	high _txmessage
  4515  000D5A  6E0F               	movwf	(AddEntryToJsonObject@JsonObject+1)^0,c
  4516  000D5C  0EEA               	movlw	low STR_14
  4517  000D5E  6E10               	movwf	AddEntryToJsonObject@key^0,c
  4518  000D60  0E7F               	movlw	high STR_14
  4519  000D62  6E11               	movwf	(AddEntryToJsonObject@key+1)^0,c
  4520  000D64  0EDC               	movlw	low STR_15
  4521  000D66  6E12               	movwf	AddEntryToJsonObject@value^0,c
  4522  000D68  0E7F               	movlw	high STR_15
  4523  000D6A  6E13               	movwf	(AddEntryToJsonObject@value+1)^0,c
  4524  000D6C  0E62               	movlw	low _cpos
  4525  000D6E  6E14               	movwf	AddEntryToJsonObject@Cpos^0,c
  4526  000D70  0E00               	movlw	high _cpos
  4527  000D72  6E15               	movwf	(AddEntryToJsonObject@Cpos+1)^0,c
  4528  000D74  EC19  F000         	call	_AddEntryToJsonObject	;wreg free
  4529                           
  4530                           ;ApplicationExample.c: 75: AddEntryToJsonObject(txmessage, "Vehicle Speed (MPH)", "35", 
      +                          &cpos);
  4531  000D78  0E96               	movlw	low _txmessage
  4532  000D7A  6E0E               	movwf	AddEntryToJsonObject@JsonObject^0,c
  4533  000D7C  0E01               	movlw	high _txmessage
  4534  000D7E  6E0F               	movwf	(AddEntryToJsonObject@JsonObject+1)^0,c
  4535  000D80  0E57               	movlw	low STR_16
  4536  000D82  6E10               	movwf	AddEntryToJsonObject@key^0,c
  4537  000D84  0E7D               	movlw	high STR_16
  4538  000D86  6E11               	movwf	(AddEntryToJsonObject@key+1)^0,c
  4539  000D88  0EFA               	movlw	low STR_17
  4540  000D8A  6E12               	movwf	AddEntryToJsonObject@value^0,c
  4541  000D8C  0E7F               	movlw	high STR_17
  4542  000D8E  6E13               	movwf	(AddEntryToJsonObject@value+1)^0,c
  4543  000D90  0E62               	movlw	low _cpos
  4544  000D92  6E14               	movwf	AddEntryToJsonObject@Cpos^0,c
  4545  000D94  0E00               	movlw	high _cpos
  4546  000D96  6E15               	movwf	(AddEntryToJsonObject@Cpos+1)^0,c
  4547  000D98  EC19  F000         	call	_AddEntryToJsonObject	;wreg free
  4548                           
  4549                           ;ApplicationExample.c: 76: AddEntryToJsonObject(txmessage, "Fuel Level (%)", "50", &cpos
      +                          );
  4550  000D9C  0E96               	movlw	low _txmessage
  4551  000D9E  6E0E               	movwf	AddEntryToJsonObject@JsonObject^0,c
  4552  000DA0  0E01               	movlw	high _txmessage
  4553  000DA2  6E0F               	movwf	(AddEntryToJsonObject@JsonObject+1)^0,c
  4554  000DA4  0E15               	movlw	low STR_18
  4555  000DA6  6E10               	movwf	AddEntryToJsonObject@key^0,c
  4556  000DA8  0E7E               	movlw	high STR_18
  4557  000DAA  6E11               	movwf	(AddEntryToJsonObject@key+1)^0,c
  4558  000DAC  0EF7               	movlw	low STR_19
  4559  000DAE  6E12               	movwf	AddEntryToJsonObject@value^0,c
  4560  000DB0  0E7F               	movlw	high STR_19
  4561  000DB2  6E13               	movwf	(AddEntryToJsonObject@value+1)^0,c
  4562  000DB4  0E62               	movlw	low _cpos
  4563  000DB6  6E14               	movwf	AddEntryToJsonObject@Cpos^0,c
  4564  000DB8  0E00               	movlw	high _cpos
  4565  000DBA  6E15               	movwf	(AddEntryToJsonObject@Cpos+1)^0,c
  4566  000DBC  EC19  F000         	call	_AddEntryToJsonObject	;wreg free
  4567                           
  4568                           ;ApplicationExample.c: 81: SoftUARTPrint("System Initialization completed.\r\r");
  4569  000DC0  0EF9               	movlw	low STR_20
  4570  000DC2  6E11               	movwf	SoftUARTPrint@str^0,c
  4571  000DC4  0E7A               	movlw	high STR_20
  4572  000DC6  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4573  000DC8  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  4574  000DCC  D007               	goto	l54
  4575  000DCE                     l50:
  4576  000DCE  FFFF               	dw	65535	; assembler added errata NOP
  4577                           
  4578                           ;ApplicationExample.c: 83: };ApplicationExample.c: 84: };ApplicationExample.c: 85: };App
      +                          licationExample.c: 86: };ApplicationExample.c: 87: };ApplicationExample.c: 88: };Applica
      +                          tionExample.c: 89: };ApplicationExample.c: 90: SoftUARTPrint("System Initialization fail
      +                          ed.\r\r");
  4579  000DD0  0E3E               	movlw	low STR_21
  4580  000DD2  6E11               	movwf	SoftUARTPrint@str^0,c
  4581  000DD4  0E7B               	movlw	high STR_21
  4582  000DD6  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4583  000DD8  EC7B  F00D         	call	_SoftUARTPrint	;wreg free
  4584  000DDC                     l54:
  4585  000DDC  FFFF               	dw	65535	; assembler added errata NOP
  4586  000DDE  0012               	return		;funcret
  4587  000DE0  FFFF               	dw	65535	; errata NOP
  4588  000DE2                     __end_of_SystemInit:
  4589                           	callstack 0
  4590                           
  4591 ;; *************** function _SoftUARTPrint *****************
  4592 ;; Defined at:
  4593 ;;		line 344 in file "Src/SoftwareUART.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;  str             2   16[COMRAM] PTR const unsigned char 
  4596 ;;		 -> STR_27(17), STR_26(3), STR_25(7), SystemTask@msg(20), 
  4597 ;;		 -> STR_22(34), STR_21(32), STR_20(35), STR_11(8), 
  4598 ;;		 -> STR_8(32), STR_7(3), STR_6(31), SystemInit@ip(20), 
  4599 ;;		 -> STR_5(8), STR_2(30), STR_1(21), 
  4600 ;; Auto vars:     Size  Location     Type
  4601 ;;		None
  4602 ;; Return value:  Size  Location     Type
  4603 ;;                  1    wreg      void 
  4604 ;; Registers used:
  4605 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4606 ;; Tracked objects:
  4607 ;;		On entry : 0/0
  4608 ;;		On exit  : 0/0
  4609 ;;		Unchanged: 0/0
  4610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4611 ;;      Params:         2       0       0       0       0       0       0
  4612 ;;      Locals:         0       0       0       0       0       0       0
  4613 ;;      Temps:          0       0       0       0       0       0       0
  4614 ;;      Totals:         2       0       0       0       0       0       0
  4615 ;;Total ram usage:        2 bytes
  4616 ;; Hardware stack levels used: 1
  4617 ;; Hardware stack levels required when called: 4
  4618 ;; This function calls:
  4619 ;;		_SoftUARTTransmitByte
  4620 ;; This function is called by:
  4621 ;;		_SystemInit
  4622 ;;		_SystemTask
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626                           	psect	text10
  4627  001AF6                     __ptext10:
  4628                           	callstack 0
  4629  001AF6                     _SoftUARTPrint:
  4630                           	callstack 0
  4631  001AF6  FFFF               	dw	65535	; assembler added errata NOP
  4632                           
  4633                           ;SoftwareUART.c: 346: while(*str!='\0'){
  4634                           
  4635                           ;incstack = 0
  4636  001AF8  D016               	goto	l4907
  4637  001AFA                     l4903:
  4638  001AFA  FFFF               	dw	65535	; assembler added errata NOP
  4639                           
  4640                           ;SoftwareUART.c: 347: SoftUARTTransmitByte(*(str++));
  4641  001AFC  C011  FFF6         	movff	SoftUARTPrint@str,tblptrl
  4642  001B00  C012  FFF7         	movff	SoftUARTPrint@str+1,tblptrh
  4643  001B04  6AF8               	clrf	tblptru,c
  4644  001B06  0E05               	movlw	(high __ramtop+-1)
  4645  001B08  64F7               	cpfsgt	tblptrh,c
  4646  001B0A  D004               	bra	u4297
  4647  001B0C  0008               	tblrd		*
  4648  001B0E  FFFF               	dw	65535	; errata NOP
  4649  001B10  50F5               	movf	tablat,w,c
  4650  001B12  D005               	bra	u4290
  4651  001B14                     u4297:
  4652  001B14  CFF6 FFE1          	movff	tblptrl,fsr1l
  4653  001B18  CFF7 FFE2          	movff	tblptrh,fsr1h
  4654  001B1C  50E7               	movf	indf1,w,c
  4655  001B1E                     u4290:
  4656  001B1E  EC64  F00E         	call	_SoftUARTTransmitByte
  4657  001B22  4A11               	infsnz	SoftUARTPrint@str^0,f,c
  4658  001B24  2A12               	incf	(SoftUARTPrint@str+1)^0,f,c
  4659  001B26                     l4907:
  4660  001B26  FFFF               	dw	65535	; assembler added errata NOP
  4661  001B28  C011  FFF6         	movff	SoftUARTPrint@str,tblptrl
  4662  001B2C  C012  FFF7         	movff	SoftUARTPrint@str+1,tblptrh
  4663  001B30  6AF8               	clrf	tblptru,c
  4664  001B32  0E05               	movlw	(high __ramtop+-1)
  4665  001B34  64F7               	cpfsgt	tblptrh,c
  4666  001B36  D004               	bra	u4307
  4667  001B38  0008               	tblrd		*
  4668  001B3A  FFFF               	dw	65535	; errata NOP
  4669  001B3C  50F5               	movf	tablat,w,c
  4670  001B3E  D005               	bra	u4300
  4671  001B40                     u4307:
  4672  001B40  CFF6 FFE1          	movff	tblptrl,fsr1l
  4673  001B44  CFF7 FFE2          	movff	tblptrh,fsr1h
  4674  001B48  50E7               	movf	indf1,w,c
  4675  001B4A                     u4300:
  4676  001B4A  0900               	iorlw	0
  4677  001B4C  B4D8               	btfsc	status,2,c
  4678  001B4E  0012               	return		;funcret
  4679  001B50  FFFF               	dw	65535	; assembler added errata NOP
  4680  001B52  D7D3               	goto	l4903
  4681  001B54  FFFF               	dw	65535	; errata NOP
  4682  001B56                     __end_of_SoftUARTPrint:
  4683                           	callstack 0
  4684                           
  4685 ;; *************** function _SoftUARTTransmitByte *****************
  4686 ;; Defined at:
  4687 ;;		line 301 in file "Src/SoftwareUART.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;  data            1    wreg     unsigned char 
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;  data            1   13[COMRAM] unsigned char 
  4692 ;;  k               1   15[COMRAM] unsigned char 
  4693 ;;  tmp             1   14[COMRAM] unsigned char 
  4694 ;; Return value:  Size  Location     Type
  4695 ;;                  1    wreg      void 
  4696 ;; Registers used:
  4697 ;;		wreg, status,2, status,0
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4703 ;;      Params:         0       0       0       0       0       0       0
  4704 ;;      Locals:         3       0       0       0       0       0       0
  4705 ;;      Temps:          0       0       0       0       0       0       0
  4706 ;;      Totals:         3       0       0       0       0       0       0
  4707 ;;Total ram usage:        3 bytes
  4708 ;; Hardware stack levels used: 1
  4709 ;; Hardware stack levels required when called: 3
  4710 ;; This function calls:
  4711 ;;		Nothing
  4712 ;; This function is called by:
  4713 ;;		_SoftUARTPrint
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716                           
  4717                           	psect	text11
  4718  001CC8                     __ptext11:
  4719                           	callstack 0
  4720  001CC8                     _SoftUARTTransmitByte:
  4721                           	callstack 0
  4722  001CC8  FFFF               	dw	65535	; assembler added errata NOP
  4723                           
  4724                           ;incstack = 0
  4725                           ;SoftUARTTransmitByte@data stored from wreg
  4726  001CCA  6E0E               	movwf	SoftUARTTransmitByte@data^0,c
  4727                           
  4728                           ;SoftwareUART.c: 304: uint8_t tmp;;SoftwareUART.c: 305: if(GIE)
  4729  001CCC  AEF2               	btfss	4082,7,c	;volatile
  4730  001CCE  D002               	goto	l4771
  4731                           
  4732                           ;SoftwareUART.c: 306: tmp = 1;
  4733  001CD0  0E01               	movlw	1
  4734  001CD2  6E0F               	movwf	SoftUARTTransmitByte@tmp^0,c
  4735  001CD4                     l4771:
  4736  001CD4  FFFF               	dw	65535	; assembler added errata NOP
  4737                           
  4738                           ;SoftwareUART.c: 307: (INTCONbits.GIE = 0);
  4739  001CD6  9EF2               	bcf	242,7,c	;volatile
  4740                           
  4741                           ;SoftwareUART.c: 309: IO.Bytes[0x01 + 9] &= (~(1 << 0x3));
  4742  001CD8  968A               	bcf	138,3,c	;volatile
  4743                           
  4744                           ;SoftwareUART.c: 310: _delay((unsigned long)(((1000000/9600))*((16 * 1000000)/4000000.0)
      +                          ));
  4745  001CDA  0E68               	movlw	104
  4746  001CDC                     u5017:
  4747  001CDC  FFFF               	dw	65535	; errata NOP
  4748  001CDE  2EE8               	decfsz	wreg,f,c
  4749  001CE0  D7FD               	bra	u5017
  4750                           
  4751                           ;SoftwareUART.c: 312: for(uint8_t k = 0;k < 8;k++){
  4752  001CE2  0E00               	movlw	0
  4753  001CE4  6E10               	movwf	SoftUARTTransmitByte@k^0,c
  4754  001CE6                     l1067:
  4755  001CE6  FFFF               	dw	65535	; assembler added errata NOP
  4756                           
  4757                           ;SoftwareUART.c: 314: if(data & 0x01)
  4758  001CE8  A00E               	btfss	SoftUARTTransmitByte@data^0,0,c
  4759  001CEA  D002               	goto	l4785
  4760                           
  4761                           ;SoftwareUART.c: 315: IO.Bytes[0x01 + 9] |= (1 << 0x3);
  4762  001CEC  868A               	bsf	138,3,c	;volatile
  4763  001CEE  D002               	goto	l4787
  4764  001CF0                     l4785:
  4765  001CF0  FFFF               	dw	65535	; assembler added errata NOP
  4766                           
  4767                           ;SoftwareUART.c: 316: else;SoftwareUART.c: 317: IO.Bytes[0x01 + 9] &= (~(1 << 0x3));
  4768  001CF2  968A               	bcf	138,3,c	;volatile
  4769  001CF4                     l4787:
  4770  001CF4  FFFF               	dw	65535	; assembler added errata NOP
  4771                           
  4772                           ;SoftwareUART.c: 318: data >>= 1;
  4773  001CF6  90D8               	bcf	status,0,c
  4774  001CF8  320E               	rrcf	SoftUARTTransmitByte@data^0,f,c
  4775                           
  4776                           ;SoftwareUART.c: 319: _delay((unsigned long)(((1000000/9600))*((16 * 1000000)/4000000.0)
      +                          ));
  4777  001CFA  0E68               	movlw	104
  4778  001CFC                     u5027:
  4779  001CFC  FFFF               	dw	65535	; errata NOP
  4780  001CFE  2EE8               	decfsz	wreg,f,c
  4781  001D00  D7FD               	bra	u5027
  4782  001D02  2A10               	incf	SoftUARTTransmitByte@k^0,f,c
  4783  001D04  0E07               	movlw	7
  4784  001D06  6410               	cpfsgt	SoftUARTTransmitByte@k^0,c
  4785  001D08  D7EE               	goto	l1067
  4786                           
  4787                           ;SoftwareUART.c: 321: };SoftwareUART.c: 323: IO.Bytes[0x01 + 9] |= (1 << 0x3);
  4788  001D0A  868A               	bsf	138,3,c	;volatile
  4789                           
  4790                           ;SoftwareUART.c: 324: _delay((unsigned long)(((1000000/9600))*((16 * 1000000)/4000000.0)
      +                          ));
  4791  001D0C  0E68               	movlw	104
  4792  001D0E                     u5037:
  4793  001D0E  FFFF               	dw	65535	; errata NOP
  4794  001D10  2EE8               	decfsz	wreg,f,c
  4795  001D12  D7FD               	bra	u5037
  4796                           
  4797                           ;SoftwareUART.c: 325: if(tmp)
  4798  001D14  500F               	movf	SoftUARTTransmitByte@tmp^0,w,c
  4799  001D16  A4D8               	btfss	status,2,c
  4800                           
  4801                           ;SoftwareUART.c: 326: (INTCONbits.GIE = 1);
  4802  001D18  8EF2               	bsf	242,7,c	;volatile
  4803  001D1A  0012               	return		;funcret
  4804  001D1C  FFFF               	dw	65535	; errata NOP
  4805  001D1E                     __end_of_SoftUARTTransmitByte:
  4806                           	callstack 0
  4807                           
  4808 ;; *************** function _SoftUARTInit *****************
  4809 ;; Defined at:
  4810 ;;		line 275 in file "Src/SoftwareUART.c"
  4811 ;; Parameters:    Size  Location     Type
  4812 ;;		None
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;		None
  4815 ;; Return value:  Size  Location     Type
  4816 ;;                  1    wreg      void 
  4817 ;; Registers used:
  4818 ;;		wreg, status,2, status,0
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4824 ;;      Params:         0       0       0       0       0       0       0
  4825 ;;      Locals:         0       0       0       0       0       0       0
  4826 ;;      Temps:          0       0       0       0       0       0       0
  4827 ;;      Totals:         0       0       0       0       0       0       0
  4828 ;;Total ram usage:        0 bytes
  4829 ;; Hardware stack levels used: 1
  4830 ;; Hardware stack levels required when called: 3
  4831 ;; This function calls:
  4832 ;;		Nothing
  4833 ;; This function is called by:
  4834 ;;		_SystemInit
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text12
  4839  002132                     __ptext12:
  4840                           	callstack 0
  4841  002132                     _SoftUARTInit:
  4842                           	callstack 0
  4843  002132  FFFF               	dw	65535	; assembler added errata NOP
  4844                           
  4845                           ;SoftwareUART.c: 277: IO.Bytes[0x01 + 9] |= (1 << 0x3);
  4846                           
  4847                           ;incstack = 0
  4848  002134  868A               	bsf	138,3,c	;volatile
  4849                           
  4850                           ;SoftwareUART.c: 278: IO.Bytes[(uint8_t)0x01 + 18] &= ~(1 << 0x3);
  4851  002136  9693               	bcf	147,3,c	;volatile
  4852                           
  4853                           ;SoftwareUART.c: 281: INTCON2 &= 0xBF;
  4854  002138  9CF1               	bcf	241,6,c	;volatile
  4855                           
  4856                           ;SoftwareUART.c: 282: INTCON |= 0xD0;
  4857  00213A  0ED0               	movlw	208
  4858  00213C  12F2               	iorwf	242,f,c	;volatile
  4859                           
  4860                           ;SoftwareUART.c: 283: (INTCONbits.GIE = 1);
  4861  00213E  8EF2               	bsf	242,7,c	;volatile
  4862                           
  4863                           ;SoftwareUART.c: 284: INT0IF = 0;
  4864  002140  92F2               	bcf	4082,1,c	;volatile
  4865  002142  0012               	return		;funcret
  4866  002144  FFFF               	dw	65535	; errata NOP
  4867  002146                     __end_of_SoftUARTInit:
  4868                           	callstack 0
  4869                           
  4870 ;; *************** function _SIM800xInit *****************
  4871 ;; Defined at:
  4872 ;;		line 264 in file "Src/SIM800x.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;  br              4   59[COMRAM] unsigned long 
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;  str            15   63[COMRAM] unsigned char [15]
  4877 ;;  c               1   80[COMRAM] unsigned char 
  4878 ;;  tmp             2   78[COMRAM] unsigned int 
  4879 ;; Return value:  Size  Location     Type
  4880 ;;                  1    wreg      enum E2115
  4881 ;; Registers used:
  4882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4888 ;;      Params:         4       0       0       0       0       0       0
  4889 ;;      Locals:        18       0       0       0       0       0       0
  4890 ;;      Temps:          0       0       0       0       0       0       0
  4891 ;;      Totals:        22       0       0       0       0       0       0
  4892 ;;Total ram usage:       22 bytes
  4893 ;; Hardware stack levels used: 1
  4894 ;; Hardware stack levels required when called: 5
  4895 ;; This function calls:
  4896 ;;		_SIM800xSDMFlush
  4897 ;;		_SIM800xSDMInit
  4898 ;;		_SIM800xSDMPeek
  4899 ;;		_SIM800xSDMPrint
  4900 ;;		_SIM800xSDMReadByte
  4901 ;;		_SIM800xSDMRxAvailable
  4902 ;;		_Wait_ms
  4903 ;;		_sprintf
  4904 ;; This function is called by:
  4905 ;;		_SystemInit
  4906 ;; This function uses a non-reentrant model
  4907 ;;
  4908                           
  4909                           	psect	text13
  4910  001110                     __ptext13:
  4911                           	callstack 0
  4912  001110                     _SIM800xInit:
  4913                           	callstack 0
  4914  001110  FFFF               	dw	65535	; assembler added errata NOP
  4915                           
  4916                           ;SIM800x.c: 267: SIM800xSDMInit(br);
  4917                           
  4918                           ;incstack = 0
  4919  001112  C03C  F01B         	movff	SIM800xInit@br,SIM800xSDMInit@br
  4920  001116  C03D  F01C         	movff	SIM800xInit@br+1,SIM800xSDMInit@br+1
  4921  00111A  C03E  F01D         	movff	SIM800xInit@br+2,SIM800xSDMInit@br+2
  4922  00111E  C03F  F01E         	movff	SIM800xInit@br+3,SIM800xSDMInit@br+3
  4923  001122  EC9C  F00C         	call	_SIM800xSDMInit	;wreg free
  4924                           
  4925                           ;SIM800x.c: 313: Wait_ms(5000);
  4926  001126  0E88               	movlw	136
  4927  001128  6E0E               	movwf	Wait_ms@value^0,c
  4928  00112A  0E13               	movlw	19
  4929  00112C  6E0F               	movwf	(Wait_ms@value+1)^0,c
  4930  00112E  0E00               	movlw	0
  4931  001130  6E10               	movwf	(Wait_ms@value+2)^0,c
  4932  001132  0E00               	movlw	0
  4933  001134  6E11               	movwf	(Wait_ms@value+3)^0,c
  4934  001136  ECD6  F00C         	call	_Wait_ms	;wreg free
  4935                           
  4936                           ;SIM800x.c: 316: SIM800xSDMFlush();
  4937  00113A  EC8E  F010         	call	_SIM800xSDMFlush	;wreg free
  4938                           
  4939                           ;SIM800x.c: 317: SIM800xSDMPrint("AT\r");
  4940  00113E  0EE6               	movlw	low STR_28
  4941  001140  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  4942  001142  0E7F               	movlw	high STR_28
  4943  001144  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  4944  001146  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  4945                           
  4946                           ;SIM800x.c: 318: Wait_ms(500);
  4947  00114A  0EF4               	movlw	244
  4948  00114C  6E0E               	movwf	Wait_ms@value^0,c
  4949  00114E  0E01               	movlw	1
  4950  001150  6E0F               	movwf	(Wait_ms@value+1)^0,c
  4951  001152  0E00               	movlw	0
  4952  001154  6E10               	movwf	(Wait_ms@value+2)^0,c
  4953  001156  0E00               	movlw	0
  4954  001158  6E11               	movwf	(Wait_ms@value+3)^0,c
  4955  00115A  ECD6  F00C         	call	_Wait_ms	;wreg free
  4956                           
  4957                           ;SIM800x.c: 319: uint16_t tmp = SIM800xSDMRxAvailable();
  4958  00115E  EC25  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  4959  001162  C013  F04F         	movff	?_SIM800xSDMRxAvailable,SIM800xInit@tmp
  4960  001166  C014  F050         	movff	?_SIM800xSDMRxAvailable+1,SIM800xInit@tmp+1
  4961                           
  4962                           ;SIM800x.c: 320: if(tmp > 5)
  4963  00116A  5050               	movf	(SIM800xInit@tmp+1)^0,w,c
  4964  00116C  E108               	bnz	l4859
  4965  00116E  0E06               	movlw	6
  4966  001170  5C4F               	subwf	SIM800xInit@tmp^0,w,c
  4967  001172  B0D8               	btfsc	status,0,c
  4968  001174  D004               	goto	l4859
  4969  001176  D066               	goto	l4893
  4970  001178                     l4857:
  4971  001178  FFFF               	dw	65535	; assembler added errata NOP
  4972                           
  4973                           ;SIM800x.c: 323: {;SIM800x.c: 324: SIM800xSDMReadByte();
  4974  00117A  EC33  F00F         	call	_SIM800xSDMReadByte	;wreg free
  4975  00117E                     l4859:
  4976  00117E  FFFF               	dw	65535	; assembler added errata NOP
  4977  001180  EC25  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  4978  001184  0E06               	movlw	6
  4979  001186  1813               	xorwf	?_SIM800xSDMRxAvailable^0,w,c
  4980  001188  1014               	iorwf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  4981  00118A  A4D8               	btfss	status,2,c
  4982  00118C  D7F5               	goto	l4857
  4983                           
  4984                           ;SIM800x.c: 325: };SIM800x.c: 328: if(SIM800xSDMPeek(2) == 'O')
  4985  00118E  0E02               	movlw	2
  4986  001190  ECCA  F00F         	call	_SIM800xSDMPeek
  4987  001194  0A4F               	xorlw	79
  4988  001196  A4D8               	btfss	status,2,c
  4989  001198  D055               	goto	l4893
  4990                           
  4991                           ;SIM800x.c: 329: {;SIM800x.c: 330: SIM800xSDMPrint("ATE0\r");
  4992  00119A  0ED0               	movlw	low STR_29
  4993  00119C  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  4994  00119E  0E7F               	movlw	high STR_29
  4995  0011A0  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  4996  0011A2  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  4997                           
  4998                           ;SIM800x.c: 331: Wait_ms(500);
  4999  0011A6  0EF4               	movlw	244
  5000  0011A8  6E0E               	movwf	Wait_ms@value^0,c
  5001  0011AA  0E01               	movlw	1
  5002  0011AC  6E0F               	movwf	(Wait_ms@value+1)^0,c
  5003  0011AE  0E00               	movlw	0
  5004  0011B0  6E10               	movwf	(Wait_ms@value+2)^0,c
  5005  0011B2  0E00               	movlw	0
  5006  0011B4  6E11               	movwf	(Wait_ms@value+3)^0,c
  5007  0011B6  ECD6  F00C         	call	_Wait_ms	;wreg free
  5008                           
  5009                           ;SIM800x.c: 333: char str[15];;SIM800x.c: 334: sprintf(str, "AT+IPR=%ld\r", br);
  5010  0011BA  0E40               	movlw	low SIM800xInit@str
  5011  0011BC  6E24               	movwf	sprintf@sp^0,c
  5012  0011BE  0E00               	movlw	high SIM800xInit@str
  5013  0011C0  6E25               	movwf	(sprintf@sp+1)^0,c
  5014  0011C2  0EA4               	movlw	low STR_30
  5015  0011C4  6E26               	movwf	sprintf@f^0,c
  5016  0011C6  0E7E               	movlw	high STR_30
  5017  0011C8  6E27               	movwf	(sprintf@f+1)^0,c
  5018  0011CA  C03C  F028         	movff	SIM800xInit@br,?_sprintf+4
  5019  0011CE  C03D  F029         	movff	SIM800xInit@br+1,?_sprintf+5
  5020  0011D2  C03E  F02A         	movff	SIM800xInit@br+2,?_sprintf+6
  5021  0011D6  C03F  F02B         	movff	SIM800xInit@br+3,?_sprintf+7
  5022  0011DA  ECCD  F002         	call	_sprintf	;wreg free
  5023                           
  5024                           ;SIM800x.c: 335: SIM800xSDMFlush();
  5025  0011DE  EC8E  F010         	call	_SIM800xSDMFlush	;wreg free
  5026                           
  5027                           ;SIM800x.c: 336: SIM800xSDMPrint(str);
  5028  0011E2  0E40               	movlw	low SIM800xInit@str
  5029  0011E4  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  5030  0011E6  0E00               	movlw	high SIM800xInit@str
  5031  0011E8  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  5032  0011EA  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  5033                           
  5034                           ;SIM800x.c: 337: Wait_ms(500);
  5035  0011EE  0EF4               	movlw	244
  5036  0011F0  6E0E               	movwf	Wait_ms@value^0,c
  5037  0011F2  0E01               	movlw	1
  5038  0011F4  6E0F               	movwf	(Wait_ms@value+1)^0,c
  5039  0011F6  0E00               	movlw	0
  5040  0011F8  6E10               	movwf	(Wait_ms@value+2)^0,c
  5041  0011FA  0E00               	movlw	0
  5042  0011FC  6E11               	movwf	(Wait_ms@value+3)^0,c
  5043  0011FE  ECD6  F00C         	call	_Wait_ms	;wreg free
  5044                           
  5045                           ;SIM800x.c: 338: char c = SIM800xSDMPeek(2);
  5046  001202  0E02               	movlw	2
  5047  001204  ECCA  F00F         	call	_SIM800xSDMPeek
  5048  001208  6E51               	movwf	SIM800xInit@c^0,c
  5049                           
  5050                           ;SIM800x.c: 339: if(c == 'O')
  5051  00120A  0E4F               	movlw	79
  5052  00120C  1851               	xorwf	SIM800xInit@c^0,w,c
  5053  00120E  A4D8               	btfss	status,2,c
  5054  001210  D012               	goto	l4887
  5055                           
  5056                           ;SIM800x.c: 340: {;SIM800x.c: 341: SIM800xSDMPrint("AT&W\r");
  5057  001212  0ED6               	movlw	low STR_31
  5058  001214  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  5059  001216  0E7F               	movlw	high STR_31
  5060  001218  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  5061  00121A  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  5062                           
  5063                           ;SIM800x.c: 342: Wait_ms(100);
  5064  00121E  0E64               	movlw	100
  5065  001220  6E0E               	movwf	Wait_ms@value^0,c
  5066  001222  0E00               	movlw	0
  5067  001224  6E0F               	movwf	(Wait_ms@value+1)^0,c
  5068  001226  0E00               	movlw	0
  5069  001228  6E10               	movwf	(Wait_ms@value+2)^0,c
  5070  00122A  0E00               	movlw	0
  5071  00122C  6E11               	movwf	(Wait_ms@value+3)^0,c
  5072  00122E  ECD6  F00C         	call	_Wait_ms	;wreg free
  5073                           
  5074                           ;SIM800x.c: 343: return OK;
  5075  001232  0E00               	movlw	0
  5076  001234  D009               	goto	l330
  5077  001236                     l4887:
  5078  001236  FFFF               	dw	65535	; assembler added errata NOP
  5079                           
  5080                           ;SIM800x.c: 344: };SIM800x.c: 346: if(c == 'E')
  5081  001238  0E45               	movlw	69
  5082  00123A  1851               	xorwf	SIM800xInit@c^0,w,c
  5083  00123C  A4D8               	btfss	status,2,c
  5084  00123E  D002               	goto	l4893
  5085                           
  5086                           ;SIM800x.c: 347: return BR_ERROR;
  5087  001240  0E04               	movlw	4
  5088  001242  D002               	goto	l330
  5089  001244                     l4893:
  5090  001244  FFFF               	dw	65535	; assembler added errata NOP
  5091                           
  5092                           ;SIM800x.c: 349: return TIME_OUT;
  5093  001246  0E05               	movlw	5
  5094  001248                     l330:
  5095  001248  FFFF               	dw	65535	; assembler added errata NOP
  5096  00124A  0012               	return		;funcret
  5097  00124C  FFFF               	dw	65535	; errata NOP
  5098  00124E                     __end_of_SIM800xInit:
  5099                           	callstack 0
  5100                           
  5101 ;; *************** function _sprintf *****************
  5102 ;; Defined at:
  5103 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;  sp              2   35[COMRAM] PTR unsigned char 
  5106 ;;		 -> SIM800xHTTPRead@str(30), SIM800xHTTPAction@str(30), SIM800xHTTPInputData@str(30), SIM800xHTTPSetTimeout@str(30),
      + 
  5107 ;;		 -> SIM800xHTTPSetBreakEnd@str(30), SIM800xHTTPSetBreak@str(30), SIM800xHTTPSetRedir@str(25), SIM800xHTTPSetPort@str
      +(30), 
  5108 ;;		 -> SIM800xGPRSGetAddress@str(40), SIM800xGPRSSetDataMode@str(20), SIM800xGPRSSetQoSRequest@str(40), SIM800xGPRSSetQ
      +oSMin@str(40), 
  5109 ;;		 -> SIM800xIPGetParameters@str(30), SIM800xIPSetRate@str(8), SIM800xSetBaudRate@str(15), SIM800xInit@str(15), 
  5110 ;;		 -> SystemTask@msg(20), 
  5111 ;;  f               2   37[COMRAM] PTR const unsigned char 
  5112 ;;		 -> STR_98(21), STR_97(18), STR_96(21), STR_93(26), 
  5113 ;;		 -> STR_92(28), STR_91(25), STR_90(24), STR_89(26), 
  5114 ;;		 -> STR_69(15), STR_68(20), STR_64(29), STR_63(29), 
  5115 ;;		 -> STR_57(15), STR_51(4), STR_33(12), STR_30(12), 
  5116 ;;		 -> STR_24(27), STR_23(24), 
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;  val             4   51[COMRAM] unsigned long 
  5119 ;;  tmpval          4    0        struct .
  5120 ;;  cp              3    0        PTR const unsigned char 
  5121 ;;  ap              2   56[COMRAM] PTR void [1]
  5122 ;;		 -> ?_sprintf(2), 
  5123 ;;  prec            2   49[COMRAM] int 
  5124 ;;  len             2    0        unsigned int 
  5125 ;;  c               1   58[COMRAM] unsigned char 
  5126 ;;  flag            1   55[COMRAM] unsigned char 
  5127 ;; Return value:  Size  Location     Type
  5128 ;;                  2   35[COMRAM] int 
  5129 ;; Registers used:
  5130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5136 ;;      Params:        12       0       0       0       0       0       0
  5137 ;;      Locals:        10       0       0       0       0       0       0
  5138 ;;      Temps:          2       0       0       0       0       0       0
  5139 ;;      Totals:        24       0       0       0       0       0       0
  5140 ;;Total ram usage:       24 bytes
  5141 ;; Hardware stack levels used: 1
  5142 ;; Hardware stack levels required when called: 4
  5143 ;; This function calls:
  5144 ;;		___lldiv
  5145 ;;		___llmod
  5146 ;; This function is called by:
  5147 ;;		_SystemTask
  5148 ;;		_SIM800xInit
  5149 ;;		_SIM800xHTTPInputData
  5150 ;;		_SIM800xHTTPAction
  5151 ;;		_SIM800xHTTPRead
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155                           	psect	text14
  5156  00059A                     __ptext14:
  5157                           	callstack 0
  5158  00059A                     _sprintf:
  5159                           	callstack 0
  5160  00059A  FFFF               	dw	65535	; assembler added errata NOP
  5161                           
  5162                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 517: int prec;;doprnt.c: 52
      +                          5: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;doprnt.c:
      +                           542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long val;;doprnt.c:
      +                           546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_start();
  5163                           
  5164                           ;incstack = 0
  5165  00059C  0E28               	movlw	low (?_sprintf+4)
  5166  00059E  6E39               	movwf	sprintf@ap^0,c
  5167  0005A0  0E00               	movlw	high (?_sprintf+4)
  5168  0005A2  6E3A               	movwf	(sprintf@ap+1)^0,c
  5169                           
  5170                           ;doprnt.c: 553: while((c = *f++)) {
  5171  0005A4  D114               	goto	u3860
  5172  0005A6                     l4535:
  5173  0005A6  FFFF               	dw	65535	; assembler added errata NOP
  5174                           
  5175                           ;doprnt.c: 555: if(c != '%')
  5176  0005A8  0E25               	movlw	37
  5177  0005AA  183B               	xorwf	sprintf@c^0,w,c
  5178  0005AC  B4D8               	btfsc	status,2,c
  5179  0005AE  D009               	goto	l4541
  5180                           
  5181                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  5182  0005B0  C024  FFD9         	movff	sprintf@sp,fsr2l
  5183  0005B4  C025  FFDA         	movff	sprintf@sp+1,fsr2h
  5184  0005B8  C03B  FFDF         	movff	sprintf@c,indf2
  5185  0005BC  4A24               	infsnz	sprintf@sp^0,f,c
  5186  0005BE  2A25               	incf	(sprintf@sp+1)^0,f,c
  5187                           
  5188                           ;doprnt.c: 559: continue;
  5189  0005C0  D106               	goto	u3860
  5190  0005C2                     l4541:
  5191  0005C2  FFFF               	dw	65535	; assembler added errata NOP
  5192                           
  5193                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  5194  0005C4  0E00               	movlw	0
  5195  0005C6  6E38               	movwf	sprintf@flag^0,c
  5196  0005C8  D006               	goto	l4549
  5197  0005CA                     l4543:
  5198  0005CA  FFFF               	dw	65535	; assembler added errata NOP
  5199                           
  5200                           ;doprnt.c: 669: flag |= 0x10;
  5201  0005CC  8838               	bsf	sprintf@flag^0,4,c
  5202                           
  5203                           ;doprnt.c: 670: goto loop;
  5204  0005CE  D003               	goto	l4549
  5205  0005D0                     l4545:
  5206  0005D0  FFFF               	dw	65535	; assembler added errata NOP
  5207                           
  5208                           ;doprnt.c: 844: flag |= 0x40;
  5209  0005D2  8C38               	bsf	sprintf@flag^0,6,c
  5210                           
  5211                           ;doprnt.c: 845: break;
  5212  0005D4  D01C               	goto	l1113
  5213  0005D6                     l4549:
  5214  0005D6  FFFF               	dw	65535	; assembler added errata NOP
  5215  0005D8  C026  FFF6         	movff	sprintf@f,tblptrl
  5216  0005DC  C027  FFF7         	movff	sprintf@f+1,tblptrh
  5217  0005E0  4A26               	infsnz	sprintf@f^0,f,c
  5218  0005E2  2A27               	incf	(sprintf@f+1)^0,f,c
  5219  0005E4                     	if	0	;tblptru may be non-zero
  5220  0005E4                     	endif
  5221  0005E4                     	if	0	;tblptru may be non-zero
  5222  0005E4                     	endif
  5223  0005E4  0008               	tblrd		*
  5224  0005E6  FFFF               	dw	65535	; errata NOP
  5225  0005E8  CFF5 F03B          	movff	tablat,sprintf@c
  5226  0005EC  503B               	movf	sprintf@c^0,w,c
  5227                           
  5228                           ; Switch size 1, requested type "simple"
  5229                           ; Number of cases is 5, Range of values is 0 to 117
  5230                           ; switch strategies available:
  5231                           ; Name         Instructions Cycles
  5232                           ; simple_byte           16     9 (average)
  5233                           ;	Chosen strategy is simple_byte
  5234  0005EE  0A00               	xorlw	0	; case 0
  5235  0005F0  B4D8               	btfsc	status,2,c
  5236  0005F2  D0FB               	goto	u3870
  5237  0005F4  0A64               	xorlw	100	; case 100
  5238  0005F6  B4D8               	btfsc	status,2,c
  5239  0005F8  D00A               	goto	l1113
  5240  0005FA  0A0D               	xorlw	13	; case 105
  5241  0005FC  B4D8               	btfsc	status,2,c
  5242  0005FE  D007               	goto	l1113
  5243  000600  0A05               	xorlw	5	; case 108
  5244  000602  B4D8               	btfsc	status,2,c
  5245  000604  D7E2               	goto	l4543
  5246  000606  0A19               	xorlw	25	; case 117
  5247  000608  B4D8               	btfsc	status,2,c
  5248  00060A  D7E2               	goto	l4545
  5249  00060C  D0E0               	goto	u3860
  5250  00060E                     l1113:
  5251  00060E  FFFF               	dw	65535	; assembler added errata NOP
  5252                           
  5253                           ;doprnt.c: 1277: if((flag & 0x40) == 0x00)
  5254  000610  BC38               	btfsc	sprintf@flag^0,6,c
  5255  000612  D030               	goto	l1116
  5256                           
  5257                           ;doprnt.c: 1279: {;doprnt.c: 1281: if(flag & 0x10)
  5258  000614  A838               	btfss	sprintf@flag^0,4,c
  5259  000616  D00E               	goto	l4557
  5260                           
  5261                           ;doprnt.c: 1282: val = (unsigned long)(*(long *)__va_arg((*(long **)ap), (long)0));
  5262  000618  C039  FFD9         	movff	sprintf@ap,fsr2l
  5263  00061C  C03A  FFDA         	movff	sprintf@ap+1,fsr2h
  5264  000620  CFDE F034          	movff	postinc2,sprintf@val
  5265  000624  CFDE F035          	movff	postinc2,sprintf@val+1
  5266  000628  CFDE F036          	movff	postinc2,sprintf@val+2
  5267  00062C  CFDE F037          	movff	postinc2,sprintf@val+3
  5268  000630  0E04               	movlw	4
  5269  000632  D00F               	goto	L1
  5270  000634                     l4557:
  5271  000634  FFFF               	dw	65535	; assembler added errata NOP
  5272                           
  5273                           ;doprnt.c: 1283: else;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)a
      +                          p), (int)0));
  5274  000636  C039  FFD9         	movff	sprintf@ap,fsr2l
  5275  00063A  C03A  FFDA         	movff	sprintf@ap+1,fsr2h
  5276  00063E  CFDE F034          	movff	postinc2,sprintf@val
  5277  000642  CFDD F035          	movff	postdec2,sprintf@val+1
  5278  000646  0E00               	movlw	0
  5279  000648  BE35               	btfsc	(sprintf@val+1)^0,7,c
  5280  00064A  0EFF               	movlw	-1
  5281  00064C  6E36               	movwf	(sprintf@val+2)^0,c
  5282  00064E  6E37               	movwf	(sprintf@val+3)^0,c
  5283  000650  0E02               	movlw	2
  5284  000652                     L1:
  5285  000652  FFFF               	dw	65535	; assembler added errata NOP
  5286  000654  2639               	addwf	sprintf@ap^0,f,c
  5287  000656  0E00               	movlw	0
  5288  000658  223A               	addwfc	(sprintf@ap+1)^0,f,c
  5289                           
  5290                           ;doprnt.c: 1287: if((long)val < 0) {
  5291  00065A  AE37               	btfss	(sprintf@val+3)^0,7,c
  5292  00065C  D030               	goto	l4575
  5293                           
  5294                           ;doprnt.c: 1288: flag |= 0x03;
  5295  00065E  0E03               	movlw	3
  5296  000660  1238               	iorwf	sprintf@flag^0,f,c
  5297                           
  5298                           ;doprnt.c: 1289: val = -val;
  5299  000662  1E37               	comf	(sprintf@val+3)^0,f,c
  5300  000664  1E36               	comf	(sprintf@val+2)^0,f,c
  5301  000666  1E35               	comf	(sprintf@val+1)^0,f,c
  5302  000668  6C34               	negf	sprintf@val^0,c
  5303  00066A  0E00               	movlw	0
  5304  00066C  2235               	addwfc	(sprintf@val+1)^0,f,c
  5305  00066E  2236               	addwfc	(sprintf@val+2)^0,f,c
  5306  000670  2237               	addwfc	(sprintf@val+3)^0,f,c
  5307  000672  D025               	goto	l4575
  5308  000674                     l1116:
  5309  000674  FFFF               	dw	65535	; assembler added errata NOP
  5310                           
  5311                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
  5312  000676  A838               	btfss	sprintf@flag^0,4,c
  5313  000678  D00E               	goto	l4571
  5314                           
  5315                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  5316  00067A  C039  FFD9         	movff	sprintf@ap,fsr2l
  5317  00067E  C03A  FFDA         	movff	sprintf@ap+1,fsr2h
  5318  000682  CFDE F034          	movff	postinc2,sprintf@val
  5319  000686  CFDE F035          	movff	postinc2,sprintf@val+1
  5320  00068A  CFDE F036          	movff	postinc2,sprintf@val+2
  5321  00068E  CFDE F037          	movff	postinc2,sprintf@val+3
  5322  000692  0E04               	movlw	4
  5323  000694  D010               	goto	L2
  5324  000696                     l4571:
  5325  000696  FFFF               	dw	65535	; assembler added errata NOP
  5326                           
  5327                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  5328  000698  C039  FFD9         	movff	sprintf@ap,fsr2l
  5329  00069C  C03A  FFDA         	movff	sprintf@ap+1,fsr2h
  5330  0006A0  CFDE F030          	movff	postinc2,??_sprintf
  5331  0006A4  CFDD F031          	movff	postdec2,??_sprintf+1
  5332  0006A8  C030  F034         	movff	??_sprintf,sprintf@val
  5333  0006AC  C031  F035         	movff	??_sprintf+1,sprintf@val+1
  5334  0006B0  6A36               	clrf	(sprintf@val+2)^0,c
  5335  0006B2  6A37               	clrf	(sprintf@val+3)^0,c
  5336  0006B4  0E02               	movlw	2
  5337  0006B6                     L2:
  5338  0006B6  FFFF               	dw	65535	; assembler added errata NOP
  5339  0006B8  2639               	addwf	sprintf@ap^0,f,c
  5340  0006BA  0E00               	movlw	0
  5341  0006BC  223A               	addwfc	(sprintf@ap+1)^0,f,c
  5342  0006BE                     l4575:
  5343  0006BE  FFFF               	dw	65535	; assembler added errata NOP
  5344                           
  5345                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  5346  0006C0  0E01               	movlw	1
  5347  0006C2  6E3B               	movwf	sprintf@c^0,c
  5348  0006C4                     l4581:
  5349  0006C4  FFFF               	dw	65535	; assembler added errata NOP
  5350                           
  5351                           ;doprnt.c: 1332: if(val < dpowers[c])
  5352  0006C6  503B               	movf	sprintf@c^0,w,c
  5353  0006C8  0D04               	mullw	4
  5354  0006CA  0EB9               	movlw	low _dpowers
  5355  0006CC  24F3               	addwf	243,w,c
  5356  0006CE  6EF6               	movwf	tblptrl,c
  5357  0006D0  0E79               	movlw	high _dpowers
  5358  0006D2  20F4               	addwfc	244,w,c
  5359  0006D4  6EF7               	movwf	tblptrh,c
  5360  0006D6                     	if	0	;There are less than 3 active tblptr bytes
  5361  0006D6                     	endif
  5362  0006D6  0009               	tblrd		*+
  5363  0006D8  FFFF               	dw	65535	; errata NOP
  5364  0006DA  50F5               	movf	tablat,w,c
  5365  0006DC  5C34               	subwf	sprintf@val^0,w,c
  5366  0006DE  0009               	tblrd		*+
  5367  0006E0  FFFF               	dw	65535	; errata NOP
  5368  0006E2  50F5               	movf	tablat,w,c
  5369  0006E4  5835               	subwfb	(sprintf@val+1)^0,w,c
  5370  0006E6  0009               	tblrd		*+
  5371  0006E8  FFFF               	dw	65535	; errata NOP
  5372  0006EA  50F5               	movf	tablat,w,c
  5373  0006EC  5836               	subwfb	(sprintf@val+2)^0,w,c
  5374  0006EE  0009               	tblrd		*+
  5375  0006F0  FFFF               	dw	65535	; errata NOP
  5376  0006F2  50F5               	movf	tablat,w,c
  5377  0006F4  5837               	subwfb	(sprintf@val+3)^0,w,c
  5378  0006F6  A0D8               	btfss	status,0,c
  5379  0006F8  D005               	goto	u3840
  5380  0006FA  2A3B               	incf	sprintf@c^0,f,c
  5381  0006FC  0E0A               	movlw	10
  5382  0006FE  183B               	xorwf	sprintf@c^0,w,c
  5383  000700  A4D8               	btfss	status,2,c
  5384  000702  D7E0               	goto	l4581
  5385  000704                     u3840:
  5386  000704  FFFF               	dw	65535	; assembler added errata NOP
  5387                           
  5388                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  5389  000706  C038  F030         	movff	sprintf@flag,??_sprintf
  5390  00070A  0E03               	movlw	3
  5391  00070C  1630               	andwf	??_sprintf^0,f,c
  5392  00070E  B4D8               	btfsc	status,2,c
  5393  000710  D008               	goto	l4595
  5394                           
  5395                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  5396  000712  C024  FFD9         	movff	sprintf@sp,fsr2l
  5397  000716  C025  FFDA         	movff	sprintf@sp+1,fsr2h
  5398  00071A  0E2D               	movlw	45
  5399  00071C  6EDF               	movwf	indf2,c
  5400  00071E  4A24               	infsnz	sprintf@sp^0,f,c
  5401  000720  2A25               	incf	(sprintf@sp+1)^0,f,c
  5402  000722                     l4595:
  5403  000722  FFFF               	dw	65535	; assembler added errata NOP
  5404                           
  5405                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  5406  000724  C03B  F032         	movff	sprintf@c,sprintf@prec
  5407  000728  6A33               	clrf	(sprintf@prec+1)^0,c
  5408                           
  5409                           ;doprnt.c: 1500: while(prec--) {
  5410  00072A  D048               	goto	l4603
  5411  00072C                     l4597:
  5412  00072C  FFFF               	dw	65535	; assembler added errata NOP
  5413                           
  5414                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  5415  00072E  C032  F030         	movff	sprintf@prec,??_sprintf
  5416  000732  C033  F031         	movff	sprintf@prec+1,??_sprintf+1
  5417  000736  90D8               	bcf	status,0,c
  5418  000738  3630               	rlcf	??_sprintf^0,f,c
  5419  00073A  3631               	rlcf	(??_sprintf+1)^0,f,c
  5420  00073C  90D8               	bcf	status,0,c
  5421  00073E  3630               	rlcf	??_sprintf^0,f,c
  5422  000740  3631               	rlcf	(??_sprintf+1)^0,f,c
  5423  000742  0EB9               	movlw	low _dpowers
  5424  000744  2430               	addwf	??_sprintf^0,w,c
  5425  000746  6EF6               	movwf	tblptrl,c
  5426  000748  0E79               	movlw	high _dpowers
  5427  00074A  2031               	addwfc	(??_sprintf+1)^0,w,c
  5428  00074C  6EF7               	movwf	tblptrh,c
  5429  00074E                     	if	0	;There are less than 3 active tblptr bytes
  5430  00074E                     	endif
  5431  00074E  0009               	tblrd		*+
  5432  000750  FFFF               	dw	65535	; errata NOP
  5433  000752  CFF5 F012          	movff	tablat,___lldiv@divisor
  5434  000756  0009               	tblrd		*+
  5435  000758  FFFF               	dw	65535	; errata NOP
  5436  00075A  CFF5 F013          	movff	tablat,___lldiv@divisor+1
  5437  00075E  0009               	tblrd		*+
  5438  000760  FFFF               	dw	65535	; errata NOP
  5439  000762  CFF5 F014          	movff	tablat,___lldiv@divisor+2
  5440  000766  000A               	tblrd		*-
  5441  000768  FFFF               	dw	65535	; errata NOP
  5442  00076A  CFF5 F015          	movff	tablat,___lldiv@divisor+3
  5443  00076E  C034  F00E         	movff	sprintf@val,___lldiv@dividend
  5444  000772  C035  F00F         	movff	sprintf@val+1,___lldiv@dividend+1
  5445  000776  C036  F010         	movff	sprintf@val+2,___lldiv@dividend+2
  5446  00077A  C037  F011         	movff	sprintf@val+3,___lldiv@dividend+3
  5447  00077E  EC12  F00B         	call	___lldiv	;wreg free
  5448  000782  C00E  F01B         	movff	?___lldiv,___llmod@dividend
  5449  000786  C00F  F01C         	movff	?___lldiv+1,___llmod@dividend+1
  5450  00078A  C010  F01D         	movff	?___lldiv+2,___llmod@dividend+2
  5451  00078E  C011  F01E         	movff	?___lldiv+3,___llmod@dividend+3
  5452  000792  0E0A               	movlw	10
  5453  000794  6E1F               	movwf	___llmod@divisor^0,c
  5454  000796  0E00               	movlw	0
  5455  000798  6E20               	movwf	(___llmod@divisor+1)^0,c
  5456  00079A  0E00               	movlw	0
  5457  00079C  6E21               	movwf	(___llmod@divisor+2)^0,c
  5458  00079E  0E00               	movlw	0
  5459  0007A0  6E22               	movwf	(___llmod@divisor+3)^0,c
  5460  0007A2  EC62  F00C         	call	___llmod	;wreg free
  5461  0007A6  501B               	movf	?___llmod^0,w,c
  5462  0007A8  0F30               	addlw	48
  5463  0007AA  6E3B               	movwf	sprintf@c^0,c
  5464                           
  5465                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  5466  0007AC  C024  FFD9         	movff	sprintf@sp,fsr2l
  5467  0007B0  C025  FFDA         	movff	sprintf@sp+1,fsr2h
  5468  0007B4  C03B  FFDF         	movff	sprintf@c,indf2
  5469  0007B8  4A24               	infsnz	sprintf@sp^0,f,c
  5470  0007BA  2A25               	incf	(sprintf@sp+1)^0,f,c
  5471  0007BC                     l4603:
  5472  0007BC  FFFF               	dw	65535	; assembler added errata NOP
  5473  0007BE  0632               	decf	sprintf@prec^0,f,c
  5474  0007C0  A0D8               	btfss	status,0,c
  5475  0007C2  0633               	decf	(sprintf@prec+1)^0,f,c
  5476  0007C4  2832               	incf	sprintf@prec^0,w,c
  5477  0007C6  E1B2               	bnz	l4597
  5478  0007C8  2833               	incf	(sprintf@prec+1)^0,w,c
  5479  0007CA  A4D8               	btfss	status,2,c
  5480  0007CC  D7AF               	goto	l4597
  5481  0007CE                     u3860:
  5482  0007CE  FFFF               	dw	65535	; assembler added errata NOP
  5483  0007D0  C026  FFF6         	movff	sprintf@f,tblptrl
  5484  0007D4  C027  FFF7         	movff	sprintf@f+1,tblptrh
  5485  0007D8  4A26               	infsnz	sprintf@f^0,f,c
  5486  0007DA  2A27               	incf	(sprintf@f+1)^0,f,c
  5487  0007DC                     	if	0	;tblptru may be non-zero
  5488  0007DC                     	endif
  5489  0007DC                     	if	0	;tblptru may be non-zero
  5490  0007DC                     	endif
  5491  0007DC  0008               	tblrd		*
  5492  0007DE  FFFF               	dw	65535	; errata NOP
  5493  0007E0  CFF5 F03B          	movff	tablat,sprintf@c
  5494  0007E4  503B               	movf	sprintf@c^0,w,c
  5495  0007E6  A4D8               	btfss	status,2,c
  5496  0007E8  D6DE               	goto	l4535
  5497  0007EA                     u3870:
  5498  0007EA  FFFF               	dw	65535	; assembler added errata NOP
  5499                           
  5500                           ;doprnt.c: 1564: *sp = 0;
  5501  0007EC  C024  FFD9         	movff	sprintf@sp,fsr2l
  5502  0007F0  C025  FFDA         	movff	sprintf@sp+1,fsr2h
  5503  0007F4  0E00               	movlw	0
  5504  0007F6  6EDF               	movwf	indf2,c
  5505  0007F8  0012               	return		;funcret
  5506  0007FA  FFFF               	dw	65535	; errata NOP
  5507  0007FC                     __end_of_sprintf:
  5508                           	callstack 0
  5509                           
  5510 ;; *************** function ___llmod *****************
  5511 ;; Defined at:
  5512 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\llmod.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;  dividend        4   26[COMRAM] unsigned long 
  5515 ;;  divisor         4   30[COMRAM] unsigned long 
  5516 ;; Auto vars:     Size  Location     Type
  5517 ;;  counter         1   34[COMRAM] unsigned char 
  5518 ;; Return value:  Size  Location     Type
  5519 ;;                  4   26[COMRAM] unsigned long 
  5520 ;; Registers used:
  5521 ;;		wreg, status,2, status,0
  5522 ;; Tracked objects:
  5523 ;;		On entry : 0/0
  5524 ;;		On exit  : 0/0
  5525 ;;		Unchanged: 0/0
  5526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5527 ;;      Params:         8       0       0       0       0       0       0
  5528 ;;      Locals:         1       0       0       0       0       0       0
  5529 ;;      Temps:          0       0       0       0       0       0       0
  5530 ;;      Totals:         9       0       0       0       0       0       0
  5531 ;;Total ram usage:        9 bytes
  5532 ;; Hardware stack levels used: 1
  5533 ;; Hardware stack levels required when called: 3
  5534 ;; This function calls:
  5535 ;;		Nothing
  5536 ;; This function is called by:
  5537 ;;		_sprintf
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           	psect	text15
  5542  0018C4                     __ptext15:
  5543                           	callstack 0
  5544  0018C4                     ___llmod:
  5545                           	callstack 0
  5546  0018C4  FFFF               	dw	65535	; assembler added errata NOP
  5547                           
  5548                           ;incstack = 0
  5549  0018C6  501F               	movf	___llmod@divisor^0,w,c
  5550  0018C8  1020               	iorwf	(___llmod@divisor+1)^0,w,c
  5551  0018CA  1021               	iorwf	(___llmod@divisor+2)^0,w,c
  5552  0018CC  1022               	iorwf	(___llmod@divisor+3)^0,w,c
  5553  0018CE  B4D8               	btfsc	status,2,c
  5554  0018D0  D028               	goto	l1542
  5555  0018D2  0E01               	movlw	1
  5556  0018D4  6E23               	movwf	___llmod@counter^0,c
  5557  0018D6  D007               	goto	l4523
  5558  0018D8                     l4521:
  5559  0018D8  FFFF               	dw	65535	; assembler added errata NOP
  5560  0018DA  90D8               	bcf	status,0,c
  5561  0018DC  361F               	rlcf	___llmod@divisor^0,f,c
  5562  0018DE  3620               	rlcf	(___llmod@divisor+1)^0,f,c
  5563  0018E0  3621               	rlcf	(___llmod@divisor+2)^0,f,c
  5564  0018E2  3622               	rlcf	(___llmod@divisor+3)^0,f,c
  5565  0018E4  2A23               	incf	___llmod@counter^0,f,c
  5566  0018E6                     l4523:
  5567  0018E6  FFFF               	dw	65535	; assembler added errata NOP
  5568  0018E8  AE22               	btfss	(___llmod@divisor+3)^0,7,c
  5569  0018EA  D7F6               	goto	l4521
  5570  0018EC                     u3760:
  5571  0018EC  FFFF               	dw	65535	; assembler added errata NOP
  5572  0018EE  501F               	movf	___llmod@divisor^0,w,c
  5573  0018F0  5C1B               	subwf	___llmod@dividend^0,w,c
  5574  0018F2  5020               	movf	(___llmod@divisor+1)^0,w,c
  5575  0018F4  581C               	subwfb	(___llmod@dividend+1)^0,w,c
  5576  0018F6  5021               	movf	(___llmod@divisor+2)^0,w,c
  5577  0018F8  581D               	subwfb	(___llmod@dividend+2)^0,w,c
  5578  0018FA  5022               	movf	(___llmod@divisor+3)^0,w,c
  5579  0018FC  581E               	subwfb	(___llmod@dividend+3)^0,w,c
  5580  0018FE  A0D8               	btfss	status,0,c
  5581  001900  D008               	goto	l4529
  5582  001902  501F               	movf	___llmod@divisor^0,w,c
  5583  001904  5E1B               	subwf	___llmod@dividend^0,f,c
  5584  001906  5020               	movf	(___llmod@divisor+1)^0,w,c
  5585  001908  5A1C               	subwfb	(___llmod@dividend+1)^0,f,c
  5586  00190A  5021               	movf	(___llmod@divisor+2)^0,w,c
  5587  00190C  5A1D               	subwfb	(___llmod@dividend+2)^0,f,c
  5588  00190E  5022               	movf	(___llmod@divisor+3)^0,w,c
  5589  001910  5A1E               	subwfb	(___llmod@dividend+3)^0,f,c
  5590  001912                     l4529:
  5591  001912  FFFF               	dw	65535	; assembler added errata NOP
  5592  001914  90D8               	bcf	status,0,c
  5593  001916  3222               	rrcf	(___llmod@divisor+3)^0,f,c
  5594  001918  3221               	rrcf	(___llmod@divisor+2)^0,f,c
  5595  00191A  3220               	rrcf	(___llmod@divisor+1)^0,f,c
  5596  00191C  321F               	rrcf	___llmod@divisor^0,f,c
  5597  00191E  2E23               	decfsz	___llmod@counter^0,f,c
  5598  001920  D7E5               	goto	u3760
  5599  001922                     l1542:
  5600  001922  FFFF               	dw	65535	; assembler added errata NOP
  5601  001924  C01B  F01B         	movff	___llmod@dividend,?___llmod
  5602  001928  C01C  F01C         	movff	___llmod@dividend+1,?___llmod+1
  5603  00192C  C01D  F01D         	movff	___llmod@dividend+2,?___llmod+2
  5604  001930  C01E  F01E         	movff	___llmod@dividend+3,?___llmod+3
  5605  001934  0012               	return		;funcret
  5606  001936  FFFF               	dw	65535	; errata NOP
  5607  001938                     __end_of___llmod:
  5608                           	callstack 0
  5609                           
  5610 ;; *************** function _Wait_ms *****************
  5611 ;; Defined at:
  5612 ;;		line 114 in file "C:/EmbeddedDevOps/Libraries/SystemTime.X/Src/SystemTime.c"
  5613 ;; Parameters:    Size  Location     Type
  5614 ;;  value           4   13[COMRAM] unsigned long 
  5615 ;; Auto vars:     Size  Location     Type
  5616 ;;  x               4   21[COMRAM] unsigned long 
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  1    wreg      void 
  5619 ;; Registers used:
  5620 ;;		wreg, status,2, status,0
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5626 ;;      Params:         4       0       0       0       0       0       0
  5627 ;;      Locals:         4       0       0       0       0       0       0
  5628 ;;      Temps:          4       0       0       0       0       0       0
  5629 ;;      Totals:        12       0       0       0       0       0       0
  5630 ;;Total ram usage:       12 bytes
  5631 ;; Hardware stack levels used: 1
  5632 ;; Hardware stack levels required when called: 3
  5633 ;; This function calls:
  5634 ;;		Nothing
  5635 ;; This function is called by:
  5636 ;;		_SIM800xInit
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           	psect	text16
  5641  0019AC                     __ptext16:
  5642                           	callstack 0
  5643  0019AC                     _Wait_ms:
  5644                           	callstack 0
  5645  0019AC  FFFF               	dw	65535	; assembler added errata NOP
  5646                           
  5647                           ;SystemTime.c: 117: uint32_t x = IncVar;
  5648                           
  5649                           ;incstack = 0
  5650  0019AE  C056  F016         	movff	_IncVar,Wait_ms@x	;volatile
  5651  0019B2  C057  F017         	movff	_IncVar+1,Wait_ms@x+1	;volatile
  5652  0019B6  C058  F018         	movff	_IncVar+2,Wait_ms@x+2	;volatile
  5653  0019BA  C059  F019         	movff	_IncVar+3,Wait_ms@x+3	;volatile
  5654                           
  5655                           ;SystemTime.c: 119: while((value != 0))
  5656  0019BE  D025               	goto	u3910
  5657  0019C0                     l4623:
  5658  0019C0  FFFF               	dw	65535	; assembler added errata NOP
  5659                           
  5660                           ;SystemTime.c: 123: {;SystemTime.c: 124: --value;
  5661  0019C2  060E               	decf	Wait_ms@value^0,f,c
  5662  0019C4  0E00               	movlw	0
  5663  0019C6  5A0F               	subwfb	(Wait_ms@value+1)^0,f,c
  5664  0019C8  5A10               	subwfb	(Wait_ms@value+2)^0,f,c
  5665  0019CA  5A11               	subwfb	(Wait_ms@value+3)^0,f,c
  5666                           
  5667                           ;SystemTime.c: 125: x+=1;
  5668  0019CC  0E01               	movlw	1
  5669  0019CE  2616               	addwf	Wait_ms@x^0,f,c
  5670  0019D0  0E00               	movlw	0
  5671  0019D2  2217               	addwfc	(Wait_ms@x+1)^0,f,c
  5672  0019D4  2218               	addwfc	(Wait_ms@x+2)^0,f,c
  5673  0019D6  2219               	addwfc	(Wait_ms@x+3)^0,f,c
  5674  0019D8                     l213:
  5675  0019D8  FFFF               	dw	65535	; assembler added errata NOP
  5676  0019DA  500E               	movf	Wait_ms@value^0,w,c
  5677  0019DC  100F               	iorwf	(Wait_ms@value+1)^0,w,c
  5678  0019DE  1010               	iorwf	(Wait_ms@value+2)^0,w,c
  5679  0019E0  1011               	iorwf	(Wait_ms@value+3)^0,w,c
  5680  0019E2  B4D8               	btfsc	status,2,c
  5681  0019E4  D012               	goto	u3910
  5682  0019E6  5016               	movf	Wait_ms@x^0,w,c
  5683  0019E8  5C56               	subwf	_IncVar^0,w,c	;volatile
  5684  0019EA  6E12               	movwf	??_Wait_ms^0,c
  5685  0019EC  5017               	movf	(Wait_ms@x+1)^0,w,c
  5686  0019EE  5857               	subwfb	(_IncVar+1)^0,w,c	;volatile
  5687  0019F0  6E13               	movwf	(??_Wait_ms+1)^0,c
  5688  0019F2  5018               	movf	(Wait_ms@x+2)^0,w,c
  5689  0019F4  5858               	subwfb	(_IncVar+2)^0,w,c	;volatile
  5690  0019F6  6E14               	movwf	(??_Wait_ms+2)^0,c
  5691  0019F8  5019               	movf	(Wait_ms@x+3)^0,w,c
  5692  0019FA  5859               	subwfb	(_IncVar+3)^0,w,c	;volatile
  5693  0019FC  6E15               	movwf	(??_Wait_ms+3)^0,c
  5694  0019FE  5012               	movf	??_Wait_ms^0,w,c
  5695  001A00  1013               	iorwf	(??_Wait_ms+1)^0,w,c
  5696  001A02  1014               	iorwf	(??_Wait_ms+2)^0,w,c
  5697  001A04  1015               	iorwf	(??_Wait_ms+3)^0,w,c
  5698  001A06  A4D8               	btfss	status,2,c
  5699  001A08  D7DB               	goto	l4623
  5700  001A0A                     u3910:
  5701  001A0A  FFFF               	dw	65535	; assembler added errata NOP
  5702  001A0C  500E               	movf	Wait_ms@value^0,w,c
  5703  001A0E  100F               	iorwf	(Wait_ms@value+1)^0,w,c
  5704  001A10  1010               	iorwf	(Wait_ms@value+2)^0,w,c
  5705  001A12  1011               	iorwf	(Wait_ms@value+3)^0,w,c
  5706  001A14  B4D8               	btfsc	status,2,c
  5707  001A16  0012               	return		;funcret
  5708  001A18  FFFF               	dw	65535	; assembler added errata NOP
  5709  001A1A  D7DE               	goto	l213
  5710  001A1C  FFFF               	dw	65535	; errata NOP
  5711  001A1E                     __end_of_Wait_ms:
  5712                           	callstack 0
  5713                           
  5714 ;; *************** function _SIM800xSDMInit *****************
  5715 ;; Defined at:
  5716 ;;		line 45 in file "Src/SIM800x_SDM.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;  br              4   26[COMRAM] unsigned long 
  5719 ;; Auto vars:     Size  Location     Type
  5720 ;;  val             4   34[COMRAM] unsigned long 
  5721 ;; Return value:  Size  Location     Type
  5722 ;;                  1    wreg      void 
  5723 ;; Registers used:
  5724 ;;		wreg, status,2, status,0, cstack
  5725 ;; Tracked objects:
  5726 ;;		On entry : 0/0
  5727 ;;		On exit  : 0/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5730 ;;      Params:         4       0       0       0       0       0       0
  5731 ;;      Locals:         4       0       0       0       0       0       0
  5732 ;;      Temps:          4       0       0       0       0       0       0
  5733 ;;      Totals:        12       0       0       0       0       0       0
  5734 ;;Total ram usage:       12 bytes
  5735 ;; Hardware stack levels used: 1
  5736 ;; Hardware stack levels required when called: 4
  5737 ;; This function calls:
  5738 ;;		_SystimeInit
  5739 ;;		_USARTAsyncInit
  5740 ;;		___lldiv
  5741 ;; This function is called by:
  5742 ;;		_SIM800xInit
  5743 ;; This function uses a non-reentrant model
  5744 ;;
  5745                           
  5746                           	psect	text17
  5747  001938                     __ptext17:
  5748                           	callstack 0
  5749  001938                     _SIM800xSDMInit:
  5750                           	callstack 0
  5751  001938  FFFF               	dw	65535	; assembler added errata NOP
  5752                           
  5753                           ;SIM800x_SDM.c: 50: uint32_t val = ((16 * 1000000/(16 * br)) - 1);
  5754                           
  5755                           ;incstack = 0
  5756  00193A  0E00               	movlw	0
  5757  00193C  6E0E               	movwf	___lldiv@dividend^0,c
  5758  00193E  0E24               	movlw	36
  5759  001940  6E0F               	movwf	(___lldiv@dividend+1)^0,c
  5760  001942  0EF4               	movlw	244
  5761  001944  6E10               	movwf	(___lldiv@dividend+2)^0,c
  5762  001946  0E00               	movlw	0
  5763  001948  6E11               	movwf	(___lldiv@dividend+3)^0,c
  5764  00194A  C01B  F01F         	movff	SIM800xSDMInit@br,??_SIM800xSDMInit
  5765  00194E  C01C  F020         	movff	SIM800xSDMInit@br+1,??_SIM800xSDMInit+1
  5766  001952  C01D  F021         	movff	SIM800xSDMInit@br+2,??_SIM800xSDMInit+2
  5767  001956  C01E  F022         	movff	SIM800xSDMInit@br+3,??_SIM800xSDMInit+3
  5768  00195A  0E04               	movlw	4
  5769  00195C                     u4085:
  5770  00195C  FFFF               	dw	65535	; assembler added errata NOP
  5771  00195E  90D8               	bcf	status,0,c
  5772  001960  361F               	rlcf	??_SIM800xSDMInit^0,f,c
  5773  001962  3620               	rlcf	(??_SIM800xSDMInit+1)^0,f,c
  5774  001964  3621               	rlcf	(??_SIM800xSDMInit+2)^0,f,c
  5775  001966  3622               	rlcf	(??_SIM800xSDMInit+3)^0,f,c
  5776  001968  2EE8               	decfsz	wreg,f,c
  5777  00196A  D7F8               	goto	u4085
  5778  00196C  C01F  F012         	movff	??_SIM800xSDMInit,___lldiv@divisor
  5779  001970  C020  F013         	movff	??_SIM800xSDMInit+1,___lldiv@divisor+1
  5780  001974  C021  F014         	movff	??_SIM800xSDMInit+2,___lldiv@divisor+2
  5781  001978  C022  F015         	movff	??_SIM800xSDMInit+3,___lldiv@divisor+3
  5782  00197C  EC12  F00B         	call	___lldiv	;wreg free
  5783  001980  0EFF               	movlw	255
  5784  001982  240E               	addwf	?___lldiv^0,w,c
  5785  001984  6E23               	movwf	SIM800xSDMInit@val^0,c
  5786  001986  0EFF               	movlw	255
  5787  001988  200F               	addwfc	(?___lldiv+1)^0,w,c
  5788  00198A  6E24               	movwf	(SIM800xSDMInit@val+1)^0,c
  5789  00198C  0EFF               	movlw	255
  5790  00198E  2010               	addwfc	(?___lldiv+2)^0,w,c
  5791  001990  6E25               	movwf	(SIM800xSDMInit@val+2)^0,c
  5792  001992  0EFF               	movlw	255
  5793  001994  2011               	addwfc	(?___lldiv+3)^0,w,c
  5794  001996  6E26               	movwf	(SIM800xSDMInit@val+3)^0,c
  5795                           
  5796                           ;SIM800x_SDM.c: 51: USARTAsyncInit((uint8_t)val);
  5797  001998  5023               	movf	SIM800xSDMInit@val^0,w,c
  5798  00199A  ECA3  F010         	call	_USARTAsyncInit
  5799                           
  5800                           ;SIM800x_SDM.c: 54: INTCON |= 0xC0;
  5801  00199E  0EC0               	movlw	192
  5802  0019A0  12F2               	iorwf	242,f,c	;volatile
  5803                           
  5804                           ;SIM800x_SDM.c: 55: PIE1 |= 0x20;
  5805  0019A2  8A9D               	bsf	157,5,c	;volatile
  5806                           
  5807                           ;SIM800x_SDM.c: 57: SystimeInit();
  5808  0019A4  EC55  F010         	call	_SystimeInit	;wreg free
  5809  0019A8  0012               	return		;funcret
  5810  0019AA  FFFF               	dw	65535	; errata NOP
  5811  0019AC                     __end_of_SIM800xSDMInit:
  5812                           	callstack 0
  5813                           
  5814 ;; *************** function ___lldiv *****************
  5815 ;; Defined at:
  5816 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;  dividend        4   13[COMRAM] unsigned long 
  5819 ;;  divisor         4   17[COMRAM] unsigned long 
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;  quotient        4   21[COMRAM] unsigned long 
  5822 ;;  counter         1   25[COMRAM] unsigned char 
  5823 ;; Return value:  Size  Location     Type
  5824 ;;                  4   13[COMRAM] unsigned long 
  5825 ;; Registers used:
  5826 ;;		wreg, status,2, status,0
  5827 ;; Tracked objects:
  5828 ;;		On entry : 0/0
  5829 ;;		On exit  : 0/0
  5830 ;;		Unchanged: 0/0
  5831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5832 ;;      Params:         8       0       0       0       0       0       0
  5833 ;;      Locals:         5       0       0       0       0       0       0
  5834 ;;      Temps:          0       0       0       0       0       0       0
  5835 ;;      Totals:        13       0       0       0       0       0       0
  5836 ;;Total ram usage:       13 bytes
  5837 ;; Hardware stack levels used: 1
  5838 ;; Hardware stack levels required when called: 3
  5839 ;; This function calls:
  5840 ;;		Nothing
  5841 ;; This function is called by:
  5842 ;;		_SIM800xSDMInit
  5843 ;;		_sprintf
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           	psect	text18
  5848  001624                     __ptext18:
  5849                           	callstack 0
  5850  001624                     ___lldiv:
  5851                           	callstack 0
  5852  001624  FFFF               	dw	65535	; assembler added errata NOP
  5853                           
  5854                           ;incstack = 0
  5855  001626  0E00               	movlw	0
  5856  001628  6E16               	movwf	___lldiv@quotient^0,c
  5857  00162A  0E00               	movlw	0
  5858  00162C  6E17               	movwf	(___lldiv@quotient+1)^0,c
  5859  00162E  0E00               	movlw	0
  5860  001630  6E18               	movwf	(___lldiv@quotient+2)^0,c
  5861  001632  0E00               	movlw	0
  5862  001634  6E19               	movwf	(___lldiv@quotient+3)^0,c
  5863  001636  5012               	movf	___lldiv@divisor^0,w,c
  5864  001638  1013               	iorwf	(___lldiv@divisor+1)^0,w,c
  5865  00163A  1014               	iorwf	(___lldiv@divisor+2)^0,w,c
  5866  00163C  1015               	iorwf	(___lldiv@divisor+3)^0,w,c
  5867  00163E  B4D8               	btfsc	status,2,c
  5868  001640  D02E               	goto	l1161
  5869  001642  0E01               	movlw	1
  5870  001644  6E1A               	movwf	___lldiv@counter^0,c
  5871  001646  D007               	goto	l4503
  5872  001648                     l4501:
  5873  001648  FFFF               	dw	65535	; assembler added errata NOP
  5874  00164A  90D8               	bcf	status,0,c
  5875  00164C  3612               	rlcf	___lldiv@divisor^0,f,c
  5876  00164E  3613               	rlcf	(___lldiv@divisor+1)^0,f,c
  5877  001650  3614               	rlcf	(___lldiv@divisor+2)^0,f,c
  5878  001652  3615               	rlcf	(___lldiv@divisor+3)^0,f,c
  5879  001654  2A1A               	incf	___lldiv@counter^0,f,c
  5880  001656                     l4503:
  5881  001656  FFFF               	dw	65535	; assembler added errata NOP
  5882  001658  AE15               	btfss	(___lldiv@divisor+3)^0,7,c
  5883  00165A  D7F6               	goto	l4501
  5884  00165C                     u3730:
  5885  00165C  FFFF               	dw	65535	; assembler added errata NOP
  5886  00165E  90D8               	bcf	status,0,c
  5887  001660  3616               	rlcf	___lldiv@quotient^0,f,c
  5888  001662  3617               	rlcf	(___lldiv@quotient+1)^0,f,c
  5889  001664  3618               	rlcf	(___lldiv@quotient+2)^0,f,c
  5890  001666  3619               	rlcf	(___lldiv@quotient+3)^0,f,c
  5891  001668  5012               	movf	___lldiv@divisor^0,w,c
  5892  00166A  5C0E               	subwf	___lldiv@dividend^0,w,c
  5893  00166C  5013               	movf	(___lldiv@divisor+1)^0,w,c
  5894  00166E  580F               	subwfb	(___lldiv@dividend+1)^0,w,c
  5895  001670  5014               	movf	(___lldiv@divisor+2)^0,w,c
  5896  001672  5810               	subwfb	(___lldiv@dividend+2)^0,w,c
  5897  001674  5015               	movf	(___lldiv@divisor+3)^0,w,c
  5898  001676  5811               	subwfb	(___lldiv@dividend+3)^0,w,c
  5899  001678  A0D8               	btfss	status,0,c
  5900  00167A  D009               	goto	l4513
  5901  00167C  5012               	movf	___lldiv@divisor^0,w,c
  5902  00167E  5E0E               	subwf	___lldiv@dividend^0,f,c
  5903  001680  5013               	movf	(___lldiv@divisor+1)^0,w,c
  5904  001682  5A0F               	subwfb	(___lldiv@dividend+1)^0,f,c
  5905  001684  5014               	movf	(___lldiv@divisor+2)^0,w,c
  5906  001686  5A10               	subwfb	(___lldiv@dividend+2)^0,f,c
  5907  001688  5015               	movf	(___lldiv@divisor+3)^0,w,c
  5908  00168A  5A11               	subwfb	(___lldiv@dividend+3)^0,f,c
  5909  00168C  8016               	bsf	___lldiv@quotient^0,0,c
  5910  00168E                     l4513:
  5911  00168E  FFFF               	dw	65535	; assembler added errata NOP
  5912  001690  90D8               	bcf	status,0,c
  5913  001692  3215               	rrcf	(___lldiv@divisor+3)^0,f,c
  5914  001694  3214               	rrcf	(___lldiv@divisor+2)^0,f,c
  5915  001696  3213               	rrcf	(___lldiv@divisor+1)^0,f,c
  5916  001698  3212               	rrcf	___lldiv@divisor^0,f,c
  5917  00169A  2E1A               	decfsz	___lldiv@counter^0,f,c
  5918  00169C  D7DF               	goto	u3730
  5919  00169E                     l1161:
  5920  00169E  FFFF               	dw	65535	; assembler added errata NOP
  5921  0016A0  C016  F00E         	movff	___lldiv@quotient,?___lldiv
  5922  0016A4  C017  F00F         	movff	___lldiv@quotient+1,?___lldiv+1
  5923  0016A8  C018  F010         	movff	___lldiv@quotient+2,?___lldiv+2
  5924  0016AC  C019  F011         	movff	___lldiv@quotient+3,?___lldiv+3
  5925  0016B0  0012               	return		;funcret
  5926  0016B2  FFFF               	dw	65535	; errata NOP
  5927  0016B4                     __end_of___lldiv:
  5928                           	callstack 0
  5929                           
  5930 ;; *************** function _USARTAsyncInit *****************
  5931 ;; Defined at:
  5932 ;;		line 62 in file "C:/EmbeddedDevOps/M8M_APIs/PIC18.X/Src/USART.c"
  5933 ;; Parameters:    Size  Location     Type
  5934 ;;  bgr             1    wreg     unsigned char 
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;  bgr             1   13[COMRAM] unsigned char 
  5937 ;; Return value:  Size  Location     Type
  5938 ;;                  1    wreg      void 
  5939 ;; Registers used:
  5940 ;;		wreg, status,2
  5941 ;; Tracked objects:
  5942 ;;		On entry : 0/0
  5943 ;;		On exit  : 0/0
  5944 ;;		Unchanged: 0/0
  5945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5946 ;;      Params:         0       0       0       0       0       0       0
  5947 ;;      Locals:         1       0       0       0       0       0       0
  5948 ;;      Temps:          0       0       0       0       0       0       0
  5949 ;;      Totals:         1       0       0       0       0       0       0
  5950 ;;Total ram usage:        1 bytes
  5951 ;; Hardware stack levels used: 1
  5952 ;; Hardware stack levels required when called: 3
  5953 ;; This function calls:
  5954 ;;		Nothing
  5955 ;; This function is called by:
  5956 ;;		_SIM800xSDMInit
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           	psect	text19
  5961  002146                     __ptext19:
  5962                           	callstack 0
  5963  002146                     _USARTAsyncInit:
  5964                           	callstack 0
  5965  002146  FFFF               	dw	65535	; assembler added errata NOP
  5966                           
  5967                           ;incstack = 0
  5968                           ;USARTAsyncInit@bgr stored from wreg
  5969  002148  6E0E               	movwf	USARTAsyncInit@bgr^0,c
  5970                           
  5971                           ;USART.c: 65: TXSTA = 0x24;
  5972  00214A  0E24               	movlw	36
  5973  00214C  6EAC               	movwf	172,c	;volatile
  5974                           
  5975                           ;USART.c: 66: RCSTA = 0x90;
  5976  00214E  0E90               	movlw	144
  5977  002150  6EAB               	movwf	171,c	;volatile
  5978                           
  5979                           ;USART.c: 67: SPBRG = bgr;
  5980  002152  C00E  FFAF         	movff	USARTAsyncInit@bgr,4015	;volatile
  5981  002156  0012               	return		;funcret
  5982  002158  FFFF               	dw	65535	; errata NOP
  5983  00215A                     __end_of_USARTAsyncInit:
  5984                           	callstack 0
  5985                           
  5986 ;; *************** function _SystimeInit *****************
  5987 ;; Defined at:
  5988 ;;		line 55 in file "C:/EmbeddedDevOps/Libraries/SystemTime.X/Src/SystemTime.c"
  5989 ;; Parameters:    Size  Location     Type
  5990 ;;		None
  5991 ;; Auto vars:     Size  Location     Type
  5992 ;;		None
  5993 ;; Return value:  Size  Location     Type
  5994 ;;                  1    wreg      void 
  5995 ;; Registers used:
  5996 ;;		wreg, status,2, status,0
  5997 ;; Tracked objects:
  5998 ;;		On entry : 0/0
  5999 ;;		On exit  : 0/0
  6000 ;;		Unchanged: 0/0
  6001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6002 ;;      Params:         0       0       0       0       0       0       0
  6003 ;;      Locals:         0       0       0       0       0       0       0
  6004 ;;      Temps:          0       0       0       0       0       0       0
  6005 ;;      Totals:         0       0       0       0       0       0       0
  6006 ;;Total ram usage:        0 bytes
  6007 ;; Hardware stack levels used: 1
  6008 ;; Hardware stack levels required when called: 3
  6009 ;; This function calls:
  6010 ;;		Nothing
  6011 ;; This function is called by:
  6012 ;;		_SIM800xSDMInit
  6013 ;; This function uses a non-reentrant model
  6014 ;;
  6015                           
  6016                           	psect	text20
  6017  0020AA                     __ptext20:
  6018                           	callstack 0
  6019  0020AA                     _SystimeInit:
  6020                           	callstack 0
  6021  0020AA  FFFF               	dw	65535	; assembler added errata NOP
  6022                           
  6023                           ;SystemTime.c: 75: val = (uint16_t)(65538 - (16 * 1000000)/(16000));
  6024                           
  6025                           ;incstack = 0
  6026  0020AC  0EFC               	movlw	252
  6027  0020AE  6E5F               	movwf	(_val+1)^0,c	;volatile
  6028  0020B0  0E1A               	movlw	26
  6029  0020B2  6E5E               	movwf	_val^0,c	;volatile
  6030                           
  6031                           ;SystemTime.c: 77: INTCON |= 0xC0;
  6032  0020B4  0EC0               	movlw	192
  6033  0020B6  12F2               	iorwf	242,f,c	;volatile
  6034                           
  6035                           ;SystemTime.c: 79: T0CON = 0x81;
  6036  0020B8  0E81               	movlw	129
  6037  0020BA  6ED5               	movwf	213,c	;volatile
  6038                           
  6039                           ;SystemTime.c: 80: TMR0 = val;
  6040  0020BC  C05E  FFD6         	movff	_val,4054	;volatile
  6041  0020C0  C05F  FFD7         	movff	_val+1,4055	;volatile
  6042                           
  6043                           ;SystemTime.c: 81: TMR0IF = 0;
  6044  0020C4  94F2               	bcf	4082,2,c	;volatile
  6045                           
  6046                           ;SystemTime.c: 82: TMR0IE = 1;
  6047  0020C6  8AF2               	bsf	4082,5,c	;volatile
  6048  0020C8  0012               	return		;funcret
  6049  0020CA  FFFF               	dw	65535	; errata NOP
  6050  0020CC                     __end_of_SystimeInit:
  6051                           	callstack 0
  6052                           
  6053 ;; *************** function _SIM800xIPSetConnectionType *****************
  6054 ;; Defined at:
  6055 ;;		line 573 in file "Src/SIM800x.c"
  6056 ;; Parameters:    Size  Location     Type
  6057 ;;  cid             1    wreg     unsigned char 
  6058 ;;  contype         2   31[COMRAM] PTR const unsigned char 
  6059 ;;		 -> STR_3(5), 
  6060 ;; Auto vars:     Size  Location     Type
  6061 ;;  cid             1   33[COMRAM] unsigned char 
  6062 ;; Return value:  Size  Location     Type
  6063 ;;                  1    wreg      enum E2115
  6064 ;; Registers used:
  6065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6066 ;; Tracked objects:
  6067 ;;		On entry : 0/0
  6068 ;;		On exit  : 0/0
  6069 ;;		Unchanged: 0/0
  6070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6071 ;;      Params:         2       0       0       0       0       0       0
  6072 ;;      Locals:         1       0       0       0       0       0       0
  6073 ;;      Temps:          0       0       0       0       0       0       0
  6074 ;;      Totals:         3       0       0       0       0       0       0
  6075 ;;Total ram usage:        3 bytes
  6076 ;; Hardware stack levels used: 1
  6077 ;; Hardware stack levels required when called: 6
  6078 ;; This function calls:
  6079 ;;		_ProcessResp1
  6080 ;;		_SIM800xSDMFlush
  6081 ;;		_SIM800xSDMPrint
  6082 ;;		_SIM800xSDMSendByte
  6083 ;;		_strlen
  6084 ;; This function is called by:
  6085 ;;		_SystemInit
  6086 ;; This function uses a non-reentrant model
  6087 ;;
  6088                           
  6089                           	psect	text21
  6090  001A1E                     __ptext21:
  6091                           	callstack 0
  6092  001A1E                     _SIM800xIPSetConnectionType:
  6093                           	callstack 0
  6094  001A1E  FFFF               	dw	65535	; assembler added errata NOP
  6095                           
  6096                           ;incstack = 0
  6097                           ;SIM800xIPSetConnectionType@cid stored from wreg
  6098  001A20  6E22               	movwf	SIM800xIPSetConnectionType@cid^0,c
  6099                           
  6100                           ;SIM800x.c: 576: if((cid == 0) || (strlen(contype) > 4))
  6101  001A22  5022               	movf	SIM800xIPSetConnectionType@cid^0,w,c
  6102  001A24  B4D8               	btfsc	status,2,c
  6103  001A26  D00C               	goto	u4330
  6104  001A28  C020  F00E         	movff	SIM800xIPSetConnectionType@contype,strlen@s
  6105  001A2C  C021  F00F         	movff	SIM800xIPSetConnectionType@contype+1,strlen@s+1
  6106  001A30  EC5A  F00F         	call	_strlen	;wreg free
  6107  001A34  500F               	movf	(?_strlen+1)^0,w,c
  6108  001A36  E104               	bnz	u4330
  6109  001A38  0E05               	movlw	5
  6110  001A3A  5C0E               	subwf	?_strlen^0,w,c
  6111  001A3C  A0D8               	btfss	status,0,c
  6112  001A3E  D003               	goto	l4917
  6113  001A40                     u4330:
  6114  001A40  FFFF               	dw	65535	; assembler added errata NOP
  6115                           
  6116                           ;SIM800x.c: 577: return ERROR;
  6117  001A42  0E01               	movlw	1
  6118  001A44  D01F               	goto	l397
  6119  001A46                     l4917:
  6120  001A46  FFFF               	dw	65535	; assembler added errata NOP
  6121                           
  6122                           ;SIM800x.c: 579: SIM800xSDMFlush();
  6123  001A48  EC8E  F010         	call	_SIM800xSDMFlush	;wreg free
  6124                           
  6125                           ;SIM800x.c: 580: SIM800xSDMPrint("AT+SAPBR=3,");
  6126  001A4C  0EF8               	movlw	low STR_41
  6127  001A4E  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  6128  001A50  0E7E               	movlw	high STR_41
  6129  001A52  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6130  001A54  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  6131                           
  6132                           ;SIM800x.c: 581: SIM800xSDMSendByte((uint8_t)((cid & 0x03) + 48));
  6133  001A58  5022               	movf	SIM800xIPSetConnectionType@cid^0,w,c
  6134  001A5A  0B03               	andlw	3
  6135  001A5C  0F30               	addlw	48
  6136  001A5E  ECAD  F010         	call	_SIM800xSDMSendByte
  6137                           
  6138                           ;SIM800x.c: 582: SIM800xSDMPrint(",\"CONTYPE\",");
  6139  001A62  0EB0               	movlw	low STR_42
  6140  001A64  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  6141  001A66  0E7E               	movlw	high STR_42
  6142  001A68  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6143  001A6A  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  6144                           
  6145                           ;SIM800x.c: 583: SIM800xSDMPrint(contype);
  6146  001A6E  C020  F00F         	movff	SIM800xIPSetConnectionType@contype,SIM800xSDMPrint@str
  6147  001A72  C021  F010         	movff	SIM800xIPSetConnectionType@contype+1,SIM800xSDMPrint@str+1
  6148  001A76  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  6149                           
  6150                           ;SIM800x.c: 584: SIM800xSDMSendByte('\r');
  6151  001A7A  0E0D               	movlw	13
  6152  001A7C  ECAD  F010         	call	_SIM800xSDMSendByte
  6153                           
  6154                           ;SIM800x.c: 586: return ProcessResp1();
  6155  001A80  EC23  F00C         	call	_ProcessResp1	;wreg free
  6156  001A84                     l397:
  6157  001A84  FFFF               	dw	65535	; assembler added errata NOP
  6158  001A86  0012               	return		;funcret
  6159  001A88  FFFF               	dw	65535	; errata NOP
  6160  001A8A                     __end_of_SIM800xIPSetConnectionType:
  6161                           	callstack 0
  6162                           
  6163 ;; *************** function _SIM800xIPSetAPN *****************
  6164 ;; Defined at:
  6165 ;;		line 591 in file "Src/SIM800x.c"
  6166 ;; Parameters:    Size  Location     Type
  6167 ;;  cid             1    wreg     unsigned char 
  6168 ;;  apn             2   31[COMRAM] PTR const unsigned char 
  6169 ;;		 -> STR_4(9), 
  6170 ;; Auto vars:     Size  Location     Type
  6171 ;;  cid             1   33[COMRAM] unsigned char 
  6172 ;; Return value:  Size  Location     Type
  6173 ;;                  1    wreg      enum E2115
  6174 ;; Registers used:
  6175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6176 ;; Tracked objects:
  6177 ;;		On entry : 0/0
  6178 ;;		On exit  : 0/0
  6179 ;;		Unchanged: 0/0
  6180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6181 ;;      Params:         2       0       0       0       0       0       0
  6182 ;;      Locals:         1       0       0       0       0       0       0
  6183 ;;      Temps:          0       0       0       0       0       0       0
  6184 ;;      Totals:         3       0       0       0       0       0       0
  6185 ;;Total ram usage:        3 bytes
  6186 ;; Hardware stack levels used: 1
  6187 ;; Hardware stack levels required when called: 6
  6188 ;; This function calls:
  6189 ;;		_ProcessResp1
  6190 ;;		_SIM800xSDMFlush
  6191 ;;		_SIM800xSDMPrint
  6192 ;;		_SIM800xSDMSendByte
  6193 ;;		_strlen
  6194 ;; This function is called by:
  6195 ;;		_SystemInit
  6196 ;; This function uses a non-reentrant model
  6197 ;;
  6198                           
  6199                           	psect	text22
  6200  001A8A                     __ptext22:
  6201                           	callstack 0
  6202  001A8A                     _SIM800xIPSetAPN:
  6203                           	callstack 0
  6204  001A8A  FFFF               	dw	65535	; assembler added errata NOP
  6205                           
  6206                           ;incstack = 0
  6207                           ;SIM800xIPSetAPN@cid stored from wreg
  6208  001A8C  6E22               	movwf	SIM800xIPSetAPN@cid^0,c
  6209                           
  6210                           ;SIM800x.c: 594: if((cid == 0) || (strlen(apn) > 64))
  6211  001A8E  5022               	movf	SIM800xIPSetAPN@cid^0,w,c
  6212  001A90  B4D8               	btfsc	status,2,c
  6213  001A92  D00C               	goto	u4350
  6214  001A94  C020  F00E         	movff	SIM800xIPSetAPN@apn,strlen@s
  6215  001A98  C021  F00F         	movff	SIM800xIPSetAPN@apn+1,strlen@s+1
  6216  001A9C  EC5A  F00F         	call	_strlen	;wreg free
  6217  001AA0  500F               	movf	(?_strlen+1)^0,w,c
  6218  001AA2  E104               	bnz	u4350
  6219  001AA4  0E41               	movlw	65
  6220  001AA6  5C0E               	subwf	?_strlen^0,w,c
  6221  001AA8  A0D8               	btfss	status,0,c
  6222  001AAA  D003               	goto	l4941
  6223  001AAC                     u4350:
  6224  001AAC  FFFF               	dw	65535	; assembler added errata NOP
  6225                           
  6226                           ;SIM800x.c: 595: return ERROR;
  6227  001AAE  0E01               	movlw	1
  6228  001AB0  D01F               	goto	l403
  6229  001AB2                     l4941:
  6230  001AB2  FFFF               	dw	65535	; assembler added errata NOP
  6231                           
  6232                           ;SIM800x.c: 597: SIM800xSDMFlush();
  6233  001AB4  EC8E  F010         	call	_SIM800xSDMFlush	;wreg free
  6234                           
  6235                           ;SIM800x.c: 598: SIM800xSDMPrint("AT+SAPBR=3,");
  6236  001AB8  0EF8               	movlw	low STR_41
  6237  001ABA  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  6238  001ABC  0E7E               	movlw	high STR_41
  6239  001ABE  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6240  001AC0  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  6241                           
  6242                           ;SIM800x.c: 599: SIM800xSDMSendByte((uint8_t)((cid & 0x03) + 48));
  6243  001AC4  5022               	movf	SIM800xIPSetAPN@cid^0,w,c
  6244  001AC6  0B03               	andlw	3
  6245  001AC8  0F30               	addlw	48
  6246  001ACA  ECAD  F010         	call	_SIM800xSDMSendByte
  6247                           
  6248                           ;SIM800x.c: 600: SIM800xSDMPrint(",\"APN\",");
  6249  001ACE  0EB2               	movlw	low STR_44
  6250  001AD0  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  6251  001AD2  0E7F               	movlw	high STR_44
  6252  001AD4  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6253  001AD6  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  6254                           
  6255                           ;SIM800x.c: 601: SIM800xSDMPrint(apn);
  6256  001ADA  C020  F00F         	movff	SIM800xIPSetAPN@apn,SIM800xSDMPrint@str
  6257  001ADE  C021  F010         	movff	SIM800xIPSetAPN@apn+1,SIM800xSDMPrint@str+1
  6258  001AE2  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  6259                           
  6260                           ;SIM800x.c: 602: SIM800xSDMSendByte('\r');
  6261  001AE6  0E0D               	movlw	13
  6262  001AE8  ECAD  F010         	call	_SIM800xSDMSendByte
  6263                           
  6264                           ;SIM800x.c: 604: return ProcessResp1();
  6265  001AEC  EC23  F00C         	call	_ProcessResp1	;wreg free
  6266  001AF0                     l403:
  6267  001AF0  FFFF               	dw	65535	; assembler added errata NOP
  6268  001AF2  0012               	return		;funcret
  6269  001AF4  FFFF               	dw	65535	; errata NOP
  6270  001AF6                     __end_of_SIM800xIPSetAPN:
  6271                           	callstack 0
  6272                           
  6273 ;; *************** function _SIM800xIPOpen *****************
  6274 ;; Defined at:
  6275 ;;		line 686 in file "Src/SIM800x.c"
  6276 ;; Parameters:    Size  Location     Type
  6277 ;;  cid             1    wreg     unsigned char 
  6278 ;; Auto vars:     Size  Location     Type
  6279 ;;  cid             1   31[COMRAM] unsigned char 
  6280 ;; Return value:  Size  Location     Type
  6281 ;;                  1    wreg      enum E2115
  6282 ;; Registers used:
  6283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/0
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6289 ;;      Params:         0       0       0       0       0       0       0
  6290 ;;      Locals:         1       0       0       0       0       0       0
  6291 ;;      Temps:          0       0       0       0       0       0       0
  6292 ;;      Totals:         1       0       0       0       0       0       0
  6293 ;;Total ram usage:        1 bytes
  6294 ;; Hardware stack levels used: 1
  6295 ;; Hardware stack levels required when called: 6
  6296 ;; This function calls:
  6297 ;;		_ProcessResp1
  6298 ;;		_SIM800xSDMFlush
  6299 ;;		_SIM800xSDMPrint
  6300 ;;		_SIM800xSDMSendByte
  6301 ;; This function is called by:
  6302 ;;		_SystemInit
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text23
  6307  001F4A                     __ptext23:
  6308                           	callstack 0
  6309  001F4A                     _SIM800xIPOpen:
  6310                           	callstack 0
  6311  001F4A  FFFF               	dw	65535	; assembler added errata NOP
  6312                           
  6313                           ;incstack = 0
  6314                           ;SIM800xIPOpen@cid stored from wreg
  6315  001F4C  6E20               	movwf	SIM800xIPOpen@cid^0,c
  6316                           
  6317                           ;SIM800x.c: 689: if(cid == 0)
  6318  001F4E  5020               	movf	SIM800xIPOpen@cid^0,w,c
  6319  001F50  A4D8               	btfss	status,2,c
  6320  001F52  D002               	goto	l4963
  6321                           
  6322                           ;SIM800x.c: 690: return ERROR;
  6323  001F54  0E01               	movlw	1
  6324  001F56  D01B               	goto	l431
  6325  001F58                     l4963:
  6326  001F58  FFFF               	dw	65535	; assembler added errata NOP
  6327                           
  6328                           ;SIM800x.c: 692: SIM800xSDMFlush();
  6329  001F5A  EC8E  F010         	call	_SIM800xSDMFlush	;wreg free
  6330                           
  6331                           ;SIM800x.c: 693: SIM800xSDMPrint("AT+SAPBR=1,");
  6332  001F5E  0ED4               	movlw	low STR_54
  6333  001F60  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  6334  001F62  0E7E               	movlw	high STR_54
  6335  001F64  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6336  001F66  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  6337                           
  6338                           ;SIM800x.c: 694: SIM800xSDMSendByte((uint8_t)((cid & 0x03) + 48));
  6339  001F6A  5020               	movf	SIM800xIPOpen@cid^0,w,c
  6340  001F6C  0B03               	andlw	3
  6341  001F6E  0F30               	addlw	48
  6342  001F70  ECAD  F010         	call	_SIM800xSDMSendByte
  6343                           
  6344                           ;SIM800x.c: 695: SIM800xSDMSendByte('\r');
  6345  001F74  0E0D               	movlw	13
  6346  001F76  ECAD  F010         	call	_SIM800xSDMSendByte
  6347                           
  6348                           ;SIM800x.c: 697: Tout = 85000;
  6349  001F7A  0E08               	movlw	8
  6350  001F7C  6E64               	movwf	_Tout^0,c
  6351  001F7E  0E4C               	movlw	76
  6352  001F80  6E65               	movwf	(_Tout+1)^0,c
  6353  001F82  0E01               	movlw	1
  6354  001F84  6E66               	movwf	(_Tout+2)^0,c
  6355  001F86  0E00               	movlw	0
  6356  001F88  6E67               	movwf	(_Tout+3)^0,c
  6357                           
  6358                           ;SIM800x.c: 698: return ProcessResp1();
  6359  001F8A  EC23  F00C         	call	_ProcessResp1	;wreg free
  6360  001F8E                     l431:
  6361  001F8E  FFFF               	dw	65535	; assembler added errata NOP
  6362  001F90  0012               	return		;funcret
  6363  001F92  FFFF               	dw	65535	; errata NOP
  6364  001F94                     __end_of_SIM800xIPOpen:
  6365                           	callstack 0
  6366                           
  6367 ;; *************** function _ProcessResp1 *****************
  6368 ;; Defined at:
  6369 ;;		line 165 in file "Src/SIM800x.c"
  6370 ;; Parameters:    Size  Location     Type
  6371 ;;		None
  6372 ;; Auto vars:     Size  Location     Type
  6373 ;;  time            4   26[COMRAM] unsigned long 
  6374 ;;  c               1   30[COMRAM] unsigned char 
  6375 ;; Return value:  Size  Location     Type
  6376 ;;                  1    wreg      enum E2115
  6377 ;; Registers used:
  6378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6379 ;; Tracked objects:
  6380 ;;		On entry : 0/0
  6381 ;;		On exit  : 0/0
  6382 ;;		Unchanged: 0/0
  6383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6384 ;;      Params:         0       0       0       0       0       0       0
  6385 ;;      Locals:         5       0       0       0       0       0       0
  6386 ;;      Temps:          4       0       0       0       0       0       0
  6387 ;;      Totals:         9       0       0       0       0       0       0
  6388 ;;Total ram usage:        9 bytes
  6389 ;; Hardware stack levels used: 1
  6390 ;; Hardware stack levels required when called: 5
  6391 ;; This function calls:
  6392 ;;		_SIM800xSDMPeek
  6393 ;;		_SIM800xSDMRxAvailable
  6394 ;;		_Tick_ms
  6395 ;; This function is called by:
  6396 ;;		_SIM800xIPSetConnectionType
  6397 ;;		_SIM800xIPSetAPN
  6398 ;;		_SIM800xIPOpen
  6399 ;; This function uses a non-reentrant model
  6400 ;;
  6401                           
  6402                           	psect	text24
  6403  001846                     __ptext24:
  6404                           	callstack 0
  6405  001846                     _ProcessResp1:
  6406                           	callstack 0
  6407  001846  FFFF               	dw	65535	; assembler added errata NOP
  6408                           
  6409                           ;SIM800x.c: 167: uint32_t time = Tick_ms();
  6410                           
  6411                           ;incstack = 0
  6412  001848  EC83  F010         	call	_Tick_ms	;wreg free
  6413  00184C  C00E  F01B         	movff	?_Tick_ms,ProcessResp1@time
  6414  001850  C00F  F01C         	movff	?_Tick_ms+1,ProcessResp1@time+1
  6415  001854  C010  F01D         	movff	?_Tick_ms+2,ProcessResp1@time+2
  6416  001858  C011  F01E         	movff	?_Tick_ms+3,ProcessResp1@time+3
  6417                           
  6418                           ;SIM800x.c: 168: while(SIM800xSDMRxAvailable() < 6)
  6419  00185C  D01B               	goto	l4637
  6420  00185E                     l4631:
  6421  00185E  FFFF               	dw	65535	; assembler added errata NOP
  6422                           
  6423                           ;SIM800x.c: 169: {;SIM800x.c: 170: if((Tick_ms() - time) > Tout)
  6424  001860  EC83  F010         	call	_Tick_ms	;wreg free
  6425  001864  501B               	movf	ProcessResp1@time^0,w,c
  6426  001866  5C0E               	subwf	?_Tick_ms^0,w,c
  6427  001868  6E17               	movwf	??_ProcessResp1^0,c
  6428  00186A  501C               	movf	(ProcessResp1@time+1)^0,w,c
  6429  00186C  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  6430  00186E  6E18               	movwf	(??_ProcessResp1+1)^0,c
  6431  001870  501D               	movf	(ProcessResp1@time+2)^0,w,c
  6432  001872  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  6433  001874  6E19               	movwf	(??_ProcessResp1+2)^0,c
  6434  001876  501E               	movf	(ProcessResp1@time+3)^0,w,c
  6435  001878  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  6436  00187A  6E1A               	movwf	(??_ProcessResp1+3)^0,c
  6437  00187C  5017               	movf	??_ProcessResp1^0,w,c
  6438  00187E  5C64               	subwf	_Tout^0,w,c
  6439  001880  5018               	movf	(??_ProcessResp1+1)^0,w,c
  6440  001882  5865               	subwfb	(_Tout+1)^0,w,c
  6441  001884  5019               	movf	(??_ProcessResp1+2)^0,w,c
  6442  001886  5866               	subwfb	(_Tout+2)^0,w,c
  6443  001888  501A               	movf	(??_ProcessResp1+3)^0,w,c
  6444  00188A  5867               	subwfb	(_Tout+3)^0,w,c
  6445  00188C  B0D8               	btfsc	status,0,c
  6446  00188E  D002               	goto	l4637
  6447                           
  6448                           ;SIM800x.c: 171: {;SIM800x.c: 172: return TIME_OUT;
  6449  001890  0E05               	movlw	5
  6450  001892  D015               	goto	l288
  6451  001894                     l4637:
  6452  001894  FFFF               	dw	65535	; assembler added errata NOP
  6453  001896  EC25  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  6454  00189A  5014               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  6455  00189C  E104               	bnz	u3940
  6456  00189E  0E06               	movlw	6
  6457  0018A0  5C13               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  6458  0018A2  A0D8               	btfss	status,0,c
  6459  0018A4  D7DC               	goto	l4631
  6460  0018A6                     u3940:
  6461                           
  6462                           ;SIM800x.c: 173: };SIM800x.c: 174: };SIM800x.c: 175: char c = SIM800xSDMPeek(2);
  6463  0018A6  0E02               	movlw	2
  6464  0018A8  ECCA  F00F         	call	_SIM800xSDMPeek
  6465  0018AC  6E1F               	movwf	ProcessResp1@c^0,c
  6466                           
  6467                           ;SIM800x.c: 176: if(c == 'O')
  6468  0018AE  0E4F               	movlw	79
  6469  0018B0  181F               	xorwf	ProcessResp1@c^0,w,c
  6470  0018B2  A4D8               	btfss	status,2,c
  6471  0018B4  D002               	goto	l4647
  6472                           
  6473                           ;SIM800x.c: 177: return OK;
  6474  0018B6  0E00               	movlw	0
  6475  0018B8  D002               	goto	l288
  6476  0018BA                     l4647:
  6477  0018BA  FFFF               	dw	65535	; assembler added errata NOP
  6478                           
  6479                           ;SIM800x.c: 178: return ERROR;
  6480  0018BC  0E01               	movlw	1
  6481  0018BE                     l288:
  6482  0018BE  FFFF               	dw	65535	; assembler added errata NOP
  6483  0018C0  0012               	return		;funcret
  6484  0018C2  FFFF               	dw	65535	; errata NOP
  6485  0018C4                     __end_of_ProcessResp1:
  6486                           	callstack 0
  6487                           
  6488 ;; *************** function _SIM800xIPGetState *****************
  6489 ;; Defined at:
  6490 ;;		line 730 in file "Src/SIM800x.c"
  6491 ;; Parameters:    Size  Location     Type
  6492 ;;  cid             1    wreg     unsigned char 
  6493 ;;  ip              2   41[COMRAM] PTR unsigned char 
  6494 ;;		 -> SystemInit@ip(20), 
  6495 ;; Auto vars:     Size  Location     Type
  6496 ;;  cid             1   82[COMRAM] unsigned char 
  6497 ;;  i               1   84[COMRAM] unsigned char 
  6498 ;;  len             1   83[COMRAM] unsigned char 
  6499 ;;  str            30   47[COMRAM] unsigned char [30]
  6500 ;;  time1           4   77[COMRAM] unsigned long 
  6501 ;;  res             1   81[COMRAM] enum E2115
  6502 ;;  res1            1    0        enum E2257
  6503 ;; Return value:  Size  Location     Type
  6504 ;;                  1    wreg      enum E2257
  6505 ;; Registers used:
  6506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6507 ;; Tracked objects:
  6508 ;;		On entry : 0/0
  6509 ;;		On exit  : 0/0
  6510 ;;		Unchanged: 0/0
  6511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6512 ;;      Params:         2       0       0       0       0       0       0
  6513 ;;      Locals:        38       0       0       0       0       0       0
  6514 ;;      Temps:          4       0       0       0       0       0       0
  6515 ;;      Totals:        44       0       0       0       0       0       0
  6516 ;;Total ram usage:       44 bytes
  6517 ;; Hardware stack levels used: 1
  6518 ;; Hardware stack levels required when called: 7
  6519 ;; This function calls:
  6520 ;;		_ProcessResp2
  6521 ;;		_SIM800xSDMFlush
  6522 ;;		_SIM800xSDMPrint
  6523 ;;		_SIM800xSDMRxAvailable
  6524 ;;		_SIM800xSDMSendByte
  6525 ;;		_Tick_ms
  6526 ;;		_strlen
  6527 ;; This function is called by:
  6528 ;;		_SystemInit
  6529 ;; This function uses a non-reentrant model
  6530 ;;
  6531                           
  6532                           	psect	text25
  6533  001480                     __ptext25:
  6534                           	callstack 0
  6535  001480                     _SIM800xIPGetState:
  6536                           	callstack 0
  6537  001480  FFFF               	dw	65535	; assembler added errata NOP
  6538                           
  6539                           ;incstack = 0
  6540                           ;SIM800xIPGetState@cid stored from wreg
  6541  001482  6E53               	movwf	SIM800xIPGetState@cid^0,c
  6542                           
  6543                           ;SIM800x.c: 733: if(cid == 0)
  6544  001484  5053               	movf	SIM800xIPGetState@cid^0,w,c
  6545  001486  B4D8               	btfsc	status,2,c
  6546  001488  D079               	goto	l446
  6547                           
  6548                           ;SIM800x.c: 736: char str[30];;SIM800x.c: 737: SIM800xSDMFlush();
  6549  00148A  EC8E  F010         	call	_SIM800xSDMFlush	;wreg free
  6550                           
  6551                           ;SIM800x.c: 738: SIM800xSDMPrint("AT+SAPBR=2,");
  6552  00148E  0EEC               	movlw	low STR_56
  6553  001490  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  6554  001492  0E7E               	movlw	high STR_56
  6555  001494  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6556  001496  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  6557                           
  6558                           ;SIM800x.c: 739: SIM800xSDMSendByte((uint8_t)((cid & 0x03) + 48));
  6559  00149A  5053               	movf	SIM800xIPGetState@cid^0,w,c
  6560  00149C  0B03               	andlw	3
  6561  00149E  0F30               	addlw	48
  6562  0014A0  ECAD  F010         	call	_SIM800xSDMSendByte
  6563                           
  6564                           ;SIM800x.c: 740: SIM800xSDMSendByte('\r');
  6565  0014A4  0E0D               	movlw	13
  6566  0014A6  ECAD  F010         	call	_SIM800xSDMSendByte
  6567                           
  6568                           ;SIM800x.c: 741: SIM800xIPStatusType res1;;SIM800x.c: 743: uint32_t time1 = Tick_ms();
  6569  0014AA  EC83  F010         	call	_Tick_ms	;wreg free
  6570  0014AE  C00E  F04E         	movff	?_Tick_ms,SIM800xIPGetState@time1
  6571  0014B2  C00F  F04F         	movff	?_Tick_ms+1,SIM800xIPGetState@time1+1
  6572  0014B6  C010  F050         	movff	?_Tick_ms+2,SIM800xIPGetState@time1+2
  6573  0014BA  C011  F051         	movff	?_Tick_ms+3,SIM800xIPGetState@time1+3
  6574                           
  6575                           ;SIM800x.c: 744: while(SIM800xSDMRxAvailable() < 25)
  6576  0014BE  D019               	goto	l4995
  6577  0014C0                     l4991:
  6578  0014C0  FFFF               	dw	65535	; assembler added errata NOP
  6579                           
  6580                           ;SIM800x.c: 745: {;SIM800x.c: 746: if((Tick_ms() - time1) > Tout)
  6581  0014C2  EC83  F010         	call	_Tick_ms	;wreg free
  6582  0014C6  504E               	movf	SIM800xIPGetState@time1^0,w,c
  6583  0014C8  5C0E               	subwf	?_Tick_ms^0,w,c
  6584  0014CA  6E2C               	movwf	??_SIM800xIPGetState^0,c
  6585  0014CC  504F               	movf	(SIM800xIPGetState@time1+1)^0,w,c
  6586  0014CE  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  6587  0014D0  6E2D               	movwf	(??_SIM800xIPGetState+1)^0,c
  6588  0014D2  5050               	movf	(SIM800xIPGetState@time1+2)^0,w,c
  6589  0014D4  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  6590  0014D6  6E2E               	movwf	(??_SIM800xIPGetState+2)^0,c
  6591  0014D8  5051               	movf	(SIM800xIPGetState@time1+3)^0,w,c
  6592  0014DA  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  6593  0014DC  6E2F               	movwf	(??_SIM800xIPGetState+3)^0,c
  6594  0014DE  502C               	movf	??_SIM800xIPGetState^0,w,c
  6595  0014E0  5C64               	subwf	_Tout^0,w,c
  6596  0014E2  502D               	movf	(??_SIM800xIPGetState+1)^0,w,c
  6597  0014E4  5865               	subwfb	(_Tout+1)^0,w,c
  6598  0014E6  502E               	movf	(??_SIM800xIPGetState+2)^0,w,c
  6599  0014E8  5866               	subwfb	(_Tout+2)^0,w,c
  6600  0014EA  502F               	movf	(??_SIM800xIPGetState+3)^0,w,c
  6601  0014EC  5867               	subwfb	(_Tout+3)^0,w,c
  6602  0014EE  A0D8               	btfss	status,0,c
  6603  0014F0  D045               	goto	l446
  6604  0014F2                     l4995:
  6605  0014F2  FFFF               	dw	65535	; assembler added errata NOP
  6606  0014F4  EC25  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  6607  0014F8  5014               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  6608  0014FA  E104               	bnz	u4390
  6609  0014FC  0E19               	movlw	25
  6610  0014FE  5C13               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  6611  001500  A0D8               	btfss	status,0,c
  6612  001502  D7DE               	goto	l4991
  6613  001504                     u4390:
  6614                           
  6615                           ;SIM800x.c: 748: };SIM800x.c: 749: APIStatusType res = ProcessResp2(str);
  6616  001504  0E30               	movlw	low SIM800xIPGetState@str
  6617  001506  6E25               	movwf	ProcessResp2@str^0,c
  6618  001508  0E00               	movlw	high SIM800xIPGetState@str
  6619  00150A  6E26               	movwf	(ProcessResp2@str+1)^0,c
  6620  00150C  EC0A  F00E         	call	_ProcessResp2	;wreg free
  6621  001510  6E52               	movwf	SIM800xIPGetState@res^0,c
  6622                           
  6623                           ;SIM800x.c: 750: if(res == OK)
  6624  001512  5052               	movf	SIM800xIPGetState@res^0,w,c
  6625  001514  A4D8               	btfss	status,2,c
  6626  001516  D032               	goto	l446
  6627                           
  6628                           ;SIM800x.c: 751: {;SIM800x.c: 752: uint8_t len = (uint8_t)(strlen(str) - 1);
  6629  001518  0E30               	movlw	low SIM800xIPGetState@str
  6630  00151A  6E0E               	movwf	strlen@s^0,c
  6631  00151C  0E00               	movlw	high SIM800xIPGetState@str
  6632  00151E  6E0F               	movwf	(strlen@s+1)^0,c
  6633  001520  EC5A  F00F         	call	_strlen	;wreg free
  6634  001524  040E               	decf	?_strlen^0,w,c
  6635  001526  6E54               	movwf	SIM800xIPGetState@len^0,c
  6636                           
  6637                           ;SIM800x.c: 754: for(uint8_t i = 13; i < len; i++)
  6638  001528  0E0D               	movlw	13
  6639  00152A  6E55               	movwf	SIM800xIPGetState@i^0,c
  6640  00152C  D016               	goto	l5011
  6641  00152E                     l5007:
  6642  00152E  FFFF               	dw	65535	; assembler added errata NOP
  6643                           
  6644                           ;SIM800x.c: 755: {;SIM800x.c: 756: ip[i - 13] = str[i];
  6645  001530  0E30               	movlw	low SIM800xIPGetState@str
  6646  001532  2455               	addwf	SIM800xIPGetState@i^0,w,c
  6647  001534  6ED9               	movwf	fsr2l,c
  6648  001536  6ADA               	clrf	fsr2h,c
  6649  001538  0E00               	movlw	high SIM800xIPGetState@str
  6650  00153A  22DA               	addwfc	fsr2h,f,c
  6651  00153C  5055               	movf	SIM800xIPGetState@i^0,w,c
  6652  00153E  242A               	addwf	SIM800xIPGetState@ip^0,w,c
  6653  001540  6E2C               	movwf	??_SIM800xIPGetState^0,c
  6654  001542  0E00               	movlw	0
  6655  001544  202B               	addwfc	(SIM800xIPGetState@ip+1)^0,w,c
  6656  001546  6E2D               	movwf	(??_SIM800xIPGetState+1)^0,c
  6657  001548  0EF3               	movlw	243
  6658  00154A  242C               	addwf	??_SIM800xIPGetState^0,w,c
  6659  00154C  6EE1               	movwf	fsr1l,c
  6660  00154E  0EFF               	movlw	255
  6661  001550  202D               	addwfc	(??_SIM800xIPGetState+1)^0,w,c
  6662  001552  6EE2               	movwf	fsr1h,c
  6663  001554  CFDF FFE7          	movff	indf2,indf1
  6664  001558  2A55               	incf	SIM800xIPGetState@i^0,f,c
  6665  00155A                     l5011:
  6666  00155A  FFFF               	dw	65535	; assembler added errata NOP
  6667  00155C  5054               	movf	SIM800xIPGetState@len^0,w,c
  6668  00155E  5C55               	subwf	SIM800xIPGetState@i^0,w,c
  6669  001560  A0D8               	btfss	status,0,c
  6670  001562  D7E5               	goto	l5007
  6671                           
  6672                           ;SIM800x.c: 757: };SIM800x.c: 758: ip[(uint8_t)(len - 13)] = '\0';
  6673  001564  C054  F02C         	movff	SIM800xIPGetState@len,??_SIM800xIPGetState
  6674  001568  0EF3               	movlw	243
  6675  00156A  262C               	addwf	??_SIM800xIPGetState^0,f,c
  6676  00156C  502C               	movf	??_SIM800xIPGetState^0,w,c
  6677  00156E  242A               	addwf	SIM800xIPGetState@ip^0,w,c
  6678  001570  6ED9               	movwf	fsr2l,c
  6679  001572  0E00               	movlw	0
  6680  001574  202B               	addwfc	(SIM800xIPGetState@ip+1)^0,w,c
  6681  001576  6EDA               	movwf	fsr2h,c
  6682  001578  0E00               	movlw	0
  6683  00157A  6EDF               	movwf	indf2,c
  6684  00157C                     l446:
  6685  00157C  FFFF               	dw	65535	; assembler added errata NOP
  6686  00157E  0012               	return		;funcret
  6687  001580  FFFF               	dw	65535	; errata NOP
  6688  001582                     __end_of_SIM800xIPGetState:
  6689                           	callstack 0
  6690                           
  6691 ;; *************** function _ProcessResp2 *****************
  6692 ;; Defined at:
  6693 ;;		line 182 in file "Src/SIM800x.c"
  6694 ;; Parameters:    Size  Location     Type
  6695 ;;  str             2   36[COMRAM] PTR unsigned char 
  6696 ;;		 -> SIM800xGPRSGetAddress@str(40), SIM800xIPGetState@str(30), SIM800xGetSoftwareRevisionID@str(30), 
  6697 ;; Auto vars:     Size  Location     Type
  6698 ;;  res             2   39[COMRAM] int 
  6699 ;;  c               1   38[COMRAM] unsigned char 
  6700 ;; Return value:  Size  Location     Type
  6701 ;;                  1    wreg      enum E2115
  6702 ;; Registers used:
  6703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6704 ;; Tracked objects:
  6705 ;;		On entry : 0/0
  6706 ;;		On exit  : 0/0
  6707 ;;		Unchanged: 0/0
  6708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6709 ;;      Params:         2       0       0       0       0       0       0
  6710 ;;      Locals:         3       0       0       0       0       0       0
  6711 ;;      Temps:          0       0       0       0       0       0       0
  6712 ;;      Totals:         5       0       0       0       0       0       0
  6713 ;;Total ram usage:        5 bytes
  6714 ;; Hardware stack levels used: 1
  6715 ;; Hardware stack levels required when called: 6
  6716 ;; This function calls:
  6717 ;;		_SIM800xSDMPeek
  6718 ;;		_SIM800xSDMReadF1Pkt
  6719 ;; This function is called by:
  6720 ;;		_SIM800xIPGetState
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           	psect	text26
  6725  001C14                     __ptext26:
  6726                           	callstack 0
  6727  001C14                     _ProcessResp2:
  6728                           	callstack 0
  6729  001C14  FFFF               	dw	65535	; assembler added errata NOP
  6730                           
  6731                           ;SIM800x.c: 185: int res = SIM800xSDMReadF1Pkt((char*)str);
  6732                           
  6733                           ;incstack = 0
  6734  001C16  C025  F017         	movff	ProcessResp2@str,SIM800xSDMReadF1Pkt@data
  6735  001C1A  C026  F018         	movff	ProcessResp2@str+1,SIM800xSDMReadF1Pkt@data+1
  6736  001C1E  EC27  F009         	call	_SIM800xSDMReadF1Pkt	;wreg free
  6737  001C22  C017  F028         	movff	?_SIM800xSDMReadF1Pkt,ProcessResp2@res
  6738  001C26  C018  F029         	movff	?_SIM800xSDMReadF1Pkt+1,ProcessResp2@res+1
  6739                           
  6740                           ;SIM800x.c: 186: if(res < 0)
  6741  001C2A  AE29               	btfss	(ProcessResp2@res+1)^0,7,c
  6742  001C2C  D002               	goto	l4661
  6743                           
  6744                           ;SIM800x.c: 187: {;SIM800x.c: 188: return TIME_OUT;
  6745  001C2E  0E05               	movlw	5
  6746  001C30  D01C               	goto	l294
  6747  001C32                     l4661:
  6748  001C32  FFFF               	dw	65535	; assembler added errata NOP
  6749                           
  6750                           ;SIM800x.c: 190: else if(res == 0)
  6751  001C34  5028               	movf	ProcessResp2@res^0,w,c
  6752  001C36  1029               	iorwf	(ProcessResp2@res+1)^0,w,c
  6753  001C38  A4D8               	btfss	status,2,c
  6754  001C3A  D002               	goto	l4667
  6755                           
  6756                           ;SIM800x.c: 191: {;SIM800x.c: 192: return INVALID_RESPONSE;
  6757  001C3C  0E09               	movlw	9
  6758  001C3E  D015               	goto	l294
  6759  001C40                     l4667:
  6760  001C40  FFFF               	dw	65535	; assembler added errata NOP
  6761                           
  6762                           ;SIM800x.c: 193: };SIM800x.c: 194: str[res] = '\0';
  6763  001C42  5028               	movf	ProcessResp2@res^0,w,c
  6764  001C44  2425               	addwf	ProcessResp2@str^0,w,c
  6765  001C46  6ED9               	movwf	fsr2l,c
  6766  001C48  5029               	movf	(ProcessResp2@res+1)^0,w,c
  6767  001C4A  2026               	addwfc	(ProcessResp2@str+1)^0,w,c
  6768  001C4C  6EDA               	movwf	fsr2h,c
  6769  001C4E  0E00               	movlw	0
  6770  001C50  6EDF               	movwf	indf2,c
  6771                           
  6772                           ;SIM800x.c: 196: char c = SIM800xSDMPeek(2);
  6773  001C52  0E02               	movlw	2
  6774  001C54  ECCA  F00F         	call	_SIM800xSDMPeek
  6775  001C58  6E27               	movwf	ProcessResp2@c^0,c
  6776                           
  6777                           ;SIM800x.c: 197: if(c == 'O')
  6778  001C5A  0E4F               	movlw	79
  6779  001C5C  1827               	xorwf	ProcessResp2@c^0,w,c
  6780  001C5E  A4D8               	btfss	status,2,c
  6781  001C60  D002               	goto	l4677
  6782                           
  6783                           ;SIM800x.c: 198: return OK;
  6784  001C62  0E00               	movlw	0
  6785  001C64  D002               	goto	l294
  6786  001C66                     l4677:
  6787  001C66  FFFF               	dw	65535	; assembler added errata NOP
  6788                           
  6789                           ;SIM800x.c: 199: return NOT_DEFINED;
  6790  001C68  0E08               	movlw	8
  6791  001C6A                     l294:
  6792  001C6A  FFFF               	dw	65535	; assembler added errata NOP
  6793  001C6C  0012               	return		;funcret
  6794  001C6E  FFFF               	dw	65535	; errata NOP
  6795  001C70                     __end_of_ProcessResp2:
  6796                           	callstack 0
  6797                           
  6798 ;; *************** function _SIM800xSDMPeek *****************
  6799 ;; Defined at:
  6800 ;;		line 211 in file "Src/SIM800x_SDM.c"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;  idx             1    wreg     unsigned char 
  6803 ;; Auto vars:     Size  Location     Type
  6804 ;;  idx             1   15[COMRAM] unsigned char 
  6805 ;; Return value:  Size  Location     Type
  6806 ;;                  1    wreg      unsigned char 
  6807 ;; Registers used:
  6808 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6809 ;; Tracked objects:
  6810 ;;		On entry : 0/0
  6811 ;;		On exit  : 0/0
  6812 ;;		Unchanged: 0/0
  6813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6814 ;;      Params:         0       0       0       0       0       0       0
  6815 ;;      Locals:         1       0       0       0       0       0       0
  6816 ;;      Temps:          2       0       0       0       0       0       0
  6817 ;;      Totals:         3       0       0       0       0       0       0
  6818 ;;Total ram usage:        3 bytes
  6819 ;; Hardware stack levels used: 1
  6820 ;; Hardware stack levels required when called: 3
  6821 ;; This function calls:
  6822 ;;		Nothing
  6823 ;; This function is called by:
  6824 ;;		_ProcessResp1
  6825 ;;		_ProcessResp2
  6826 ;;		_SIM800xInit
  6827 ;;		_SIM800xHTTPInputData
  6828 ;;		_SIM800xHTTPRead
  6829 ;; This function uses a non-reentrant model
  6830 ;;
  6831                           
  6832                           	psect	text27
  6833  001F94                     __ptext27:
  6834                           	callstack 0
  6835  001F94                     _SIM800xSDMPeek:
  6836                           	callstack 0
  6837  001F94  FFFF               	dw	65535	; assembler added errata NOP
  6838                           
  6839                           ;incstack = 0
  6840                           ;SIM800xSDMPeek@idx stored from wreg
  6841  001F96  6E10               	movwf	SIM800xSDMPeek@idx^0,c
  6842                           
  6843                           ;SIM800x_SDM.c: 214: if((Rxfifoptr + idx) >= Rxfifocurrent)
  6844  001F98  5010               	movf	SIM800xSDMPeek@idx^0,w,c
  6845  001F9A  245C               	addwf	_Rxfifoptr^0,w,c	;volatile
  6846  001F9C  6E0E               	movwf	??_SIM800xSDMPeek^0,c
  6847  001F9E  0E00               	movlw	0
  6848  001FA0  205D               	addwfc	(_Rxfifoptr+1)^0,w,c	;volatile
  6849  001FA2  6E0F               	movwf	(??_SIM800xSDMPeek+1)^0,c
  6850  001FA4  505A               	movf	_Rxfifocurrent^0,w,c	;volatile
  6851  001FA6  5C0E               	subwf	??_SIM800xSDMPeek^0,w,c
  6852  001FA8  505B               	movf	(_Rxfifocurrent+1)^0,w,c	;volatile
  6853  001FAA  580F               	subwfb	(??_SIM800xSDMPeek+1)^0,w,c
  6854  001FAC  A0D8               	btfss	status,0,c
  6855  001FAE  D002               	goto	l4435
  6856                           
  6857                           ;SIM800x_SDM.c: 215: return 0xFF;
  6858  001FB0  0EFF               	movlw	255
  6859  001FB2  D010               	goto	l875
  6860  001FB4                     l4435:
  6861  001FB4  FFFF               	dw	65535	; assembler added errata NOP
  6862                           
  6863                           ;SIM800x_SDM.c: 216: return RxFIFO[Rxfifoptr + idx];
  6864  001FB6  0E00               	movlw	low _RxFIFO
  6865  001FB8  6E0E               	movwf	??_SIM800xSDMPeek^0,c
  6866  001FBA  0E03               	movlw	high _RxFIFO
  6867  001FBC  6E0F               	movwf	(??_SIM800xSDMPeek+1)^0,c
  6868  001FBE  5010               	movf	SIM800xSDMPeek@idx^0,w,c
  6869  001FC0  260E               	addwf	??_SIM800xSDMPeek^0,f,c
  6870  001FC2  0E00               	movlw	0
  6871  001FC4  220F               	addwfc	(??_SIM800xSDMPeek+1)^0,f,c
  6872  001FC6  505C               	movf	_Rxfifoptr^0,w,c	;volatile
  6873  001FC8  240E               	addwf	??_SIM800xSDMPeek^0,w,c
  6874  001FCA  6ED9               	movwf	fsr2l,c
  6875  001FCC  505D               	movf	(_Rxfifoptr+1)^0,w,c	;volatile
  6876  001FCE  200F               	addwfc	(??_SIM800xSDMPeek+1)^0,w,c
  6877  001FD0  6EDA               	movwf	fsr2h,c
  6878  001FD2  50DF               	movf	indf2,w,c
  6879  001FD4                     l875:
  6880  001FD4  FFFF               	dw	65535	; assembler added errata NOP
  6881  001FD6  0012               	return		;funcret
  6882  001FD8  FFFF               	dw	65535	; errata NOP
  6883  001FDA                     __end_of_SIM800xSDMPeek:
  6884                           	callstack 0
  6885                           
  6886 ;; *************** function _SIM800xHTTPSetURL *****************
  6887 ;; Defined at:
  6888 ;;		line 1337 in file "Src/SIM800x.c"
  6889 ;; Parameters:    Size  Location     Type
  6890 ;;  url             2   77[COMRAM] PTR const unsigned char 
  6891 ;;		 -> STR_9(279), 
  6892 ;;  errcode         2   79[COMRAM] PTR unsigned int 
  6893 ;;		 -> SystemInit@err(2), 
  6894 ;; Auto vars:     Size  Location     Type
  6895 ;;		None
  6896 ;; Return value:  Size  Location     Type
  6897 ;;                  1    wreg      enum E2115
  6898 ;; Registers used:
  6899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6900 ;; Tracked objects:
  6901 ;;		On entry : 0/0
  6902 ;;		On exit  : 0/0
  6903 ;;		Unchanged: 0/0
  6904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6905 ;;      Params:         4       0       0       0       0       0       0
  6906 ;;      Locals:         0       0       0       0       0       0       0
  6907 ;;      Temps:          0       0       0       0       0       0       0
  6908 ;;      Totals:         4       0       0       0       0       0       0
  6909 ;;Total ram usage:        4 bytes
  6910 ;; Hardware stack levels used: 1
  6911 ;; Hardware stack levels required when called: 7
  6912 ;; This function calls:
  6913 ;;		_ProcessResp4
  6914 ;;		_SIM800xSDMFlush
  6915 ;;		_SIM800xSDMPrint
  6916 ;;		_SIM800xSDMSendByte
  6917 ;;		_strlen
  6918 ;; This function is called by:
  6919 ;;		_SystemInit
  6920 ;; This function uses a non-reentrant model
  6921 ;;
  6922                           
  6923                           	psect	text28
  6924  001D1E                     __ptext28:
  6925                           	callstack 0
  6926  001D1E                     _SIM800xHTTPSetURL:
  6927                           	callstack 0
  6928  001D1E  FFFF               	dw	65535	; assembler added errata NOP
  6929                           
  6930                           ;SIM800x.c: 1340: if(strlen(url) > 500)
  6931                           
  6932                           ;incstack = 0
  6933  001D20  C04E  F00E         	movff	SIM800xHTTPSetURL@url,strlen@s
  6934  001D24  C04F  F00F         	movff	SIM800xHTTPSetURL@url+1,strlen@s+1
  6935  001D28  EC5A  F00F         	call	_strlen	;wreg free
  6936  001D2C  0EF5               	movlw	245
  6937  001D2E  5C0E               	subwf	?_strlen^0,w,c
  6938  001D30  0E01               	movlw	1
  6939  001D32  580F               	subwfb	(?_strlen+1)^0,w,c
  6940  001D34  A0D8               	btfss	status,0,c
  6941  001D36  D002               	goto	l5031
  6942                           
  6943                           ;SIM800x.c: 1341: return ERROR;
  6944  001D38  0E01               	movlw	1
  6945  001D3A  D018               	goto	l625
  6946  001D3C                     l5031:
  6947  001D3C  FFFF               	dw	65535	; assembler added errata NOP
  6948                           
  6949                           ;SIM800x.c: 1343: SIM800xSDMFlush();
  6950  001D3E  EC8E  F010         	call	_SIM800xSDMFlush	;wreg free
  6951                           
  6952                           ;SIM800x.c: 1344: SIM800xSDMPrint("AT+HTTPPARA=\"URL\",");
  6953  001D42  0E7E               	movlw	low STR_86
  6954  001D44  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  6955  001D46  0E7D               	movlw	high STR_86
  6956  001D48  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6957  001D4A  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  6958                           
  6959                           ;SIM800x.c: 1345: SIM800xSDMPrint(url);
  6960  001D4E  C04E  F00F         	movff	SIM800xHTTPSetURL@url,SIM800xSDMPrint@str
  6961  001D52  C04F  F010         	movff	SIM800xHTTPSetURL@url+1,SIM800xSDMPrint@str+1
  6962  001D56  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  6963                           
  6964                           ;SIM800x.c: 1346: SIM800xSDMSendByte('\r');
  6965  001D5A  0E0D               	movlw	13
  6966  001D5C  ECAD  F010         	call	_SIM800xSDMSendByte
  6967                           
  6968                           ;SIM800x.c: 1348: return ProcessResp4(errcode);
  6969  001D60  C050  F02E         	movff	SIM800xHTTPSetURL@errcode,ProcessResp4@ec
  6970  001D64  C051  F02F         	movff	SIM800xHTTPSetURL@errcode+1,ProcessResp4@ec+1
  6971  001D68  ECBE  F009         	call	_ProcessResp4	;wreg free
  6972  001D6C                     l625:
  6973  001D6C  FFFF               	dw	65535	; assembler added errata NOP
  6974  001D6E  0012               	return		;funcret
  6975  001D70  FFFF               	dw	65535	; errata NOP
  6976  001D72                     __end_of_SIM800xHTTPSetURL:
  6977                           	callstack 0
  6978                           
  6979 ;; *************** function _SIM800xHTTPSetContent *****************
  6980 ;; Defined at:
  6981 ;;		line 1454 in file "Src/SIM800x.c"
  6982 ;; Parameters:    Size  Location     Type
  6983 ;;  content         2   77[COMRAM] PTR const unsigned char 
  6984 ;;		 -> STR_10(17), 
  6985 ;;  errcode         2   79[COMRAM] PTR unsigned int 
  6986 ;;		 -> SystemInit@err(2), 
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;		None
  6989 ;; Return value:  Size  Location     Type
  6990 ;;                  1    wreg      enum E2115
  6991 ;; Registers used:
  6992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6993 ;; Tracked objects:
  6994 ;;		On entry : 0/0
  6995 ;;		On exit  : 0/0
  6996 ;;		Unchanged: 0/0
  6997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6998 ;;      Params:         4       0       0       0       0       0       0
  6999 ;;      Locals:         0       0       0       0       0       0       0
  7000 ;;      Temps:          0       0       0       0       0       0       0
  7001 ;;      Totals:         4       0       0       0       0       0       0
  7002 ;;Total ram usage:        4 bytes
  7003 ;; Hardware stack levels used: 1
  7004 ;; Hardware stack levels required when called: 7
  7005 ;; This function calls:
  7006 ;;		_ProcessResp4
  7007 ;;		_SIM800xSDMFlush
  7008 ;;		_SIM800xSDMPrint
  7009 ;;		_SIM800xSDMSendByte
  7010 ;;		_strlen
  7011 ;; This function is called by:
  7012 ;;		_SystemInit
  7013 ;; This function uses a non-reentrant model
  7014 ;;
  7015                           
  7016                           	psect	text29
  7017  001D72                     __ptext29:
  7018                           	callstack 0
  7019  001D72                     _SIM800xHTTPSetContent:
  7020                           	callstack 0
  7021  001D72  FFFF               	dw	65535	; assembler added errata NOP
  7022                           
  7023                           ;SIM800x.c: 1457: if(strlen(content) > 80)
  7024                           
  7025                           ;incstack = 0
  7026  001D74  C04E  F00E         	movff	SIM800xHTTPSetContent@content,strlen@s
  7027  001D78  C04F  F00F         	movff	SIM800xHTTPSetContent@content+1,strlen@s+1
  7028  001D7C  EC5A  F00F         	call	_strlen	;wreg free
  7029  001D80  500F               	movf	(?_strlen+1)^0,w,c
  7030  001D82  E104               	bnz	u4430
  7031  001D84  0E51               	movlw	81
  7032  001D86  5C0E               	subwf	?_strlen^0,w,c
  7033  001D88  A0D8               	btfss	status,0,c
  7034  001D8A  D002               	goto	l5049
  7035  001D8C                     u4430:
  7036                           
  7037                           ;SIM800x.c: 1458: return ERROR;
  7038  001D8C  0E01               	movlw	1
  7039  001D8E  D018               	goto	l657
  7040  001D90                     l5049:
  7041  001D90  FFFF               	dw	65535	; assembler added errata NOP
  7042                           
  7043                           ;SIM800x.c: 1460: SIM800xSDMFlush();
  7044  001D92  EC8E  F010         	call	_SIM800xSDMFlush	;wreg free
  7045                           
  7046                           ;SIM800x.c: 1461: SIM800xSDMPrint("AT+HTTPPARA=\"CONTENT\",");
  7047  001D96  0EC1               	movlw	low STR_94
  7048  001D98  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  7049  001D9A  0E7C               	movlw	high STR_94
  7050  001D9C  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  7051  001D9E  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  7052                           
  7053                           ;SIM800x.c: 1462: SIM800xSDMPrint(content);
  7054  001DA2  C04E  F00F         	movff	SIM800xHTTPSetContent@content,SIM800xSDMPrint@str
  7055  001DA6  C04F  F010         	movff	SIM800xHTTPSetContent@content+1,SIM800xSDMPrint@str+1
  7056  001DAA  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  7057                           
  7058                           ;SIM800x.c: 1463: SIM800xSDMSendByte('\r');
  7059  001DAE  0E0D               	movlw	13
  7060  001DB0  ECAD  F010         	call	_SIM800xSDMSendByte
  7061                           
  7062                           ;SIM800x.c: 1465: return ProcessResp4(errcode);
  7063  001DB4  C050  F02E         	movff	SIM800xHTTPSetContent@errcode,ProcessResp4@ec
  7064  001DB8  C051  F02F         	movff	SIM800xHTTPSetContent@errcode+1,ProcessResp4@ec+1
  7065  001DBC  ECBE  F009         	call	_ProcessResp4	;wreg free
  7066  001DC0                     l657:
  7067  001DC0  FFFF               	dw	65535	; assembler added errata NOP
  7068  001DC2  0012               	return		;funcret
  7069  001DC4  FFFF               	dw	65535	; errata NOP
  7070  001DC6                     __end_of_SIM800xHTTPSetContent:
  7071                           	callstack 0
  7072                           
  7073 ;; *************** function _strlen *****************
  7074 ;; Defined at:
  7075 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\strlen.c"
  7076 ;; Parameters:    Size  Location     Type
  7077 ;;  s               2   13[COMRAM] PTR const unsigned char 
  7078 ;;		 -> SIM800xGPRSGetAddress@str(40), SIM800xIPGetParameters@str(30), SIM800xIPGetState@str(30), txmessage(100), 
  7079 ;;		 -> STR_10(17), STR_9(279), STR_4(9), STR_3(5), 
  7080 ;; Auto vars:     Size  Location     Type
  7081 ;;  cp              2   15[COMRAM] PTR const unsigned char 
  7082 ;;		 -> SIM800xGPRSGetAddress@str(40), SIM800xIPGetParameters@str(30), SIM800xIPGetState@str(30), txmessage(100), 
  7083 ;;		 -> STR_10(17), STR_9(279), STR_4(9), STR_3(5), 
  7084 ;; Return value:  Size  Location     Type
  7085 ;;                  2   13[COMRAM] unsigned int 
  7086 ;; Registers used:
  7087 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7088 ;; Tracked objects:
  7089 ;;		On entry : 0/0
  7090 ;;		On exit  : 0/0
  7091 ;;		Unchanged: 0/0
  7092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7093 ;;      Params:         2       0       0       0       0       0       0
  7094 ;;      Locals:         2       0       0       0       0       0       0
  7095 ;;      Temps:          0       0       0       0       0       0       0
  7096 ;;      Totals:         4       0       0       0       0       0       0
  7097 ;;Total ram usage:        4 bytes
  7098 ;; Hardware stack levels used: 1
  7099 ;; Hardware stack levels required when called: 3
  7100 ;; This function calls:
  7101 ;;		Nothing
  7102 ;; This function is called by:
  7103 ;;		_SIM800xIPSetConnectionType
  7104 ;;		_SIM800xIPSetAPN
  7105 ;;		_SIM800xIPGetState
  7106 ;;		_SIM800xHTTPSetURL
  7107 ;;		_SIM800xHTTPSetContent
  7108 ;;		_SIM800xHTTPInputData
  7109 ;; This function uses a non-reentrant model
  7110 ;;
  7111                           
  7112                           	psect	text30
  7113  001EB4                     __ptext30:
  7114                           	callstack 0
  7115  001EB4                     _strlen:
  7116                           	callstack 0
  7117  001EB4  FFFF               	dw	65535	; assembler added errata NOP
  7118                           
  7119                           ;incstack = 0
  7120  001EB6  C00E  F010         	movff	strlen@s,strlen@cp
  7121  001EBA  C00F  F011         	movff	strlen@s+1,strlen@cp+1
  7122  001EBE  D003               	goto	l4615
  7123  001EC0                     l4613:
  7124  001EC0  FFFF               	dw	65535	; assembler added errata NOP
  7125  001EC2  4A10               	infsnz	strlen@cp^0,f,c
  7126  001EC4  2A11               	incf	(strlen@cp+1)^0,f,c
  7127  001EC6                     l4615:
  7128  001EC6  FFFF               	dw	65535	; assembler added errata NOP
  7129  001EC8  C010  FFF6         	movff	strlen@cp,tblptrl
  7130  001ECC  C011  FFF7         	movff	strlen@cp+1,tblptrh
  7131  001ED0  6AF8               	clrf	tblptru,c
  7132  001ED2  0E05               	movlw	(high __ramtop+-1)
  7133  001ED4  64F7               	cpfsgt	tblptrh,c
  7134  001ED6  D004               	bra	u3887
  7135  001ED8  0008               	tblrd		*
  7136  001EDA  FFFF               	dw	65535	; errata NOP
  7137  001EDC  50F5               	movf	tablat,w,c
  7138  001EDE  D005               	bra	u3880
  7139  001EE0                     u3887:
  7140  001EE0  CFF6 FFE1          	movff	tblptrl,fsr1l
  7141  001EE4  CFF7 FFE2          	movff	tblptrh,fsr1h
  7142  001EE8  50E7               	movf	indf1,w,c
  7143  001EEA                     u3880:
  7144  001EEA  0900               	iorlw	0
  7145  001EEC  A4D8               	btfss	status,2,c
  7146  001EEE  D7E8               	goto	l4613
  7147  001EF0  500E               	movf	strlen@s^0,w,c
  7148  001EF2  5C10               	subwf	strlen@cp^0,w,c
  7149  001EF4  6E0E               	movwf	?_strlen^0,c
  7150  001EF6  500F               	movf	(strlen@s+1)^0,w,c
  7151  001EF8  5811               	subwfb	(strlen@cp+1)^0,w,c
  7152  001EFA  6E0F               	movwf	(?_strlen+1)^0,c
  7153  001EFC  0012               	return		;funcret
  7154  001EFE  FFFF               	dw	65535	; errata NOP
  7155  001F00                     __end_of_strlen:
  7156                           	callstack 0
  7157                           
  7158 ;; *************** function _SIM800xHTTPInit *****************
  7159 ;; Defined at:
  7160 ;;		line 1301 in file "Src/SIM800x.c"
  7161 ;; Parameters:    Size  Location     Type
  7162 ;;  errcode         2   77[COMRAM] PTR unsigned int 
  7163 ;;		 -> SystemInit@err(2), 
  7164 ;; Auto vars:     Size  Location     Type
  7165 ;;		None
  7166 ;; Return value:  Size  Location     Type
  7167 ;;                  1    wreg      enum E2115
  7168 ;; Registers used:
  7169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7170 ;; Tracked objects:
  7171 ;;		On entry : 0/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7175 ;;      Params:         2       0       0       0       0       0       0
  7176 ;;      Locals:         0       0       0       0       0       0       0
  7177 ;;      Temps:          0       0       0       0       0       0       0
  7178 ;;      Totals:         2       0       0       0       0       0       0
  7179 ;;Total ram usage:        2 bytes
  7180 ;; Hardware stack levels used: 1
  7181 ;; Hardware stack levels required when called: 7
  7182 ;; This function calls:
  7183 ;;		_ProcessResp4
  7184 ;;		_SIM800xSDMFlush
  7185 ;;		_SIM800xSDMPrint
  7186 ;; This function is called by:
  7187 ;;		_SystemInit
  7188 ;; This function uses a non-reentrant model
  7189 ;;
  7190                           
  7191                           	psect	text31
  7192  0020CC                     __ptext31:
  7193                           	callstack 0
  7194  0020CC                     _SIM800xHTTPInit:
  7195                           	callstack 0
  7196  0020CC  FFFF               	dw	65535	; assembler added errata NOP
  7197                           
  7198                           ;SIM800x.c: 1304: SIM800xSDMFlush();
  7199                           
  7200                           ;incstack = 0
  7201  0020CE  EC8E  F010         	call	_SIM800xSDMFlush	;wreg free
  7202                           
  7203                           ;SIM800x.c: 1305: SIM800xSDMPrint("AT+HTTPINIT\r");
  7204  0020D2  0E66               	movlw	low STR_83
  7205  0020D4  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  7206  0020D6  0E7E               	movlw	high STR_83
  7207  0020D8  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  7208  0020DA  ECAB  F00D         	call	_SIM800xSDMPrint	;wreg free
  7209                           
  7210                           ;SIM800x.c: 1306: return ProcessResp4(errcode);
  7211  0020DE  C04E  F02E         	movff	SIM800xHTTPInit@errcode,ProcessResp4@ec
  7212  0020E2  C04F  F02F         	movff	SIM800xHTTPInit@errcode+1,ProcessResp4@ec+1
  7213  0020E6  ECBE  F009         	call	_ProcessResp4	;wreg free
  7214  0020EA  0012               	return		;funcret
  7215  0020EC  FFFF               	dw	65535	; errata NOP
  7216  0020EE                     __end_of_SIM800xHTTPInit:
  7217                           	callstack 0
  7218                           
  7219 ;; *************** function _SIM800xSDMPrint *****************
  7220 ;; Defined at:
  7221 ;;		line 160 in file "Src/SIM800x_SDM.c"
  7222 ;; Parameters:    Size  Location     Type
  7223 ;;  str             2   14[COMRAM] PTR const unsigned char 
  7224 ;;		 -> STR_102(16), STR_101(13), STR_100(16), STR_99(14), 
  7225 ;;		 -> SIM800xHTTPRead@str(30), SIM800xHTTPAction@str(30), SIM800xHTTPInputData@str(30), STR_95(24), 
  7226 ;;		 -> STR_94(23), SIM800xHTTPSetTimeout@str(30), SIM800xHTTPSetBreakEnd@str(30), SIM800xHTTPSetBreak@str(30), 
  7227 ;;		 -> SIM800xHTTPSetRedir@str(25), SIM800xHTTPSetPort@str(30), STR_88(21), STR_87(18), 
  7228 ;;		 -> STR_86(19), STR_85(19), STR_84(13), STR_83(13), 
  7229 ;;		 -> STR_82(10), STR_81(11), STR_80(6), STR_79(10), 
  7230 ;;		 -> STR_78(11), STR_77(11), STR_76(12), STR_75(12), 
  7231 ;;		 -> STR_74(2), STR_73(3), STR_72(3), STR_71(2), 
  7232 ;;		 -> STR_70(13), SIM800xGPRSGetAddress@str(40), SIM800xGPRSSetDataMode@str(20), STR_67(12), 
  7233 ;;		 -> STR_66(12), STR_65(11), SIM800xGPRSSetQoSRequest@str(40), SIM800xGPRSSetQoSMin@str(40), 
  7234 ;;		 -> STR_62(7), STR_61(12), STR_60(12), STR_59(12), 
  7235 ;;		 -> STR_58(11), SIM800xIPGetParameters@str(30), STR_56(12), STR_55(12), 
  7236 ;;		 -> STR_54(12), STR_53(9), STR_52(12), SIM800xIPSetRate@str(8), 
  7237 ;;		 -> STR_50(13), STR_49(12), STR_48(8), STR_47(12), 
  7238 ;;		 -> STR_46(9), STR_45(12), STR_44(8), STR_43(12), 
  7239 ;;		 -> STR_42(12), STR_41(12), STR_40(8), STR_39(8), 
  7240 ;;		 -> STR_38(8), STR_37(8), STR_36(8), STR_35(4), 
  7241 ;;		 -> STR_34(6), SIM800xSetBaudRate@str(15), STR_32(13), STR_31(6), 
  7242 ;;		 -> SIM800xInit@str(15), STR_29(6), STR_28(4), STR_10(17), 
  7243 ;;		 -> STR_9(279), STR_4(9), STR_3(5), 
  7244 ;; Auto vars:     Size  Location     Type
  7245 ;;		None
  7246 ;; Return value:  Size  Location     Type
  7247 ;;                  1    wreg      void 
  7248 ;; Registers used:
  7249 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7250 ;; Tracked objects:
  7251 ;;		On entry : 0/0
  7252 ;;		On exit  : 0/0
  7253 ;;		Unchanged: 0/0
  7254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7255 ;;      Params:         2       0       0       0       0       0       0
  7256 ;;      Locals:         0       0       0       0       0       0       0
  7257 ;;      Temps:          0       0       0       0       0       0       0
  7258 ;;      Totals:         2       0       0       0       0       0       0
  7259 ;;Total ram usage:        2 bytes
  7260 ;; Hardware stack levels used: 1
  7261 ;; Hardware stack levels required when called: 4
  7262 ;; This function calls:
  7263 ;;		_SIM800xSDMSendByte
  7264 ;; This function is called by:
  7265 ;;		_SIM800xInit
  7266 ;;		_SIM800xIPSetConnectionType
  7267 ;;		_SIM800xIPSetAPN
  7268 ;;		_SIM800xIPOpen
  7269 ;;		_SIM800xIPGetState
  7270 ;;		_SIM800xHTTPInit
  7271 ;;		_SIM800xHTTPSetURL
  7272 ;;		_SIM800xHTTPSetContent
  7273 ;;		_SIM800xHTTPInputData
  7274 ;;		_SIM800xHTTPAction
  7275 ;;		_SIM800xHTTPRead
  7276 ;; This function uses a non-reentrant model
  7277 ;;
  7278                           
  7279                           	psect	text32
  7280  001B56                     __ptext32:
  7281                           	callstack 0
  7282  001B56                     _SIM800xSDMPrint:
  7283                           	callstack 0
  7284  001B56  FFFF               	dw	65535	; assembler added errata NOP
  7285                           
  7286                           ;SIM800x_SDM.c: 162: while(*str!='\0')
  7287                           
  7288                           ;incstack = 0
  7289  001B58  D016               	goto	l4757
  7290  001B5A                     l4753:
  7291  001B5A  FFFF               	dw	65535	; assembler added errata NOP
  7292                           
  7293                           ;SIM800x_SDM.c: 163: {;SIM800x_SDM.c: 164: SIM800xSDMSendByte(*(str++));
  7294  001B5C  C00F  FFF6         	movff	SIM800xSDMPrint@str,tblptrl
  7295  001B60  C010  FFF7         	movff	SIM800xSDMPrint@str+1,tblptrh
  7296  001B64  6AF8               	clrf	tblptru,c
  7297  001B66  0E05               	movlw	(high __ramtop+-1)
  7298  001B68  64F7               	cpfsgt	tblptrh,c
  7299  001B6A  D004               	bra	u4097
  7300  001B6C  0008               	tblrd		*
  7301  001B6E  FFFF               	dw	65535	; errata NOP
  7302  001B70  50F5               	movf	tablat,w,c
  7303  001B72  D005               	bra	u4090
  7304  001B74                     u4097:
  7305  001B74  CFF6 FFE1          	movff	tblptrl,fsr1l
  7306  001B78  CFF7 FFE2          	movff	tblptrh,fsr1h
  7307  001B7C  50E7               	movf	indf1,w,c
  7308  001B7E                     u4090:
  7309  001B7E  ECAD  F010         	call	_SIM800xSDMSendByte
  7310  001B82  4A0F               	infsnz	SIM800xSDMPrint@str^0,f,c
  7311  001B84  2A10               	incf	(SIM800xSDMPrint@str+1)^0,f,c
  7312  001B86                     l4757:
  7313  001B86  FFFF               	dw	65535	; assembler added errata NOP
  7314  001B88  C00F  FFF6         	movff	SIM800xSDMPrint@str,tblptrl
  7315  001B8C  C010  FFF7         	movff	SIM800xSDMPrint@str+1,tblptrh
  7316  001B90  6AF8               	clrf	tblptru,c
  7317  001B92  0E05               	movlw	(high __ramtop+-1)
  7318  001B94  64F7               	cpfsgt	tblptrh,c
  7319  001B96  D004               	bra	u4107
  7320  001B98  0008               	tblrd		*
  7321  001B9A  FFFF               	dw	65535	; errata NOP
  7322  001B9C  50F5               	movf	tablat,w,c
  7323  001B9E  D005               	bra	u4100
  7324  001BA0                     u4107:
  7325  001BA0  CFF6 FFE1          	movff	tblptrl,fsr1l
  7326  001BA4  CFF7 FFE2          	movff	tblptrh,fsr1h
  7327  001BA8  50E7               	movf	indf1,w,c
  7328  001BAA                     u4100:
  7329  001BAA  0900               	iorlw	0
  7330  001BAC  B4D8               	btfsc	status,2,c
  7331  001BAE  0012               	return		;funcret
  7332  001BB0  FFFF               	dw	65535	; assembler added errata NOP
  7333  001BB2  D7D3               	goto	l4753
  7334  001BB4  FFFF               	dw	65535	; errata NOP
  7335  001BB6                     __end_of_SIM800xSDMPrint:
  7336                           	callstack 0
  7337                           
  7338 ;; *************** function _SIM800xSDMSendByte *****************
  7339 ;; Defined at:
  7340 ;;		line 120 in file "Src/SIM800x_SDM.c"
  7341 ;; Parameters:    Size  Location     Type
  7342 ;;  data            1    wreg     unsigned char 
  7343 ;; Auto vars:     Size  Location     Type
  7344 ;;  data            1   13[COMRAM] unsigned char 
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  1    wreg      void 
  7347 ;; Registers used:
  7348 ;;		wreg
  7349 ;; Tracked objects:
  7350 ;;		On entry : 0/0
  7351 ;;		On exit  : 0/0
  7352 ;;		Unchanged: 0/0
  7353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7354 ;;      Params:         0       0       0       0       0       0       0
  7355 ;;      Locals:         1       0       0       0       0       0       0
  7356 ;;      Temps:          0       0       0       0       0       0       0
  7357 ;;      Totals:         1       0       0       0       0       0       0
  7358 ;;Total ram usage:        1 bytes
  7359 ;; Hardware stack levels used: 1
  7360 ;; Hardware stack levels required when called: 3
  7361 ;; This function calls:
  7362 ;;		Nothing
  7363 ;; This function is called by:
  7364 ;;		_SIM800xIPSetConnectionType
  7365 ;;		_SIM800xIPSetAPN
  7366 ;;		_SIM800xIPOpen
  7367 ;;		_SIM800xIPGetState
  7368 ;;		_SIM800xHTTPSetURL
  7369 ;;		_SIM800xHTTPSetContent
  7370 ;;		_SIM800xSDMPrint
  7371 ;; This function uses a non-reentrant model
  7372 ;;
  7373                           
  7374                           	psect	text33
  7375  00215A                     __ptext33:
  7376                           	callstack 0
  7377  00215A                     _SIM800xSDMSendByte:
  7378                           	callstack 0
  7379  00215A  FFFF               	dw	65535	; assembler added errata NOP
  7380                           
  7381                           ;incstack = 0
  7382                           ;SIM800xSDMSendByte@data stored from wreg
  7383  00215C  6E0E               	movwf	SIM800xSDMSendByte@data^0,c
  7384  00215E  FFFF               	dw	65535	; assembler added errata NOP
  7385                           
  7386                           ;SIM800x_SDM.c: 130: while(TXSTAbits.TRMT == 0); TXREG = data;;
  7387  002160  A2AC               	btfss	172,1,c	;volatile
  7388  002162  D7FD               	goto	l4487
  7389  002164  C00E  FFAD         	movff	SIM800xSDMSendByte@data,4013	;volatile
  7390  002168  0012               	return		;funcret
  7391  00216A  FFFF               	dw	65535	; errata NOP
  7392  00216C                     __end_of_SIM800xSDMSendByte:
  7393                           	callstack 0
  7394                           
  7395 ;; *************** function _ProcessResp4 *****************
  7396 ;; Defined at:
  7397 ;;		line 222 in file "Src/SIM800x.c"
  7398 ;; Parameters:    Size  Location     Type
  7399 ;;  ec              2   45[COMRAM] PTR unsigned int 
  7400 ;;		 -> SystemInit@err(2), 
  7401 ;; Auto vars:     Size  Location     Type
  7402 ;;  str            20   51[COMRAM] unsigned char [20]
  7403 ;;  time            4   71[COMRAM] unsigned long 
  7404 ;;  res             2   75[COMRAM] int 
  7405 ;; Return value:  Size  Location     Type
  7406 ;;                  1    wreg      enum E2115
  7407 ;; Registers used:
  7408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7409 ;; Tracked objects:
  7410 ;;		On entry : 0/0
  7411 ;;		On exit  : 0/0
  7412 ;;		Unchanged: 0/0
  7413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7414 ;;      Params:         2       0       0       0       0       0       0
  7415 ;;      Locals:        26       0       0       0       0       0       0
  7416 ;;      Temps:          4       0       0       0       0       0       0
  7417 ;;      Totals:        32       0       0       0       0       0       0
  7418 ;;Total ram usage:       32 bytes
  7419 ;; Hardware stack levels used: 1
  7420 ;; Hardware stack levels required when called: 6
  7421 ;; This function calls:
  7422 ;;		_SIM800xSDMReadF1Pkt
  7423 ;;		_SIM800xSDMRxAvailable
  7424 ;;		_StrToInt
  7425 ;;		_Tick_ms
  7426 ;; This function is called by:
  7427 ;;		_SIM800xHTTPInit
  7428 ;;		_SIM800xHTTPSetURL
  7429 ;;		_SIM800xHTTPSetContent
  7430 ;; This function uses a non-reentrant model
  7431 ;;
  7432                           
  7433                           	psect	text34
  7434  00137C                     __ptext34:
  7435                           	callstack 0
  7436  00137C                     _ProcessResp4:
  7437                           	callstack 0
  7438  00137C  FFFF               	dw	65535	; assembler added errata NOP
  7439                           
  7440                           ;SIM800x.c: 224: uint32_t time = Tick_ms();
  7441                           
  7442                           ;incstack = 0
  7443  00137E  EC83  F010         	call	_Tick_ms	;wreg free
  7444  001382  C00E  F048         	movff	?_Tick_ms,ProcessResp4@time
  7445  001386  C00F  F049         	movff	?_Tick_ms+1,ProcessResp4@time+1
  7446  00138A  C010  F04A         	movff	?_Tick_ms+2,ProcessResp4@time+2
  7447  00138E  C011  F04B         	movff	?_Tick_ms+3,ProcessResp4@time+3
  7448                           
  7449                           ;SIM800x.c: 225: while(SIM800xSDMRxAvailable() < 6)
  7450  001392  D01C               	goto	l4689
  7451  001394                     l4683:
  7452  001394  FFFF               	dw	65535	; assembler added errata NOP
  7453                           
  7454                           ;SIM800x.c: 226: {;SIM800x.c: 227: if((Tick_ms() - time) > Tout)
  7455  001396  EC83  F010         	call	_Tick_ms	;wreg free
  7456  00139A  5048               	movf	ProcessResp4@time^0,w,c
  7457  00139C  5C0E               	subwf	?_Tick_ms^0,w,c
  7458  00139E  6E30               	movwf	??_ProcessResp4^0,c
  7459  0013A0  5049               	movf	(ProcessResp4@time+1)^0,w,c
  7460  0013A2  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  7461  0013A4  6E31               	movwf	(??_ProcessResp4+1)^0,c
  7462  0013A6  504A               	movf	(ProcessResp4@time+2)^0,w,c
  7463  0013A8  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  7464  0013AA  6E32               	movwf	(??_ProcessResp4+2)^0,c
  7465  0013AC  504B               	movf	(ProcessResp4@time+3)^0,w,c
  7466  0013AE  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  7467  0013B0  6E33               	movwf	(??_ProcessResp4+3)^0,c
  7468  0013B2  5030               	movf	??_ProcessResp4^0,w,c
  7469  0013B4  5C64               	subwf	_Tout^0,w,c
  7470  0013B6  5031               	movf	(??_ProcessResp4+1)^0,w,c
  7471  0013B8  5865               	subwfb	(_Tout+1)^0,w,c
  7472  0013BA  5032               	movf	(??_ProcessResp4+2)^0,w,c
  7473  0013BC  5866               	subwfb	(_Tout+2)^0,w,c
  7474  0013BE  5033               	movf	(??_ProcessResp4+3)^0,w,c
  7475  0013C0  5867               	subwfb	(_Tout+3)^0,w,c
  7476  0013C2  B0D8               	btfsc	status,0,c
  7477  0013C4  D003               	goto	l4689
  7478  0013C6                     u3990:
  7479  0013C6  FFFF               	dw	65535	; assembler added errata NOP
  7480                           
  7481                           ;SIM800x.c: 228: {;SIM800x.c: 229: return TIME_OUT;
  7482  0013C8  0E05               	movlw	5
  7483  0013CA  D057               	goto	l309
  7484  0013CC                     l4689:
  7485  0013CC  FFFF               	dw	65535	; assembler added errata NOP
  7486  0013CE  EC25  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  7487  0013D2  5014               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  7488  0013D4  E104               	bnz	u4000
  7489  0013D6  0E06               	movlw	6
  7490  0013D8  5C13               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  7491  0013DA  A0D8               	btfss	status,0,c
  7492  0013DC  D7DB               	goto	l4683
  7493  0013DE                     u4000:
  7494                           
  7495                           ;SIM800x.c: 230: };SIM800x.c: 231: };SIM800x.c: 232: char str[20] = {0, 0, 0, 0};
  7496  0013DE  EE20  F034         	lfsr	2,ProcessResp4@str
  7497  0013E2  0E13               	movlw	19
  7498  0013E4                     u4011:
  7499  0013E4  6ADE               	clrf	postinc2,c
  7500  0013E6  06E8               	decf	wreg,f,c
  7501  0013E8  E2FD               	bc	u4011
  7502                           
  7503                           ;SIM800x.c: 235: int res = SIM800xSDMReadF1Pkt(str);
  7504  0013EA  0E34               	movlw	low ProcessResp4@str
  7505  0013EC  6E17               	movwf	SIM800xSDMReadF1Pkt@data^0,c
  7506  0013EE  0E00               	movlw	high ProcessResp4@str
  7507  0013F0  6E18               	movwf	(SIM800xSDMReadF1Pkt@data+1)^0,c
  7508  0013F2  EC27  F009         	call	_SIM800xSDMReadF1Pkt	;wreg free
  7509  0013F6  C017  F04C         	movff	?_SIM800xSDMReadF1Pkt,ProcessResp4@res
  7510  0013FA  C018  F04D         	movff	?_SIM800xSDMReadF1Pkt+1,ProcessResp4@res+1
  7511                           
  7512                           ;SIM800x.c: 236: if(res < 0)
  7513  0013FE  BE4D               	btfsc	(ProcessResp4@res+1)^0,7,c
  7514  001400  D7E2               	goto	u3990
  7515                           
  7516                           ;SIM800x.c: 240: else if(str[0] == 'O')
  7517  001402  0E4F               	movlw	79
  7518  001404  1834               	xorwf	ProcessResp4@str^0,w,c
  7519  001406  A4D8               	btfss	status,2,c
  7520  001408  D002               	goto	l4711
  7521                           
  7522                           ;SIM800x.c: 241: {;SIM800x.c: 242: return OK;
  7523  00140A  0E00               	movlw	0
  7524  00140C  D036               	goto	l309
  7525  00140E                     l4711:
  7526  00140E  FFFF               	dw	65535	; assembler added errata NOP
  7527                           
  7528                           ;SIM800x.c: 244: else if(str[0] == 'E')
  7529  001410  0E45               	movlw	69
  7530  001412  1834               	xorwf	ProcessResp4@str^0,w,c
  7531  001414  A4D8               	btfss	status,2,c
  7532  001416  D002               	goto	l4719
  7533                           
  7534                           ;SIM800x.c: 245: {;SIM800x.c: 246: return ERROR;
  7535  001418  0E01               	movlw	1
  7536  00141A  D02F               	goto	l309
  7537  00141C                     l4719:
  7538  00141C  FFFF               	dw	65535	; assembler added errata NOP
  7539                           
  7540                           ;SIM800x.c: 248: else if(str[0] == '+')
  7541  00141E  0E2B               	movlw	43
  7542  001420  1834               	xorwf	ProcessResp4@str^0,w,c
  7543  001422  A4D8               	btfss	status,2,c
  7544  001424  D01A               	goto	l316
  7545                           
  7546                           ;SIM800x.c: 249: {;SIM800x.c: 250: str[(uint8_t)res] = '\0';
  7547  001426  0E34               	movlw	low ProcessResp4@str
  7548  001428  244C               	addwf	ProcessResp4@res^0,w,c
  7549  00142A  6ED9               	movwf	fsr2l,c
  7550  00142C  6ADA               	clrf	fsr2h,c
  7551  00142E  0E00               	movlw	high ProcessResp4@str
  7552  001430  22DA               	addwfc	fsr2h,f,c
  7553  001432  0E00               	movlw	0
  7554  001434  6EDF               	movwf	indf2,c
  7555                           
  7556                           ;SIM800x.c: 251: *ec = (uint16_t)StrToInt(str, 12, (uint16_t)(res - 1));
  7557  001436  0E34               	movlw	low ProcessResp4@str
  7558  001438  6E1A               	movwf	StrToInt@str^0,c
  7559  00143A  0E00               	movlw	high ProcessResp4@str
  7560  00143C  6E1B               	movwf	(StrToInt@str+1)^0,c
  7561  00143E  0E0C               	movlw	12
  7562  001440  6E1C               	movwf	StrToInt@start^0,c
  7563  001442  044C               	decf	ProcessResp4@res^0,w,c
  7564  001444  6E1D               	movwf	StrToInt@stop^0,c
  7565  001446  ECBD  F007         	call	_StrToInt	;wreg free
  7566  00144A  C02E  FFD9         	movff	ProcessResp4@ec,fsr2l
  7567  00144E  C02F  FFDA         	movff	ProcessResp4@ec+1,fsr2h
  7568  001452  C01A  FFDE         	movff	?_StrToInt,postinc2
  7569  001456  C01B  FFDD         	movff	?_StrToInt+1,postdec2
  7570  00145A                     l316:
  7571  00145A  FFFF               	dw	65535	; assembler added errata NOP
  7572                           
  7573                           ;SIM800x.c: 252: };SIM800x.c: 254: if(str[3] == 'E')
  7574  00145C  0E45               	movlw	69
  7575  00145E  1837               	xorwf	(ProcessResp4@str+3)^0,w,c
  7576  001460  A4D8               	btfss	status,2,c
  7577  001462  D002               	goto	l4731
  7578                           
  7579                           ;SIM800x.c: 255: return CME_ERROR;
  7580  001464  0E02               	movlw	2
  7581  001466  D009               	goto	l309
  7582  001468                     l4731:
  7583  001468  FFFF               	dw	65535	; assembler added errata NOP
  7584                           
  7585                           ;SIM800x.c: 256: if(str[3] == 'S')
  7586  00146A  0E53               	movlw	83
  7587  00146C  1837               	xorwf	(ProcessResp4@str+3)^0,w,c
  7588  00146E  A4D8               	btfss	status,2,c
  7589  001470  D002               	goto	l4737
  7590                           
  7591                           ;SIM800x.c: 257: return CMS_ERROR;
  7592  001472  0E03               	movlw	3
  7593  001474  D002               	goto	l309
  7594  001476                     l4737:
  7595  001476  FFFF               	dw	65535	; assembler added errata NOP
  7596                           
  7597                           ;SIM800x.c: 259: return INVALID_RESPONSE;
  7598  001478  0E09               	movlw	9
  7599  00147A                     l309:
  7600  00147A  FFFF               	dw	65535	; assembler added errata NOP
  7601  00147C  0012               	return		;funcret
  7602  00147E  FFFF               	dw	65535	; errata NOP
  7603  001480                     __end_of_ProcessResp4:
  7604                           	callstack 0
  7605                           
  7606 ;; *************** function _StrToInt *****************
  7607 ;; Defined at:
  7608 ;;		line 131 in file "Src/SIM800x.c"
  7609 ;; Parameters:    Size  Location     Type
  7610 ;;  str             2   25[COMRAM] PTR const unsigned char 
  7611 ;;		 -> SIM800xHTTPReadHeader@str(30), SIM800xHTTPReadState@str(30), SIM800xHTTPRead@str(30), SIM800xHTTPAction@str(30),
      + 
  7612 ;;		 -> SIM800xHTTPInputData@str(30), SIM800xGPRSGetNRegState@str(20), SIM800xGPRSSetDataMode@str(20), ProcessResp4@str(
      +20), 
  7613 ;;  start           1   27[COMRAM] unsigned char 
  7614 ;;  stop            1   28[COMRAM] unsigned char 
  7615 ;; Auto vars:     Size  Location     Type
  7616 ;;  j               1   38[COMRAM] unsigned char 
  7617 ;;  i               1   44[COMRAM] unsigned char 
  7618 ;;  po              4   40[COMRAM] unsigned long 
  7619 ;;  val             4   34[COMRAM] unsigned long 
  7620 ;;  ctrl            1   39[COMRAM] unsigned char 
  7621 ;; Return value:  Size  Location     Type
  7622 ;;                  4   25[COMRAM] unsigned long 
  7623 ;; Registers used:
  7624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7625 ;; Tracked objects:
  7626 ;;		On entry : 0/0
  7627 ;;		On exit  : 0/0
  7628 ;;		Unchanged: 0/0
  7629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7630 ;;      Params:         4       0       0       0       0       0       0
  7631 ;;      Locals:        11       0       0       0       0       0       0
  7632 ;;      Temps:          5       0       0       0       0       0       0
  7633 ;;      Totals:        20       0       0       0       0       0       0
  7634 ;;Total ram usage:       20 bytes
  7635 ;; Hardware stack levels used: 1
  7636 ;; Hardware stack levels required when called: 4
  7637 ;; This function calls:
  7638 ;;		___lmul
  7639 ;; This function is called by:
  7640 ;;		_ProcessResp4
  7641 ;;		_SIM800xHTTPInputData
  7642 ;;		_SIM800xHTTPAction
  7643 ;;		_SIM800xHTTPRead
  7644 ;; This function uses a non-reentrant model
  7645 ;;
  7646                           
  7647                           	psect	text35
  7648  000F7A                     __ptext35:
  7649                           	callstack 0
  7650  000F7A                     _StrToInt:
  7651                           	callstack 0
  7652  000F7A  FFFF               	dw	65535	; assembler added errata NOP
  7653                           
  7654                           ;SIM800x.c: 134: uint32_t val = 0, po = 1;
  7655                           
  7656                           ;incstack = 0
  7657  000F7C  0E00               	movlw	0
  7658  000F7E  6E23               	movwf	StrToInt@val^0,c
  7659  000F80  0E00               	movlw	0
  7660  000F82  6E24               	movwf	(StrToInt@val+1)^0,c
  7661  000F84  0E00               	movlw	0
  7662  000F86  6E25               	movwf	(StrToInt@val+2)^0,c
  7663  000F88  0E00               	movlw	0
  7664  000F8A  6E26               	movwf	(StrToInt@val+3)^0,c
  7665  000F8C  0E01               	movlw	1
  7666  000F8E  6E29               	movwf	StrToInt@po^0,c
  7667  000F90  0E00               	movlw	0
  7668  000F92  6E2A               	movwf	(StrToInt@po+1)^0,c
  7669  000F94  0E00               	movlw	0
  7670  000F96  6E2B               	movwf	(StrToInt@po+2)^0,c
  7671  000F98  0E00               	movlw	0
  7672  000F9A  6E2C               	movwf	(StrToInt@po+3)^0,c
  7673                           
  7674                           ;SIM800x.c: 135: uint8_t ctrl = 0;
  7675  000F9C  0E00               	movlw	0
  7676  000F9E  6E28               	movwf	StrToInt@ctrl^0,c
  7677                           
  7678                           ;SIM800x.c: 137: for(uint8_t i = start;i < stop + 1; i++)
  7679  000FA0  C01C  F02D         	movff	StrToInt@start,StrToInt@i
  7680  000FA4  D095               	goto	l4427
  7681  000FA6                     l4397:
  7682  000FA6  FFFF               	dw	65535	; assembler added errata NOP
  7683                           
  7684                           ;SIM800x.c: 138: {;SIM800x.c: 140: if((str[i] >= '0' && str[i] <= '9'))
  7685  000FA8  502D               	movf	StrToInt@i^0,w,c
  7686  000FAA  241A               	addwf	StrToInt@str^0,w,c
  7687  000FAC  6ED9               	movwf	fsr2l,c
  7688  000FAE  0E00               	movlw	0
  7689  000FB0  201B               	addwfc	(StrToInt@str+1)^0,w,c
  7690  000FB2  6EDA               	movwf	fsr2h,c
  7691  000FB4  0E2F               	movlw	47
  7692  000FB6  64DF               	cpfsgt	indf2,c
  7693  000FB8  D072               	goto	l4415
  7694  000FBA  502D               	movf	StrToInt@i^0,w,c
  7695  000FBC  241A               	addwf	StrToInt@str^0,w,c
  7696  000FBE  6ED9               	movwf	fsr2l,c
  7697  000FC0  0E00               	movlw	0
  7698  000FC2  201B               	addwfc	(StrToInt@str+1)^0,w,c
  7699  000FC4  6EDA               	movwf	fsr2h,c
  7700  000FC6  0E3A               	movlw	58
  7701  000FC8  60DF               	cpfslt	indf2,c
  7702  000FCA  D069               	goto	l4415
  7703                           
  7704                           ;SIM800x.c: 141: {;SIM800x.c: 143: ctrl = 1;
  7705  000FCC  0E01               	movlw	1
  7706  000FCE  6E28               	movwf	StrToInt@ctrl^0,c
  7707                           
  7708                           ;SIM800x.c: 145: for(uint8_t j = 0;j < stop - i;j++)
  7709  000FD0  0E00               	movlw	0
  7710  000FD2  6E27               	movwf	StrToInt@j^0,c
  7711  000FD4  D01C               	goto	l4407
  7712  000FD6                     l4403:
  7713  000FD6  FFFF               	dw	65535	; assembler added errata NOP
  7714                           
  7715                           ;SIM800x.c: 146: po = po * 10;
  7716  000FD8  C029  F00E         	movff	StrToInt@po,___lmul@multiplier
  7717  000FDC  C02A  F00F         	movff	StrToInt@po+1,___lmul@multiplier+1
  7718  000FE0  C02B  F010         	movff	StrToInt@po+2,___lmul@multiplier+2
  7719  000FE4  C02C  F011         	movff	StrToInt@po+3,___lmul@multiplier+3
  7720  000FE8  0E0A               	movlw	10
  7721  000FEA  6E12               	movwf	___lmul@multiplicand^0,c
  7722  000FEC  0E00               	movlw	0
  7723  000FEE  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  7724  000FF0  0E00               	movlw	0
  7725  000FF2  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  7726  000FF4  0E00               	movlw	0
  7727  000FF6  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  7728  000FF8  ECDB  F00D         	call	___lmul	;wreg free
  7729  000FFC  C00E  F029         	movff	?___lmul,StrToInt@po
  7730  001000  C00F  F02A         	movff	?___lmul+1,StrToInt@po+1
  7731  001004  C010  F02B         	movff	?___lmul+2,StrToInt@po+2
  7732  001008  C011  F02C         	movff	?___lmul+3,StrToInt@po+3
  7733  00100C  2A27               	incf	StrToInt@j^0,f,c
  7734  00100E                     l4407:
  7735  00100E  FFFF               	dw	65535	; assembler added errata NOP
  7736  001010  502D               	movf	StrToInt@i^0,w,c
  7737  001012  C01D  F01E         	movff	StrToInt@stop,??_StrToInt
  7738  001016  6A1F               	clrf	(??_StrToInt+1)^0,c
  7739  001018  5E1E               	subwf	??_StrToInt^0,f,c
  7740  00101A  0E00               	movlw	0
  7741  00101C  5A1F               	subwfb	(??_StrToInt+1)^0,f,c
  7742  00101E  5027               	movf	StrToInt@j^0,w,c
  7743  001020  6E20               	movwf	(??_StrToInt+2)^0,c
  7744  001022  6A21               	clrf	(??_StrToInt+3)^0,c
  7745  001024  501E               	movf	??_StrToInt^0,w,c
  7746  001026  5C20               	subwf	(??_StrToInt+2)^0,w,c
  7747  001028  5021               	movf	(??_StrToInt+3)^0,w,c
  7748  00102A  0A80               	xorlw	128
  7749  00102C  6E22               	movwf	(??_StrToInt+4)^0,c
  7750  00102E  501F               	movf	(??_StrToInt+1)^0,w,c
  7751  001030  0A80               	xorlw	128
  7752  001032  5822               	subwfb	(??_StrToInt+4)^0,w,c
  7753  001034  A0D8               	btfss	status,0,c
  7754  001036  D7CF               	goto	l4403
  7755                           
  7756                           ;SIM800x.c: 148: if(str[i] >= '0' && str[i] <= '9')
  7757  001038  502D               	movf	StrToInt@i^0,w,c
  7758  00103A  241A               	addwf	StrToInt@str^0,w,c
  7759  00103C  6ED9               	movwf	fsr2l,c
  7760  00103E  0E00               	movlw	0
  7761  001040  201B               	addwfc	(StrToInt@str+1)^0,w,c
  7762  001042  6EDA               	movwf	fsr2h,c
  7763  001044  0E2F               	movlw	47
  7764  001046  64DF               	cpfsgt	indf2,c
  7765  001048  D02A               	goto	l4415
  7766  00104A  502D               	movf	StrToInt@i^0,w,c
  7767  00104C  241A               	addwf	StrToInt@str^0,w,c
  7768  00104E  6ED9               	movwf	fsr2l,c
  7769  001050  0E00               	movlw	0
  7770  001052  201B               	addwfc	(StrToInt@str+1)^0,w,c
  7771  001054  6EDA               	movwf	fsr2h,c
  7772  001056  0E3A               	movlw	58
  7773  001058  60DF               	cpfslt	indf2,c
  7774  00105A  D021               	goto	l4415
  7775                           
  7776                           ;SIM800x.c: 149: val += (uint32_t)((uint8_t)(str[i] - 48) * po);
  7777  00105C  502D               	movf	StrToInt@i^0,w,c
  7778  00105E  241A               	addwf	StrToInt@str^0,w,c
  7779  001060  6ED9               	movwf	fsr2l,c
  7780  001062  0E00               	movlw	0
  7781  001064  201B               	addwfc	(StrToInt@str+1)^0,w,c
  7782  001066  6EDA               	movwf	fsr2h,c
  7783  001068  50DF               	movf	indf2,w,c
  7784  00106A  6E1E               	movwf	??_StrToInt^0,c
  7785  00106C  0ED0               	movlw	208
  7786  00106E  261E               	addwf	??_StrToInt^0,f,c
  7787  001070  501E               	movf	??_StrToInt^0,w,c
  7788  001072  6E0E               	movwf	___lmul@multiplier^0,c
  7789  001074  6A0F               	clrf	(___lmul@multiplier+1)^0,c
  7790  001076  6A10               	clrf	(___lmul@multiplier+2)^0,c
  7791  001078  6A11               	clrf	(___lmul@multiplier+3)^0,c
  7792  00107A  C029  F012         	movff	StrToInt@po,___lmul@multiplicand
  7793  00107E  C02A  F013         	movff	StrToInt@po+1,___lmul@multiplicand+1
  7794  001082  C02B  F014         	movff	StrToInt@po+2,___lmul@multiplicand+2
  7795  001086  C02C  F015         	movff	StrToInt@po+3,___lmul@multiplicand+3
  7796  00108A  ECDB  F00D         	call	___lmul	;wreg free
  7797  00108E  500E               	movf	?___lmul^0,w,c
  7798  001090  2623               	addwf	StrToInt@val^0,f,c
  7799  001092  500F               	movf	(?___lmul+1)^0,w,c
  7800  001094  2224               	addwfc	(StrToInt@val+1)^0,f,c
  7801  001096  5010               	movf	(?___lmul+2)^0,w,c
  7802  001098  2225               	addwfc	(StrToInt@val+2)^0,f,c
  7803  00109A  5011               	movf	(?___lmul+3)^0,w,c
  7804  00109C  2226               	addwfc	(StrToInt@val+3)^0,f,c
  7805  00109E                     l4415:
  7806  00109E  FFFF               	dw	65535	; assembler added errata NOP
  7807                           
  7808                           ;SIM800x.c: 151: };SIM800x.c: 153: po = 1;
  7809  0010A0  0E01               	movlw	1
  7810  0010A2  6E29               	movwf	StrToInt@po^0,c
  7811  0010A4  0E00               	movlw	0
  7812  0010A6  6E2A               	movwf	(StrToInt@po+1)^0,c
  7813  0010A8  0E00               	movlw	0
  7814  0010AA  6E2B               	movwf	(StrToInt@po+2)^0,c
  7815  0010AC  0E00               	movlw	0
  7816  0010AE  6E2C               	movwf	(StrToInt@po+3)^0,c
  7817                           
  7818                           ;SIM800x.c: 155: if(!ctrl)
  7819  0010B0  5028               	movf	StrToInt@ctrl^0,w,c
  7820  0010B2  A4D8               	btfss	status,2,c
  7821  0010B4  D009               	goto	l4423
  7822                           
  7823                           ;SIM800x.c: 156: return 0;
  7824  0010B6  0E00               	movlw	0
  7825  0010B8  6E1A               	movwf	?_StrToInt^0,c
  7826  0010BA  0E00               	movlw	0
  7827  0010BC  6E1B               	movwf	(?_StrToInt+1)^0,c
  7828  0010BE  0E00               	movlw	0
  7829  0010C0  6E1C               	movwf	(?_StrToInt+2)^0,c
  7830  0010C2  0E00               	movlw	0
  7831  0010C4  6E1D               	movwf	(?_StrToInt+3)^0,c
  7832  0010C6  D021               	goto	l281
  7833  0010C8                     l4423:
  7834  0010C8  FFFF               	dw	65535	; assembler added errata NOP
  7835                           
  7836                           ;SIM800x.c: 158: ctrl = 0;
  7837  0010CA  0E00               	movlw	0
  7838  0010CC  6E28               	movwf	StrToInt@ctrl^0,c
  7839  0010CE  2A2D               	incf	StrToInt@i^0,f,c
  7840  0010D0                     l4427:
  7841  0010D0  FFFF               	dw	65535	; assembler added errata NOP
  7842  0010D2  501D               	movf	StrToInt@stop^0,w,c
  7843  0010D4  6E1E               	movwf	??_StrToInt^0,c
  7844  0010D6  6A1F               	clrf	(??_StrToInt+1)^0,c
  7845  0010D8  0E01               	movlw	1
  7846  0010DA  261E               	addwf	??_StrToInt^0,f,c
  7847  0010DC  0E00               	movlw	0
  7848  0010DE  221F               	addwfc	(??_StrToInt+1)^0,f,c
  7849  0010E0  502D               	movf	StrToInt@i^0,w,c
  7850  0010E2  6E20               	movwf	(??_StrToInt+2)^0,c
  7851  0010E4  6A21               	clrf	(??_StrToInt+3)^0,c
  7852  0010E6  501E               	movf	??_StrToInt^0,w,c
  7853  0010E8  5C20               	subwf	(??_StrToInt+2)^0,w,c
  7854  0010EA  5021               	movf	(??_StrToInt+3)^0,w,c
  7855  0010EC  0A80               	xorlw	128
  7856  0010EE  6E22               	movwf	(??_StrToInt+4)^0,c
  7857  0010F0  501F               	movf	(??_StrToInt+1)^0,w,c
  7858  0010F2  0A80               	xorlw	128
  7859  0010F4  5822               	subwfb	(??_StrToInt+4)^0,w,c
  7860  0010F6  A0D8               	btfss	status,0,c
  7861  0010F8  D756               	goto	l4397
  7862                           
  7863                           ;SIM800x.c: 160: };SIM800x.c: 161: return val;
  7864  0010FA  C023  F01A         	movff	StrToInt@val,?_StrToInt
  7865  0010FE  C024  F01B         	movff	StrToInt@val+1,?_StrToInt+1
  7866  001102  C025  F01C         	movff	StrToInt@val+2,?_StrToInt+2
  7867  001106  C026  F01D         	movff	StrToInt@val+3,?_StrToInt+3
  7868  00110A                     l281:
  7869  00110A  FFFF               	dw	65535	; assembler added errata NOP
  7870  00110C  0012               	return		;funcret
  7871  00110E  FFFF               	dw	65535	; errata NOP
  7872  001110                     __end_of_StrToInt:
  7873                           	callstack 0
  7874                           
  7875 ;; *************** function ___lmul *****************
  7876 ;; Defined at:
  7877 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul32.c"
  7878 ;; Parameters:    Size  Location     Type
  7879 ;;  multiplier      4   13[COMRAM] unsigned long 
  7880 ;;  multiplicand    4   17[COMRAM] unsigned long 
  7881 ;; Auto vars:     Size  Location     Type
  7882 ;;  product         4   21[COMRAM] unsigned long 
  7883 ;; Return value:  Size  Location     Type
  7884 ;;                  4   13[COMRAM] unsigned long 
  7885 ;; Registers used:
  7886 ;;		wreg, status,2, status,0
  7887 ;; Tracked objects:
  7888 ;;		On entry : 0/0
  7889 ;;		On exit  : 0/0
  7890 ;;		Unchanged: 0/0
  7891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7892 ;;      Params:         8       0       0       0       0       0       0
  7893 ;;      Locals:         4       0       0       0       0       0       0
  7894 ;;      Temps:          0       0       0       0       0       0       0
  7895 ;;      Totals:        12       0       0       0       0       0       0
  7896 ;;Total ram usage:       12 bytes
  7897 ;; Hardware stack levels used: 1
  7898 ;; Hardware stack levels required when called: 3
  7899 ;; This function calls:
  7900 ;;		Nothing
  7901 ;; This function is called by:
  7902 ;;		_StrToInt
  7903 ;; This function uses a non-reentrant model
  7904 ;;
  7905                           
  7906                           	psect	text36
  7907  001BB6                     __ptext36:
  7908                           	callstack 0
  7909  001BB6                     ___lmul:
  7910                           	callstack 0
  7911  001BB6  FFFF               	dw	65535	; assembler added errata NOP
  7912                           
  7913                           ;incstack = 0
  7914  001BB8  0E00               	movlw	0
  7915  001BBA  6E16               	movwf	___lmul@product^0,c
  7916  001BBC  0E00               	movlw	0
  7917  001BBE  6E17               	movwf	(___lmul@product+1)^0,c
  7918  001BC0  0E00               	movlw	0
  7919  001BC2  6E18               	movwf	(___lmul@product+2)^0,c
  7920  001BC4  0E00               	movlw	0
  7921  001BC6  6E19               	movwf	(___lmul@product+3)^0,c
  7922  001BC8                     l4373:
  7923  001BC8  FFFF               	dw	65535	; assembler added errata NOP
  7924  001BCA  A00E               	btfss	___lmul@multiplier^0,0,c
  7925  001BCC  D008               	goto	l4377
  7926  001BCE  5012               	movf	___lmul@multiplicand^0,w,c
  7927  001BD0  2616               	addwf	___lmul@product^0,f,c
  7928  001BD2  5013               	movf	(___lmul@multiplicand+1)^0,w,c
  7929  001BD4  2217               	addwfc	(___lmul@product+1)^0,f,c
  7930  001BD6  5014               	movf	(___lmul@multiplicand+2)^0,w,c
  7931  001BD8  2218               	addwfc	(___lmul@product+2)^0,f,c
  7932  001BDA  5015               	movf	(___lmul@multiplicand+3)^0,w,c
  7933  001BDC  2219               	addwfc	(___lmul@product+3)^0,f,c
  7934  001BDE                     l4377:
  7935  001BDE  FFFF               	dw	65535	; assembler added errata NOP
  7936  001BE0  90D8               	bcf	status,0,c
  7937  001BE2  3612               	rlcf	___lmul@multiplicand^0,f,c
  7938  001BE4  3613               	rlcf	(___lmul@multiplicand+1)^0,f,c
  7939  001BE6  3614               	rlcf	(___lmul@multiplicand+2)^0,f,c
  7940  001BE8  3615               	rlcf	(___lmul@multiplicand+3)^0,f,c
  7941  001BEA  90D8               	bcf	status,0,c
  7942  001BEC  3211               	rrcf	(___lmul@multiplier+3)^0,f,c
  7943  001BEE  3210               	rrcf	(___lmul@multiplier+2)^0,f,c
  7944  001BF0  320F               	rrcf	(___lmul@multiplier+1)^0,f,c
  7945  001BF2  320E               	rrcf	___lmul@multiplier^0,f,c
  7946  001BF4  500E               	movf	___lmul@multiplier^0,w,c
  7947  001BF6  100F               	iorwf	(___lmul@multiplier+1)^0,w,c
  7948  001BF8  1010               	iorwf	(___lmul@multiplier+2)^0,w,c
  7949  001BFA  1011               	iorwf	(___lmul@multiplier+3)^0,w,c
  7950  001BFC  A4D8               	btfss	status,2,c
  7951  001BFE  D7E4               	goto	l4373
  7952  001C00  C016  F00E         	movff	___lmul@product,?___lmul
  7953  001C04  C017  F00F         	movff	___lmul@product+1,?___lmul+1
  7954  001C08  C018  F010         	movff	___lmul@product+2,?___lmul+2
  7955  001C0C  C019  F011         	movff	___lmul@product+3,?___lmul+3
  7956  001C10  0012               	return		;funcret
  7957  001C12  FFFF               	dw	65535	; errata NOP
  7958  001C14                     __end_of___lmul:
  7959                           	callstack 0
  7960                           
  7961 ;; *************** function _SIM800xSDMReadF1Pkt *****************
  7962 ;; Defined at:
  7963 ;;		line 230 in file "Src/SIM800x_SDM.c"
  7964 ;; Parameters:    Size  Location     Type
  7965 ;;  data            2   22[COMRAM] PTR unsigned char 
  7966 ;;		 -> SIM800xHTTPReadHeader@str(30), SIM800xHTTPReadState@str(30), SIM800xHTTPRead@str(30), SIM800xHTTPAction@str(30),
      + 
  7967 ;;		 -> SIM800xHTTPInputData@str(30), SIM800xGPRSGetNRegState@str(20), SIM800xGPRSGetAddress@str(40), SIM800xGPRSSetData
      +Mode@str(20), 
  7968 ;;		 -> SIM800xIPGetState@str(30), SIM800xGetSoftwareRevisionID@str(30), ProcessResp4@str(20), 
  7969 ;; Auto vars:     Size  Location     Type
  7970 ;;  time            4   31[COMRAM] unsigned long 
  7971 ;;  val             2   28[COMRAM] unsigned int 
  7972 ;;  tmp             1   35[COMRAM] unsigned char 
  7973 ;;  i               1   30[COMRAM] unsigned char 
  7974 ;; Return value:  Size  Location     Type
  7975 ;;                  2   22[COMRAM] int 
  7976 ;; Registers used:
  7977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7978 ;; Tracked objects:
  7979 ;;		On entry : 0/0
  7980 ;;		On exit  : 0/0
  7981 ;;		Unchanged: 0/0
  7982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7983 ;;      Params:         2       0       0       0       0       0       0
  7984 ;;      Locals:         8       0       0       0       0       0       0
  7985 ;;      Temps:          4       0       0       0       0       0       0
  7986 ;;      Totals:        14       0       0       0       0       0       0
  7987 ;;Total ram usage:       14 bytes
  7988 ;; Hardware stack levels used: 1
  7989 ;; Hardware stack levels required when called: 5
  7990 ;; This function calls:
  7991 ;;		_SIM800xSDMFlush
  7992 ;;		_SIM800xSDMReadByte
  7993 ;;		_SIM800xSDMRxAvailable
  7994 ;;		_Tick_ms
  7995 ;; This function is called by:
  7996 ;;		_ProcessResp2
  7997 ;;		_ProcessResp4
  7998 ;;		_SIM800xHTTPInputData
  7999 ;;		_SIM800xHTTPAction
  8000 ;;		_SIM800xHTTPRead
  8001 ;; This function uses a non-reentrant model
  8002 ;;
  8003                           
  8004                           	psect	text37
  8005  00124E                     __ptext37:
  8006                           	callstack 0
  8007  00124E                     _SIM800xSDMReadF1Pkt:
  8008                           	callstack 0
  8009  00124E  FFFF               	dw	65535	; assembler added errata NOP
  8010                           
  8011                           ;SIM800x_SDM.c: 233: uint8_t i = 0, tmp = 0;
  8012                           
  8013                           ;incstack = 0
  8014  001250  0E00               	movlw	0
  8015  001252  6E1F               	movwf	SIM800xSDMReadF1Pkt@i^0,c
  8016                           
  8017                           ;SIM800x_SDM.c: 234: uint16_t val = SIM800xSDMRxAvailable();
  8018  001254  EC25  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  8019  001258  C013  F01D         	movff	?_SIM800xSDMRxAvailable,SIM800xSDMReadF1Pkt@val
  8020  00125C  C014  F01E         	movff	?_SIM800xSDMRxAvailable+1,SIM800xSDMReadF1Pkt@val+1
  8021                           
  8022                           ;SIM800x_SDM.c: 236: if(val > 5)
  8023  001260  501E               	movf	(SIM800xSDMReadF1Pkt@val+1)^0,w,c
  8024  001262  E104               	bnz	u3630
  8025  001264  0E06               	movlw	6
  8026  001266  5C1D               	subwf	SIM800xSDMReadF1Pkt@val^0,w,c
  8027  001268  A0D8               	btfss	status,0,c
  8028  00126A  D081               	goto	u3700
  8029  00126C                     u3630:
  8030                           
  8031                           ;SIM800x_SDM.c: 237: {;SIM800x_SDM.c: 239: tmp = SIM800xSDMReadByte();
  8032  00126C  EC33  F00F         	call	_SIM800xSDMReadByte	;wreg free
  8033  001270  6E24               	movwf	SIM800xSDMReadF1Pkt@tmp^0,c
  8034                           
  8035                           ;SIM800x_SDM.c: 245: if(tmp == 0x0D)
  8036  001272  0E0D               	movlw	13
  8037  001274  1824               	xorwf	SIM800xSDMReadF1Pkt@tmp^0,w,c
  8038  001276  A4D8               	btfss	status,2,c
  8039  001278  D07A               	goto	u3700
  8040                           
  8041                           ;SIM800x_SDM.c: 246: {;SIM800x_SDM.c: 248: tmp = SIM800xSDMReadByte();
  8042  00127A  EC33  F00F         	call	_SIM800xSDMReadByte	;wreg free
  8043  00127E  6E24               	movwf	SIM800xSDMReadF1Pkt@tmp^0,c
  8044                           
  8045                           ;SIM800x_SDM.c: 250: if(tmp == 0x0A)
  8046  001280  0E0A               	movlw	10
  8047  001282  1824               	xorwf	SIM800xSDMReadF1Pkt@tmp^0,w,c
  8048  001284  A4D8               	btfss	status,2,c
  8049  001286  D073               	goto	u3700
  8050                           
  8051                           ;SIM800x_SDM.c: 251: {;SIM800x_SDM.c: 253: uint32_t time = Tick_ms();
  8052  001288  EC83  F010         	call	_Tick_ms	;wreg free
  8053  00128C  C00E  F020         	movff	?_Tick_ms,SIM800xSDMReadF1Pkt@time
  8054  001290  C00F  F021         	movff	?_Tick_ms+1,SIM800xSDMReadF1Pkt@time+1
  8055  001294  C010  F022         	movff	?_Tick_ms+2,SIM800xSDMReadF1Pkt@time+2
  8056  001298  C011  F023         	movff	?_Tick_ms+3,SIM800xSDMReadF1Pkt@time+3
  8057                           
  8058                           ;SIM800x_SDM.c: 255: while((tmp = SIM800xSDMReadByte()) != 0x0D)
  8059  00129C  D035               	goto	l4473
  8060  00129E                     l4455:
  8061  00129E  FFFF               	dw	65535	; assembler added errata NOP
  8062                           
  8063                           ;SIM800x_SDM.c: 256: {;SIM800x_SDM.c: 258: if(tmp != 0xFF)
  8064  0012A0  2824               	incf	SIM800xSDMReadF1Pkt@tmp^0,w,c
  8065  0012A2  B4D8               	btfsc	status,2,c
  8066  0012A4  D013               	goto	l4465
  8067                           
  8068                           ;SIM800x_SDM.c: 259: {;SIM800x_SDM.c: 266: *(data++) = tmp;
  8069  0012A6  C017  FFD9         	movff	SIM800xSDMReadF1Pkt@data,fsr2l
  8070  0012AA  C018  FFDA         	movff	SIM800xSDMReadF1Pkt@data+1,fsr2h
  8071  0012AE  C024  FFDF         	movff	SIM800xSDMReadF1Pkt@tmp,indf2
  8072  0012B2  4A17               	infsnz	SIM800xSDMReadF1Pkt@data^0,f,c
  8073  0012B4  2A18               	incf	(SIM800xSDMReadF1Pkt@data+1)^0,f,c
  8074                           
  8075                           ;SIM800x_SDM.c: 267: ++i;
  8076  0012B6  2A1F               	incf	SIM800xSDMReadF1Pkt@i^0,f,c
  8077                           
  8078                           ;SIM800x_SDM.c: 268: time = Tick_ms();
  8079  0012B8  EC83  F010         	call	_Tick_ms	;wreg free
  8080  0012BC  C00E  F020         	movff	?_Tick_ms,SIM800xSDMReadF1Pkt@time
  8081  0012C0  C00F  F021         	movff	?_Tick_ms+1,SIM800xSDMReadF1Pkt@time+1
  8082  0012C4  C010  F022         	movff	?_Tick_ms+2,SIM800xSDMReadF1Pkt@time+2
  8083  0012C8  C011  F023         	movff	?_Tick_ms+3,SIM800xSDMReadF1Pkt@time+3
  8084  0012CC                     l4465:
  8085  0012CC  FFFF               	dw	65535	; assembler added errata NOP
  8086                           
  8087                           ;SIM800x_SDM.c: 269: };SIM800x_SDM.c: 271: if((Tick_ms() - time) > Tout)
  8088  0012CE  EC83  F010         	call	_Tick_ms	;wreg free
  8089  0012D2  5020               	movf	SIM800xSDMReadF1Pkt@time^0,w,c
  8090  0012D4  5C0E               	subwf	?_Tick_ms^0,w,c
  8091  0012D6  6E19               	movwf	??_SIM800xSDMReadF1Pkt^0,c
  8092  0012D8  5021               	movf	(SIM800xSDMReadF1Pkt@time+1)^0,w,c
  8093  0012DA  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  8094  0012DC  6E1A               	movwf	(??_SIM800xSDMReadF1Pkt+1)^0,c
  8095  0012DE  5022               	movf	(SIM800xSDMReadF1Pkt@time+2)^0,w,c
  8096  0012E0  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  8097  0012E2  6E1B               	movwf	(??_SIM800xSDMReadF1Pkt+2)^0,c
  8098  0012E4  5023               	movf	(SIM800xSDMReadF1Pkt@time+3)^0,w,c
  8099  0012E6  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  8100  0012E8  6E1C               	movwf	(??_SIM800xSDMReadF1Pkt+3)^0,c
  8101  0012EA  501C               	movf	(??_SIM800xSDMReadF1Pkt+3)^0,w,c
  8102  0012EC  101B               	iorwf	(??_SIM800xSDMReadF1Pkt+2)^0,w,c
  8103  0012EE  E106               	bnz	u3670
  8104  0012F0  0ED1               	movlw	209
  8105  0012F2  5C19               	subwf	??_SIM800xSDMReadF1Pkt^0,w,c
  8106  0012F4  0E07               	movlw	7
  8107  0012F6  581A               	subwfb	(??_SIM800xSDMReadF1Pkt+1)^0,w,c
  8108  0012F8  A0D8               	btfss	status,0,c
  8109  0012FA  D006               	goto	l4473
  8110  0012FC                     u3670:
  8111  0012FC  FFFF               	dw	65535	; assembler added errata NOP
  8112  0012FE                     l4467:
  8113                           
  8114                           ;SIM800x_SDM.c: 272: {;SIM800x_SDM.c: 273: SIM800xSDMFlush();
  8115  0012FE  EC8E  F010         	call	_SIM800xSDMFlush	;wreg free
  8116                           
  8117                           ;SIM800x_SDM.c: 274: return -1;
  8118  001302  6817               	setf	?_SIM800xSDMReadF1Pkt^0,c
  8119  001304  6818               	setf	(?_SIM800xSDMReadF1Pkt+1)^0,c
  8120  001306  D037               	goto	l888
  8121  001308                     l4473:
  8122  001308  FFFF               	dw	65535	; assembler added errata NOP
  8123  00130A  EC33  F00F         	call	_SIM800xSDMReadByte	;wreg free
  8124  00130E  6E24               	movwf	SIM800xSDMReadF1Pkt@tmp^0,c
  8125  001310  0E0D               	movlw	13
  8126  001312  1824               	xorwf	SIM800xSDMReadF1Pkt@tmp^0,w,c
  8127  001314  A4D8               	btfss	status,2,c
  8128  001316  D7C3               	goto	l4455
  8129                           
  8130                           ;SIM800x_SDM.c: 275: };SIM800x_SDM.c: 277: };SIM800x_SDM.c: 279: time = Tick_ms();
  8131  001318  EC83  F010         	call	_Tick_ms	;wreg free
  8132  00131C  C00E  F020         	movff	?_Tick_ms,SIM800xSDMReadF1Pkt@time
  8133  001320  C00F  F021         	movff	?_Tick_ms+1,SIM800xSDMReadF1Pkt@time+1
  8134  001324  C010  F022         	movff	?_Tick_ms+2,SIM800xSDMReadF1Pkt@time+2
  8135  001328  C011  F023         	movff	?_Tick_ms+3,SIM800xSDMReadF1Pkt@time+3
  8136                           
  8137                           ;SIM800x_SDM.c: 281: while((tmp = SIM800xSDMReadByte()) != 0x0A)
  8138  00132C  D018               	goto	l4485
  8139  00132E                     l4477:
  8140  00132E  FFFF               	dw	65535	; assembler added errata NOP
  8141                           
  8142                           ;SIM800x_SDM.c: 282: {;SIM800x_SDM.c: 284: if((Tick_ms() - time) > Tout)
  8143  001330  EC83  F010         	call	_Tick_ms	;wreg free
  8144  001334  5020               	movf	SIM800xSDMReadF1Pkt@time^0,w,c
  8145  001336  5C0E               	subwf	?_Tick_ms^0,w,c
  8146  001338  6E19               	movwf	??_SIM800xSDMReadF1Pkt^0,c
  8147  00133A  5021               	movf	(SIM800xSDMReadF1Pkt@time+1)^0,w,c
  8148  00133C  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  8149  00133E  6E1A               	movwf	(??_SIM800xSDMReadF1Pkt+1)^0,c
  8150  001340  5022               	movf	(SIM800xSDMReadF1Pkt@time+2)^0,w,c
  8151  001342  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  8152  001344  6E1B               	movwf	(??_SIM800xSDMReadF1Pkt+2)^0,c
  8153  001346  5023               	movf	(SIM800xSDMReadF1Pkt@time+3)^0,w,c
  8154  001348  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  8155  00134A  6E1C               	movwf	(??_SIM800xSDMReadF1Pkt+3)^0,c
  8156  00134C  501C               	movf	(??_SIM800xSDMReadF1Pkt+3)^0,w,c
  8157  00134E  101B               	iorwf	(??_SIM800xSDMReadF1Pkt+2)^0,w,c
  8158  001350  E1D6               	bnz	l4467
  8159  001352  0ED1               	movlw	209
  8160  001354  5C19               	subwf	??_SIM800xSDMReadF1Pkt^0,w,c
  8161  001356  0E07               	movlw	7
  8162  001358  581A               	subwfb	(??_SIM800xSDMReadF1Pkt+1)^0,w,c
  8163  00135A  B0D8               	btfsc	status,0,c
  8164  00135C  D7CF               	goto	u3670
  8165  00135E                     l4485:
  8166  00135E  FFFF               	dw	65535	; assembler added errata NOP
  8167  001360  EC33  F00F         	call	_SIM800xSDMReadByte	;wreg free
  8168  001364  6E24               	movwf	SIM800xSDMReadF1Pkt@tmp^0,c
  8169  001366  0E0A               	movlw	10
  8170  001368  1824               	xorwf	SIM800xSDMReadF1Pkt@tmp^0,w,c
  8171  00136A  A4D8               	btfss	status,2,c
  8172  00136C  D7E0               	goto	l4477
  8173  00136E                     u3700:
  8174  00136E  FFFF               	dw	65535	; assembler added errata NOP
  8175                           
  8176                           ;SIM800x_SDM.c: 288: };SIM800x_SDM.c: 290: };SIM800x_SDM.c: 291: };SIM800x_SDM.c: 292: }
      +                          ;SIM800x_SDM.c: 298: };SIM800x_SDM.c: 300: return i;
  8177  001370  C01F  F017         	movff	SIM800xSDMReadF1Pkt@i,?_SIM800xSDMReadF1Pkt
  8178  001374  6A18               	clrf	(?_SIM800xSDMReadF1Pkt+1)^0,c
  8179  001376                     l888:
  8180  001376  FFFF               	dw	65535	; assembler added errata NOP
  8181  001378  0012               	return		;funcret
  8182  00137A  FFFF               	dw	65535	; errata NOP
  8183  00137C                     __end_of_SIM800xSDMReadF1Pkt:
  8184                           	callstack 0
  8185                           
  8186 ;; *************** function _Tick_ms *****************
  8187 ;; Defined at:
  8188 ;;		line 87 in file "C:/EmbeddedDevOps/Libraries/SystemTime.X/Src/SystemTime.c"
  8189 ;; Parameters:    Size  Location     Type
  8190 ;;		None
  8191 ;; Auto vars:     Size  Location     Type
  8192 ;;		None
  8193 ;; Return value:  Size  Location     Type
  8194 ;;                  4   13[COMRAM] unsigned long 
  8195 ;; Registers used:
  8196 ;;		None
  8197 ;; Tracked objects:
  8198 ;;		On entry : 0/0
  8199 ;;		On exit  : 0/0
  8200 ;;		Unchanged: 0/0
  8201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8202 ;;      Params:         4       0       0       0       0       0       0
  8203 ;;      Locals:         0       0       0       0       0       0       0
  8204 ;;      Temps:          0       0       0       0       0       0       0
  8205 ;;      Totals:         4       0       0       0       0       0       0
  8206 ;;Total ram usage:        4 bytes
  8207 ;; Hardware stack levels used: 1
  8208 ;; Hardware stack levels required when called: 3
  8209 ;; This function calls:
  8210 ;;		Nothing
  8211 ;; This function is called by:
  8212 ;;		_ProcessResp1
  8213 ;;		_ProcessResp4
  8214 ;;		_SIM800xIPGetState
  8215 ;;		_SIM800xHTTPInputData
  8216 ;;		_SIM800xHTTPAction
  8217 ;;		_SIM800xHTTPRead
  8218 ;;		_SIM800xSDMReadF1Pkt
  8219 ;; This function uses a non-reentrant model
  8220 ;;
  8221                           
  8222                           	psect	text38
  8223  002106                     __ptext38:
  8224                           	callstack 0
  8225  002106                     _Tick_ms:
  8226                           	callstack 0
  8227  002106  FFFF               	dw	65535	; assembler added errata NOP
  8228                           
  8229                           ;SystemTime.c: 90: return IncVar;
  8230                           
  8231                           ;incstack = 0
  8232  002108  C056  F00E         	movff	_IncVar,?_Tick_ms	;volatile
  8233  00210C  C057  F00F         	movff	_IncVar+1,?_Tick_ms+1	;volatile
  8234  002110  C058  F010         	movff	_IncVar+2,?_Tick_ms+2	;volatile
  8235  002114  C059  F011         	movff	_IncVar+3,?_Tick_ms+3	;volatile
  8236  002118  0012               	return		;funcret
  8237  00211A  FFFF               	dw	65535	; errata NOP
  8238  00211C                     __end_of_Tick_ms:
  8239                           	callstack 0
  8240                           
  8241 ;; *************** function _SIM800xSDMRxAvailable *****************
  8242 ;; Defined at:
  8243 ;;		line 112 in file "Src/SIM800x_SDM.c"
  8244 ;; Parameters:    Size  Location     Type
  8245 ;;		None
  8246 ;; Auto vars:     Size  Location     Type
  8247 ;;		None
  8248 ;; Return value:  Size  Location     Type
  8249 ;;                  2   18[COMRAM] unsigned int 
  8250 ;; Registers used:
  8251 ;;		wreg, status,2, status,0, cstack
  8252 ;; Tracked objects:
  8253 ;;		On entry : 0/0
  8254 ;;		On exit  : 0/0
  8255 ;;		Unchanged: 0/0
  8256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8257 ;;      Params:         2       0       0       0       0       0       0
  8258 ;;      Locals:         0       0       0       0       0       0       0
  8259 ;;      Temps:          2       0       0       0       0       0       0
  8260 ;;      Totals:         4       0       0       0       0       0       0
  8261 ;;Total ram usage:        4 bytes
  8262 ;; Hardware stack levels used: 1
  8263 ;; Hardware stack levels required when called: 4
  8264 ;; This function calls:
  8265 ;;		___lwmod
  8266 ;; This function is called by:
  8267 ;;		_ProcessResp1
  8268 ;;		_ProcessResp4
  8269 ;;		_SIM800xInit
  8270 ;;		_SIM800xIPGetState
  8271 ;;		_SIM800xHTTPInputData
  8272 ;;		_SIM800xHTTPAction
  8273 ;;		_SIM800xHTTPRead
  8274 ;;		_SIM800xSDMReadF1Pkt
  8275 ;; This function uses a non-reentrant model
  8276 ;;
  8277                           
  8278                           	psect	text39
  8279  00204A                     __ptext39:
  8280                           	callstack 0
  8281  00204A                     _SIM800xSDMRxAvailable:
  8282                           	callstack 0
  8283  00204A  FFFF               	dw	65535	; assembler added errata NOP
  8284                           
  8285                           ;SIM800x_SDM.c: 115: return (uint16_t)((Rxfifocurrent + 200 - Rxfifoptr) % 200);
  8286                           
  8287                           ;incstack = 0
  8288  00204C  505C               	movf	_Rxfifoptr^0,w,c	;volatile
  8289  00204E  5C5A               	subwf	_Rxfifocurrent^0,w,c	;volatile
  8290  002050  6E15               	movwf	??_SIM800xSDMRxAvailable^0,c
  8291  002052  505D               	movf	(_Rxfifoptr+1)^0,w,c	;volatile
  8292  002054  585B               	subwfb	(_Rxfifocurrent+1)^0,w,c	;volatile
  8293  002056  6E16               	movwf	(??_SIM800xSDMRxAvailable+1)^0,c
  8294  002058  0EC8               	movlw	200
  8295  00205A  2415               	addwf	??_SIM800xSDMRxAvailable^0,w,c
  8296  00205C  6E0E               	movwf	___lwmod@dividend^0,c
  8297  00205E  0E00               	movlw	0
  8298  002060  2016               	addwfc	(??_SIM800xSDMRxAvailable+1)^0,w,c
  8299  002062  6E0F               	movwf	(___lwmod@dividend+1)^0,c
  8300  002064  0E00               	movlw	0
  8301  002066  6E11               	movwf	(___lwmod@divisor+1)^0,c
  8302  002068  0EC8               	movlw	200
  8303  00206A  6E10               	movwf	___lwmod@divisor^0,c
  8304  00206C  ECE3  F00E         	call	___lwmod	;wreg free
  8305  002070  C00E  F013         	movff	?___lwmod,?_SIM800xSDMRxAvailable
  8306  002074  C00F  F014         	movff	?___lwmod+1,?_SIM800xSDMRxAvailable+1
  8307  002078  0012               	return		;funcret
  8308  00207A  FFFF               	dw	65535	; errata NOP
  8309  00207C                     __end_of_SIM800xSDMRxAvailable:
  8310                           	callstack 0
  8311                           
  8312 ;; *************** function _SIM800xSDMReadByte *****************
  8313 ;; Defined at:
  8314 ;;		line 169 in file "Src/SIM800x_SDM.c"
  8315 ;; Parameters:    Size  Location     Type
  8316 ;;		None
  8317 ;; Auto vars:     Size  Location     Type
  8318 ;;  data            1   18[COMRAM] unsigned char 
  8319 ;; Return value:  Size  Location     Type
  8320 ;;                  1    wreg      unsigned char 
  8321 ;; Registers used:
  8322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8323 ;; Tracked objects:
  8324 ;;		On entry : 0/0
  8325 ;;		On exit  : 0/0
  8326 ;;		Unchanged: 0/0
  8327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8328 ;;      Params:         0       0       0       0       0       0       0
  8329 ;;      Locals:         1       0       0       0       0       0       0
  8330 ;;      Temps:          0       0       0       0       0       0       0
  8331 ;;      Totals:         1       0       0       0       0       0       0
  8332 ;;Total ram usage:        1 bytes
  8333 ;; Hardware stack levels used: 1
  8334 ;; Hardware stack levels required when called: 4
  8335 ;; This function calls:
  8336 ;;		___lwmod
  8337 ;; This function is called by:
  8338 ;;		_SIM800xInit
  8339 ;;		_SIM800xHTTPRead
  8340 ;;		_SIM800xSDMReadF1Pkt
  8341 ;; This function uses a non-reentrant model
  8342 ;;
  8343                           
  8344                           	psect	text40
  8345  001E66                     __ptext40:
  8346                           	callstack 0
  8347  001E66                     _SIM800xSDMReadByte:
  8348                           	callstack 0
  8349  001E66  FFFF               	dw	65535	; assembler added errata NOP
  8350                           
  8351                           ;SIM800x_SDM.c: 172: if(Rxfifocurrent == Rxfifoptr)
  8352                           
  8353                           ;incstack = 0
  8354  001E68  505C               	movf	_Rxfifoptr^0,w,c	;volatile
  8355  001E6A  185A               	xorwf	_Rxfifocurrent^0,w,c	;volatile
  8356  001E6C  E106               	bnz	l4363
  8357  001E6E  505D               	movf	(_Rxfifoptr+1)^0,w,c	;volatile
  8358  001E70  185B               	xorwf	(_Rxfifocurrent+1)^0,w,c	;volatile
  8359  001E72  A4D8               	btfss	status,2,c
  8360  001E74  D002               	goto	l4363
  8361                           
  8362                           ;SIM800x_SDM.c: 173: return 0xFF;
  8363  001E76  0EFF               	movlw	255
  8364  001E78  D01A               	goto	l863
  8365  001E7A                     l4363:
  8366  001E7A  FFFF               	dw	65535	; assembler added errata NOP
  8367                           
  8368                           ;SIM800x_SDM.c: 175: uint8_t data = RxFIFO[Rxfifoptr];
  8369  001E7C  0E00               	movlw	low _RxFIFO
  8370  001E7E  245C               	addwf	_Rxfifoptr^0,w,c	;volatile
  8371  001E80  6ED9               	movwf	fsr2l,c
  8372  001E82  0E03               	movlw	high _RxFIFO
  8373  001E84  205D               	addwfc	(_Rxfifoptr+1)^0,w,c	;volatile
  8374  001E86  6EDA               	movwf	fsr2h,c
  8375  001E88  50DF               	movf	indf2,w,c
  8376  001E8A  6E13               	movwf	SIM800xSDMReadByte@data^0,c
  8377                           
  8378                           ;SIM800x_SDM.c: 176: Rxfifoptr = (uint16_t)((Rxfifoptr + 1) % 200);
  8379  001E8C  0E01               	movlw	1
  8380  001E8E  245C               	addwf	_Rxfifoptr^0,w,c	;volatile
  8381  001E90  6E0E               	movwf	___lwmod@dividend^0,c
  8382  001E92  0E00               	movlw	0
  8383  001E94  205D               	addwfc	(_Rxfifoptr+1)^0,w,c	;volatile
  8384  001E96  6E0F               	movwf	(___lwmod@dividend+1)^0,c
  8385  001E98  0E00               	movlw	0
  8386  001E9A  6E11               	movwf	(___lwmod@divisor+1)^0,c
  8387  001E9C  0EC8               	movlw	200
  8388  001E9E  6E10               	movwf	___lwmod@divisor^0,c
  8389  001EA0  ECE3  F00E         	call	___lwmod	;wreg free
  8390  001EA4  C00E  F05C         	movff	?___lwmod,_Rxfifoptr	;volatile
  8391  001EA8  C00F  F05D         	movff	?___lwmod+1,_Rxfifoptr+1	;volatile
  8392                           
  8393                           ;SIM800x_SDM.c: 178: return data;
  8394  001EAC  5013               	movf	SIM800xSDMReadByte@data^0,w,c
  8395  001EAE                     l863:
  8396  001EAE  FFFF               	dw	65535	; assembler added errata NOP
  8397  001EB0  0012               	return		;funcret
  8398  001EB2  FFFF               	dw	65535	; errata NOP
  8399  001EB4                     __end_of_SIM800xSDMReadByte:
  8400                           	callstack 0
  8401                           
  8402 ;; *************** function ___lwmod *****************
  8403 ;; Defined at:
  8404 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  8405 ;; Parameters:    Size  Location     Type
  8406 ;;  dividend        2   13[COMRAM] unsigned int 
  8407 ;;  divisor         2   15[COMRAM] unsigned int 
  8408 ;; Auto vars:     Size  Location     Type
  8409 ;;  counter         1   17[COMRAM] unsigned char 
  8410 ;; Return value:  Size  Location     Type
  8411 ;;                  2   13[COMRAM] unsigned int 
  8412 ;; Registers used:
  8413 ;;		wreg, status,2, status,0
  8414 ;; Tracked objects:
  8415 ;;		On entry : 0/0
  8416 ;;		On exit  : 0/0
  8417 ;;		Unchanged: 0/0
  8418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8419 ;;      Params:         4       0       0       0       0       0       0
  8420 ;;      Locals:         1       0       0       0       0       0       0
  8421 ;;      Temps:          0       0       0       0       0       0       0
  8422 ;;      Totals:         5       0       0       0       0       0       0
  8423 ;;Total ram usage:        5 bytes
  8424 ;; Hardware stack levels used: 1
  8425 ;; Hardware stack levels required when called: 3
  8426 ;; This function calls:
  8427 ;;		Nothing
  8428 ;; This function is called by:
  8429 ;;		_SIM800xSDMRxAvailable
  8430 ;;		_SIM800xSDMReadByte
  8431 ;; This function uses a non-reentrant model
  8432 ;;
  8433                           
  8434                           	psect	text41
  8435  001DC6                     __ptext41:
  8436                           	callstack 0
  8437  001DC6                     ___lwmod:
  8438                           	callstack 0
  8439  001DC6  FFFF               	dw	65535	; assembler added errata NOP
  8440                           
  8441                           ;incstack = 0
  8442  001DC8  5010               	movf	___lwmod@divisor^0,w,c
  8443  001DCA  1011               	iorwf	(___lwmod@divisor+1)^0,w,c
  8444  001DCC  B4D8               	btfsc	status,2,c
  8445  001DCE  D01C               	goto	l1623
  8446  001DD0  0E01               	movlw	1
  8447  001DD2  6E12               	movwf	___lwmod@counter^0,c
  8448  001DD4  D005               	goto	l4339
  8449  001DD6                     l4337:
  8450  001DD6  FFFF               	dw	65535	; assembler added errata NOP
  8451  001DD8  90D8               	bcf	status,0,c
  8452  001DDA  3610               	rlcf	___lwmod@divisor^0,f,c
  8453  001DDC  3611               	rlcf	(___lwmod@divisor+1)^0,f,c
  8454  001DDE  2A12               	incf	___lwmod@counter^0,f,c
  8455  001DE0                     l4339:
  8456  001DE0  FFFF               	dw	65535	; assembler added errata NOP
  8457  001DE2  AE11               	btfss	(___lwmod@divisor+1)^0,7,c
  8458  001DE4  D7F8               	goto	l4337
  8459  001DE6                     u3500:
  8460  001DE6  FFFF               	dw	65535	; assembler added errata NOP
  8461  001DE8  5010               	movf	___lwmod@divisor^0,w,c
  8462  001DEA  5C0E               	subwf	___lwmod@dividend^0,w,c
  8463  001DEC  5011               	movf	(___lwmod@divisor+1)^0,w,c
  8464  001DEE  580F               	subwfb	(___lwmod@dividend+1)^0,w,c
  8465  001DF0  A0D8               	btfss	status,0,c
  8466  001DF2  D004               	goto	l4345
  8467  001DF4  5010               	movf	___lwmod@divisor^0,w,c
  8468  001DF6  5E0E               	subwf	___lwmod@dividend^0,f,c
  8469  001DF8  5011               	movf	(___lwmod@divisor+1)^0,w,c
  8470  001DFA  5A0F               	subwfb	(___lwmod@dividend+1)^0,f,c
  8471  001DFC                     l4345:
  8472  001DFC  FFFF               	dw	65535	; assembler added errata NOP
  8473  001DFE  90D8               	bcf	status,0,c
  8474  001E00  3211               	rrcf	(___lwmod@divisor+1)^0,f,c
  8475  001E02  3210               	rrcf	___lwmod@divisor^0,f,c
  8476  001E04  2E12               	decfsz	___lwmod@counter^0,f,c
  8477  001E06  D7EF               	goto	u3500
  8478  001E08                     l1623:
  8479  001E08  FFFF               	dw	65535	; assembler added errata NOP
  8480  001E0A  C00E  F00E         	movff	___lwmod@dividend,?___lwmod
  8481  001E0E  C00F  F00F         	movff	___lwmod@dividend+1,?___lwmod+1
  8482  001E12  0012               	return		;funcret
  8483  001E14  FFFF               	dw	65535	; errata NOP
  8484  001E16                     __end_of___lwmod:
  8485                           	callstack 0
  8486                           
  8487 ;; *************** function _SIM800xSDMFlush *****************
  8488 ;; Defined at:
  8489 ;;		line 221 in file "Src/SIM800x_SDM.c"
  8490 ;; Parameters:    Size  Location     Type
  8491 ;;		None
  8492 ;; Auto vars:     Size  Location     Type
  8493 ;;		None
  8494 ;; Return value:  Size  Location     Type
  8495 ;;                  1    wreg      void 
  8496 ;; Registers used:
  8497 ;;		wreg, status,2
  8498 ;; Tracked objects:
  8499 ;;		On entry : 0/0
  8500 ;;		On exit  : 0/0
  8501 ;;		Unchanged: 0/0
  8502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8503 ;;      Params:         0       0       0       0       0       0       0
  8504 ;;      Locals:         0       0       0       0       0       0       0
  8505 ;;      Temps:          0       0       0       0       0       0       0
  8506 ;;      Totals:         0       0       0       0       0       0       0
  8507 ;;Total ram usage:        0 bytes
  8508 ;; Hardware stack levels used: 1
  8509 ;; Hardware stack levels required when called: 3
  8510 ;; This function calls:
  8511 ;;		Nothing
  8512 ;; This function is called by:
  8513 ;;		_SIM800xInit
  8514 ;;		_SIM800xIPSetConnectionType
  8515 ;;		_SIM800xIPSetAPN
  8516 ;;		_SIM800xIPOpen
  8517 ;;		_SIM800xIPGetState
  8518 ;;		_SIM800xHTTPInit
  8519 ;;		_SIM800xHTTPSetURL
  8520 ;;		_SIM800xHTTPSetContent
  8521 ;;		_SIM800xHTTPInputData
  8522 ;;		_SIM800xHTTPAction
  8523 ;;		_SIM800xHTTPRead
  8524 ;;		_SIM800xSDMReadF1Pkt
  8525 ;; This function uses a non-reentrant model
  8526 ;;
  8527                           
  8528                           	psect	text42
  8529  00211C                     __ptext42:
  8530                           	callstack 0
  8531  00211C                     _SIM800xSDMFlush:
  8532                           	callstack 0
  8533  00211C  FFFF               	dw	65535	; assembler added errata NOP
  8534                           
  8535                           ;SIM800x_SDM.c: 224: Rxfifoptr = 0;
  8536                           
  8537                           ;incstack = 0
  8538  00211E  0E00               	movlw	0
  8539  002120  6E5D               	movwf	(_Rxfifoptr+1)^0,c	;volatile
  8540  002122  0E00               	movlw	0
  8541  002124  6E5C               	movwf	_Rxfifoptr^0,c	;volatile
  8542                           
  8543                           ;SIM800x_SDM.c: 225: Rxfifocurrent = 0;
  8544  002126  0E00               	movlw	0
  8545  002128  6E5B               	movwf	(_Rxfifocurrent+1)^0,c	;volatile
  8546  00212A  0E00               	movlw	0
  8547  00212C  6E5A               	movwf	_Rxfifocurrent^0,c	;volatile
  8548  00212E  0012               	return		;funcret
  8549  002130  FFFF               	dw	65535	; errata NOP
  8550  002132                     __end_of_SIM800xSDMFlush:
  8551                           	callstack 0
  8552                           
  8553 ;; *************** function _AddEntryToJsonObject *****************
  8554 ;; Defined at:
  8555 ;;		line 54 in file "Src/JSON.c"
  8556 ;; Parameters:    Size  Location     Type
  8557 ;;  JsonObject      2   13[COMRAM] PTR unsigned char 
  8558 ;;		 -> txmessage(100), 
  8559 ;;  key             2   15[COMRAM] PTR const unsigned char 
  8560 ;;		 -> STR_18(15), STR_16(20), STR_14(4), STR_12(23), 
  8561 ;;  value           2   17[COMRAM] PTR const unsigned char 
  8562 ;;		 -> STR_19(3), STR_17(3), STR_15(5), STR_13(3), 
  8563 ;;  Cpos            2   19[COMRAM] PTR unsigned int 
  8564 ;;		 -> cpos(2), 
  8565 ;; Auto vars:     Size  Location     Type
  8566 ;;  offset          1   25[COMRAM] unsigned char 
  8567 ;; Return value:  Size  Location     Type
  8568 ;;                  1    wreg      unsigned char 
  8569 ;; Registers used:
  8570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8571 ;; Tracked objects:
  8572 ;;		On entry : 0/0
  8573 ;;		On exit  : 0/0
  8574 ;;		Unchanged: 0/0
  8575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8576 ;;      Params:         8       0       0       0       0       0       0
  8577 ;;      Locals:         1       0       0       0       0       0       0
  8578 ;;      Temps:          4       0       0       0       0       0       0
  8579 ;;      Totals:        13       0       0       0       0       0       0
  8580 ;;Total ram usage:       13 bytes
  8581 ;; Hardware stack levels used: 1
  8582 ;; Hardware stack levels required when called: 3
  8583 ;; This function calls:
  8584 ;;		Nothing
  8585 ;; This function is called by:
  8586 ;;		_SystemInit
  8587 ;; This function uses a non-reentrant model
  8588 ;;
  8589                           
  8590                           	psect	text43
  8591  000032                     __ptext43:
  8592                           	callstack 0
  8593  000032                     _AddEntryToJsonObject:
  8594                           	callstack 0
  8595  000032  FFFF               	dw	65535	; assembler added errata NOP
  8596                           
  8597                           ;Src/JSON.c: 54: unsigned char AddEntryToJsonObject(char * JsonObject, const char * key,
      +                           const char * value, unsigned int *Cpos);Src/JSON.c: 55: {;Src/JSON.c: 57:  unsigned cha
      +                          r offset = 0;
  8598                           
  8599                           ;incstack = 0
  8600  000034  0E00               	movlw	0
  8601  000036  6E1A               	movwf	AddEntryToJsonObject@offset^0,c
  8602                           
  8603                           ;Src/JSON.c: 59:  if (!*Cpos)
  8604  000038  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8605  00003C  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8606  000040  50DE               	movf	postinc2,w,c
  8607  000042  10DE               	iorwf	postinc2,w,c
  8608  000044  A4D8               	btfss	status,2,c
  8609  000046  D009               	goto	l5069
  8610                           
  8611                           ;Src/JSON.c: 60:     {;Src/JSON.c: 61:   JsonObject[0] = '{';
  8612  000048  C00E  FFD9         	movff	AddEntryToJsonObject@JsonObject,fsr2l
  8613  00004C  C00F  FFDA         	movff	AddEntryToJsonObject@JsonObject+1,fsr2h
  8614  000050  0E7B               	movlw	123
  8615  000052  6EDF               	movwf	indf2,c
  8616                           
  8617                           ;Src/JSON.c: 62:   offset = 1;
  8618  000054  0E01               	movlw	1
  8619  000056  6E1A               	movwf	AddEntryToJsonObject@offset^0,c
  8620                           
  8621                           ;Src/JSON.c: 63:  }else
  8622  000058  D025               	goto	l108
  8623  00005A                     l5069:
  8624  00005A  FFFF               	dw	65535	; assembler added errata NOP
  8625                           
  8626                           ;Src/JSON.c: 64:  {;Src/JSON.c: 65:   JsonObject[*Cpos] = ',';
  8627  00005C  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8628  000060  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8629  000064  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8630  000068  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8631  00006C  5016               	movf	??_AddEntryToJsonObject^0,w,c
  8632  00006E  240E               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8633  000070  6ED9               	movwf	fsr2l,c
  8634  000072  5017               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8635  000074  200F               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8636  000076  6EDA               	movwf	fsr2h,c
  8637  000078  0E2C               	movlw	44
  8638  00007A  6EDF               	movwf	indf2,c
  8639                           
  8640                           ;Src/JSON.c: 66:   *Cpos = *Cpos + 1;
  8641  00007C  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8642  000080  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8643  000084  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8644  000088  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8645  00008C  0E01               	movlw	1
  8646  00008E  2616               	addwf	??_AddEntryToJsonObject^0,f,c
  8647  000090  0E00               	movlw	0
  8648  000092  2217               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8649  000094  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8650  000098  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8651  00009C  C016  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8652  0000A0  C017  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8653  0000A4                     l108:
  8654  0000A4  FFFF               	dw	65535	; assembler added errata NOP
  8655                           
  8656                           ;Src/JSON.c: 69:     JsonObject[*Cpos + offset] = '\"';
  8657  0000A6  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8658  0000AA  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8659  0000AE  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8660  0000B2  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8661  0000B6  501A               	movf	AddEntryToJsonObject@offset^0,w,c
  8662  0000B8  240E               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8663  0000BA  6E18               	movwf	(??_AddEntryToJsonObject+2)^0,c
  8664  0000BC  0E00               	movlw	0
  8665  0000BE  200F               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8666  0000C0  6E19               	movwf	(??_AddEntryToJsonObject+3)^0,c
  8667  0000C2  5016               	movf	??_AddEntryToJsonObject^0,w,c
  8668  0000C4  2418               	addwf	(??_AddEntryToJsonObject+2)^0,w,c
  8669  0000C6  6ED9               	movwf	fsr2l,c
  8670  0000C8  5017               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8671  0000CA  2019               	addwfc	(??_AddEntryToJsonObject+3)^0,w,c
  8672  0000CC  6EDA               	movwf	fsr2h,c
  8673  0000CE  0E22               	movlw	34
  8674  0000D0  6EDF               	movwf	indf2,c
  8675  0000D2  D01F               	goto	l5075
  8676  0000D4                     l5071:
  8677  0000D4  FFFF               	dw	65535	; assembler added errata NOP
  8678                           
  8679                           ;Src/JSON.c: 73:  {;Src/JSON.c: 74:   JsonObject[*Cpos + offset] = *key;
  8680  0000D6  C010  FFF6         	movff	AddEntryToJsonObject@key,tblptrl
  8681  0000DA  C011  FFF7         	movff	AddEntryToJsonObject@key+1,tblptrh
  8682  0000DE                     	if	0	;tblptru may be non-zero
  8683  0000DE                     	endif
  8684  0000DE                     	if	0	;tblptru may be non-zero
  8685  0000DE                     	endif
  8686  0000DE  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8687  0000E2  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8688  0000E6  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8689  0000EA  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8690  0000EE  501A               	movf	AddEntryToJsonObject@offset^0,w,c
  8691  0000F0  240E               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8692  0000F2  6E18               	movwf	(??_AddEntryToJsonObject+2)^0,c
  8693  0000F4  0E00               	movlw	0
  8694  0000F6  200F               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8695  0000F8  6E19               	movwf	(??_AddEntryToJsonObject+3)^0,c
  8696  0000FA  5016               	movf	??_AddEntryToJsonObject^0,w,c
  8697  0000FC  2418               	addwf	(??_AddEntryToJsonObject+2)^0,w,c
  8698  0000FE  6ED9               	movwf	fsr2l,c
  8699  000100  5017               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8700  000102  2019               	addwfc	(??_AddEntryToJsonObject+3)^0,w,c
  8701  000104  6EDA               	movwf	fsr2h,c
  8702  000106  0008               	tblrd		*
  8703  000108  FFFF               	dw	65535	; errata NOP
  8704  00010A  CFF5 FFDF          	movff	tablat,indf2
  8705                           
  8706                           ;Src/JSON.c: 75:   key++;
  8707  00010E  4A10               	infsnz	AddEntryToJsonObject@key^0,f,c
  8708  000110  2A11               	incf	(AddEntryToJsonObject@key+1)^0,f,c
  8709  000112                     l5075:
  8710  000112  FFFF               	dw	65535	; assembler added errata NOP
  8711                           
  8712                           ;Src/JSON.c: 76:   *Cpos = *Cpos + 1;
  8713  000114  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8714  000118  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8715  00011C  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8716  000120  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8717  000124  0E01               	movlw	1
  8718  000126  2616               	addwf	??_AddEntryToJsonObject^0,f,c
  8719  000128  0E00               	movlw	0
  8720  00012A  2217               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8721  00012C  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8722  000130  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8723  000134  C016  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8724  000138  C017  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8725                           
  8726                           ;Src/JSON.c: 72:  while (*key != 0)
  8727  00013C  C010  FFF6         	movff	AddEntryToJsonObject@key,tblptrl
  8728  000140  C011  FFF7         	movff	AddEntryToJsonObject@key+1,tblptrh
  8729  000144                     	if	0	;tblptru may be non-zero
  8730  000144                     	endif
  8731  000144                     	if	0	;tblptru may be non-zero
  8732  000144                     	endif
  8733  000144  0008               	tblrd		*
  8734  000146  FFFF               	dw	65535	; errata NOP
  8735  000148  50F5               	movf	tablat,w,c
  8736  00014A  0900               	iorlw	0
  8737  00014C  A4D8               	btfss	status,2,c
  8738  00014E  D7C2               	goto	l5071
  8739                           
  8740                           ;Src/JSON.c: 79:     JsonObject[*Cpos + offset] = '\"';
  8741  000150  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8742  000154  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8743  000158  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8744  00015C  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8745  000160  501A               	movf	AddEntryToJsonObject@offset^0,w,c
  8746  000162  240E               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8747  000164  6E18               	movwf	(??_AddEntryToJsonObject+2)^0,c
  8748  000166  0E00               	movlw	0
  8749  000168  200F               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8750  00016A  6E19               	movwf	(??_AddEntryToJsonObject+3)^0,c
  8751  00016C  5016               	movf	??_AddEntryToJsonObject^0,w,c
  8752  00016E  2418               	addwf	(??_AddEntryToJsonObject+2)^0,w,c
  8753  000170  6ED9               	movwf	fsr2l,c
  8754  000172  5017               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8755  000174  2019               	addwfc	(??_AddEntryToJsonObject+3)^0,w,c
  8756  000176  6EDA               	movwf	fsr2h,c
  8757  000178  0E22               	movlw	34
  8758  00017A  6EDF               	movwf	indf2,c
  8759                           
  8760                           ;Src/JSON.c: 80:     *Cpos = *Cpos + 1;
  8761  00017C  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8762  000180  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8763  000184  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8764  000188  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8765  00018C  0E01               	movlw	1
  8766  00018E  2616               	addwf	??_AddEntryToJsonObject^0,f,c
  8767  000190  0E00               	movlw	0
  8768  000192  2217               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8769  000194  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8770  000198  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8771  00019C  C016  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8772  0001A0  C017  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8773                           
  8774                           ;Src/JSON.c: 82:  if(offset)
  8775  0001A4  501A               	movf	AddEntryToJsonObject@offset^0,w,c
  8776  0001A6  B4D8               	btfsc	status,2,c
  8777  0001A8  D025               	goto	l5085
  8778                           
  8779                           ;Src/JSON.c: 83:  {;Src/JSON.c: 84:   *Cpos = *Cpos + 1;
  8780  0001AA  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8781  0001AE  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8782  0001B2  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8783  0001B6  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8784  0001BA  0E01               	movlw	1
  8785  0001BC  2616               	addwf	??_AddEntryToJsonObject^0,f,c
  8786  0001BE  0E00               	movlw	0
  8787  0001C0  2217               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8788  0001C2  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8789  0001C6  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8790  0001CA  C016  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8791  0001CE  C017  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8792                           
  8793                           ;Src/JSON.c: 85:   JsonObject[*Cpos] = ':';
  8794  0001D2  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8795  0001D6  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8796  0001DA  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8797  0001DE  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8798  0001E2  5016               	movf	??_AddEntryToJsonObject^0,w,c
  8799  0001E4  240E               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8800  0001E6  6ED9               	movwf	fsr2l,c
  8801  0001E8  5017               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8802  0001EA  200F               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8803  0001EC  6EDA               	movwf	fsr2h,c
  8804  0001EE  0E3A               	movlw	58
  8805  0001F0  6EDF               	movwf	indf2,c
  8806                           
  8807                           ;Src/JSON.c: 86:  }else
  8808  0001F2  D046               	goto	l5093
  8809  0001F4                     l5085:
  8810  0001F4  FFFF               	dw	65535	; assembler added errata NOP
  8811                           
  8812                           ;Src/JSON.c: 87:  {;Src/JSON.c: 88:   JsonObject[*Cpos] = ':';
  8813  0001F6  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8814  0001FA  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8815  0001FE  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8816  000202  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8817  000206  5016               	movf	??_AddEntryToJsonObject^0,w,c
  8818  000208  240E               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8819  00020A  6ED9               	movwf	fsr2l,c
  8820  00020C  5017               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8821  00020E  200F               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8822  000210  6EDA               	movwf	fsr2h,c
  8823  000212  0E3A               	movlw	58
  8824  000214  6EDF               	movwf	indf2,c
  8825  000216  D01F               	goto	l5091
  8826  000218                     l5087:
  8827  000218  FFFF               	dw	65535	; assembler added errata NOP
  8828                           
  8829                           ;Src/JSON.c: 93:  {;Src/JSON.c: 94:   JsonObject[*Cpos + offset] = *value;
  8830  00021A  C012  FFF6         	movff	AddEntryToJsonObject@value,tblptrl
  8831  00021E  C013  FFF7         	movff	AddEntryToJsonObject@value+1,tblptrh
  8832  000222                     	if	0	;tblptru may be non-zero
  8833  000222                     	endif
  8834  000222                     	if	0	;tblptru may be non-zero
  8835  000222                     	endif
  8836  000222  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8837  000226  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8838  00022A  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8839  00022E  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8840  000232  501A               	movf	AddEntryToJsonObject@offset^0,w,c
  8841  000234  240E               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8842  000236  6E18               	movwf	(??_AddEntryToJsonObject+2)^0,c
  8843  000238  0E00               	movlw	0
  8844  00023A  200F               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8845  00023C  6E19               	movwf	(??_AddEntryToJsonObject+3)^0,c
  8846  00023E  5016               	movf	??_AddEntryToJsonObject^0,w,c
  8847  000240  2418               	addwf	(??_AddEntryToJsonObject+2)^0,w,c
  8848  000242  6ED9               	movwf	fsr2l,c
  8849  000244  5017               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8850  000246  2019               	addwfc	(??_AddEntryToJsonObject+3)^0,w,c
  8851  000248  6EDA               	movwf	fsr2h,c
  8852  00024A  0008               	tblrd		*
  8853  00024C  FFFF               	dw	65535	; errata NOP
  8854  00024E  CFF5 FFDF          	movff	tablat,indf2
  8855                           
  8856                           ;Src/JSON.c: 95:   value++;
  8857  000252  4A12               	infsnz	AddEntryToJsonObject@value^0,f,c
  8858  000254  2A13               	incf	(AddEntryToJsonObject@value+1)^0,f,c
  8859  000256                     l5091:
  8860  000256  FFFF               	dw	65535	; assembler added errata NOP
  8861                           
  8862                           ;Src/JSON.c: 96:   *Cpos = *Cpos + 1;
  8863  000258  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8864  00025C  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8865  000260  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8866  000264  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8867  000268  0E01               	movlw	1
  8868  00026A  2616               	addwf	??_AddEntryToJsonObject^0,f,c
  8869  00026C  0E00               	movlw	0
  8870  00026E  2217               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8871  000270  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8872  000274  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8873  000278  C016  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8874  00027C  C017  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8875  000280                     l5093:
  8876  000280  FFFF               	dw	65535	; assembler added errata NOP
  8877                           
  8878                           ;Src/JSON.c: 92:  while (*value != 0)
  8879  000282  C012  FFF6         	movff	AddEntryToJsonObject@value,tblptrl
  8880  000286  C013  FFF7         	movff	AddEntryToJsonObject@value+1,tblptrh
  8881  00028A                     	if	0	;tblptru may be non-zero
  8882  00028A                     	endif
  8883  00028A                     	if	0	;tblptru may be non-zero
  8884  00028A                     	endif
  8885  00028A  0008               	tblrd		*
  8886  00028C  FFFF               	dw	65535	; errata NOP
  8887  00028E  50F5               	movf	tablat,w,c
  8888  000290  0900               	iorlw	0
  8889  000292  A4D8               	btfss	status,2,c
  8890  000294  D7C1               	goto	l5087
  8891                           
  8892                           ;Src/JSON.c: 99:  if(offset != 0)
  8893  000296  501A               	movf	AddEntryToJsonObject@offset^0,w,c
  8894  000298  B4D8               	btfsc	status,2,c
  8895  00029A  D014               	goto	l117
  8896                           
  8897                           ;Src/JSON.c: 100:   *Cpos = *Cpos + 1;
  8898  00029C  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8899  0002A0  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8900  0002A4  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8901  0002A8  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8902  0002AC  0E01               	movlw	1
  8903  0002AE  2616               	addwf	??_AddEntryToJsonObject^0,f,c
  8904  0002B0  0E00               	movlw	0
  8905  0002B2  2217               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8906  0002B4  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8907  0002B8  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8908  0002BC  C016  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8909  0002C0  C017  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8910  0002C4                     l117:
  8911  0002C4  FFFF               	dw	65535	; assembler added errata NOP
  8912                           
  8913                           ;Src/JSON.c: 101:  JsonObject[*Cpos] = '}';
  8914  0002C6  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8915  0002CA  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8916  0002CE  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8917  0002D2  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8918  0002D6  5016               	movf	??_AddEntryToJsonObject^0,w,c
  8919  0002D8  240E               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8920  0002DA  6ED9               	movwf	fsr2l,c
  8921  0002DC  5017               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8922  0002DE  200F               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8923  0002E0  6EDA               	movwf	fsr2h,c
  8924  0002E2  0E7D               	movlw	125
  8925  0002E4  6EDF               	movwf	indf2,c
  8926                           
  8927                           ;Src/JSON.c: 102:  JsonObject[*Cpos + 1] = 0;
  8928  0002E6  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8929  0002EA  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8930  0002EE  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8931  0002F2  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8932  0002F6  C00E  F018         	movff	AddEntryToJsonObject@JsonObject,??_AddEntryToJsonObject+2
  8933  0002FA  C00F  F019         	movff	AddEntryToJsonObject@JsonObject+1,??_AddEntryToJsonObject+3
  8934  0002FE  5016               	movf	??_AddEntryToJsonObject^0,w,c
  8935  000300  2618               	addwf	(??_AddEntryToJsonObject+2)^0,f,c
  8936  000302  5017               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8937  000304  2219               	addwfc	(??_AddEntryToJsonObject+3)^0,f,c
  8938  000306  0E01               	movlw	1
  8939  000308  2418               	addwf	(??_AddEntryToJsonObject+2)^0,w,c
  8940  00030A  6ED9               	movwf	fsr2l,c
  8941  00030C  0E00               	movlw	0
  8942  00030E  2019               	addwfc	(??_AddEntryToJsonObject+3)^0,w,c
  8943  000310  6EDA               	movwf	fsr2h,c
  8944  000312  0E00               	movlw	0
  8945  000314  6EDF               	movwf	indf2,c
  8946  000316  0012               	return		;funcret
  8947  000318  FFFF               	dw	65535	; errata NOP
  8948  00031A                     __end_of_AddEntryToJsonObject:
  8949                           	callstack 0
  8950                           
  8951 ;; *************** function _Isr *****************
  8952 ;; Defined at:
  8953 ;;		line 65 in file "C:/EmbeddedDevOps/M8M_APIs/PIC18.X/Src/ISR.c"
  8954 ;; Parameters:    Size  Location     Type
  8955 ;;		None
  8956 ;; Auto vars:     Size  Location     Type
  8957 ;;		None
  8958 ;; Return value:  Size  Location     Type
  8959 ;;                  1    wreg      void 
  8960 ;; Registers used:
  8961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8962 ;; Tracked objects:
  8963 ;;		On entry : 0/0
  8964 ;;		On exit  : 0/0
  8965 ;;		Unchanged: 0/0
  8966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8967 ;;      Params:         0       0       0       0       0       0       0
  8968 ;;      Locals:         0       0       0       0       0       0       0
  8969 ;;      Temps:          2       0       0       0       0       0       0
  8970 ;;      Totals:         2       0       0       0       0       0       0
  8971 ;;Total ram usage:        2 bytes
  8972 ;; Hardware stack levels used: 1
  8973 ;; Hardware stack levels required when called: 2
  8974 ;; This function calls:
  8975 ;;		_SIM800xSDMCallBack
  8976 ;;		_SoftUARTCallBack
  8977 ;;		_SysTimeCallBack
  8978 ;; This function is called by:
  8979 ;;		Interrupt level 2
  8980 ;; This function uses a non-reentrant model
  8981 ;;
  8982                           
  8983                           	psect	intcode
  8984  000008                     __pintcode:
  8985                           	callstack 0
  8986  000008                     _Isr:
  8987                           	callstack 0
  8988  000008  FFFF               	dw	65535	; assembler added errata NOP
  8989                           
  8990                           ;incstack = 0
  8991  00000A  8268               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8992  00000C  CFD9 F00C          	movff	fsr2l,??_Isr
  8993  000010  CFDA F00D          	movff	fsr2h,??_Isr+1
  8994                           
  8995                           ;ISR.c: 67: SysTimeCallBack();
  8996  000014  ECED  F00F         	call	_SysTimeCallBack	;wreg free
  8997                           
  8998                           ;ISR.c: 69: SoftUARTCallBack();
  8999  000018  ECC1  F00A         	call	_SoftUARTCallBack	;wreg free
  9000                           
  9001                           ;ISR.c: 70: SIM800xSDMCallBack();
  9002  00001C  EC38  F00E         	call	_SIM800xSDMCallBack	;wreg free
  9003  000020  C00D  FFDA         	movff	??_Isr+1,fsr2h
  9004  000024  C00C  FFD9         	movff	??_Isr,fsr2l
  9005  000028  9268               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9006  00002A  0011               	retfie		f
  9007  00002C  FFFF               	dw	65535	; errata NOP
  9008  00002E                     __end_of_Isr:
  9009                           	callstack 0
  9010                           
  9011 ;; *************** function _SysTimeCallBack *****************
  9012 ;; Defined at:
  9013 ;;		line 150 in file "C:/EmbeddedDevOps/Libraries/SystemTime.X/Src/SystemTime.c"
  9014 ;; Parameters:    Size  Location     Type
  9015 ;;		None
  9016 ;; Auto vars:     Size  Location     Type
  9017 ;;		None
  9018 ;; Return value:  Size  Location     Type
  9019 ;;                  1    wreg      void 
  9020 ;; Registers used:
  9021 ;;		wreg, status,2, status,0
  9022 ;; Tracked objects:
  9023 ;;		On entry : 0/0
  9024 ;;		On exit  : 0/0
  9025 ;;		Unchanged: 0/0
  9026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9027 ;;      Params:         0       0       0       0       0       0       0
  9028 ;;      Locals:         0       0       0       0       0       0       0
  9029 ;;      Temps:          0       0       0       0       0       0       0
  9030 ;;      Totals:         0       0       0       0       0       0       0
  9031 ;;Total ram usage:        0 bytes
  9032 ;; Hardware stack levels used: 1
  9033 ;; This function calls:
  9034 ;;		Nothing
  9035 ;; This function is called by:
  9036 ;;		_Isr
  9037 ;; This function uses a non-reentrant model
  9038 ;;
  9039                           
  9040                           	psect	text45
  9041  001FDA                     __ptext45:
  9042                           	callstack 0
  9043  001FDA                     _SysTimeCallBack:
  9044                           	callstack 0
  9045  001FDA  FFFF               	dw	65535	; assembler added errata NOP
  9046                           
  9047                           ;SystemTime.c: 153: if(TMR0IF && TMR0IE)
  9048                           
  9049                           ;incstack = 0
  9050  001FDC  B4F2               	btfsc	4082,2,c	;volatile
  9051  001FDE  AAF2               	btfss	4082,5,c	;volatile
  9052  001FE0  D018               	goto	i2l230
  9053                           
  9054                           ;SystemTime.c: 154: {;SystemTime.c: 155: if(DecVar != 0)
  9055  001FE2  0100               	movlb	0	; () banked
  9056  001FE4  5194               	movf	_DecVar& (0+255),w,b	;volatile
  9057  001FE6  1195               	iorwf	(_DecVar+1)& (0+255),w,b	;volatile
  9058  001FE8  1196               	iorwf	(_DecVar+2)& (0+255),w,b	;volatile
  9059  001FEA  1197               	iorwf	(_DecVar+3)& (0+255),w,b	;volatile
  9060  001FEC  B4D8               	btfsc	status,2,c
  9061  001FEE  D005               	goto	i2l229
  9062                           
  9063                           ; BSR set to: 0
  9064                           ;SystemTime.c: 156: --DecVar;
  9065  001FF0  0794               	decf	_DecVar& (0+255),f,b	;volatile
  9066  001FF2  0E00               	movlw	0
  9067  001FF4  5B95               	subwfb	(_DecVar+1)& (0+255),f,b	;volatile
  9068  001FF6  5B96               	subwfb	(_DecVar+2)& (0+255),f,b	;volatile
  9069  001FF8  5B97               	subwfb	(_DecVar+3)& (0+255),f,b	;volatile
  9070  001FFA                     i2l229:
  9071  001FFA  FFFF               	dw	65535	; assembler added errata NOP
  9072                           
  9073                           ; BSR set to: 0
  9074                           ;SystemTime.c: 158: ++IncVar;
  9075  001FFC  0E01               	movlw	1
  9076  001FFE  2656               	addwf	_IncVar^0,f,c	;volatile
  9077  002000  0E00               	movlw	0
  9078  002002  2257               	addwfc	(_IncVar+1)^0,f,c	;volatile
  9079  002004  2258               	addwfc	(_IncVar+2)^0,f,c	;volatile
  9080  002006  2259               	addwfc	(_IncVar+3)^0,f,c	;volatile
  9081                           
  9082                           ; BSR set to: 0
  9083                           ;SystemTime.c: 160: TMR0IF = 0;
  9084  002008  94F2               	bcf	4082,2,c	;volatile
  9085                           
  9086                           ; BSR set to: 0
  9087                           ;SystemTime.c: 161: TMR0 = val;
  9088  00200A  C05E  FFD6         	movff	_val,4054	;volatile
  9089  00200E  C05F  FFD7         	movff	_val+1,4055	;volatile
  9090  002012                     i2l230:
  9091  002012  FFFF               	dw	65535	; assembler added errata NOP
  9092  002014  0012               	return		;funcret
  9093  002016  FFFF               	dw	65535	; errata NOP
  9094  002018                     __end_of_SysTimeCallBack:
  9095                           	callstack 0
  9096                           
  9097 ;; *************** function _SoftUARTCallBack *****************
  9098 ;; Defined at:
  9099 ;;		line 214 in file "Src/SoftwareUART.c"
  9100 ;; Parameters:    Size  Location     Type
  9101 ;;		None
  9102 ;; Auto vars:     Size  Location     Type
  9103 ;;  k               1   10[COMRAM] unsigned char 
  9104 ;;  next            1    9[COMRAM] unsigned char 
  9105 ;;  rxtmp           1    8[COMRAM] unsigned char 
  9106 ;; Return value:  Size  Location     Type
  9107 ;;                  1    wreg      void 
  9108 ;; Registers used:
  9109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9110 ;; Tracked objects:
  9111 ;;		On entry : 0/0
  9112 ;;		On exit  : 0/0
  9113 ;;		Unchanged: 0/0
  9114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9115 ;;      Params:         0       0       0       0       0       0       0
  9116 ;;      Locals:         3       0       0       0       0       0       0
  9117 ;;      Temps:          2       0       0       0       0       0       0
  9118 ;;      Totals:         5       0       0       0       0       0       0
  9119 ;;Total ram usage:        5 bytes
  9120 ;; Hardware stack levels used: 1
  9121 ;; Hardware stack levels required when called: 1
  9122 ;; This function calls:
  9123 ;;		i2___awmod
  9124 ;; This function is called by:
  9125 ;;		_Isr
  9126 ;; This function uses a non-reentrant model
  9127 ;;
  9128                           
  9129                           	psect	text46
  9130  001582                     __ptext46:
  9131                           	callstack 0
  9132  001582                     _SoftUARTCallBack:
  9133                           	callstack 0
  9134  001582  FFFF               	dw	65535	; assembler added errata NOP
  9135                           
  9136                           ;SoftwareUART.c: 218: if(INT0IF && INT0IE)
  9137                           
  9138                           ;incstack = 0
  9139  001584  B2F2               	btfsc	4082,1,c	;volatile
  9140  001586  A8F2               	btfss	4082,4,c	;volatile
  9141  001588  D049               	goto	i2l1052
  9142                           
  9143                           ;SoftwareUART.c: 224: {;SoftwareUART.c: 225: uint8_t rxtmp = 0;
  9144  00158A  0E00               	movlw	0
  9145  00158C  6E09               	movwf	SoftUARTCallBack@rxtmp^0,c
  9146                           
  9147                           ;SoftwareUART.c: 227: if((uint8_t)((IO.Bytes[0x01 + 0] >> 0) & 0x01) == 0)
  9148  00158E  B081               	btfsc	129,0,c	;volatile
  9149  001590  D045               	goto	i2l1052
  9150                           
  9151                           ;SoftwareUART.c: 228: {;SoftwareUART.c: 230: _delay((unsigned long)((((1000000/9600)/2))
      +                          *((16 * 1000000)/4000000.0)));
  9152  001592  0E34               	movlw	52
  9153  001594                     i2u504_47:
  9154  001594  FFFF               	dw	65535	; errata NOP
  9155  001596  2EE8               	decfsz	wreg,f,c
  9156  001598  D7FD               	bra	i2u504_47
  9157                           
  9158                           ;SoftwareUART.c: 232: for(uint8_t k = 0;k < 8;++k)
  9159  00159A  0E00               	movlw	0
  9160  00159C  6E0B               	movwf	SoftUARTCallBack@k^0,c
  9161  00159E                     i2l4293:
  9162  00159E  FFFF               	dw	65535	; assembler added errata NOP
  9163                           
  9164                           ;SoftwareUART.c: 233: {;SoftwareUART.c: 235: _delay((unsigned long)((((1000000/9600) - 3
      +                          ))*((16 * 1000000)/4000000.0)));
  9165  0015A0  0E65               	movlw	101
  9166  0015A2                     i2u505_47:
  9167  0015A2  FFFF               	dw	65535	; errata NOP
  9168  0015A4  2EE8               	decfsz	wreg,f,c
  9169  0015A6  D7FD               	bra	i2u505_47
  9170                           
  9171                           ;SoftwareUART.c: 236: if((uint8_t)((IO.Bytes[0x01 + 0] >> 0) & 0x01))
  9172  0015A8  A081               	btfss	129,0,c	;volatile
  9173  0015AA  D00E               	goto	i2l4299
  9174                           
  9175                           ;SoftwareUART.c: 237: {;SoftwareUART.c: 238: rxtmp |= (uint8_t)(1 << k);
  9176  0015AC  C00B  F007         	movff	SoftUARTCallBack@k,??_SoftUARTCallBack
  9177  0015B0  0E01               	movlw	1
  9178  0015B2  6E08               	movwf	(??_SoftUARTCallBack+1)^0,c
  9179  0015B4  2A07               	incf	??_SoftUARTCallBack^0,f,c
  9180  0015B6  D003               	goto	i2u344_44
  9181  0015B8                     i2u344_45:
  9182  0015B8  FFFF               	dw	65535	; assembler added errata NOP
  9183  0015BA  90D8               	bcf	status,0,c
  9184  0015BC  3608               	rlcf	(??_SoftUARTCallBack+1)^0,f,c
  9185  0015BE                     i2u344_44:
  9186  0015BE  FFFF               	dw	65535	; assembler added errata NOP
  9187  0015C0  2E07               	decfsz	??_SoftUARTCallBack^0,f,c
  9188  0015C2  D7FA               	goto	i2u344_45
  9189  0015C4  5008               	movf	(??_SoftUARTCallBack+1)^0,w,c
  9190  0015C6  1209               	iorwf	SoftUARTCallBack@rxtmp^0,f,c
  9191  0015C8                     i2l4299:
  9192  0015C8  FFFF               	dw	65535	; assembler added errata NOP
  9193  0015CA  2A0B               	incf	SoftUARTCallBack@k^0,f,c
  9194  0015CC  0E07               	movlw	7
  9195  0015CE  640B               	cpfsgt	SoftUARTCallBack@k^0,c
  9196  0015D0  D7E6               	goto	i2l4293
  9197                           
  9198                           ;SoftwareUART.c: 240: };SoftwareUART.c: 243: };SoftwareUART.c: 245: uint8_t next = (uint
      +                          8_t)((Rxfifocurrent + 1) % 100);
  9199  0015D2  0E01               	movlw	1
  9200  0015D4  2460               	addwf	_Rxfifocurrent@SoftwareUART$F1247^0,w,c	;volatile
  9201  0015D6  6E01               	movwf	i2___awmod@dividend^0,c
  9202  0015D8  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  9203  0015DA  0E00               	movlw	0
  9204  0015DC  2202               	addwfc	(i2___awmod@dividend+1)^0,f,c
  9205  0015DE  0E00               	movlw	0
  9206  0015E0  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  9207  0015E2  0E64               	movlw	100
  9208  0015E4  6E03               	movwf	i2___awmod@divisor^0,c
  9209  0015E6  ECE1  F00B         	call	i2___awmod	;wreg free
  9210  0015EA  5001               	movf	?i2___awmod^0,w,c
  9211  0015EC  6E0A               	movwf	SoftUARTCallBack@next^0,c
  9212                           
  9213                           ;SoftwareUART.c: 246: if (next != Rxfifoptr)
  9214  0015EE  5061               	movf	_Rxfifoptr@SoftwareUART$F1246^0,w,c	;volatile
  9215  0015F0  180A               	xorwf	SoftUARTCallBack@next^0,w,c
  9216  0015F2  B4D8               	btfsc	status,2,c
  9217  0015F4  D00B               	goto	i2l1057
  9218                           
  9219                           ;SoftwareUART.c: 247: {;SoftwareUART.c: 248: RxFIFO[Rxfifocurrent] = rxtmp;
  9220  0015F6  0E00               	movlw	low _RxFIFO@SoftwareUART$F1245
  9221  0015F8  2460               	addwf	_Rxfifocurrent@SoftwareUART$F1247^0,w,c	;volatile
  9222  0015FA  6ED9               	movwf	fsr2l,c
  9223  0015FC  6ADA               	clrf	fsr2h,c
  9224  0015FE  0E02               	movlw	high _RxFIFO@SoftwareUART$F1245
  9225  001600  22DA               	addwfc	fsr2h,f,c
  9226  001602  C009  FFDF         	movff	SoftUARTCallBack@rxtmp,indf2
  9227                           
  9228                           ;SoftwareUART.c: 249: Rxfifocurrent = next;
  9229  001606  C00A  F060         	movff	SoftUARTCallBack@next,_Rxfifocurrent@SoftwareUART$F1247	;volatile
  9230                           
  9231                           ;SoftwareUART.c: 251: }
  9232  00160A  D003               	goto	i2l4311
  9233  00160C                     i2l1057:
  9234  00160C  FFFF               	dw	65535	; assembler added errata NOP
  9235                           
  9236                           ;SoftwareUART.c: 252: else;SoftwareUART.c: 253: {;SoftwareUART.c: 254: Rxstatus.Buf = 1;
  9237  00160E  0100               	movlb	0	; () banked
  9238  001610  8198               	bsf	_Rxstatus& (0+255),0,b	;volatile
  9239  001612                     i2l4311:
  9240  001612  FFFF               	dw	65535	; assembler added errata NOP
  9241                           
  9242                           ;SoftwareUART.c: 255: };SoftwareUART.c: 257: _delay((unsigned long)((((1000000/9600)))*(
      +                          (16 * 1000000)/4000000.0)));
  9243  001614  0E68               	movlw	104
  9244  001616                     i2u506_47:
  9245  001616  FFFF               	dw	65535	; errata NOP
  9246  001618  2EE8               	decfsz	wreg,f,c
  9247  00161A  D7FD               	bra	i2u506_47
  9248  00161C                     i2l1052:
  9249  00161C  FFFF               	dw	65535	; assembler added errata NOP
  9250                           
  9251                           ;SoftwareUART.c: 263: };SoftwareUART.c: 264: };SoftwareUART.c: 266: INT0IF = 0;
  9252  00161E  92F2               	bcf	4082,1,c	;volatile
  9253  001620  0012               	return		;funcret
  9254  001622  FFFF               	dw	65535	; errata NOP
  9255  001624                     __end_of_SoftUARTCallBack:
  9256                           	callstack 0
  9257                           
  9258 ;; *************** function i2___awmod *****************
  9259 ;; Defined at:
  9260 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  9261 ;; Parameters:    Size  Location     Type
  9262 ;;  dividend        2    0[COMRAM] int 
  9263 ;;  divisor         2    2[COMRAM] int 
  9264 ;; Auto vars:     Size  Location     Type
  9265 ;;  sign            1    5[COMRAM] unsigned char 
  9266 ;;  counter         1    4[COMRAM] unsigned char 
  9267 ;; Return value:  Size  Location     Type
  9268 ;;                  2    0[COMRAM] int 
  9269 ;; Registers used:
  9270 ;;		wreg, status,2, status,0
  9271 ;; Tracked objects:
  9272 ;;		On entry : 0/0
  9273 ;;		On exit  : 0/0
  9274 ;;		Unchanged: 0/0
  9275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9276 ;;      Params:         4       0       0       0       0       0       0
  9277 ;;      Locals:         2       0       0       0       0       0       0
  9278 ;;      Temps:          0       0       0       0       0       0       0
  9279 ;;      Totals:         6       0       0       0       0       0       0
  9280 ;;Total ram usage:        6 bytes
  9281 ;; Hardware stack levels used: 1
  9282 ;; This function calls:
  9283 ;;		Nothing
  9284 ;; This function is called by:
  9285 ;;		_SoftUARTCallBack
  9286 ;; This function uses a non-reentrant model
  9287 ;;
  9288                           
  9289                           	psect	text47
  9290  0017C2                     __ptext47:
  9291                           	callstack 0
  9292  0017C2                     i2___awmod:
  9293                           	callstack 0
  9294  0017C2  FFFF               	dw	65535	; assembler added errata NOP
  9295                           
  9296                           ;incstack = 0
  9297  0017C4  0E00               	movlw	0
  9298  0017C6  6E06               	movwf	i2___awmod@sign^0,c
  9299  0017C8  AE02               	btfss	(i2___awmod@dividend+1)^0,7,c
  9300  0017CA  D006               	goto	i2l4149
  9301  0017CC  6C01               	negf	i2___awmod@dividend^0,c
  9302  0017CE  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  9303  0017D0  B0D8               	btfsc	status,0,c
  9304  0017D2  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  9305  0017D4  0E01               	movlw	1
  9306  0017D6  6E06               	movwf	i2___awmod@sign^0,c
  9307  0017D8                     i2l4149:
  9308  0017D8  FFFF               	dw	65535	; assembler added errata NOP
  9309  0017DA  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  9310  0017DC  D004               	goto	i2l4153
  9311  0017DE  6C03               	negf	i2___awmod@divisor^0,c
  9312  0017E0  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  9313  0017E2  B0D8               	btfsc	status,0,c
  9314  0017E4  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  9315  0017E6                     i2l4153:
  9316  0017E6  FFFF               	dw	65535	; assembler added errata NOP
  9317  0017E8  5003               	movf	i2___awmod@divisor^0,w,c
  9318  0017EA  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  9319  0017EC  B4D8               	btfsc	status,2,c
  9320  0017EE  D01C               	goto	i2l4169
  9321  0017F0  0E01               	movlw	1
  9322  0017F2  6E05               	movwf	i2___awmod@counter^0,c
  9323  0017F4  D005               	goto	i2l4159
  9324  0017F6                     i2l4157:
  9325  0017F6  FFFF               	dw	65535	; assembler added errata NOP
  9326  0017F8  90D8               	bcf	status,0,c
  9327  0017FA  3603               	rlcf	i2___awmod@divisor^0,f,c
  9328  0017FC  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  9329  0017FE  2A05               	incf	i2___awmod@counter^0,f,c
  9330  001800                     i2l4159:
  9331  001800  FFFF               	dw	65535	; assembler added errata NOP
  9332  001802  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  9333  001804  D7F8               	goto	i2l4157
  9334  001806                     i2u320_40:
  9335  001806  FFFF               	dw	65535	; assembler added errata NOP
  9336  001808  5003               	movf	i2___awmod@divisor^0,w,c
  9337  00180A  5C01               	subwf	i2___awmod@dividend^0,w,c
  9338  00180C  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  9339  00180E  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  9340  001810  A0D8               	btfss	status,0,c
  9341  001812  D004               	goto	i2l4165
  9342  001814  5003               	movf	i2___awmod@divisor^0,w,c
  9343  001816  5E01               	subwf	i2___awmod@dividend^0,f,c
  9344  001818  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  9345  00181A  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  9346  00181C                     i2l4165:
  9347  00181C  FFFF               	dw	65535	; assembler added errata NOP
  9348  00181E  90D8               	bcf	status,0,c
  9349  001820  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  9350  001822  3203               	rrcf	i2___awmod@divisor^0,f,c
  9351  001824  2E05               	decfsz	i2___awmod@counter^0,f,c
  9352  001826  D7EF               	goto	i2u320_40
  9353  001828                     i2l4169:
  9354  001828  FFFF               	dw	65535	; assembler added errata NOP
  9355  00182A  5006               	movf	i2___awmod@sign^0,w,c
  9356  00182C  B4D8               	btfsc	status,2,c
  9357  00182E  D004               	goto	i2l4173
  9358  001830  6C01               	negf	i2___awmod@dividend^0,c
  9359  001832  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  9360  001834  B0D8               	btfsc	status,0,c
  9361  001836  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  9362  001838                     i2l4173:
  9363  001838  FFFF               	dw	65535	; assembler added errata NOP
  9364  00183A  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  9365  00183E  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  9366  001842  0012               	return		;funcret
  9367  001844  FFFF               	dw	65535	; errata NOP
  9368  001846                     __end_ofi2___awmod:
  9369                           	callstack 0
  9370                           
  9371 ;; *************** function _SIM800xSDMCallBack *****************
  9372 ;; Defined at:
  9373 ;;		line 377 in file "Src/SIM800x_SDM.c"
  9374 ;; Parameters:    Size  Location     Type
  9375 ;;		None
  9376 ;; Auto vars:     Size  Location     Type
  9377 ;;  tmp             1    5[COMRAM] unsigned char 
  9378 ;;  next            2    6[COMRAM] unsigned int 
  9379 ;; Return value:  Size  Location     Type
  9380 ;;                  1    wreg      void 
  9381 ;; Registers used:
  9382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9383 ;; Tracked objects:
  9384 ;;		On entry : 0/0
  9385 ;;		On exit  : 0/0
  9386 ;;		Unchanged: 0/0
  9387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9388 ;;      Params:         0       0       0       0       0       0       0
  9389 ;;      Locals:         3       0       0       0       0       0       0
  9390 ;;      Temps:          0       0       0       0       0       0       0
  9391 ;;      Totals:         3       0       0       0       0       0       0
  9392 ;;Total ram usage:        3 bytes
  9393 ;; Hardware stack levels used: 1
  9394 ;; Hardware stack levels required when called: 1
  9395 ;; This function calls:
  9396 ;;		_USARTReceiveByte
  9397 ;;		i2___lwmod
  9398 ;; This function is called by:
  9399 ;;		_Isr
  9400 ;; This function uses a non-reentrant model
  9401 ;;
  9402                           
  9403                           	psect	text48
  9404  001C70                     __ptext48:
  9405                           	callstack 0
  9406  001C70                     _SIM800xSDMCallBack:
  9407                           	callstack 0
  9408  001C70  FFFF               	dw	65535	; assembler added errata NOP
  9409                           
  9410                           ;SIM800x_SDM.c: 380: if(RCIF)
  9411                           
  9412                           ;incstack = 0
  9413  001C72  AA9E               	btfss	3998,5,c	;volatile
  9414  001C74  D026               	goto	i2l915
  9415                           
  9416                           ;SIM800x_SDM.c: 381: {;SIM800x_SDM.c: 383: uint16_t next = (Rxfifocurrent + 1) % 200;
  9417  001C76  0E01               	movlw	1
  9418  001C78  245A               	addwf	_Rxfifocurrent^0,w,c	;volatile
  9419  001C7A  6E01               	movwf	i2___lwmod@dividend^0,c
  9420  001C7C  0E00               	movlw	0
  9421  001C7E  205B               	addwfc	(_Rxfifocurrent+1)^0,w,c	;volatile
  9422  001C80  6E02               	movwf	(i2___lwmod@dividend+1)^0,c
  9423  001C82  0E00               	movlw	0
  9424  001C84  6E04               	movwf	(i2___lwmod@divisor+1)^0,c
  9425  001C86  0EC8               	movlw	200
  9426  001C88  6E03               	movwf	i2___lwmod@divisor^0,c
  9427  001C8A  EC0B  F00F         	call	i2___lwmod	;wreg free
  9428  001C8E  C001  F007         	movff	?i2___lwmod,SIM800xSDMCallBack@next
  9429  001C92  C002  F008         	movff	?i2___lwmod+1,SIM800xSDMCallBack@next+1
  9430                           
  9431                           ;SIM800x_SDM.c: 384: if (next != Rxfifoptr)
  9432  001C96  505C               	movf	_Rxfifoptr^0,w,c	;volatile
  9433  001C98  1807               	xorwf	SIM800xSDMCallBack@next^0,w,c
  9434  001C9A  E104               	bnz	i2u348_40
  9435  001C9C  505D               	movf	(_Rxfifoptr+1)^0,w,c	;volatile
  9436  001C9E  1808               	xorwf	(SIM800xSDMCallBack@next+1)^0,w,c
  9437  001CA0  B4D8               	btfsc	status,2,c
  9438  001CA2  D00F               	goto	i2l915
  9439  001CA4                     i2u348_40:
  9440                           
  9441                           ;SIM800x_SDM.c: 385: {;SIM800x_SDM.c: 386: uint8_t tmp = USARTReceiveByte();
  9442  001CA4  EC77  F010         	call	_USARTReceiveByte	;wreg free
  9443  001CA8  6E06               	movwf	SIM800xSDMCallBack@tmp^0,c
  9444                           
  9445                           ;SIM800x_SDM.c: 387: RxFIFO[Rxfifocurrent] = tmp;
  9446  001CAA  0E00               	movlw	low _RxFIFO
  9447  001CAC  245A               	addwf	_Rxfifocurrent^0,w,c	;volatile
  9448  001CAE  6ED9               	movwf	fsr2l,c
  9449  001CB0  0E03               	movlw	high _RxFIFO
  9450  001CB2  205B               	addwfc	(_Rxfifocurrent+1)^0,w,c	;volatile
  9451  001CB4  6EDA               	movwf	fsr2h,c
  9452  001CB6  C006  FFDF         	movff	SIM800xSDMCallBack@tmp,indf2
  9453                           
  9454                           ;SIM800x_SDM.c: 388: Rxfifocurrent = next;
  9455  001CBA  C007  F05A         	movff	SIM800xSDMCallBack@next,_Rxfifocurrent	;volatile
  9456  001CBE  C008  F05B         	movff	SIM800xSDMCallBack@next+1,_Rxfifocurrent+1	;volatile
  9457  001CC2                     i2l915:
  9458  001CC2  FFFF               	dw	65535	; assembler added errata NOP
  9459  001CC4  0012               	return		;funcret
  9460  001CC6  FFFF               	dw	65535	; errata NOP
  9461  001CC8                     __end_of_SIM800xSDMCallBack:
  9462                           	callstack 0
  9463                           
  9464 ;; *************** function i2___lwmod *****************
  9465 ;; Defined at:
  9466 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  9467 ;; Parameters:    Size  Location     Type
  9468 ;;  dividend        2    0[COMRAM] unsigned int 
  9469 ;;  divisor         2    2[COMRAM] unsigned int 
  9470 ;; Auto vars:     Size  Location     Type
  9471 ;;  counter         1    4[COMRAM] unsigned char 
  9472 ;; Return value:  Size  Location     Type
  9473 ;;                  2    0[COMRAM] unsigned int 
  9474 ;; Registers used:
  9475 ;;		wreg, status,2, status,0
  9476 ;; Tracked objects:
  9477 ;;		On entry : 0/0
  9478 ;;		On exit  : 0/0
  9479 ;;		Unchanged: 0/0
  9480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9481 ;;      Params:         4       0       0       0       0       0       0
  9482 ;;      Locals:         1       0       0       0       0       0       0
  9483 ;;      Temps:          0       0       0       0       0       0       0
  9484 ;;      Totals:         5       0       0       0       0       0       0
  9485 ;;Total ram usage:        5 bytes
  9486 ;; Hardware stack levels used: 1
  9487 ;; This function calls:
  9488 ;;		Nothing
  9489 ;; This function is called by:
  9490 ;;		_SIM800xSDMCallBack
  9491 ;; This function uses a non-reentrant model
  9492 ;;
  9493                           
  9494                           	psect	text49
  9495  001E16                     __ptext49:
  9496                           	callstack 0
  9497  001E16                     i2___lwmod:
  9498                           	callstack 0
  9499  001E16  FFFF               	dw	65535	; assembler added errata NOP
  9500                           
  9501                           ;incstack = 0
  9502  001E18  5003               	movf	i2___lwmod@divisor^0,w,c
  9503  001E1A  1004               	iorwf	(i2___lwmod@divisor+1)^0,w,c
  9504  001E1C  B4D8               	btfsc	status,2,c
  9505  001E1E  D01C               	goto	i2l1623
  9506  001E20  0E01               	movlw	1
  9507  001E22  6E05               	movwf	i2___lwmod@counter^0,c
  9508  001E24  D005               	goto	i2l4183
  9509  001E26                     i2l4181:
  9510  001E26  FFFF               	dw	65535	; assembler added errata NOP
  9511  001E28  90D8               	bcf	status,0,c
  9512  001E2A  3603               	rlcf	i2___lwmod@divisor^0,f,c
  9513  001E2C  3604               	rlcf	(i2___lwmod@divisor+1)^0,f,c
  9514  001E2E  2A05               	incf	i2___lwmod@counter^0,f,c
  9515  001E30                     i2l4183:
  9516  001E30  FFFF               	dw	65535	; assembler added errata NOP
  9517  001E32  AE04               	btfss	(i2___lwmod@divisor+1)^0,7,c
  9518  001E34  D7F8               	goto	i2l4181
  9519  001E36                     i2u324_40:
  9520  001E36  FFFF               	dw	65535	; assembler added errata NOP
  9521  001E38  5003               	movf	i2___lwmod@divisor^0,w,c
  9522  001E3A  5C01               	subwf	i2___lwmod@dividend^0,w,c
  9523  001E3C  5004               	movf	(i2___lwmod@divisor+1)^0,w,c
  9524  001E3E  5802               	subwfb	(i2___lwmod@dividend+1)^0,w,c
  9525  001E40  A0D8               	btfss	status,0,c
  9526  001E42  D004               	goto	i2l4189
  9527  001E44  5003               	movf	i2___lwmod@divisor^0,w,c
  9528  001E46  5E01               	subwf	i2___lwmod@dividend^0,f,c
  9529  001E48  5004               	movf	(i2___lwmod@divisor+1)^0,w,c
  9530  001E4A  5A02               	subwfb	(i2___lwmod@dividend+1)^0,f,c
  9531  001E4C                     i2l4189:
  9532  001E4C  FFFF               	dw	65535	; assembler added errata NOP
  9533  001E4E  90D8               	bcf	status,0,c
  9534  001E50  3204               	rrcf	(i2___lwmod@divisor+1)^0,f,c
  9535  001E52  3203               	rrcf	i2___lwmod@divisor^0,f,c
  9536  001E54  2E05               	decfsz	i2___lwmod@counter^0,f,c
  9537  001E56  D7EF               	goto	i2u324_40
  9538  001E58                     i2l1623:
  9539  001E58  FFFF               	dw	65535	; assembler added errata NOP
  9540  001E5A  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
  9541  001E5E  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  9542  001E62  0012               	return		;funcret
  9543  001E64  FFFF               	dw	65535	; errata NOP
  9544  001E66                     __end_ofi2___lwmod:
  9545                           	callstack 0
  9546                           
  9547 ;; *************** function _USARTReceiveByte *****************
  9548 ;; Defined at:
  9549 ;;		line 123 in file "C:/EmbeddedDevOps/M8M_APIs/PIC18.X/Src/USART.c"
  9550 ;; Parameters:    Size  Location     Type
  9551 ;;		None
  9552 ;; Auto vars:     Size  Location     Type
  9553 ;;  data            1    0[COMRAM] unsigned char 
  9554 ;; Return value:  Size  Location     Type
  9555 ;;                  1    wreg      unsigned char 
  9556 ;; Registers used:
  9557 ;;		wreg, status,2
  9558 ;; Tracked objects:
  9559 ;;		On entry : 0/0
  9560 ;;		On exit  : 0/0
  9561 ;;		Unchanged: 0/0
  9562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9563 ;;      Params:         0       0       0       0       0       0       0
  9564 ;;      Locals:         1       0       0       0       0       0       0
  9565 ;;      Temps:          0       0       0       0       0       0       0
  9566 ;;      Totals:         1       0       0       0       0       0       0
  9567 ;;Total ram usage:        1 bytes
  9568 ;; Hardware stack levels used: 1
  9569 ;; This function calls:
  9570 ;;		Nothing
  9571 ;; This function is called by:
  9572 ;;		_SIM800xSDMCallBack
  9573 ;; This function uses a non-reentrant model
  9574 ;;
  9575                           
  9576                           	psect	text50
  9577  0020EE                     __ptext50:
  9578                           	callstack 0
  9579  0020EE                     _USARTReceiveByte:
  9580                           	callstack 0
  9581  0020EE  FFFF               	dw	65535	; assembler added errata NOP
  9582                           
  9583                           ;USART.c: 126: uint8_t data = RCREG;
  9584                           
  9585                           ;incstack = 0
  9586  0020F0  CFAE F001          	movff	4014,USARTReceiveByte@data	;volatile
  9587                           
  9588                           ;USART.c: 128: if(RCSTA,OERR)
  9589  0020F4  50AB               	movf	171,w,c	;volatile
  9590  0020F6  A2AB               	btfss	4011,1,c	;volatile
  9591  0020F8  D002               	goto	i2l4137
  9592                           
  9593                           ;USART.c: 129: RCSTA,CREN = 0;
  9594  0020FA  50AB               	movf	171,w,c	;volatile
  9595  0020FC  98AB               	bcf	4011,4,c	;volatile
  9596  0020FE                     i2l4137:
  9597  0020FE  FFFF               	dw	65535	; assembler added errata NOP
  9598                           
  9599                           ;USART.c: 131: return data;
  9600  002100  5001               	movf	USARTReceiveByte@data^0,w,c
  9601  002102  0012               	return		;funcret
  9602  002104  FFFF               	dw	65535	; errata NOP
  9603  002106                     __end_of_USARTReceiveByte:
  9604                           	callstack 0
  9605                           
  9606                           	psect	rparam
  9607  0000                     
  9608                           	psect	temp
  9609  000068                     btemp:
  9610                           	callstack 0
  9611  000068                     	ds	1
  9612  0000                     int$flags	set	btemp
  9613  0000                     wtemp8	set	btemp+1
  9614  0000                     ttemp5	set	btemp+1
  9615  0000                     ttemp6	set	btemp+4
  9616  0000                     ttemp7	set	btemp+8
  9617                           
  9618                           	psect	idloc
  9619                           
  9620                           ;Config register IDLOC0 @ 0x200000
  9621                           ;	unspecified, using default values
  9622  200000                     	org	2097152
  9623  200000  FF                 	db	255
  9624                           
  9625                           ;Config register IDLOC1 @ 0x200001
  9626                           ;	unspecified, using default values
  9627  200001                     	org	2097153
  9628  200001  FF                 	db	255
  9629                           
  9630                           ;Config register IDLOC2 @ 0x200002
  9631                           ;	unspecified, using default values
  9632  200002                     	org	2097154
  9633  200002  FF                 	db	255
  9634                           
  9635                           ;Config register IDLOC3 @ 0x200003
  9636                           ;	unspecified, using default values
  9637  200003                     	org	2097155
  9638  200003  FF                 	db	255
  9639                           
  9640                           ;Config register IDLOC4 @ 0x200004
  9641                           ;	unspecified, using default values
  9642  200004                     	org	2097156
  9643  200004  FF                 	db	255
  9644                           
  9645                           ;Config register IDLOC5 @ 0x200005
  9646                           ;	unspecified, using default values
  9647  200005                     	org	2097157
  9648  200005  FF                 	db	255
  9649                           
  9650                           ;Config register IDLOC6 @ 0x200006
  9651                           ;	unspecified, using default values
  9652  200006                     	org	2097158
  9653  200006  FF                 	db	255
  9654                           
  9655                           ;Config register IDLOC7 @ 0x200007
  9656                           ;	unspecified, using default values
  9657  200007                     	org	2097159
  9658  200007  FF                 	db	255
  9659                           
  9660                           	psect	config
  9661                           
  9662                           ; Padding undefined space
  9663  300000                     	org	3145728
  9664  300000  FF                 	db	255
  9665                           
  9666                           ;Config register CONFIG1H @ 0x300001
  9667                           ;	Oscillator Selection bits
  9668                           ;	OSC = HS, HS oscillator
  9669                           ;	Oscillator System Clock Switch Enable bit
  9670                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  9671  300001                     	org	3145729
  9672  300001  22                 	db	34
  9673                           
  9674                           ;Config register CONFIG2L @ 0x300002
  9675                           ;	Power-up Timer Enable bit
  9676                           ;	PWRT = OFF, PWRT disabled
  9677                           ;	Brown-out Reset Enable bit
  9678                           ;	BOR = ON, Brown-out Reset enabled
  9679                           ;	Brown-out Reset Voltage bits
  9680                           ;	BORV = 20, VBOR set to 2.0V
  9681  300002                     	org	3145730
  9682  300002  0F                 	db	15
  9683                           
  9684                           ;Config register CONFIG2H @ 0x300003
  9685                           ;	Watchdog Timer Enable bit
  9686                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9687                           ;	Watchdog Timer Postscale Select bits
  9688                           ;	WDTPS = 128, 1:128
  9689  300003                     	org	3145731
  9690  300003  0E                 	db	14
  9691                           
  9692                           ; Padding undefined space
  9693  300004                     	org	3145732
  9694  300004  FF                 	db	255
  9695                           
  9696                           ;Config register CONFIG3H @ 0x300005
  9697                           ;	CCP2 Mux bit
  9698                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
  9699  300005                     	org	3145733
  9700  300005  01                 	db	1
  9701                           
  9702                           ;Config register CONFIG4L @ 0x300006
  9703                           ;	Stack Full/Underflow Reset Enable bit
  9704                           ;	STVR = OFF, Stack Full/Underflow will not cause RESET
  9705                           ;	Low Voltage ICSP Enable bit
  9706                           ;	LVP = OFF, Low Voltage ICSP disabled
  9707                           ;	Background Debugger Enable bit
  9708                           ;	DEBUG = 0x1, unprogrammed default
  9709  300006                     	org	3145734
  9710  300006  80                 	db	128
  9711                           
  9712                           ; Padding undefined space
  9713  300007                     	org	3145735
  9714  300007  FF                 	db	255
  9715                           
  9716                           ;Config register CONFIG5L @ 0x300008
  9717                           ;	Code Protection bit
  9718                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  9719                           ;	Code Protection bit
  9720                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  9721                           ;	Code Protection bit
  9722                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  9723                           ;	Code Protection bit
  9724                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  9725  300008                     	org	3145736
  9726  300008  0F                 	db	15
  9727                           
  9728                           ;Config register CONFIG5H @ 0x300009
  9729                           ;	Boot Block Code Protection bit
  9730                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  9731                           ;	Data EEPROM Code Protection bit
  9732                           ;	CPD = OFF, Data EEPROM not code protected
  9733  300009                     	org	3145737
  9734  300009  C0                 	db	192
  9735                           
  9736                           ;Config register CONFIG6L @ 0x30000A
  9737                           ;	Write Protection bit
  9738                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  9739                           ;	Write Protection bit
  9740                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  9741                           ;	Write Protection bit
  9742                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  9743                           ;	Write Protection bit
  9744                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  9745  30000A                     	org	3145738
  9746  30000A  0F                 	db	15
  9747                           
  9748                           ;Config register CONFIG6H @ 0x30000B
  9749                           ;	Configuration Register Write Protection bit
  9750                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  9751                           ;	Boot Block Write Protection bit
  9752                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  9753                           ;	Data EEPROM Write Protection bit
  9754                           ;	WRTD = OFF, Data EEPROM not write protected
  9755  30000B                     	org	3145739
  9756  30000B  E0                 	db	224
  9757                           
  9758                           ;Config register CONFIG7L @ 0x30000C
  9759                           ;	Table Read Protection bit
  9760                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  9761                           ;	Table Read Protection bit
  9762                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  9763                           ;	Table Read Protection bit
  9764                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  9765                           ;	Table Read Protection bit
  9766                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  9767  30000C                     	org	3145740
  9768  30000C  0F                 	db	15
  9769                           
  9770                           ;Config register CONFIG7H @ 0x30000D
  9771                           ;	Boot Block Table Read Protection bit
  9772                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  9773  30000D                     	org	3145741
  9774  30000D  40                 	db	64
  9775                           tosu	equ	0xFFF
  9776                           tosh	equ	0xFFE
  9777                           tosl	equ	0xFFD
  9778                           stkptr	equ	0xFFC
  9779                           pclatu	equ	0xFFB
  9780                           pclath	equ	0xFFA
  9781                           pcl	equ	0xFF9
  9782                           tblptru	equ	0xFF8
  9783                           tblptrh	equ	0xFF7
  9784                           tblptrl	equ	0xFF6
  9785                           tablat	equ	0xFF5
  9786                           prodh	equ	0xFF4
  9787                           prodl	equ	0xFF3
  9788                           indf0	equ	0xFEF
  9789                           postinc0	equ	0xFEE
  9790                           postdec0	equ	0xFED
  9791                           preinc0	equ	0xFEC
  9792                           plusw0	equ	0xFEB
  9793                           fsr0h	equ	0xFEA
  9794                           fsr0l	equ	0xFE9
  9795                           wreg	equ	0xFE8
  9796                           indf1	equ	0xFE7
  9797                           postinc1	equ	0xFE6
  9798                           postdec1	equ	0xFE5
  9799                           preinc1	equ	0xFE4
  9800                           plusw1	equ	0xFE3
  9801                           fsr1h	equ	0xFE2
  9802                           fsr1l	equ	0xFE1
  9803                           bsr	equ	0xFE0
  9804                           indf2	equ	0xFDF
  9805                           postinc2	equ	0xFDE
  9806                           postdec2	equ	0xFDD
  9807                           preinc2	equ	0xFDC
  9808                           plusw2	equ	0xFDB
  9809                           fsr2h	equ	0xFDA
  9810                           fsr2l	equ	0xFD9
  9811                           status	equ	0xFD8

Data Sizes:
    Strings     1565
    Constant    41
    Data        8
    BSS         619
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     85     103
    BANK0           128     41     100
    BANK1           256      0     250
    BANK2           256     29     129
    BANK3           256      0     200
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 279
		 -> SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xIPGetParameters@str(COMRAM[30]), SIM800xIPGetState@str(COMRAM[30]), txmessage(BANK1[100]), 
		 -> STR_10(CODE[17]), STR_9(CODE[279]), STR_4(CODE[9]), STR_3(CODE[5]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 279
		 -> SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xIPGetParameters@str(COMRAM[30]), SIM800xIPGetState@str(COMRAM[30]), txmessage(BANK1[100]), 
		 -> STR_10(CODE[17]), STR_9(CODE[279]), STR_4(CODE[9]), STR_3(CODE[5]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_98(CODE[21]), STR_97(CODE[18]), STR_96(CODE[21]), STR_93(CODE[26]), 
		 -> STR_92(CODE[28]), STR_91(CODE[25]), STR_90(CODE[24]), STR_89(CODE[26]), 
		 -> STR_69(CODE[15]), STR_68(CODE[20]), STR_64(CODE[29]), STR_63(CODE[29]), 
		 -> STR_57(CODE[15]), STR_51(CODE[4]), STR_33(CODE[12]), STR_30(CODE[12]), 
		 -> STR_24(CODE[27]), STR_23(CODE[24]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 40
		 -> SIM800xHTTPRead@str(BANK0[30]), SIM800xHTTPAction@str(BANK0[30]), SIM800xHTTPInputData@str(BANK0[30]), SIM800xHTTPSetTimeout@str(COMRAM[30]), 
		 -> SIM800xHTTPSetBreakEnd@str(COMRAM[30]), SIM800xHTTPSetBreak@str(COMRAM[30]), SIM800xHTTPSetRedir@str(COMRAM[25]), SIM800xHTTPSetPort@str(COMRAM[30]), 
		 -> SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xGPRSSetDataMode@str(COMRAM[20]), SIM800xGPRSSetQoSRequest@str(COMRAM[40]), SIM800xGPRSSetQoSMin@str(COMRAM[40]), 
		 -> SIM800xIPGetParameters@str(COMRAM[30]), SIM800xIPSetRate@str(COMRAM[8]), SIM800xSetBaudRate@str(COMRAM[15]), SIM800xInit@str(COMRAM[15]), 
		 -> SystemTask@msg(BANK2[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    SoftUARTPrint@str	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_27(CODE[17]), STR_26(CODE[3]), STR_25(CODE[7]), SystemTask@msg(BANK2[20]), 
		 -> STR_22(CODE[34]), STR_21(CODE[32]), STR_20(CODE[35]), STR_11(CODE[8]), 
		 -> STR_8(CODE[32]), STR_7(CODE[3]), STR_6(CODE[31]), SystemInit@ip(BANK0[20]), 
		 -> STR_5(CODE[8]), STR_2(CODE[30]), STR_1(CODE[21]), 

    SIM800xSDMReadF1Pkt@data	PTR unsigned char  size(2) Largest target is 40
		 -> SIM800xHTTPReadHeader@str(COMRAM[30]), SIM800xHTTPReadState@str(COMRAM[30]), SIM800xHTTPRead@str(BANK0[30]), SIM800xHTTPAction@str(BANK0[30]), 
		 -> SIM800xHTTPInputData@str(BANK0[30]), SIM800xGPRSGetNRegState@str(COMRAM[20]), SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xGPRSSetDataMode@str(COMRAM[20]), 
		 -> SIM800xIPGetState@str(COMRAM[30]), SIM800xGetSoftwareRevisionID@str(COMRAM[30]), ProcessResp4@str(COMRAM[20]), 

    SIM800xSDMPrint@str	PTR const unsigned char  size(2) Largest target is 279
		 -> STR_102(CODE[16]), STR_101(CODE[13]), STR_100(CODE[16]), STR_99(CODE[14]), 
		 -> SIM800xHTTPRead@str(BANK0[30]), SIM800xHTTPAction@str(BANK0[30]), SIM800xHTTPInputData@str(BANK0[30]), STR_95(CODE[24]), 
		 -> STR_94(CODE[23]), SIM800xHTTPSetTimeout@str(COMRAM[30]), SIM800xHTTPSetBreakEnd@str(COMRAM[30]), SIM800xHTTPSetBreak@str(COMRAM[30]), 
		 -> SIM800xHTTPSetRedir@str(COMRAM[25]), SIM800xHTTPSetPort@str(COMRAM[30]), STR_88(CODE[21]), STR_87(CODE[18]), 
		 -> STR_86(CODE[19]), STR_85(CODE[19]), STR_84(CODE[13]), STR_83(CODE[13]), 
		 -> STR_82(CODE[10]), STR_81(CODE[11]), STR_80(CODE[6]), STR_79(CODE[10]), 
		 -> STR_78(CODE[11]), STR_77(CODE[11]), STR_76(CODE[12]), STR_75(CODE[12]), 
		 -> STR_74(CODE[2]), STR_73(CODE[3]), STR_72(CODE[3]), STR_71(CODE[2]), 
		 -> STR_70(CODE[13]), SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xGPRSSetDataMode@str(COMRAM[20]), STR_67(CODE[12]), 
		 -> STR_66(CODE[12]), STR_65(CODE[11]), SIM800xGPRSSetQoSRequest@str(COMRAM[40]), SIM800xGPRSSetQoSMin@str(COMRAM[40]), 
		 -> STR_62(CODE[7]), STR_61(CODE[12]), STR_60(CODE[12]), STR_59(CODE[12]), 
		 -> STR_58(CODE[11]), SIM800xIPGetParameters@str(COMRAM[30]), STR_56(CODE[12]), STR_55(CODE[12]), 
		 -> STR_54(CODE[12]), STR_53(CODE[9]), STR_52(CODE[12]), SIM800xIPSetRate@str(COMRAM[8]), 
		 -> STR_50(CODE[13]), STR_49(CODE[12]), STR_48(CODE[8]), STR_47(CODE[12]), 
		 -> STR_46(CODE[9]), STR_45(CODE[12]), STR_44(CODE[8]), STR_43(CODE[12]), 
		 -> STR_42(CODE[12]), STR_41(CODE[12]), STR_40(CODE[8]), STR_39(CODE[8]), 
		 -> STR_38(CODE[8]), STR_37(CODE[8]), STR_36(CODE[8]), STR_35(CODE[4]), 
		 -> STR_34(CODE[6]), SIM800xSetBaudRate@str(COMRAM[15]), STR_32(CODE[13]), STR_31(CODE[6]), 
		 -> SIM800xInit@str(COMRAM[15]), STR_29(CODE[6]), STR_28(CODE[4]), STR_10(CODE[17]), 
		 -> STR_9(CODE[279]), STR_4(CODE[9]), STR_3(CODE[5]), 

    SIM800xSDMSendBytes@data	PTR unsigned char  size(2) Largest target is 100
		 -> txmessage(BANK1[100]), 

    SIM800xHTTPRead@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemTask@errcode(BANK2[2]), 

    SIM800xHTTPRead@data	PTR unsigned char  size(2) Largest target is 30
		 -> rxmessage(BANK0[30]), 

    SIM800xHTTPRead@cnt	PTR unsigned long  size(2) Largest target is 4
		 -> SystemTask@cnt(BANK2[4]), 

    SIM800xHTTPAction@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemTask@errcode(BANK2[2]), 

    SIM800xHTTPAction@cnt	PTR unsigned long  size(2) Largest target is 4
		 -> SystemTask@cnt(BANK2[4]), 

    SIM800xHTTPAction@statuscode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemTask@scode(BANK2[2]), 

    SIM800xHTTPInputData@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemTask@errcode(BANK2[2]), 

    SIM800xHTTPInputData@data	PTR unsigned char  size(2) Largest target is 100
		 -> txmessage(BANK1[100]), 

    SIM800xHTTPSetContent@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemInit@err(BANK0[2]), 

    SIM800xHTTPSetContent@content	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_10(CODE[17]), 

    SIM800xHTTPSetURL@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemInit@err(BANK0[2]), 

    SIM800xHTTPSetURL@url	PTR const unsigned char  size(2) Largest target is 279
		 -> STR_9(CODE[279]), 

    SIM800xHTTPInit@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemInit@err(BANK0[2]), 

    SIM800xIPGetState@ip	PTR unsigned char  size(2) Largest target is 20
		 -> SystemInit@ip(BANK0[20]), 

    SIM800xIPSetAPN@apn	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_4(CODE[9]), 

    SIM800xIPSetConnectionType@contype	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), 

    ProcessResp4@ec	PTR unsigned int  size(2) Largest target is 2
		 -> SystemInit@err(BANK0[2]), 

    ProcessResp2@str	PTR unsigned char  size(2) Largest target is 40
		 -> SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xIPGetState@str(COMRAM[30]), SIM800xGetSoftwareRevisionID@str(COMRAM[30]), 

    StrToInt@str	PTR const unsigned char  size(2) Largest target is 30
		 -> SIM800xHTTPReadHeader@str(COMRAM[30]), SIM800xHTTPReadState@str(COMRAM[30]), SIM800xHTTPRead@str(BANK0[30]), SIM800xHTTPAction@str(BANK0[30]), 
		 -> SIM800xHTTPInputData@str(BANK0[30]), SIM800xGPRSGetNRegState@str(COMRAM[20]), SIM800xGPRSSetDataMode@str(COMRAM[20]), ProcessResp4@str(COMRAM[20]), 

    AddEntryToJsonObject@value	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_19(CODE[3]), STR_17(CODE[3]), STR_15(CODE[5]), STR_13(CODE[3]), 

    AddEntryToJsonObject@key	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_18(CODE[15]), STR_16(CODE[20]), STR_14(CODE[4]), STR_12(CODE[23]), 

    AddEntryToJsonObject@JsonObject	PTR unsigned char  size(2) Largest target is 100
		 -> txmessage(BANK1[100]), 

    AddEntryToJsonObject@Cpos	PTR unsigned int  size(2) Largest target is 2
		 -> cpos(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _SystemTask->_SIM800xHTTPRead
    _SoftUARTRxAvailable->___awmod
    _SoftUARTReceiveByte->___awmod
    _SIM800xHTTPRead->_sprintf
    _SIM800xHTTPInputData->_sprintf
    _SIM800xHTTPAction->_sprintf
    _SystemInit->_SIM800xIPGetState
    _SoftUARTPrint->_SoftUARTTransmitByte
    _SIM800xInit->_sprintf
    _sprintf->___llmod
    ___llmod->___lldiv
    _SIM800xSDMInit->___lldiv
    _SIM800xIPSetConnectionType->_ProcessResp1
    _SIM800xIPSetAPN->_ProcessResp1
    _SIM800xIPOpen->_ProcessResp1
    _ProcessResp1->_SIM800xSDMRxAvailable
    _SIM800xIPGetState->_ProcessResp2
    _ProcessResp2->_SIM800xSDMReadF1Pkt
    _SIM800xHTTPSetURL->_ProcessResp4
    _SIM800xHTTPSetContent->_ProcessResp4
    _SIM800xHTTPInit->_ProcessResp4
    _SIM800xSDMPrint->_SIM800xSDMSendByte
    _ProcessResp4->_StrToInt
    _StrToInt->___lmul
    _SIM800xSDMReadF1Pkt->_SIM800xSDMRxAvailable
    _SIM800xSDMRxAvailable->___lwmod
    _SIM800xSDMReadByte->___lwmod

Critical Paths under _Isr in COMRAM

    _Isr->_SoftUARTCallBack
    _SoftUARTCallBack->i2___awmod
    _SIM800xSDMCallBack->i2___lwmod

Critical Paths under _main in BANK0

    _SystemTask->_SIM800xHTTPAction

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_SystemTask

Critical Paths under _Isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  183994
                         _SystemInit
                         _SystemTask
 ---------------------------------------------------------------------------------
 (1) _SystemTask                                          31    31      0   73132
                                             77 COMRAM     2     2      0
                                              0 BANK2     29    29      0
                  _SIM800xHTTPAction
               _SIM800xHTTPInputData
                    _SIM800xHTTPRead
                      _SoftUARTPrint
                _SoftUARTReceiveByte
                _SoftUARTRxAvailable
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _SoftUARTRxAvailable                                  2     2      0     903
                                             19 COMRAM     2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _SoftUARTReceiveByte                                  3     1      2     937
                                             19 COMRAM     3     1      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     903
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPRead                                     58    44     14   21426
                                             59 COMRAM    18     4     14
                                              0 BANK0     40    40      0
                    _SIM800xSDMFlush
                     _SIM800xSDMPeek
                    _SIM800xSDMPrint
                 _SIM800xSDMReadByte
                _SIM800xSDMReadF1Pkt
              _SIM800xSDMRxAvailable
                           _StrToInt
                            _Tick_ms
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPInputData                                56    44     12   22325
                                             59 COMRAM    16     4     12
                                              0 BANK0     40    40      0
                    _SIM800xSDMFlush
                     _SIM800xSDMPeek
                    _SIM800xSDMPrint
                _SIM800xSDMReadF1Pkt
              _SIM800xSDMRxAvailable
                _SIM800xSDMSendBytes
                           _StrToInt
                            _Tick_ms
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMSendBytes                                  4     0      4     245
                                             13 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPAction                                   55    45     10   20439
                                             59 COMRAM    14     4     10
                                              0 BANK0     41    41      0
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                _SIM800xSDMReadF1Pkt
              _SIM800xSDMRxAvailable
                           _StrToInt
                            _Tick_ms
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                          22    22      0  110862
                                              0 BANK0     22    22      0
               _AddEntryToJsonObject
                    _SIM800xHTTPInit
              _SIM800xHTTPSetContent
                  _SIM800xHTTPSetURL
                  _SIM800xIPGetState
                      _SIM800xIPOpen
                    _SIM800xIPSetAPN
         _SIM800xIPSetConnectionType
                        _SIM800xInit
                       _SoftUARTInit
                      _SoftUARTPrint
 ---------------------------------------------------------------------------------
 (2) _SoftUARTPrint                                        2     0      2    1731
                                             16 COMRAM     2     0      2
               _SoftUARTTransmitByte
 ---------------------------------------------------------------------------------
 (3) _SoftUARTTransmitByte                                 3     3      0     136
                                             13 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _SoftUARTInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIM800xInit                                         22    18      4   14657
                                             59 COMRAM    22    18      4
                    _SIM800xSDMFlush
                     _SIM800xSDMInit
                     _SIM800xSDMPeek
                    _SIM800xSDMPrint
                 _SIM800xSDMReadByte
              _SIM800xSDMRxAvailable
                            _Wait_ms
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             33    21     12    4819
                                             35 COMRAM    24    12     12
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     412
                                             26 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _Wait_ms                                             12     8      4     762
                                             13 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMInit                                      12     8      4     927
                                             26 COMRAM    12     8      4
                        _SystimeInit
                     _USARTAsyncInit
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     741
                                             13 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _USARTAsyncInit                                       1     1      0      31
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _SystimeInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIM800xIPSetConnectionType                           3     1      2    9033
                                             31 COMRAM     3     1      2
                       _ProcessResp1
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                 _SIM800xSDMSendByte
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _SIM800xIPSetAPN                                      3     1      2    9033
                                             31 COMRAM     3     1      2
                       _ProcessResp1
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                 _SIM800xSDMSendByte
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _SIM800xIPOpen                                        1     1      0    7231
                                             31 COMRAM     1     1      0
                       _ProcessResp1
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                 _SIM800xSDMSendByte
 ---------------------------------------------------------------------------------
 (3) _ProcessResp1                                         9     9      0     832
                                             22 COMRAM     9     9      0
                     _SIM800xSDMPeek
              _SIM800xSDMRxAvailable
                            _Tick_ms
 ---------------------------------------------------------------------------------
 (2) _SIM800xIPGetState                                   45    43      2   12627
                                             41 COMRAM    44    42      2
                       _ProcessResp2
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
              _SIM800xSDMRxAvailable
                 _SIM800xSDMSendByte
                            _Tick_ms
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _ProcessResp2                                         5     3      2    3337
                                             36 COMRAM     5     3      2
                     _SIM800xSDMPeek
                _SIM800xSDMReadF1Pkt
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMPeek                                       3     3      0      62
                                             13 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPSetURL                                    4     0      4   18442
                                             77 COMRAM     4     0      4
                       _ProcessResp4
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                 _SIM800xSDMSendByte
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPSetContent                                4     0      4   18442
                                             77 COMRAM     4     0      4
                       _ProcessResp4
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                 _SIM800xSDMSendByte
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2    1650
                                             13 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPInit                                      2     0      2   16609
                                             77 COMRAM     2     0      2
                       _ProcessResp4
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMPrint                                      2     0      2    6306
                                             14 COMRAM     2     0      2
                 _SIM800xSDMSendByte
 ---------------------------------------------------------------------------------
 (4) _SIM800xSDMSendByte                                   1     1      0      31
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ProcessResp4                                        32    30      2   10182
                                             45 COMRAM    32    30      2
                _SIM800xSDMReadF1Pkt
              _SIM800xSDMRxAvailable
                           _StrToInt
                            _Tick_ms
 ---------------------------------------------------------------------------------
 (3) _StrToInt                                            20    16      4    4792
                                             25 COMRAM    20    16      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     776
                                             13 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMReadF1Pkt                                 14    12      2    2573
                                             22 COMRAM    14    12      2
                    _SIM800xSDMFlush
                 _SIM800xSDMReadByte
              _SIM800xSDMRxAvailable
                            _Tick_ms
 ---------------------------------------------------------------------------------
 (3) _Tick_ms                                              4     0      4       0
                                             13 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMRxAvailable                                4     2      2     702
                                             18 COMRAM     4     2      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) _SIM800xSDMReadByte                                   1     1      0     736
                                             18 COMRAM     1     1      0
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     702
                                             13 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _SIM800xSDMFlush                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AddEntryToJsonObject                                13     5      8    2878
                                             13 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Isr                                                  2     2      0     787
                                             11 COMRAM     2     2      0
                 _SIM800xSDMCallBack
                   _SoftUARTCallBack
                    _SysTimeCallBack
 ---------------------------------------------------------------------------------
 (8) _SysTimeCallBack                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _SoftUARTCallBack                                     5     5      0     485
                                              6 COMRAM     5     5      0
                          i2___awmod
 ---------------------------------------------------------------------------------
 (9) i2___awmod                                            6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _SIM800xSDMCallBack                                   3     3      0     302
                                              5 COMRAM     3     3      0
                   _USARTReceiveByte
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (9) i2___lwmod                                            5     1      4     211
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (9) _USARTReceiveByte                                     1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SystemInit
     _AddEntryToJsonObject
     _SIM800xHTTPInit
       _ProcessResp4
         _SIM800xSDMReadF1Pkt
           _SIM800xSDMFlush
           _SIM800xSDMReadByte
             ___lwmod
           _SIM800xSDMRxAvailable
             ___lwmod
           _Tick_ms
         _SIM800xSDMRxAvailable
         _StrToInt
           ___lmul
         _Tick_ms
       _SIM800xSDMFlush
       _SIM800xSDMPrint
         _SIM800xSDMSendByte
     _SIM800xHTTPSetContent
       _ProcessResp4
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMSendByte
       _strlen
     _SIM800xHTTPSetURL
       _ProcessResp4
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMSendByte
       _strlen
     _SIM800xIPGetState
       _ProcessResp2
         _SIM800xSDMPeek
         _SIM800xSDMReadF1Pkt
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMRxAvailable
       _SIM800xSDMSendByte
       _Tick_ms
       _strlen
     _SIM800xIPOpen
       _ProcessResp1
         _SIM800xSDMPeek
         _SIM800xSDMRxAvailable
         _Tick_ms
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMSendByte
     _SIM800xIPSetAPN
       _ProcessResp1
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMSendByte
       _strlen
     _SIM800xIPSetConnectionType
       _ProcessResp1
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMSendByte
       _strlen
     _SIM800xInit
       _SIM800xSDMFlush
       _SIM800xSDMInit
         _SystimeInit
         _USARTAsyncInit
         ___lldiv
       _SIM800xSDMPeek
       _SIM800xSDMPrint
       _SIM800xSDMReadByte
       _SIM800xSDMRxAvailable
       _Wait_ms
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
     _SoftUARTInit
     _SoftUARTPrint
       _SoftUARTTransmitByte
   _SystemTask
     _SIM800xHTTPAction
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMReadF1Pkt
       _SIM800xSDMRxAvailable
       _StrToInt
       _Tick_ms
       _sprintf
     _SIM800xHTTPInputData
       _SIM800xSDMFlush
       _SIM800xSDMPeek
       _SIM800xSDMPrint
       _SIM800xSDMReadF1Pkt
       _SIM800xSDMRxAvailable
       _SIM800xSDMSendBytes
       _StrToInt
       _Tick_ms
       _sprintf
       _strlen
     _SIM800xHTTPRead
       _SIM800xSDMFlush
       _SIM800xSDMPeek
       _SIM800xSDMPrint
       _SIM800xSDMReadByte
       _SIM800xSDMReadF1Pkt
       _SIM800xSDMRxAvailable
       _StrToInt
       _Tick_ms
       _sprintf
     _SoftUARTPrint
     _SoftUARTReceiveByte
       ___awmod
     _SoftUARTRxAvailable
       ___awmod
     _sprintf

 _Isr (ROOT)
   _SIM800xSDMCallBack
     _USARTReceiveByte
     i2___lwmod
   _SoftUARTCallBack
     i2___awmod
   _SysTimeCallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     1D      81       9       50.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FA       7       97.7%
BITBANK0            80      0       0       4        0.0%
BANK0               80     29      64       5       78.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     55      67       1       81.7%
BITBIGSFRllhhh      25      0       0      18        0.0%
BITBIGSFRlh         19      0       0      17        0.0%
BITBIGSFRh           D      0       0      16        0.0%
BITBIGSFRllhl        C      0       0      19        0.0%
BITBIGSFRlll         6      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     30E      21        0.0%
DATA                 0      0     30E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Mar 27 23:30:09 2023

                                     SIM800xSDMReadF1Pkt@time 0020  
                                         ?_SIM800xSDMSendByte 0001  
                                                          l50 0DCE  
                                                          l54 0DDC  
                                                          l75 2172  
                                                          _IO 000F80  
                                        ?_SIM800xSDMSendBytes 000E  
                                                         l108 00A4  
                                                         l117 02C4  
                                                         l213 19D8  
                                                         l330 1248  
                                                         l403 1AF0  
                                                         l316 145A  
                                                         l309 147A  
                                                         l431 1F8E  
                                                         l281 110A  
                                                         l294 1C6A  
                                                         l446 157C  
                                   __end_of_SIM800xHTTPAction 0A1E  
                                                         l288 18BE  
                                                         l625 1D6C  
                                                         l713 0594  
                                                         l397 1A84  
                                                         l657 1DC0  
                                                         l691 0A18  
                                                         l667 0C22  
                                                         l863 1EAE  
                                                         l849 201C  
                                                         l875 1FD4  
                                                         l888 1376  
                                                         _GIE 007F97  
                                                         _Isr 0008  
                                                         _val 005E  
                                                ___awmod@sign 0013  
                                        ??_SIM800xSDMReadByte 0013  
                                   __end_of_SIM800xHTTPSetURL 1D72  
                                                         wreg 000FE8  
                                   __end_of_SIM800xIPGetState 1582  
                                         SIM800xHTTPRead@data 003C  
                                                StrToInt@ctrl 0028  
                                         SIM800xHTTPRead@time 00D9  
                                         SIM800xHTTPRead@size 0042  
                                                StrToInt@stop 001D  
                                        ??_SIM800xSDMSendByte 000E  
                                             ?_USARTAsyncInit 0001  
                                                        ?_Isr 0001  
                                                        l1113 060E  
                                                        l1116 0674  
                                                        l1161 169E  
                                                        l1067 1CE6  
                                                        l1091 1F44  
                                                        l1542 1922  
                                                        l1623 1E08  
                                                        l5011 155A  
                                                        l5031 1D3C  
                                                        l5007 152E  
                                                        l4403 0FD6  
                                                        l5211 08A0  
                                                        l4501 1648  
                                                        l5205 0866  
                                                        l5141 0B24  
                                                        l5109 1F10  
                                                        l5071 00D4  
                                                        l4423 10C8  
                                                        l4407 100E  
                                                        l4415 109E  
                                                        l4503 1656  
                                                        l5127 0A88  
                                                        l4345 1DFC  
                                                        l4337 1DD6  
                                                        l5049 1D90  
                                                        l4513 168E  
                                                        l4521 18D8  
                                                        l5137 0AF0  
                                                        l5313 0492  
                                                        l5321 04C0  
                                                        l5091 0256  
                                                        l5075 0112  
                                                        l4339 1DE0  
                                                        l4363 1E7A  
                                                        l4427 10D0  
                                                        l4435 1FB4  
                                                        l4523 18E6  
                                                        l4603 07BC  
                                                        l5235 0936  
                                                        l5251 09D8  
                                                        l5163 0BBA  
                                                        l5331 052A  
                                                        l5093 0280  
                                                        l5085 01F4  
                                                        l5069 005A  
                                                        l4373 1BC8  
                                                        l4613 1EC0  
                                                        l4541 05C2  
                                                        l5229 0902  
                                                        l5325 04F6  
                                                        l5087 0218  
                                                        l4455 129E  
                                                        l4711 140E  
                                                        l4615 1EC6  
                                                        l4631 185E  
                                                        l4623 19C0  
                                                        l4543 05CA  
                                                        l4535 05A6  
                                                        l5159 0B86  
                                                        l5319 04B2  
                                                        l5271 034E  
                                                        l5423 0F66  
                                                        l5407 0E1E  
                                                        l4465 12CC  
                                                        l4473 1308  
                                                        l4377 1BDE  
                                                        l4529 1912  
                                                        l4545 05D0  
                                                        l5169 0BD4  
                                                        l5425 0F74  
                                                        l4467 12FE  
                                                        l4731 1468  
                                                        l4571 0696  
                                                        l5195 0810  
                                                        l5339 054C  
                                                        l5291 03F4  
                                                        l5275 0352  
                                                        l4811 1762  
                                                        l4477 132E  
                                                        l4485 135E  
                                                        l4397 0FA6  
                                                        l4661 1C32  
                                                        l4637 1894  
                                                        l4581 06C4  
                                                        l4557 0634  
                                                        l4549 05D6  
                                                        l5285 03BA  
                                                        l4719 141C  
                                                        l4487 215E  
                                                        l4647 18BA  
                                                        l4575 06BE  
                                                        l4903 1AFA  
                                                        l4831 17B4  
                                                        l4823 1798  
                                                        l4815 1772  
                                                        l4807 1754  
                                                        l4737 1476  
                                                        l4753 1B5A  
                                                        l4817 177C  
                                                        l4683 1394  
                                                        l4667 1C40  
                                                        l4595 0722  
                                                        l4771 1CD4  
                                                        l4907 1B26  
                                                        l4827 17A4  
                                                        l4757 1B86  
                                                        l4677 1C66  
                                                        l4941 1AB2  
                                                        l4917 1A46  
                                                        l4597 072C  
                                                        l4765 2032  
                                                        l4689 13CC  
                                                        l4857 1178  
                                                        l4785 1CF0  
                                                        l4963 1F58  
                                                        l4859 117E  
                                                        l4787 1CF4  
                                                        l4893 1244  
                                                        l4991 14C0  
                                                        l4887 1236  
                                                        l4995 14F2  
                                                        STR_1 7D2E  
                                                        STR_2 7B9D  
                                                        STR_3 7FE1  
                                                        STR_4 7F79  
                                                        STR_5 7FBA  
                                                        STR_6 7B7E  
                                                        STR_7 7B5B  
                                                        STR_8 7B5E  
                                                        STR_9 79E2  
                                                        _CREN 007D5C  
                                                        u4000 13DE  
                                                        u4011 13E4  
                                                        u4100 1BAA  
                                                        u4210 1782  
                                                        u4107 1BA0  
                                                        u3500 1DE6  
                                                        u4300 1B4A  
                                                        _PIE1 000F9D  
                                                        u5017 1CDC  
                                                        u4090 1B7E  
                                                        u4330 1A40  
                                                        u5027 1CFC  
                                                        u4307 1B40  
                                                        u3700 136E  
                                                        u4085 195C  
                                                        u5037 1D0E  
                                                        u4501 0A4A  
                                                        u3630 126C  
                                                        u4430 1D8C  
                                                        u4350 1AAC  
                                                        u4511 0A5C  
                                                        u4600 0BCC  
                                                        u4520 0A70  
                                                        u4097 1B74  
                                                        u3730 165C  
                                                        u4290 1B1E  
                                                        u4530 0A86  
                                                        u4541 0A90  
                                                        u3670 12FC  
                                                        u4390 1504  
                                                        u3910 1A0A  
                                                        u4710 0948  
                                                        u3760 18EC  
                                                        u3840 0704  
                                                        u4640 080A  
                                                        u4560 0B36  
                                                        u4297 1B14  
                                                        u4651 0818  
                                                        u3940 18A6  
                                                        u3860 07CE  
                                                        u4660 089A  
                                                        _RCIF 007CF5  
                                                        u3870 07EA  
                                                        u4670 08B2  
                                                        u3880 1EEA  
                                                        u4760 034C  
                                                        u4771 035A  
                                                        u4860 053C  
                                                        u4780 03EE  
                                                        u3990 13C6  
                                                        u4790 0406  
                                                        u3887 1EE0  
                                        SIM800xHTTPRead@F2922 013C  
                                                        _OERR 007D59  
                                                        _TMR0 000FD6  
                                       ??_SIM800xSDMReadF1Pkt 0019  
                                                        _Tout 0064  
                                                        _cpos 0062  
                                                        _main 216C  
                                       SoftUARTTransmitByte@k 0010  
                                                        fsr1h 000FE2  
                                                        fsr2h 000FDA  
                                                        indf1 000FE7  
                                                        indf2 000FDF  
                                                        fsr1l 000FE1  
                                                        fsr2l 000FD9  
                                                        btemp 0068  
                                                        prodh 000FF4  
                                                        prodl 000FF3  
                                         SIM800xIPGetState@ip 002A  
                                                        start 002E  
                                      ?_SIM800xSDMRxAvailable 0013  
                                             ProcessResp2@res 0028  
                                             ProcessResp4@res 004C  
                                             ProcessResp2@str 0025  
                                             ProcessResp4@str 0034  
                                                ___param_bank 000000  
                                               StrToInt@start 001C  
                                                       ??_Isr 000C  
                                       ??_SIM800xSDMSendBytes 0012  
                                             __end_of_Tick_ms 211C  
                                             __end_of_Wait_ms 1A1E  
                                                ?_SIM800xInit 003C  
                                                       ?_main 0001  
                                                       STR_10 7DC6  
                                                       STR_11 7FBA  
                                                       STR_12 7CD8  
                                                       STR_20 7AF9  
                                                       STR_13 7FF4  
                                                       STR_21 7B3E  
                                                       STR_14 7FEA  
                                                       STR_30 7EA4  
                                                       STR_22 7B1C  
                                                       STR_15 7FDC  
                                                       STR_31 7FD6  
                                                       STR_23 7CA9  
                                                       STR_40 7F9A  
                                                       STR_32 7E32  
                                                       STR_16 7D57  
                                                       STR_24 7C11  
                                                       STR_17 7FFA  
                                                       STR_25 7FC9  
                                                       STR_41 7EF8  
                                                       STR_26 7B5B  
                                                       STR_42 7EB0  
                                                       STR_50 7E73  
                                                       STR_18 7E15  
                                                       STR_43 7EF8  
                                                       STR_19 7FF7  
                                                       STR_27 7DB5  
                                                       STR_28 7FE6  
                                                       STR_44 7FB2  
                                                       STR_36 7F82  
                                                       STR_60 7E80  
                                             __end_of___awmod 17C2  
                                                       STR_29 7FD0  
                                                       STR_37 7F92  
                                                       STR_53 7F67  
                                                       STR_61 7F10  
                                                       STR_62 7FC2  
                                                       STR_38 7FA2  
                                                       STR_46 7F70  
                                                       STR_54 7ED4  
                                                       STR_70 7E3F  
                                                       STR_71 7FFD  
                                                       STR_39 7F8A  
                                                       STR_55 7EBC  
                                                       STR_63 7BBB  
                                                       STR_72 7FF1  
                                                       STR_48 7FAA  
                                                       STR_56 7EEC  
                                                       STR_64 7BD8  
                                                       STR_73 7FEE  
                                                       STR_65 7F32  
                                                       STR_81 7F27  
                                                       STR_57 7DF7  
                                                       STR_82 7F5D  
                                                       STR_58 7F3D  
                                                       STR_66 7EE0  
                                                       STR_90 7C79  
                                                       STR_75 7F04  
                                                       STR_67 7EC8  
                                                       STR_59 7E8C  
                                                       STR_83 7E66  
                                                       STR_91 7C60  
                                                       STR_76 7E98  
                                                       STR_84 7E59  
                                                       STR_68 7D43  
                                                       STR_92 7BF5  
                                                       STR_77 7F48  
                                                       STR_69 7E06  
                                                       STR_85 7D6B  
                                                       STR_93 7C46  
                                                       STR_78 7F1C  
                                                       STR_86 7D7E  
                                                       STR_94 7CC1  
                                                       STR_79 7F53  
                                                       STR_87 7DA3  
                                                       STR_95 7C91  
                                                       STR_88 7D19  
                                                       STR_96 7CEF  
                                                       STR_97 7D91  
                                                       STR_89 7C2C  
                                                       STR_98 7D04  
                                                       STR_99 7E24  
                                             __end_of___lldiv 16B4  
                                                       _T0CON 000FD5  
                                             __end_of___llmod 1938  
                                             __end_of___lwmod 1E16  
                                                       i2l230 2012  
                                                       i2l229 1FFA  
                                                       i2l915 1CC2  
                                                       _RCREG 000FAE  
                                                       _RCSTA 000FAB  
                                                       _SPBRG 000FAF  
                                                       _TXREG 000FAD  
                                                       _TXSTA 000FAC  
                                         ___lmul@multiplicand 0012  
                                            __end_of_OSC_FREQ 79E2  
                                        SIM800xHTTPSetURL@url 004E  
                                             __end_of_dpowers 79E1  
                                     __end_of_SIM800xHTTPInit 20EE  
                                     __end_of_SIM800xHTTPRead 059A  
                                     __end_of_SIM800xIPSetAPN 1AF6  
                                                       tablat 000FF5  
                                     __end_of_SIM800xSDMFlush 2132  
                                     __end_of_SIM800xSDMPrint 1BB6  
                                        SIM800xIPGetState@cid 0053  
                                        SIM800xIPGetState@len 0054  
                                        SIM800xIPGetState@res 0052  
                                                       ttemp5 0069  
                                                       ttemp6 006C  
                                                       ttemp7 0070  
                                        SIM800xIPGetState@str 0030  
                                                       status 000FD8  
                                                       wtemp8 0069  
                                             __end_of_sprintf 07FC  
                                            ProcessResp1@time 001B  
                                            ProcessResp4@time 0048  
                                   SIM800xHTTPReadState@F2939 011E  
                                             __initialization 16B4  
                                                __end_of_main 217A  
                                            SIM800xSDMInit@br 001B  
                                                      ??_main 0056  
                                            SIM800xIPOpen@cid 0020  
                                               __activetblptr 000002  
                                       __end_of_SoftUARTPrint 1B56  
                                    AddEntryToJsonObject@Cpos 0014  
                                            __end_of_StrToInt 1110  
                                            ___llmod@dividend 001B  
                                                      STR_100 7DD7  
                                                      STR_101 7E4C  
                                                      STR_102 7DE7  
                                                      _INT0IE 007F94  
                                                      _INT0IF 007F91  
                                                      i2l1052 161C  
                                                      i2l1057 160C  
                                                      i2l1623 1E58  
                                                      i2l4311 1612  
                                                      i2l4137 20FE  
                                                      i2l4153 17E6  
                                                      i2l4181 1E26  
                                                      i2l4173 1838  
                                                      i2l4165 181C  
                                                      i2l4157 17F6  
                                                      i2l4149 17D8  
                                                      i2l4183 1E30  
                                                      i2l4159 1800  
                                                      i2l4169 1828  
                                                      i2l4189 1E4C  
                                                      i2l4293 159E  
                                                      i2l4299 15C8  
                                                      _INTCON 000FF2  
                                                      _TMR0IE 007F95  
                                                      _TMR0IF 007F92  
                                                      _DecVar 0094  
                                           ??_SysTimeCallBack 0001  
                                                      _IncVar 0056  
                                                      _RxFIFO 0300  
                               __end_of_SIM800xHTTPSetContent 1DC6  
                                                   ??_Tick_ms 0012  
                                         _SoftUARTReceiveByte 1F00  
                                                   ??_Wait_ms 0012  
                                                      ___lmul 1BB6  
                                                   ??___awmod 0012  
                                                   ??___lldiv 0016  
                                                   ??___llmod 0023  
                                                   ??___lwmod 0012  
                                                      clear_0 16FA  
                                                      clear_1 1706  
                                                      clear_2 1712  
                                                      clear_3 171E  
                                                      clear_4 172A  
                                             ___awmod@divisor 0010  
                                                      isa$std 000001  
                                             ___awmod@counter 0012  
                                     SoftUARTTransmitByte@tmp 000F  
                                                      _strlen 1EB4  
                                 SIM800xHTTPAction@statuscode 003C  
                                    __end_of_SoftUARTCallBack 1624  
                                        SoftUARTCallBack@next 000A  
                                                __pdataCOMRAM 0064  
                                           ProcessResp4@F2636 0080  
                                           __end_ofi2___awmod 1846  
                                                __mediumconst 79B8  
                                           __end_ofi2___lwmod 1E66  
                                        ?_SoftUARTReceiveByte 0014  
                                                      tblptrh 000FF7  
                                                      tblptrl 000FF6  
                                                      tblptru 000FF8  
                                              i2___awmod@sign 0006  
                                            SoftUARTPrint@str 0011  
                                                   ??_sprintf 0030  
                                         _SoftUARTRxAvailable 207C  
                                            ?_SIM800xHTTPInit 004E  
                                            ?_SIM800xHTTPRead 003C  
                                           ?_USARTReceiveByte 0001  
                                            ?_SIM800xIPSetAPN 0020  
                                            ?_SIM800xSDMFlush 0001  
                                               _SIM800xIPOpen 1F4A  
                                                  __accesstop 0080  
                                     __end_of__initialization 1730  
                                            ?_SIM800xSDMPrint 000F  
                                          ??_USARTReceiveByte 0001  
                                               ___rparam_used 000001  
                                      SIM800xHTTPInit@errcode 004E  
                                                  StrToInt@po 0029  
                                           SIM800xHTTPRead@sz 00D5  
                                        USARTReceiveByte@data 0001  
                                          i2___lwmod@dividend 0001  
                                              __pcstackCOMRAM 0001  
                                                __pidataBANK0 217E  
                                        ?_SoftUARTRxAvailable 0001  
                                      SIM800xHTTPRead@errcode 0048  
                                           SoftUARTCallBack@k 000B  
                                            ??_USARTAsyncInit 000E  
                                                  _SystemInit 0C28  
                                       ??_SoftUARTReceiveByte 0016  
                                                  _SystemTask 0DE2  
                                           SIM800xSDMInit@val 0023  
                                           SIM800xSDMPeek@idx 0010  
                                       _Tout@SIM800x_SDM$F985 00E0  
                                                  __pbssBANK0 0080  
                                                  __pbssBANK1 0100  
                                                  __pbssBANK2 0200  
                                                  __pbssBANK3 0300  
                                              ?_SIM800xIPOpen 0001  
                                     ??_SIM800xSDMRxAvailable 0015  
                              AddEntryToJsonObject@JsonObject 000E  
                                       ??_SoftUARTRxAvailable 0014  
                                SIM800xHTTPSetContent@content 004E  
                                                     ?___lmul 000E  
                                SIM800xHTTPSetContent@errcode 0050  
                                                   ?_StrToInt 001A  
                                               ?_SoftUARTInit 0001  
                                              ___lmul@product 0016  
                                       SIM800xSDMCallBack@tmp 0006  
                                                     ?_strlen 000E  
                                                     _INTCON2 000FF1  
                                 __end_of_SIM800xSDMReadF1Pkt 137C  
                                        SIM800xSDMReadF1Pkt@i 001F  
                                               ??_SystimeInit 000E  
                                 __end_of_SIM800xSDMSendBytes 204A  
                                                SIM800xInit@c 0051  
                                                     __Hparam 0000  
                                                     __Lparam 0000  
                                                     _Tick_ms 2106  
                                                     _Wait_ms 19AC  
                                               ?_ProcessResp1 0001  
                                               ?_ProcessResp2 0025  
                                               ?_ProcessResp4 002E  
                                                     ___awmod 173E  
                                              ??_SoftUARTInit 000E  
                                                     ___lldiv 1624  
                                                     ___llmod 18C4  
                                                  ??_StrToInt 001E  
                                                     ___lwmod 1DC6  
                                                     __pcinit 16B4  
                                                     __ramtop 0600  
                                                     __ptext0 216C  
                                                     __ptext1 0DE2  
                                                     __ptext2 207C  
                                                     __ptext3 1F00  
                                                     __ptext4 173E  
                                                     __ptext5 031A  
                                                     __ptext6 0A1E  
                                                     __ptext7 2018  
                                                     __ptext8 07FC  
                                                     __ptext9 0C28  
                                                     _dpowers 79B9  
                                                 ?_SystemInit 0001  
                                                 ?_SystemTask 0001  
                                            ___awmod@dividend 000E  
                                             _SysTimeCallBack 1FDA  
                                    SoftUARTTransmitByte@data 000E  
                                             ??_SIM800xIPOpen 0020  
                                                     _sprintf 059A  
                                        end_of_initialization 1730  
                                       SoftUARTCallBack@rxtmp 0009  
                                               __Lmediumconst 79B8  
                                             ___lldiv@divisor 0012  
                                             ___lldiv@counter 001A  
                                              ??_ProcessResp1 0017  
                                              ??_ProcessResp2 0027  
                                              ??_ProcessResp4 0030  
                                                     postdec1 000FE5  
                                                     postdec2 000FDD  
                                                     postinc0 000FEE  
                                                     postinc2 000FDE  
                                      SIM800xIPGetState@time1 004E  
                                         __end_of_SystimeInit 20CC  
                                                     strlen@s 000E  
                                                SystemInit@ip 00B7  
                                           ?_SoftUARTCallBack 0001  
                                          SIM800xHTTPAction@t 00D5  
                                              _SIM800xSDMInit 1938  
                                              _SIM800xSDMPeek 1F94  
                                      SIM800xSDMReadF1Pkt@val 001D  
                                      SIM800xSDMReadF1Pkt@tmp 0024  
                                          ??_SoftUARTCallBack 0007  
                                                   i2___awmod 17C2  
                            _Rxfifocurrent@SoftwareUART$F1247 0060  
                                                   i2___lwmod 1E16  
                                ??_SIM800xIPSetConnectionType 0022  
                                          SIM800xHTTPRead@cnt 0046  
                                          SIM800xHTTPRead@res 00DD  
                                                 StrToInt@val 0023  
                                          SIM800xHTTPRead@str 00B7  
                                                 StrToInt@str 001A  
                                                   _TXSTAbits 000FAC  
                                          SIM800xIPGetState@i 0055  
                                              ProcessResp4@ec 002E  
                                       _SIM800xHTTPSetContent 1D72  
                                    SIM800xHTTPInputData@data 003C  
                                    SIM800xHTTPInputData@time 00D9  
                                              __end_of___lmul 1C14  
                                               __pidataCOMRAM 217A  
                                     __end_of_SysTimeCallBack 2018  
                                      __end_of_SIM800xSDMInit 19AC  
                                      __end_of_SIM800xSDMPeek 1FDA  
                                __end_of_SoftUARTTransmitByte 1D1E  
                                              __end_of_strlen 1F00  
                                         start_initialization 16B4  
                                    SIM800xHTTPSetURL@errcode 0050  
                                                 __end_of_Isr 002E  
                                                  ?i2___awmod 0001  
                                                  ?i2___lwmod 0001  
                                        __end_of_SoftUARTInit 2146  
                                __end_of_AddEntryToJsonObject 031A  
                                              SIM800xInit@tmp 004F  
                                          SIM800xIPSetAPN@cid 0022  
                                              SIM800xInit@str 0040  
                                          SIM800xIPSetAPN@apn 0020  
                                     SIM800xHTTPRead@strindex 003E  
                                     AddEntryToJsonObject@key 0010  
                                             ___llmod@divisor 001F  
                               __end_of_SIM800xSDMRxAvailable 207C  
                                             ___llmod@counter 0023  
                                __end_of_SIM800xHTTPInputData 0C28  
                                                 _SystimeInit 20AA  
                                                    ??___lmul 0016  
                                                 __pdataBANK0 00E0  
                                               ??_SIM800xInit 0040  
                                 __end_of_SoftUARTReceiveByte 1F4A  
                                                    ??_strlen 0010  
                                                   _Rxfifoptr 005C  
                                             ?_SIM800xSDMInit 001B  
                                             ?_SIM800xSDMPeek 0001  
                                  SIM800xHTTPReadHeader@F2959 0100  
                                                 __pbssCOMRAM 0056  
                                                   StrToInt@i 002D  
                                                   StrToInt@j 0027  
                                               _SoftUARTPrint 1AF6  
                                               __pcstackBANK0 00B7  
                                               __pcstackBANK2 0264  
                                           i2___lwmod@divisor 0003  
                                           i2___lwmod@counter 0005  
                                        __end_of_ProcessResp1 18C4  
                                        __end_of_ProcessResp2 1C70  
                                        __end_of_ProcessResp4 1480  
                                          SIM800xSDMPrint@str 000F  
                                                 sprintf@flag 0038  
                                   SIM800xHTTPInputData@F2891 0178  
                                                 sprintf@prec 0032  
                           SIM800xIPSetConnectionType@contype 0020  
                                 __end_of_SoftUARTRxAvailable 20AA  
                                  __end_of_SIM800xSDMCallBack 1CC8  
                                      SIM800xSDMReadByte@data 0013  
                                                    ?_Tick_ms 000E  
                                      ?_SIM800xHTTPSetContent 004E  
                                                    ?_Wait_ms 000E  
                                                   __pintcode 0008  
                                               __pmediumconst 79B8  
                                                    ?___awmod 000E  
                                                    ?___lldiv 000E  
                                                    ?___llmod 001B  
                                                    ?___lwmod 000E  
                                            ?_SysTimeCallBack 0001  
                                  __end_of_SIM800xSDMReadByte 1EB4  
                                              ?_SoftUARTPrint 0011  
                                                ??_SystemInit 0056  
                                                ??_SystemTask 004E  
                                  __end_of_SIM800xSDMSendByte 216C  
                                         __end_of_SIM800xInit 124E  
                                      SIM800xSDMCallBack@next 0007  
                                 SIM800xHTTPInputData@errcode 0046  
                                                 ??i2___awmod 0005  
                                                    ?_sprintf 0024  
                                                 ??i2___lwmod 0005  
                          __end_of_SIM800xIPSetConnectionType 1A8A  
                                  _SIM800xIPSetConnectionType 1A1E  
                                _Rxfifoptr@SoftwareUART$F1246 0061  
                                 SIM800xHTTPInputData@timeout 0042  
                               SIM800xIPSetConnectionType@cid 0022  
                                    SIM800xHTTPAction@errcode 0044  
                                        _SoftUARTTransmitByte 1CC8  
                                                    i2u320_40 1806  
                                                    i2u324_40 1E36  
                                                    i2u344_44 15BE  
                                                    i2u344_45 15B8  
                                                    i2u504_47 1594  
                                                    i2u505_47 15A2  
                                                    i2u506_47 1616  
                                                    i2u348_40 1CA4  
                                          __end_of_SystemInit 0DE2  
                                          __end_of_SystemTask 0F7A  
                                                    _OSC_FREQ 79E1  
                                            _USARTReceiveByte 20EE  
                                           ??_SIM800xHTTPInit 0050  
                                           ??_SIM800xHTTPRead 004A  
                                        _AddEntryToJsonObject 0032  
                                           ??_SIM800xIPSetAPN 0022  
                                           ??_SIM800xSDMFlush 000E  
                                           ??_SIM800xSDMPrint 0011  
                                        _SIM800xHTTPInputData 0A1E  
                                               ProcessResp1@c 001F  
                                               ProcessResp2@c 0027  
                                                   _rxmessage 0099  
                                     SIM800xHTTPInputData@cnt 003E  
                                     SIM800xHTTPInputData@len 00D5  
                                     SIM800xHTTPInputData@res 00DD  
                                     SIM800xHTTPInputData@str 00B7  
                                           ___lmul@multiplier 000E  
                                                   copy_data0 16C8  
                                                   copy_data1 16E8  
                                                   _txmessage 0196  
                                          i2___awmod@dividend 0001  
                                       __end_of_SIM800xIPOpen 1F94  
                                                Wait_ms@value 000E  
                                               SIM800xInit@br 003C  
                                       ?_SoftUARTTransmitByte 0001  
                                                    __Hrparam 0000  
                                                    Wait_ms@x 0016  
                                                    __Lrparam 0000  
                                                    _StrToInt 0F7A  
                                                _SoftUARTInit 2132  
                                                 _SIM800xInit 1110  
                                       ?_AddEntryToJsonObject 000E  
                                             ??_SoftUARTPrint 0013  
                                                    _Rxstatus 0098  
                                                  sprintf@val 0034  
                                       ?_SIM800xHTTPInputData 003C  
                                                    __ptext10 1AF6  
                                                    __ptext11 1CC8  
                                                    __ptext20 20AA  
                                                    __ptext12 2132  
                                                    __ptext21 1A1E  
                                                    __ptext13 1110  
                                                    __ptext30 1EB4  
                                                    __ptext22 1A8A  
                                                    __ptext14 059A  
                                                    __ptext31 20CC  
                                                    __ptext23 1F4A  
                                                    __ptext15 18C4  
                                                    __ptext40 1E66  
                                                    __ptext32 1B56  
                                                    __ptext24 1846  
                                                    __ptext16 19AC  
                                                    __ptext41 1DC6  
                                                    __ptext33 215A  
                                                    __ptext25 1480  
                                                    __ptext17 1938  
                                                    __ptext50 20EE  
                                                    __ptext42 211C  
                                                    __ptext34 137C  
                                                    __ptext26 1C14  
                                                    __ptext18 1624  
                                                    __ptext43 0032  
                                                    __ptext35 0F7A  
                                                    __ptext27 1F94  
                                                    __ptext19 2146  
                                                    __ptext36 1BB6  
                                                    __ptext28 1D1E  
                                                    __ptext45 1FDA  
                                                    __ptext37 124E  
                                                    __ptext29 1D72  
                                                    __ptext46 1582  
                                                    __ptext38 2106  
                                                    __ptext47 17C2  
                                                    __ptext39 204A  
                                                    __ptext48 1C70  
                                                    __ptext49 1E16  
                                     SIM800xHTTPAction@method 00D9  
                                                ?_SystimeInit 0001  
                                  AddEntryToJsonObject@offset 001A  
                                                    isa$xinst 000000  
                                                    int$flags 0068  
                                                _ProcessResp1 1846  
                                                _ProcessResp2 1C14  
                                                _ProcessResp4 137C  
                                            ??_SIM800xSDMInit 001F  
                                            ??_SIM800xSDMPeek 000E  
                                   _RxFIFO@SoftwareUART$F1245 0200  
                                           i2___awmod@divisor 0003  
                                           i2___awmod@counter 0005  
                                                  _INTCONbits 000FF2  
                                      SIM800xHTTPAction@F2903 015A  
                                                    intlevel2 2182  
                                                   sprintf@ap 0039  
                                                   sprintf@sp 0024  
                                              _USARTAsyncInit 2146  
                                     SIM800xSDMSendBytes@data 000E  
                                            ___lwmod@dividend 000E  
                                            ___lldiv@dividend 000E  
                                      ??_SoftUARTTransmitByte 000E  
                                     ??_SIM800xHTTPSetContent 0052  
                                       _SIM800xSDMRxAvailable 204A  
                                   AddEntryToJsonObject@value 0012  
                                     SoftUARTReceiveByte@data 0016  
                                      ??_AddEntryToJsonObject 0016  
                                      SIM800xSDMSendByte@data 000E  
                                          _SIM800xSDMCallBack 1C70  
                                         _SIM800xSDMReadF1Pkt 124E  
                                      ??_SIM800xHTTPInputData 0048  
                                                    sprintf@c 003B  
                                                    sprintf@f 0026  
                                           USARTAsyncInit@bgr 000E  
                                      SIM800xSDMSendBytes@cnt 0010  
                                            ___lldiv@quotient 0016  
                                             ___lwmod@divisor 0010  
                                                    strlen@cp 0010  
                                             ___lwmod@counter 0012  
                                           _SIM800xHTTPAction 07FC  
                                       SIM800xHTTPAction@time 00DA  
                                           SystemTask@errcode 027B  
                                         ?_SIM800xSDMCallBack 0001  
                                       SIM800xHTTPAction@tout 0040  
                                           _SIM800xHTTPSetURL 1D1E  
                                          ?_SIM800xHTTPAction 003C  
                                           _SIM800xIPGetState 1480  
                                      __end_of_USARTAsyncInit 215A  
                                    __end_of_USARTReceiveByte 2106  
                                          ?_SIM800xHTTPSetURL 004E  
                                 ?_SIM800xIPSetConnectionType 0020  
                                          ?_SIM800xIPGetState 002A  
                                         _SIM800xSDMSendBytes 2018  
                                          _SIM800xSDMReadByte 1E66  
                                        SIM800xHTTPAction@cnt 003E  
                                        SIM800xHTTPAction@res 00DE  
                                        SIM800xHTTPAction@str 00B7  
                                        ?_SIM800xSDMReadF1Pkt 0017  
                                               SystemInit@err 00CB  
                                               _Rxfifocurrent 005A  
                                         ??_SIM800xHTTPAction 0046  
                                            _SoftUARTCallBack 1582  
                                          _SIM800xSDMSendByte 215A  
                                             _SIM800xHTTPInit 20CC  
                                             _SIM800xHTTPRead 031A  
                                             SystemTask@scode 0279  
                                         ??_SIM800xHTTPSetURL 0052  
                                         ??_SIM800xIPGetState 002C  
                                             _SIM800xIPSetAPN 1A8A  
                                         ?_SIM800xSDMReadByte 0001  
                                               SystemTask@cmd 0278  
                                             _SIM800xSDMFlush 211C  
                                               SystemTask@cnt 027D  
                                               SystemTask@msg 0264  
                                        ??_SIM800xSDMCallBack 0006  
                                     SIM800xSDMReadF1Pkt@data 0017  
                                             _SIM800xSDMPrint 1B56  
