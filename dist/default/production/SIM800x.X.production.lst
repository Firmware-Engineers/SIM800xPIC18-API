

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon May 01 13:52:02 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=6
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=4
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=4
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=4
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=4
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=5
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=6
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=6
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=4
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=4
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=4
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=4
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=4
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=4
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=4
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=4
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=4
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=4
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=4
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=4
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=7
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=4
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=4
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=4
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=4
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=4
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=6
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=4
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=4
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=4
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=6
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=4
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    68                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    70  0000                     
    71                           ; Version 2.36
    72                           ; Generated 28/01/2022 GMT
    73                           ; 
    74                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution. Publication is not required when
    88                           ;        this file is used in an embedded application.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F452 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     
   107                           	psect	idataCOMRAM
   108  001E9A                     __pidataCOMRAM:
   109                           	callstack 0
   110                           
   111                           ;initializer for _Tout
   112  001E9A  0FA0               	dw	4000
   113  001E9C  0000               	dw	0
   114                           
   115                           	psect	idataBANK0
   116  001E9E                     __pidataBANK0:
   117                           	callstack 0
   118                           
   119                           ;initializer for _Tout@SIM800x_SDM$F1157
   120  001E9E  07D0               	dw	2000
   121  001EA0  0000               	dw	0
   122                           
   123                           	psect	mediumconst
   124  00798E                     __pmediumconst:
   125                           	callstack 0
   126  00798E  00                 	db	0
   127  00798F                     _dpowers:
   128                           	callstack 0
   129  00798F  0001               	dw	1
   130  007991  0000               	dw	0
   131  007993  000A               	dw	10
   132  007995  0000               	dw	0
   133  007997  0064               	dw	100
   134  007999  0000               	dw	0
   135  00799B  03E8               	dw	1000
   136  00799D  0000               	dw	0
   137  00799F  2710               	dw	10000
   138  0079A1  0000               	dw	0
   139  0079A3  86A0               	dw	34464
   140  0079A5  0001               	dw	1
   141  0079A7  4240               	dw	16960
   142  0079A9  000F               	dw	15
   143  0079AB  9680               	dw	38528
   144  0079AD  0098               	dw	152
   145  0079AF  E100               	dw	57600
   146  0079B1  05F5               	dw	1525
   147  0079B3  CA00               	dw	51712
   148  0079B5  3B9A               	dw	15258
   149  0079B7                     __end_of_dpowers:
   150                           	callstack 0
   151  0079B7  10                 	db	16
   152  0079B8                     __end_of_OSC_FREQ:
   153                           	callstack 0
   154  0000                     _RCREG	set	4014
   155  0000                     _SPBRG	set	4015
   156  0000                     _TXREG	set	4013
   157  0079B8                     STR_9:
   158  0079B8  68                 	db	104	;'h'
   159  0079B9  74                 	db	116	;'t'
   160  0079BA  74                 	db	116	;'t'
   161  0079BB  70                 	db	112	;'p'
   162  0079BC  3A                 	db	58	;':'
   163  0079BD  2F                 	db	47
   164  0079BE  2F                 	db	47
   165  0079BF  62                 	db	98	;'b'
   166  0079C0  61                 	db	97	;'a'
   167  0079C1  63                 	db	99	;'c'
   168  0079C2  6B                 	db	107	;'k'
   169  0079C3  65                 	db	101	;'e'
   170  0079C4  6E                 	db	110	;'n'
   171  0079C5  64                 	db	100	;'d'
   172  0079C6  2E                 	db	46
   173  0079C7  74                 	db	116	;'t'
   174  0079C8  68                 	db	104	;'h'
   175  0079C9  69                 	db	105	;'i'
   176  0079CA  6E                 	db	110	;'n'
   177  0079CB  67                 	db	103	;'g'
   178  0079CC  65                 	db	101	;'e'
   179  0079CD  72                 	db	114	;'r'
   180  0079CE  2E                 	db	46
   181  0079CF  69                 	db	105	;'i'
   182  0079D0  6F                 	db	111	;'o'
   183  0079D1  2F                 	db	47
   184  0079D2  76                 	db	118	;'v'
   185  0079D3  33                 	db	51	;'3'
   186  0079D4  2F                 	db	47
   187  0079D5  75                 	db	117	;'u'
   188  0079D6  73                 	db	115	;'s'
   189  0079D7  65                 	db	101	;'e'
   190  0079D8  72                 	db	114	;'r'
   191  0079D9  73                 	db	115	;'s'
   192  0079DA  2F                 	db	47
   193  0079DB  46                 	db	70	;'F'
   194  0079DC  69                 	db	105	;'i'
   195  0079DD  72                 	db	114	;'r'
   196  0079DE  6D                 	db	109	;'m'
   197  0079DF  77                 	db	119	;'w'
   198  0079E0  61                 	db	97	;'a'
   199  0079E1  72                 	db	114	;'r'
   200  0079E2  65                 	db	101	;'e'
   201  0079E3  45                 	db	69	;'E'
   202  0079E4  6E                 	db	110	;'n'
   203  0079E5  67                 	db	103	;'g'
   204  0079E6  69                 	db	105	;'i'
   205  0079E7  6E                 	db	110	;'n'
   206  0079E8  65                 	db	101	;'e'
   207  0079E9  65                 	db	101	;'e'
   208  0079EA  72                 	db	114	;'r'
   209  0079EB  73                 	db	115	;'s'
   210  0079EC  2F                 	db	47
   211  0079ED  64                 	db	100	;'d'
   212  0079EE  65                 	db	101	;'e'
   213  0079EF  76                 	db	118	;'v'
   214  0079F0  69                 	db	105	;'i'
   215  0079F1  63                 	db	99	;'c'
   216  0079F2  65                 	db	101	;'e'
   217  0079F3  73                 	db	115	;'s'
   218  0079F4  2F                 	db	47
   219  0079F5  53                 	db	83	;'S'
   220  0079F6  49                 	db	73	;'I'
   221  0079F7  4D                 	db	77	;'M'
   222  0079F8  38                 	db	56	;'8'
   223  0079F9  30                 	db	48	;'0'
   224  0079FA  30                 	db	48	;'0'
   225  0079FB  4C                 	db	76	;'L'
   226  0079FC  2F                 	db	47
   227  0079FD  63                 	db	99	;'c'
   228  0079FE  61                 	db	97	;'a'
   229  0079FF  6C                 	db	108	;'l'
   230  007A00  6C                 	db	108	;'l'
   231  007A01  62                 	db	98	;'b'
   232  007A02  61                 	db	97	;'a'
   233  007A03  63                 	db	99	;'c'
   234  007A04  6B                 	db	107	;'k'
   235  007A05  2F                 	db	47
   236  007A06  64                 	db	100	;'d'
   237  007A07  61                 	db	97	;'a'
   238  007A08  74                 	db	116	;'t'
   239  007A09  61                 	db	97	;'a'
   240  007A0A  3F                 	db	63	;'?'
   241  007A0B  61                 	db	97	;'a'
   242  007A0C  75                 	db	117	;'u'
   243  007A0D  74                 	db	116	;'t'
   244  007A0E  68                 	db	104	;'h'
   245  007A0F  6F                 	db	111	;'o'
   246  007A10  72                 	db	114	;'r'
   247  007A11  69                 	db	105	;'i'
   248  007A12  7A                 	db	122	;'z'
   249  007A13  61                 	db	97	;'a'
   250  007A14  74                 	db	116	;'t'
   251  007A15  69                 	db	105	;'i'
   252  007A16  6F                 	db	111	;'o'
   253  007A17  6E                 	db	110	;'n'
   254  007A18  3D                 	db	61	;'='
   255  007A19  65                 	db	101	;'e'
   256  007A1A  79                 	db	121	;'y'
   257  007A1B  4A                 	db	74	;'J'
   258  007A1C  68                 	db	104	;'h'
   259  007A1D  62                 	db	98	;'b'
   260  007A1E  47                 	db	71	;'G'
   261  007A1F  63                 	db	99	;'c'
   262  007A20  69                 	db	105	;'i'
   263  007A21  4F                 	db	79	;'O'
   264  007A22  69                 	db	105	;'i'
   265  007A23  4A                 	db	74	;'J'
   266  007A24  49                 	db	73	;'I'
   267  007A25  55                 	db	85	;'U'
   268  007A26  7A                 	db	122	;'z'
   269  007A27  49                 	db	73	;'I'
   270  007A28  31                 	db	49	;'1'
   271  007A29  4E                 	db	78	;'N'
   272  007A2A  69                 	db	105	;'i'
   273  007A2B  49                 	db	73	;'I'
   274  007A2C  73                 	db	115	;'s'
   275  007A2D  49                 	db	73	;'I'
   276  007A2E  6E                 	db	110	;'n'
   277  007A2F  52                 	db	82	;'R'
   278  007A30  35                 	db	53	;'5'
   279  007A31  63                 	db	99	;'c'
   280  007A32  43                 	db	67	;'C'
   281  007A33  49                 	db	73	;'I'
   282  007A34  36                 	db	54	;'6'
   283  007A35  49                 	db	73	;'I'
   284  007A36  6B                 	db	107	;'k'
   285  007A37  70                 	db	112	;'p'
   286  007A38  58                 	db	88	;'X'
   287  007A39  56                 	db	86	;'V'
   288  007A3A  43                 	db	67	;'C'
   289  007A3B  4A                 	db	74	;'J'
   290  007A3C  39                 	db	57	;'9'
   291  007A3D  2E                 	db	46
   292  007A3E  65                 	db	101	;'e'
   293  007A3F  79                 	db	121	;'y'
   294  007A40  4A                 	db	74	;'J'
   295  007A41  6C                 	db	108	;'l'
   296  007A42  65                 	db	101	;'e'
   297  007A43  48                 	db	72	;'H'
   298  007A44  41                 	db	65	;'A'
   299  007A45  69                 	db	105	;'i'
   300  007A46  4F                 	db	79	;'O'
   301  007A47  6A                 	db	106	;'j'
   302  007A48  45                 	db	69	;'E'
   303  007A49  32                 	db	50	;'2'
   304  007A4A  4F                 	db	79	;'O'
   305  007A4B  44                 	db	68	;'D'
   306  007A4C  41                 	db	65	;'A'
   307  007A4D  7A                 	db	122	;'z'
   308  007A4E  4E                 	db	78	;'N'
   309  007A4F  6A                 	db	106	;'j'
   310  007A50  41                 	db	65	;'A'
   311  007A51  30                 	db	48	;'0'
   312  007A52  4E                 	db	78	;'N'
   313  007A53  7A                 	db	122	;'z'
   314  007A54  41                 	db	65	;'A'
   315  007A55  73                 	db	115	;'s'
   316  007A56  49                 	db	73	;'I'
   317  007A57  6D                 	db	109	;'m'
   318  007A58  6C                 	db	108	;'l'
   319  007A59  68                 	db	104	;'h'
   320  007A5A  64                 	db	100	;'d'
   321  007A5B  43                 	db	67	;'C'
   322  007A5C  49                 	db	73	;'I'
   323  007A5D  36                 	db	54	;'6'
   324  007A5E  4D                 	db	77	;'M'
   325  007A5F  54                 	db	84	;'T'
   326  007A60  59                 	db	89	;'Y'
   327  007A61  34                 	db	52	;'4'
   328  007A62  4D                 	db	77	;'M'
   329  007A63  44                 	db	68	;'D'
   330  007A64  4D                 	db	77	;'M'
   331  007A65  31                 	db	49	;'1'
   332  007A66  4D                 	db	77	;'M'
   333  007A67  7A                 	db	122	;'z'
   334  007A68  49                 	db	73	;'I'
   335  007A69  33                 	db	51	;'3'
   336  007A6A  4D                 	db	77	;'M'
   337  007A6B  43                 	db	67	;'C'
   338  007A6C  77                 	db	119	;'w'
   339  007A6D  69                 	db	105	;'i'
   340  007A6E  63                 	db	99	;'c'
   341  007A6F  6D                 	db	109	;'m'
   342  007A70  39                 	db	57	;'9'
   343  007A71  73                 	db	115	;'s'
   344  007A72  5A                 	db	90	;'Z'
   345  007A73  53                 	db	83	;'S'
   346  007A74  49                 	db	73	;'I'
   347  007A75  36                 	db	54	;'6'
   348  007A76  49                 	db	73	;'I'
   349  007A77  6E                 	db	110	;'n'
   350  007A78  56                 	db	86	;'V'
   351  007A79  7A                 	db	122	;'z'
   352  007A7A  5A                 	db	90	;'Z'
   353  007A7B  58                 	db	88	;'X'
   354  007A7C  49                 	db	73	;'I'
   355  007A7D  69                 	db	105	;'i'
   356  007A7E  4C                 	db	76	;'L'
   357  007A7F  43                 	db	67	;'C'
   358  007A80  4A                 	db	74	;'J'
   359  007A81  31                 	db	49	;'1'
   360  007A82  63                 	db	99	;'c'
   361  007A83  33                 	db	51	;'3'
   362  007A84  49                 	db	73	;'I'
   363  007A85  69                 	db	105	;'i'
   364  007A86  4F                 	db	79	;'O'
   365  007A87  69                 	db	105	;'i'
   366  007A88  4A                 	db	74	;'J'
   367  007A89  47                 	db	71	;'G'
   368  007A8A  61                 	db	97	;'a'
   369  007A8B  58                 	db	88	;'X'
   370  007A8C  4A                 	db	74	;'J'
   371  007A8D  74                 	db	116	;'t'
   372  007A8E  64                 	db	100	;'d'
   373  007A8F  32                 	db	50	;'2'
   374  007A90  46                 	db	70	;'F'
   375  007A91  79                 	db	121	;'y'
   376  007A92  5A                 	db	90	;'Z'
   377  007A93  55                 	db	85	;'U'
   378  007A94  56                 	db	86	;'V'
   379  007A95  75                 	db	117	;'u'
   380  007A96  5A                 	db	90	;'Z'
   381  007A97  32                 	db	50	;'2'
   382  007A98  6C                 	db	108	;'l'
   383  007A99  75                 	db	117	;'u'
   384  007A9A  5A                 	db	90	;'Z'
   385  007A9B  57                 	db	87	;'W'
   386  007A9C  56                 	db	86	;'V'
   387  007A9D  79                 	db	121	;'y'
   388  007A9E  63                 	db	99	;'c'
   389  007A9F  79                 	db	121	;'y'
   390  007AA0  4A                 	db	74	;'J'
   391  007AA1  39                 	db	57	;'9'
   392  007AA2  2E                 	db	46
   393  007AA3  35                 	db	53	;'5'
   394  007AA4  4D                 	db	77	;'M'
   395  007AA5  59                 	db	89	;'Y'
   396  007AA6  72                 	db	114	;'r'
   397  007AA7  50                 	db	80	;'P'
   398  007AA8  56                 	db	86	;'V'
   399  007AA9  53                 	db	83	;'S'
   400  007AAA  34                 	db	52	;'4'
   401  007AAB  6E                 	db	110	;'n'
   402  007AAC  46                 	db	70	;'F'
   403  007AAD  61                 	db	97	;'a'
   404  007AAE  32                 	db	50	;'2'
   405  007AAF  6B                 	db	107	;'k'
   406  007AB0  6F                 	db	111	;'o'
   407  007AB1  75                 	db	117	;'u'
   408  007AB2  33                 	db	51	;'3'
   409  007AB3  64                 	db	100	;'d'
   410  007AB4  56                 	db	86	;'V'
   411  007AB5  32                 	db	50	;'2'
   412  007AB6  79                 	db	121	;'y'
   413  007AB7  5A                 	db	90	;'Z'
   414  007AB8  50                 	db	80	;'P'
   415  007AB9  34                 	db	52	;'4'
   416  007ABA  53                 	db	83	;'S'
   417  007ABB  76                 	db	118	;'v'
   418  007ABC  6F                 	db	111	;'o'
   419  007ABD  33                 	db	51	;'3'
   420  007ABE  4A                 	db	74	;'J'
   421  007ABF  56                 	db	86	;'V'
   422  007AC0  31                 	db	49	;'1'
   423  007AC1  5A                 	db	90	;'Z'
   424  007AC2  6A                 	db	106	;'j'
   425  007AC3  36                 	db	54	;'6'
   426  007AC4  67                 	db	103	;'g'
   427  007AC5  41                 	db	65	;'A'
   428  007AC6  49                 	db	73	;'I'
   429  007AC7  47                 	db	71	;'G'
   430  007AC8  54                 	db	84	;'T'
   431  007AC9  56                 	db	86	;'V'
   432  007ACA  75                 	db	117	;'u'
   433  007ACB  69                 	db	105	;'i'
   434  007ACC  39                 	db	57	;'9'
   435  007ACD  34                 	db	52	;'4'
   436  007ACE  00                 	db	0
   437  007ACF                     STR_20:
   438  007ACF  53                 	db	83	;'S'
   439  007AD0  79                 	db	121	;'y'
   440  007AD1  73                 	db	115	;'s'
   441  007AD2  74                 	db	116	;'t'
   442  007AD3  65                 	db	101	;'e'
   443  007AD4  6D                 	db	109	;'m'
   444  007AD5  20                 	db	32
   445  007AD6  49                 	db	73	;'I'
   446  007AD7  6E                 	db	110	;'n'
   447  007AD8  69                 	db	105	;'i'
   448  007AD9  74                 	db	116	;'t'
   449  007ADA  69                 	db	105	;'i'
   450  007ADB  61                 	db	97	;'a'
   451  007ADC  6C                 	db	108	;'l'
   452  007ADD  69                 	db	105	;'i'
   453  007ADE  7A                 	db	122	;'z'
   454  007ADF  61                 	db	97	;'a'
   455  007AE0  74                 	db	116	;'t'
   456  007AE1  69                 	db	105	;'i'
   457  007AE2  6F                 	db	111	;'o'
   458  007AE3  6E                 	db	110	;'n'
   459  007AE4  20                 	db	32
   460  007AE5  63                 	db	99	;'c'
   461  007AE6  6F                 	db	111	;'o'
   462  007AE7  6D                 	db	109	;'m'
   463  007AE8  70                 	db	112	;'p'
   464  007AE9  6C                 	db	108	;'l'
   465  007AEA  65                 	db	101	;'e'
   466  007AEB  74                 	db	116	;'t'
   467  007AEC  65                 	db	101	;'e'
   468  007AED  64                 	db	100	;'d'
   469  007AEE  2E                 	db	46
   470  007AEF  0D                 	db	13
   471  007AF0  0D                 	db	13
   472  007AF1  00                 	db	0
   473  007AF2                     STR_22:
   474  007AF2  53                 	db	83	;'S'
   475  007AF3  65                 	db	101	;'e'
   476  007AF4  6E                 	db	110	;'n'
   477  007AF5  64                 	db	100	;'d'
   478  007AF6  69                 	db	105	;'i'
   479  007AF7  6E                 	db	110	;'n'
   480  007AF8  67                 	db	103	;'g'
   481  007AF9  20                 	db	32
   482  007AFA  6D                 	db	109	;'m'
   483  007AFB  65                 	db	101	;'e'
   484  007AFC  73                 	db	115	;'s'
   485  007AFD  73                 	db	115	;'s'
   486  007AFE  61                 	db	97	;'a'
   487  007AFF  67                 	db	103	;'g'
   488  007B00  65                 	db	101	;'e'
   489  007B01  20                 	db	32
   490  007B02  74                 	db	116	;'t'
   491  007B03  6F                 	db	111	;'o'
   492  007B04  20                 	db	32
   493  007B05  74                 	db	116	;'t'
   494  007B06  68                 	db	104	;'h'
   495  007B07  69                 	db	105	;'i'
   496  007B08  6E                 	db	110	;'n'
   497  007B09  67                 	db	103	;'g'
   498  007B0A  65                 	db	101	;'e'
   499  007B0B  72                 	db	114	;'r'
   500  007B0C  2E                 	db	46
   501  007B0D  69                 	db	105	;'i'
   502  007B0E  6F                 	db	111	;'o'
   503  007B0F  2E                 	db	46
   504  007B10  2E                 	db	46
   505  007B11  2E                 	db	46
   506  007B12  0D                 	db	13
   507  007B13  00                 	db	0
   508  007B14                     STR_21:
   509  007B14  53                 	db	83	;'S'
   510  007B15  79                 	db	121	;'y'
   511  007B16  73                 	db	115	;'s'
   512  007B17  74                 	db	116	;'t'
   513  007B18  65                 	db	101	;'e'
   514  007B19  6D                 	db	109	;'m'
   515  007B1A  20                 	db	32
   516  007B1B  49                 	db	73	;'I'
   517  007B1C  6E                 	db	110	;'n'
   518  007B1D  69                 	db	105	;'i'
   519  007B1E  74                 	db	116	;'t'
   520  007B1F  69                 	db	105	;'i'
   521  007B20  61                 	db	97	;'a'
   522  007B21  6C                 	db	108	;'l'
   523  007B22  69                 	db	105	;'i'
   524  007B23  7A                 	db	122	;'z'
   525  007B24  61                 	db	97	;'a'
   526  007B25  74                 	db	116	;'t'
   527  007B26  69                 	db	105	;'i'
   528  007B27  6F                 	db	111	;'o'
   529  007B28  6E                 	db	110	;'n'
   530  007B29  20                 	db	32
   531  007B2A  66                 	db	102	;'f'
   532  007B2B  61                 	db	97	;'a'
   533  007B2C  69                 	db	105	;'i'
   534  007B2D  6C                 	db	108	;'l'
   535  007B2E  65                 	db	101	;'e'
   536  007B2F  64                 	db	100	;'d'
   537  007B30  2E                 	db	46
   538  007B31  0D                 	db	13
   539  007B32  0D                 	db	13
   540  007B33  00                 	db	0
   541  007B34                     STR_8:
   542  007B34  53                 	db	83	;'S'
   543  007B35  65                 	db	101	;'e'
   544  007B36  74                 	db	116	;'t'
   545  007B37  74                 	db	116	;'t'
   546  007B38  69                 	db	105	;'i'
   547  007B39  6E                 	db	110	;'n'
   548  007B3A  67                 	db	103	;'g'
   549  007B3B  20                 	db	32
   550  007B3C  48                 	db	72	;'H'
   551  007B3D  54                 	db	84	;'T'
   552  007B3E  54                 	db	84	;'T'
   553  007B3F  50                 	db	80	;'P'
   554  007B40  20                 	db	32
   555  007B41  63                 	db	99	;'c'
   556  007B42  6F                 	db	111	;'o'
   557  007B43  6E                 	db	110	;'n'
   558  007B44  66                 	db	102	;'f'
   559  007B45  69                 	db	105	;'i'
   560  007B46  67                 	db	103	;'g'
   561  007B47  75                 	db	117	;'u'
   562  007B48  72                 	db	114	;'r'
   563  007B49  61                 	db	97	;'a'
   564  007B4A  74                 	db	116	;'t'
   565  007B4B  69                 	db	105	;'i'
   566  007B4C  6F                 	db	111	;'o'
   567  007B4D  6E                 	db	110	;'n'
   568  007B4E  73                 	db	115	;'s'
   569  007B4F  2E                 	db	46
   570  007B50  2E                 	db	46
   571  007B51  2E                 	db	46
   572  007B52  0D                 	db	13
   573  007B53  00                 	db	0
   574  007B54                     STR_6:
   575  007B54  42                 	db	66	;'B'
   576  007B55  65                 	db	101	;'e'
   577  007B56  61                 	db	97	;'a'
   578  007B57  72                 	db	114	;'r'
   579  007B58  65                 	db	101	;'e'
   580  007B59  72                 	db	114	;'r'
   581  007B5A  20                 	db	32
   582  007B5B  70                 	db	112	;'p'
   583  007B5C  72                 	db	114	;'r'
   584  007B5D  6F                 	db	111	;'o'
   585  007B5E  66                 	db	102	;'f'
   586  007B5F  69                 	db	105	;'i'
   587  007B60  6C                 	db	108	;'l'
   588  007B61  65                 	db	101	;'e'
   589  007B62  20                 	db	32
   590  007B63  41                 	db	65	;'A'
   591  007B64  63                 	db	99	;'c'
   592  007B65  74                 	db	116	;'t'
   593  007B66  69                 	db	105	;'i'
   594  007B67  76                 	db	118	;'v'
   595  007B68  61                 	db	97	;'a'
   596  007B69  74                 	db	116	;'t'
   597  007B6A  65                 	db	101	;'e'
   598  007B6B  64                 	db	100	;'d'
   599  007B6C  2C                 	db	44
   600  007B6D  20                 	db	32
   601  007B6E  49                 	db	73	;'I'
   602  007B6F  50                 	db	80	;'P'
   603  007B70  3A                 	db	58	;':'
   604  007B71  20                 	db	32
   605  007B72  00                 	db	0
   606  007B73                     STR_2:
   607  007B73  53                 	db	83	;'S'
   608  007B74  65                 	db	101	;'e'
   609  007B75  74                 	db	116	;'t'
   610  007B76  74                 	db	116	;'t'
   611  007B77  69                 	db	105	;'i'
   612  007B78  6E                 	db	110	;'n'
   613  007B79  67                 	db	103	;'g'
   614  007B7A  20                 	db	32
   615  007B7B  49                 	db	73	;'I'
   616  007B7C  50                 	db	80	;'P'
   617  007B7D  20                 	db	32
   618  007B7E  63                 	db	99	;'c'
   619  007B7F  6F                 	db	111	;'o'
   620  007B80  6E                 	db	110	;'n'
   621  007B81  66                 	db	102	;'f'
   622  007B82  69                 	db	105	;'i'
   623  007B83  67                 	db	103	;'g'
   624  007B84  75                 	db	117	;'u'
   625  007B85  72                 	db	114	;'r'
   626  007B86  61                 	db	97	;'a'
   627  007B87  74                 	db	116	;'t'
   628  007B88  69                 	db	105	;'i'
   629  007B89  6F                 	db	111	;'o'
   630  007B8A  6E                 	db	110	;'n'
   631  007B8B  73                 	db	115	;'s'
   632  007B8C  2E                 	db	46
   633  007B8D  2E                 	db	46
   634  007B8E  2E                 	db	46
   635  007B8F  0D                 	db	13
   636  007B90  00                 	db	0
   637  007B91  41                 	db	65	;'A'
   638  007B92  54                 	db	84	;'T'
   639  007B93  2B                 	db	43
   640  007B94  43                 	db	67	;'C'
   641  007B95  47                 	db	71	;'G'
   642  007B96  51                 	db	81	;'Q'
   643  007B97  4D                 	db	77	;'M'
   644  007B98  49                 	db	73	;'I'
   645  007B99  4E                 	db	78	;'N'
   646  007B9A  3D                 	db	61	;'='
   647  007B9B  25                 	db	37
   648  007B9C  75                 	db	117	;'u'
   649  007B9D  2C                 	db	44
   650  007B9E  25                 	db	37
   651  007B9F  75                 	db	117	;'u'
   652  007BA0  2C                 	db	44
   653  007BA1  25                 	db	37
   654  007BA2  75                 	db	117	;'u'
   655  007BA3  2C                 	db	44
   656  007BA4  25                 	db	37
   657  007BA5  75                 	db	117	;'u'
   658  007BA6  2C                 	db	44
   659  007BA7  25                 	db	37
   660  007BA8  75                 	db	117	;'u'
   661  007BA9  2C                 	db	44
   662  007BAA  25                 	db	37
   663  007BAB  75                 	db	117	;'u'
   664  007BAC  0D                 	db	13
   665  007BAD  00                 	db	0
   666  007BAE  41                 	db	65	;'A'
   667  007BAF  54                 	db	84	;'T'
   668  007BB0  2B                 	db	43
   669  007BB1  43                 	db	67	;'C'
   670  007BB2  47                 	db	71	;'G'
   671  007BB3  51                 	db	81	;'Q'
   672  007BB4  52                 	db	82	;'R'
   673  007BB5  45                 	db	69	;'E'
   674  007BB6  51                 	db	81	;'Q'
   675  007BB7  3D                 	db	61	;'='
   676  007BB8  25                 	db	37
   677  007BB9  75                 	db	117	;'u'
   678  007BBA  2C                 	db	44
   679  007BBB  25                 	db	37
   680  007BBC  75                 	db	117	;'u'
   681  007BBD  2C                 	db	44
   682  007BBE  25                 	db	37
   683  007BBF  75                 	db	117	;'u'
   684  007BC0  2C                 	db	44
   685  007BC1  25                 	db	37
   686  007BC2  75                 	db	117	;'u'
   687  007BC3  2C                 	db	44
   688  007BC4  25                 	db	37
   689  007BC5  75                 	db	117	;'u'
   690  007BC6  2C                 	db	44
   691  007BC7  25                 	db	37
   692  007BC8  75                 	db	117	;'u'
   693  007BC9  0D                 	db	13
   694  007BCA  00                 	db	0
   695  007BCB  41                 	db	65	;'A'
   696  007BCC  54                 	db	84	;'T'
   697  007BCD  2B                 	db	43
   698  007BCE  48                 	db	72	;'H'
   699  007BCF  54                 	db	84	;'T'
   700  007BD0  54                 	db	84	;'T'
   701  007BD1  50                 	db	80	;'P'
   702  007BD2  50                 	db	80	;'P'
   703  007BD3  41                 	db	65	;'A'
   704  007BD4  52                 	db	82	;'R'
   705  007BD5  41                 	db	65	;'A'
   706  007BD6  3D                 	db	61	;'='
   707  007BD7  22                 	db	34
   708  007BD8  42                 	db	66	;'B'
   709  007BD9  52                 	db	82	;'R'
   710  007BDA  45                 	db	69	;'E'
   711  007BDB  41                 	db	65	;'A'
   712  007BDC  4B                 	db	75	;'K'
   713  007BDD  45                 	db	69	;'E'
   714  007BDE  4E                 	db	78	;'N'
   715  007BDF  44                 	db	68	;'D'
   716  007BE0  22                 	db	34
   717  007BE1  2C                 	db	44
   718  007BE2  25                 	db	37
   719  007BE3  6C                 	db	108	;'l'
   720  007BE4  64                 	db	100	;'d'
   721  007BE5  0D                 	db	13
   722  007BE6  00                 	db	0
   723  007BE7                     STR_24:
   724  007BE7  52                 	db	82	;'R'
   725  007BE8  65                 	db	101	;'e'
   726  007BE9  63                 	db	99	;'c'
   727  007BEA  65                 	db	101	;'e'
   728  007BEB  69                 	db	105	;'i'
   729  007BEC  76                 	db	118	;'v'
   730  007BED  65                 	db	101	;'e'
   731  007BEE  64                 	db	100	;'d'
   732  007BEF  20                 	db	32
   733  007BF0  64                 	db	100	;'d'
   734  007BF1  61                 	db	97	;'a'
   735  007BF2  74                 	db	116	;'t'
   736  007BF3  61                 	db	97	;'a'
   737  007BF4  20                 	db	32
   738  007BF5  6C                 	db	108	;'l'
   739  007BF6  65                 	db	101	;'e'
   740  007BF7  6E                 	db	110	;'n'
   741  007BF8  67                 	db	103	;'g'
   742  007BF9  74                 	db	116	;'t'
   743  007BFA  68                 	db	104	;'h'
   744  007BFB  3A                 	db	58	;':'
   745  007BFC  20                 	db	32
   746  007BFD  25                 	db	37
   747  007BFE  6C                 	db	108	;'l'
   748  007BFF  64                 	db	100	;'d'
   749  007C00  0D                 	db	13
   750  007C01  00                 	db	0
   751  007C02  41                 	db	65	;'A'
   752  007C03  54                 	db	84	;'T'
   753  007C04  2B                 	db	43
   754  007C05  48                 	db	72	;'H'
   755  007C06  54                 	db	84	;'T'
   756  007C07  54                 	db	84	;'T'
   757  007C08  50                 	db	80	;'P'
   758  007C09  50                 	db	80	;'P'
   759  007C0A  41                 	db	65	;'A'
   760  007C0B  52                 	db	82	;'R'
   761  007C0C  41                 	db	65	;'A'
   762  007C0D  3D                 	db	61	;'='
   763  007C0E  22                 	db	34
   764  007C0F  50                 	db	80	;'P'
   765  007C10  52                 	db	82	;'R'
   766  007C11  4F                 	db	79	;'O'
   767  007C12  50                 	db	80	;'P'
   768  007C13  4F                 	db	79	;'O'
   769  007C14  52                 	db	82	;'R'
   770  007C15  54                 	db	84	;'T'
   771  007C16  22                 	db	34
   772  007C17  2C                 	db	44
   773  007C18  25                 	db	37
   774  007C19  75                 	db	117	;'u'
   775  007C1A  0D                 	db	13
   776  007C1B  00                 	db	0
   777  007C1C  41                 	db	65	;'A'
   778  007C1D  54                 	db	84	;'T'
   779  007C1E  2B                 	db	43
   780  007C1F  48                 	db	72	;'H'
   781  007C20  54                 	db	84	;'T'
   782  007C21  54                 	db	84	;'T'
   783  007C22  50                 	db	80	;'P'
   784  007C23  50                 	db	80	;'P'
   785  007C24  41                 	db	65	;'A'
   786  007C25  52                 	db	82	;'R'
   787  007C26  41                 	db	65	;'A'
   788  007C27  3D                 	db	61	;'='
   789  007C28  22                 	db	34
   790  007C29  54                 	db	84	;'T'
   791  007C2A  49                 	db	73	;'I'
   792  007C2B  4D                 	db	77	;'M'
   793  007C2C  45                 	db	69	;'E'
   794  007C2D  4F                 	db	79	;'O'
   795  007C2E  55                 	db	85	;'U'
   796  007C2F  54                 	db	84	;'T'
   797  007C30  22                 	db	34
   798  007C31  2C                 	db	44
   799  007C32  25                 	db	37
   800  007C33  75                 	db	117	;'u'
   801  007C34  0D                 	db	13
   802  007C35  00                 	db	0
   803  007C36  41                 	db	65	;'A'
   804  007C37  54                 	db	84	;'T'
   805  007C38  2B                 	db	43
   806  007C39  48                 	db	72	;'H'
   807  007C3A  54                 	db	84	;'T'
   808  007C3B  54                 	db	84	;'T'
   809  007C3C  50                 	db	80	;'P'
   810  007C3D  50                 	db	80	;'P'
   811  007C3E  41                 	db	65	;'A'
   812  007C3F  52                 	db	82	;'R'
   813  007C40  41                 	db	65	;'A'
   814  007C41  3D                 	db	61	;'='
   815  007C42  22                 	db	34
   816  007C43  42                 	db	66	;'B'
   817  007C44  52                 	db	82	;'R'
   818  007C45  45                 	db	69	;'E'
   819  007C46  41                 	db	65	;'A'
   820  007C47  4B                 	db	75	;'K'
   821  007C48  22                 	db	34
   822  007C49  2C                 	db	44
   823  007C4A  25                 	db	37
   824  007C4B  6C                 	db	108	;'l'
   825  007C4C  64                 	db	100	;'d'
   826  007C4D  0D                 	db	13
   827  007C4E  00                 	db	0
   828  007C4F  41                 	db	65	;'A'
   829  007C50  54                 	db	84	;'T'
   830  007C51  2B                 	db	43
   831  007C52  48                 	db	72	;'H'
   832  007C53  54                 	db	84	;'T'
   833  007C54  54                 	db	84	;'T'
   834  007C55  50                 	db	80	;'P'
   835  007C56  50                 	db	80	;'P'
   836  007C57  41                 	db	65	;'A'
   837  007C58  52                 	db	82	;'R'
   838  007C59  41                 	db	65	;'A'
   839  007C5A  3D                 	db	61	;'='
   840  007C5B  22                 	db	34
   841  007C5C  52                 	db	82	;'R'
   842  007C5D  45                 	db	69	;'E'
   843  007C5E  44                 	db	68	;'D'
   844  007C5F  49                 	db	73	;'I'
   845  007C60  52                 	db	82	;'R'
   846  007C61  22                 	db	34
   847  007C62  2C                 	db	44
   848  007C63  25                 	db	37
   849  007C64  75                 	db	117	;'u'
   850  007C65  0D                 	db	13
   851  007C66  00                 	db	0
   852  007C67  41                 	db	65	;'A'
   853  007C68  54                 	db	84	;'T'
   854  007C69  2B                 	db	43
   855  007C6A  48                 	db	72	;'H'
   856  007C6B  54                 	db	84	;'T'
   857  007C6C  54                 	db	84	;'T'
   858  007C6D  50                 	db	80	;'P'
   859  007C6E  50                 	db	80	;'P'
   860  007C6F  41                 	db	65	;'A'
   861  007C70  52                 	db	82	;'R'
   862  007C71  41                 	db	65	;'A'
   863  007C72  3D                 	db	61	;'='
   864  007C73  22                 	db	34
   865  007C74  55                 	db	85	;'U'
   866  007C75  53                 	db	83	;'S'
   867  007C76  45                 	db	69	;'E'
   868  007C77  52                 	db	82	;'R'
   869  007C78  44                 	db	68	;'D'
   870  007C79  41                 	db	65	;'A'
   871  007C7A  54                 	db	84	;'T'
   872  007C7B  41                 	db	65	;'A'
   873  007C7C  22                 	db	34
   874  007C7D  2C                 	db	44
   875  007C7E  00                 	db	0
   876  007C7F                     STR_23:
   877  007C7F  48                 	db	72	;'H'
   878  007C80  54                 	db	84	;'T'
   879  007C81  54                 	db	84	;'T'
   880  007C82  50                 	db	80	;'P'
   881  007C83  20                 	db	32
   882  007C84  72                 	db	114	;'r'
   883  007C85  65                 	db	101	;'e'
   884  007C86  73                 	db	115	;'s'
   885  007C87  70                 	db	112	;'p'
   886  007C88  6F                 	db	111	;'o'
   887  007C89  6E                 	db	110	;'n'
   888  007C8A  73                 	db	115	;'s'
   889  007C8B  65                 	db	101	;'e'
   890  007C8C  20                 	db	32
   891  007C8D  63                 	db	99	;'c'
   892  007C8E  6F                 	db	111	;'o'
   893  007C8F  64                 	db	100	;'d'
   894  007C90  65                 	db	101	;'e'
   895  007C91  3A                 	db	58	;':'
   896  007C92  20                 	db	32
   897  007C93  25                 	db	37
   898  007C94  75                 	db	117	;'u'
   899  007C95  0D                 	db	13
   900  007C96  00                 	db	0
   901  007C97                     STR_94:
   902  007C97  41                 	db	65	;'A'
   903  007C98  54                 	db	84	;'T'
   904  007C99  2B                 	db	43
   905  007C9A  48                 	db	72	;'H'
   906  007C9B  54                 	db	84	;'T'
   907  007C9C  54                 	db	84	;'T'
   908  007C9D  50                 	db	80	;'P'
   909  007C9E  50                 	db	80	;'P'
   910  007C9F  41                 	db	65	;'A'
   911  007CA0  52                 	db	82	;'R'
   912  007CA1  41                 	db	65	;'A'
   913  007CA2  3D                 	db	61	;'='
   914  007CA3  22                 	db	34
   915  007CA4  43                 	db	67	;'C'
   916  007CA5  4F                 	db	79	;'O'
   917  007CA6  4E                 	db	78	;'N'
   918  007CA7  54                 	db	84	;'T'
   919  007CA8  45                 	db	69	;'E'
   920  007CA9  4E                 	db	78	;'N'
   921  007CAA  54                 	db	84	;'T'
   922  007CAB  22                 	db	34
   923  007CAC  2C                 	db	44
   924  007CAD  00                 	db	0
   925  007CAE                     STR_12:
   926  007CAE  45                 	db	69	;'E'
   927  007CAF  6E                 	db	110	;'n'
   928  007CB0  67                 	db	103	;'g'
   929  007CB1  69                 	db	105	;'i'
   930  007CB2  6E                 	db	110	;'n'
   931  007CB3  65                 	db	101	;'e'
   932  007CB4  20                 	db	32
   933  007CB5  54                 	db	84	;'T'
   934  007CB6  65                 	db	101	;'e'
   935  007CB7  6D                 	db	109	;'m'
   936  007CB8  70                 	db	112	;'p'
   937  007CB9  65                 	db	101	;'e'
   938  007CBA  72                 	db	114	;'r'
   939  007CBB  61                 	db	97	;'a'
   940  007CBC  74                 	db	116	;'t'
   941  007CBD  75                 	db	117	;'u'
   942  007CBE  72                 	db	114	;'r'
   943  007CBF  65                 	db	101	;'e'
   944  007CC0  20                 	db	32
   945  007CC1  28                 	db	40
   946  007CC2  43                 	db	67	;'C'
   947  007CC3  29                 	db	41
   948  007CC4  00                 	db	0
   949  007CC5                     STR_96:
   950  007CC5  41                 	db	65	;'A'
   951  007CC6  54                 	db	84	;'T'
   952  007CC7  2B                 	db	43
   953  007CC8  48                 	db	72	;'H'
   954  007CC9  54                 	db	84	;'T'
   955  007CCA  54                 	db	84	;'T'
   956  007CCB  50                 	db	80	;'P'
   957  007CCC  44                 	db	68	;'D'
   958  007CCD  41                 	db	65	;'A'
   959  007CCE  54                 	db	84	;'T'
   960  007CCF  41                 	db	65	;'A'
   961  007CD0  3D                 	db	61	;'='
   962  007CD1  25                 	db	37
   963  007CD2  6C                 	db	108	;'l'
   964  007CD3  64                 	db	100	;'d'
   965  007CD4  2C                 	db	44
   966  007CD5  25                 	db	37
   967  007CD6  6C                 	db	108	;'l'
   968  007CD7  64                 	db	100	;'d'
   969  007CD8  0D                 	db	13
   970  007CD9  00                 	db	0
   971  007CDA                     STR_98:
   972  007CDA  41                 	db	65	;'A'
   973  007CDB  54                 	db	84	;'T'
   974  007CDC  2B                 	db	43
   975  007CDD  48                 	db	72	;'H'
   976  007CDE  54                 	db	84	;'T'
   977  007CDF  54                 	db	84	;'T'
   978  007CE0  50                 	db	80	;'P'
   979  007CE1  52                 	db	82	;'R'
   980  007CE2  45                 	db	69	;'E'
   981  007CE3  41                 	db	65	;'A'
   982  007CE4  44                 	db	68	;'D'
   983  007CE5  3D                 	db	61	;'='
   984  007CE6  25                 	db	37
   985  007CE7  6C                 	db	108	;'l'
   986  007CE8  64                 	db	100	;'d'
   987  007CE9  2C                 	db	44
   988  007CEA  25                 	db	37
   989  007CEB  6C                 	db	108	;'l'
   990  007CEC  64                 	db	100	;'d'
   991  007CED  0D                 	db	13
   992  007CEE  00                 	db	0
   993  007CEF  41                 	db	65	;'A'
   994  007CF0  54                 	db	84	;'T'
   995  007CF1  2B                 	db	43
   996  007CF2  48                 	db	72	;'H'
   997  007CF3  54                 	db	84	;'T'
   998  007CF4  54                 	db	84	;'T'
   999  007CF5  50                 	db	80	;'P'
  1000  007CF6  50                 	db	80	;'P'
  1001  007CF7  41                 	db	65	;'A'
  1002  007CF8  52                 	db	82	;'R'
  1003  007CF9  41                 	db	65	;'A'
  1004  007CFA  3D                 	db	61	;'='
  1005  007CFB  22                 	db	34
  1006  007CFC  50                 	db	80	;'P'
  1007  007CFD  52                 	db	82	;'R'
  1008  007CFE  4F                 	db	79	;'O'
  1009  007CFF  49                 	db	73	;'I'
  1010  007D00  50                 	db	80	;'P'
  1011  007D01  22                 	db	34
  1012  007D02  2C                 	db	44
  1013  007D03  00                 	db	0
  1014  007D04                     STR_1:
  1015  007D04  4D                 	db	77	;'M'
  1016  007D05  6F                 	db	111	;'o'
  1017  007D06  64                 	db	100	;'d'
  1018  007D07  65                 	db	101	;'e'
  1019  007D08  6D                 	db	109	;'m'
  1020  007D09  20                 	db	32
  1021  007D0A  49                 	db	73	;'I'
  1022  007D0B  6E                 	db	110	;'n'
  1023  007D0C  69                 	db	105	;'i'
  1024  007D0D  74                 	db	116	;'t'
  1025  007D0E  69                 	db	105	;'i'
  1026  007D0F  61                 	db	97	;'a'
  1027  007D10  6C                 	db	108	;'l'
  1028  007D11  69                 	db	105	;'i'
  1029  007D12  7A                 	db	122	;'z'
  1030  007D13  65                 	db	101	;'e'
  1031  007D14  64                 	db	100	;'d'
  1032  007D15  2E                 	db	46
  1033  007D16  0D                 	db	13
  1034  007D17  0D                 	db	13
  1035  007D18  00                 	db	0
  1036  007D19  41                 	db	65	;'A'
  1037  007D1A  54                 	db	84	;'T'
  1038  007D1B  2B                 	db	43
  1039  007D1C  43                 	db	67	;'C'
  1040  007D1D  47                 	db	71	;'G'
  1041  007D1E  44                 	db	68	;'D'
  1042  007D1F  41                 	db	65	;'A'
  1043  007D20  54                 	db	84	;'T'
  1044  007D21  41                 	db	65	;'A'
  1045  007D22  3D                 	db	61	;'='
  1046  007D23  22                 	db	34
  1047  007D24  50                 	db	80	;'P'
  1048  007D25  50                 	db	80	;'P'
  1049  007D26  50                 	db	80	;'P'
  1050  007D27  22                 	db	34
  1051  007D28  2C                 	db	44
  1052  007D29  25                 	db	37
  1053  007D2A  75                 	db	117	;'u'
  1054  007D2B  0D                 	db	13
  1055  007D2C  00                 	db	0
  1056  007D2D                     STR_16:
  1057  007D2D  56                 	db	86	;'V'
  1058  007D2E  65                 	db	101	;'e'
  1059  007D2F  68                 	db	104	;'h'
  1060  007D30  69                 	db	105	;'i'
  1061  007D31  63                 	db	99	;'c'
  1062  007D32  6C                 	db	108	;'l'
  1063  007D33  65                 	db	101	;'e'
  1064  007D34  20                 	db	32
  1065  007D35  53                 	db	83	;'S'
  1066  007D36  70                 	db	112	;'p'
  1067  007D37  65                 	db	101	;'e'
  1068  007D38  65                 	db	101	;'e'
  1069  007D39  64                 	db	100	;'d'
  1070  007D3A  20                 	db	32
  1071  007D3B  28                 	db	40
  1072  007D3C  4D                 	db	77	;'M'
  1073  007D3D  50                 	db	80	;'P'
  1074  007D3E  48                 	db	72	;'H'
  1075  007D3F  29                 	db	41
  1076  007D40  00                 	db	0
  1077  007D41  41                 	db	65	;'A'
  1078  007D42  54                 	db	84	;'T'
  1079  007D43  2B                 	db	43
  1080  007D44  48                 	db	72	;'H'
  1081  007D45  54                 	db	84	;'T'
  1082  007D46  54                 	db	84	;'T'
  1083  007D47  50                 	db	80	;'P'
  1084  007D48  50                 	db	80	;'P'
  1085  007D49  41                 	db	65	;'A'
  1086  007D4A  52                 	db	82	;'R'
  1087  007D4B  41                 	db	65	;'A'
  1088  007D4C  3D                 	db	61	;'='
  1089  007D4D  22                 	db	34
  1090  007D4E  43                 	db	67	;'C'
  1091  007D4F  49                 	db	73	;'I'
  1092  007D50  44                 	db	68	;'D'
  1093  007D51  22                 	db	34
  1094  007D52  2C                 	db	44
  1095  007D53  00                 	db	0
  1096  007D54                     STR_86:
  1097  007D54  41                 	db	65	;'A'
  1098  007D55  54                 	db	84	;'T'
  1099  007D56  2B                 	db	43
  1100  007D57  48                 	db	72	;'H'
  1101  007D58  54                 	db	84	;'T'
  1102  007D59  54                 	db	84	;'T'
  1103  007D5A  50                 	db	80	;'P'
  1104  007D5B  50                 	db	80	;'P'
  1105  007D5C  41                 	db	65	;'A'
  1106  007D5D  52                 	db	82	;'R'
  1107  007D5E  41                 	db	65	;'A'
  1108  007D5F  3D                 	db	61	;'='
  1109  007D60  22                 	db	34
  1110  007D61  55                 	db	85	;'U'
  1111  007D62  52                 	db	82	;'R'
  1112  007D63  4C                 	db	76	;'L'
  1113  007D64  22                 	db	34
  1114  007D65  2C                 	db	44
  1115  007D66  00                 	db	0
  1116  007D67                     STR_97:
  1117  007D67  41                 	db	65	;'A'
  1118  007D68  54                 	db	84	;'T'
  1119  007D69  2B                 	db	43
  1120  007D6A  48                 	db	72	;'H'
  1121  007D6B  54                 	db	84	;'T'
  1122  007D6C  54                 	db	84	;'T'
  1123  007D6D  50                 	db	80	;'P'
  1124  007D6E  41                 	db	65	;'A'
  1125  007D6F  43                 	db	67	;'C'
  1126  007D70  54                 	db	84	;'T'
  1127  007D71  49                 	db	73	;'I'
  1128  007D72  4F                 	db	79	;'O'
  1129  007D73  4E                 	db	78	;'N'
  1130  007D74  3D                 	db	61	;'='
  1131  007D75  25                 	db	37
  1132  007D76  75                 	db	117	;'u'
  1133  007D77  0D                 	db	13
  1134  007D78  00                 	db	0
  1135  007D79  41                 	db	65	;'A'
  1136  007D7A  54                 	db	84	;'T'
  1137  007D7B  2B                 	db	43
  1138  007D7C  48                 	db	72	;'H'
  1139  007D7D  54                 	db	84	;'T'
  1140  007D7E  54                 	db	84	;'T'
  1141  007D7F  50                 	db	80	;'P'
  1142  007D80  50                 	db	80	;'P'
  1143  007D81  41                 	db	65	;'A'
  1144  007D82  52                 	db	82	;'R'
  1145  007D83  41                 	db	65	;'A'
  1146  007D84  3D                 	db	61	;'='
  1147  007D85  22                 	db	34
  1148  007D86  55                 	db	85	;'U'
  1149  007D87  41                 	db	65	;'A'
  1150  007D88  22                 	db	34
  1151  007D89  2C                 	db	44
  1152  007D8A  00                 	db	0
  1153  007D8B                     STR_27:
  1154  007D8B  53                 	db	83	;'S'
  1155  007D8C  65                 	db	101	;'e'
  1156  007D8D  6E                 	db	110	;'n'
  1157  007D8E  64                 	db	100	;'d'
  1158  007D8F  69                 	db	105	;'i'
  1159  007D90  6E                 	db	110	;'n'
  1160  007D91  67                 	db	103	;'g'
  1161  007D92  20                 	db	32
  1162  007D93  66                 	db	102	;'f'
  1163  007D94  61                 	db	97	;'a'
  1164  007D95  69                 	db	105	;'i'
  1165  007D96  6C                 	db	108	;'l'
  1166  007D97  65                 	db	101	;'e'
  1167  007D98  64                 	db	100	;'d'
  1168  007D99  2E                 	db	46
  1169  007D9A  0D                 	db	13
  1170  007D9B  00                 	db	0
  1171  007D9C                     STR_10:
  1172  007D9C  61                 	db	97	;'a'
  1173  007D9D  70                 	db	112	;'p'
  1174  007D9E  70                 	db	112	;'p'
  1175  007D9F  6C                 	db	108	;'l'
  1176  007DA0  69                 	db	105	;'i'
  1177  007DA1  63                 	db	99	;'c'
  1178  007DA2  61                 	db	97	;'a'
  1179  007DA3  74                 	db	116	;'t'
  1180  007DA4  69                 	db	105	;'i'
  1181  007DA5  6F                 	db	111	;'o'
  1182  007DA6  6E                 	db	110	;'n'
  1183  007DA7  2F                 	db	47
  1184  007DA8  6A                 	db	106	;'j'
  1185  007DA9  73                 	db	115	;'s'
  1186  007DAA  6F                 	db	111	;'o'
  1187  007DAB  6E                 	db	110	;'n'
  1188  007DAC  00                 	db	0
  1189  007DAD  41                 	db	65	;'A'
  1190  007DAE  54                 	db	84	;'T'
  1191  007DAF  2B                 	db	43
  1192  007DB0  48                 	db	72	;'H'
  1193  007DB1  54                 	db	84	;'T'
  1194  007DB2  54                 	db	84	;'T'
  1195  007DB3  50                 	db	80	;'P'
  1196  007DB4  53                 	db	83	;'S'
  1197  007DB5  54                 	db	84	;'T'
  1198  007DB6  41                 	db	65	;'A'
  1199  007DB7  54                 	db	84	;'T'
  1200  007DB8  55                 	db	85	;'U'
  1201  007DB9  53                 	db	83	;'S'
  1202  007DBA  3F                 	db	63	;'?'
  1203  007DBB  0D                 	db	13
  1204  007DBC  00                 	db	0
  1205  007DBD  41                 	db	65	;'A'
  1206  007DBE  54                 	db	84	;'T'
  1207  007DBF  2B                 	db	43
  1208  007DC0  48                 	db	72	;'H'
  1209  007DC1  54                 	db	84	;'T'
  1210  007DC2  54                 	db	84	;'T'
  1211  007DC3  50                 	db	80	;'P'
  1212  007DC4  47                 	db	71	;'G'
  1213  007DC5  45                 	db	69	;'E'
  1214  007DC6  54                 	db	84	;'T'
  1215  007DC7  48                 	db	72	;'H'
  1216  007DC8  45                 	db	69	;'E'
  1217  007DC9  41                 	db	65	;'A'
  1218  007DCA  44                 	db	68	;'D'
  1219  007DCB  3D                 	db	61	;'='
  1220  007DCC  00                 	db	0
  1221  007DCD  41                 	db	65	;'A'
  1222  007DCE  54                 	db	84	;'T'
  1223  007DCF  2B                 	db	43
  1224  007DD0  53                 	db	83	;'S'
  1225  007DD1  41                 	db	65	;'A'
  1226  007DD2  50                 	db	80	;'P'
  1227  007DD3  42                 	db	66	;'B'
  1228  007DD4  52                 	db	82	;'R'
  1229  007DD5  3D                 	db	61	;'='
  1230  007DD6  34                 	db	52	;'4'
  1231  007DD7  2C                 	db	44
  1232  007DD8  25                 	db	37
  1233  007DD9  75                 	db	117	;'u'
  1234  007DDA  0D                 	db	13
  1235  007DDB  00                 	db	0
  1236  007DDC  41                 	db	65	;'A'
  1237  007DDD  54                 	db	84	;'T'
  1238  007DDE  2B                 	db	43
  1239  007DDF  43                 	db	67	;'C'
  1240  007DE0  47                 	db	71	;'G'
  1241  007DE1  50                 	db	80	;'P'
  1242  007DE2  41                 	db	65	;'A'
  1243  007DE3  44                 	db	68	;'D'
  1244  007DE4  44                 	db	68	;'D'
  1245  007DE5  52                 	db	82	;'R'
  1246  007DE6  3D                 	db	61	;'='
  1247  007DE7  25                 	db	37
  1248  007DE8  75                 	db	117	;'u'
  1249  007DE9  0D                 	db	13
  1250  007DEA  00                 	db	0
  1251  007DEB                     STR_18:
  1252  007DEB  46                 	db	70	;'F'
  1253  007DEC  75                 	db	117	;'u'
  1254  007DED  65                 	db	101	;'e'
  1255  007DEE  6C                 	db	108	;'l'
  1256  007DEF  20                 	db	32
  1257  007DF0  4C                 	db	76	;'L'
  1258  007DF1  65                 	db	101	;'e'
  1259  007DF2  76                 	db	118	;'v'
  1260  007DF3  65                 	db	101	;'e'
  1261  007DF4  6C                 	db	108	;'l'
  1262  007DF5  20                 	db	32
  1263  007DF6  28                 	db	40
  1264  007DF7  25                 	db	37
  1265  007DF8  29                 	db	41
  1266  007DF9  00                 	db	0
  1267  007DFA  41                 	db	65	;'A'
  1268  007DFB  54                 	db	84	;'T'
  1269  007DFC  2B                 	db	43
  1270  007DFD  48                 	db	72	;'H'
  1271  007DFE  54                 	db	84	;'T'
  1272  007DFF  54                 	db	84	;'T'
  1273  007E00  50                 	db	80	;'P'
  1274  007E01  53                 	db	83	;'S'
  1275  007E02  43                 	db	67	;'C'
  1276  007E03  4F                 	db	79	;'O'
  1277  007E04  4E                 	db	78	;'N'
  1278  007E05  54                 	db	84	;'T'
  1279  007E06  0D                 	db	13
  1280  007E07  00                 	db	0
  1281  007E08  41                 	db	65	;'A'
  1282  007E09  54                 	db	84	;'T'
  1283  007E0A  2B                 	db	43
  1284  007E0B  43                 	db	67	;'C'
  1285  007E0C  46                 	db	70	;'F'
  1286  007E0D  55                 	db	85	;'U'
  1287  007E0E  4E                 	db	78	;'N'
  1288  007E0F  3D                 	db	61	;'='
  1289  007E10  31                 	db	49	;'1'
  1290  007E11  2C                 	db	44
  1291  007E12  31                 	db	49	;'1'
  1292  007E13  0D                 	db	13
  1293  007E14  00                 	db	0
  1294  007E15  41                 	db	65	;'A'
  1295  007E16  54                 	db	84	;'T'
  1296  007E17  2B                 	db	43
  1297  007E18  43                 	db	67	;'C'
  1298  007E19  47                 	db	71	;'G'
  1299  007E1A  43                 	db	67	;'C'
  1300  007E1B  4C                 	db	76	;'L'
  1301  007E1C  41                 	db	65	;'A'
  1302  007E1D  53                 	db	83	;'S'
  1303  007E1E  53                 	db	83	;'S'
  1304  007E1F  3F                 	db	63	;'?'
  1305  007E20  0D                 	db	13
  1306  007E21  00                 	db	0
  1307  007E22  41                 	db	65	;'A'
  1308  007E23  54                 	db	84	;'T'
  1309  007E24  2B                 	db	43
  1310  007E25  48                 	db	72	;'H'
  1311  007E26  54                 	db	84	;'T'
  1312  007E27  54                 	db	84	;'T'
  1313  007E28  50                 	db	80	;'P'
  1314  007E29  48                 	db	72	;'H'
  1315  007E2A  45                 	db	69	;'E'
  1316  007E2B  41                 	db	65	;'A'
  1317  007E2C  44                 	db	68	;'D'
  1318  007E2D  0D                 	db	13
  1319  007E2E  00                 	db	0
  1320  007E2F  41                 	db	65	;'A'
  1321  007E30  54                 	db	84	;'T'
  1322  007E31  2B                 	db	43
  1323  007E32  48                 	db	72	;'H'
  1324  007E33  54                 	db	84	;'T'
  1325  007E34  54                 	db	84	;'T'
  1326  007E35  50                 	db	80	;'P'
  1327  007E36  54                 	db	84	;'T'
  1328  007E37  45                 	db	69	;'E'
  1329  007E38  52                 	db	82	;'R'
  1330  007E39  4D                 	db	77	;'M'
  1331  007E3A  0D                 	db	13
  1332  007E3B  00                 	db	0
  1333  007E3C                     STR_83:
  1334  007E3C  41                 	db	65	;'A'
  1335  007E3D  54                 	db	84	;'T'
  1336  007E3E  2B                 	db	43
  1337  007E3F  48                 	db	72	;'H'
  1338  007E40  54                 	db	84	;'T'
  1339  007E41  54                 	db	84	;'T'
  1340  007E42  50                 	db	80	;'P'
  1341  007E43  49                 	db	73	;'I'
  1342  007E44  4E                 	db	78	;'N'
  1343  007E45  49                 	db	73	;'I'
  1344  007E46  54                 	db	84	;'T'
  1345  007E47  0D                 	db	13
  1346  007E48  00                 	db	0
  1347  007E49  2C                 	db	44
  1348  007E4A  22                 	db	34
  1349  007E4B  50                 	db	80	;'P'
  1350  007E4C  48                 	db	72	;'H'
  1351  007E4D  4F                 	db	79	;'O'
  1352  007E4E  4E                 	db	78	;'N'
  1353  007E4F  45                 	db	69	;'E'
  1354  007E50  4E                 	db	78	;'N'
  1355  007E51  55                 	db	85	;'U'
  1356  007E52  4D                 	db	77	;'M'
  1357  007E53  22                 	db	34
  1358  007E54  2C                 	db	44
  1359  007E55  00                 	db	0
  1360  007E56  41                 	db	65	;'A'
  1361  007E57  54                 	db	84	;'T'
  1362  007E58  2B                 	db	43
  1363  007E59  43                 	db	67	;'C'
  1364  007E5A  47                 	db	71	;'G'
  1365  007E5B  41                 	db	65	;'A'
  1366  007E5C  54                 	db	84	;'T'
  1367  007E5D  54                 	db	84	;'T'
  1368  007E5E  3D                 	db	61	;'='
  1369  007E5F  30                 	db	48	;'0'
  1370  007E60  0D                 	db	13
  1371  007E61  00                 	db	0
  1372  007E62  41                 	db	65	;'A'
  1373  007E63  54                 	db	84	;'T'
  1374  007E64  2B                 	db	43
  1375  007E65  43                 	db	67	;'C'
  1376  007E66  47                 	db	71	;'G'
  1377  007E67  41                 	db	65	;'A'
  1378  007E68  54                 	db	84	;'T'
  1379  007E69  54                 	db	84	;'T'
  1380  007E6A  3D                 	db	61	;'='
  1381  007E6B  31                 	db	49	;'1'
  1382  007E6C  0D                 	db	13
  1383  007E6D  00                 	db	0
  1384  007E6E  41                 	db	65	;'A'
  1385  007E6F  54                 	db	84	;'T'
  1386  007E70  2B                 	db	43
  1387  007E71  43                 	db	67	;'C'
  1388  007E72  47                 	db	71	;'G'
  1389  007E73  45                 	db	69	;'E'
  1390  007E74  52                 	db	82	;'R'
  1391  007E75  45                 	db	69	;'E'
  1392  007E76  50                 	db	80	;'P'
  1393  007E77  3F                 	db	63	;'?'
  1394  007E78  0D                 	db	13
  1395  007E79  00                 	db	0
  1396  007E7A  41                 	db	65	;'A'
  1397  007E7B  54                 	db	84	;'T'
  1398  007E7C  2B                 	db	43
  1399  007E7D  49                 	db	73	;'I'
  1400  007E7E  50                 	db	80	;'P'
  1401  007E7F  52                 	db	82	;'R'
  1402  007E80  3D                 	db	61	;'='
  1403  007E81  25                 	db	37
  1404  007E82  6C                 	db	108	;'l'
  1405  007E83  64                 	db	100	;'d'
  1406  007E84  0D                 	db	13
  1407  007E85  00                 	db	0
  1408  007E86                     STR_42:
  1409  007E86  2C                 	db	44
  1410  007E87  22                 	db	34
  1411  007E88  43                 	db	67	;'C'
  1412  007E89  4F                 	db	79	;'O'
  1413  007E8A  4E                 	db	78	;'N'
  1414  007E8B  54                 	db	84	;'T'
  1415  007E8C  59                 	db	89	;'Y'
  1416  007E8D  50                 	db	80	;'P'
  1417  007E8E  45                 	db	69	;'E'
  1418  007E8F  22                 	db	34
  1419  007E90  2C                 	db	44
  1420  007E91  00                 	db	0
  1421  007E92  41                 	db	65	;'A'
  1422  007E93  54                 	db	84	;'T'
  1423  007E94  2B                 	db	43
  1424  007E95  53                 	db	83	;'S'
  1425  007E96  41                 	db	65	;'A'
  1426  007E97  50                 	db	80	;'P'
  1427  007E98  42                 	db	66	;'B'
  1428  007E99  52                 	db	82	;'R'
  1429  007E9A  3D                 	db	61	;'='
  1430  007E9B  30                 	db	48	;'0'
  1431  007E9C  2C                 	db	44
  1432  007E9D  00                 	db	0
  1433  007E9E  41                 	db	65	;'A'
  1434  007E9F  54                 	db	84	;'T'
  1435  007EA0  2B                 	db	43
  1436  007EA1  43                 	db	67	;'C'
  1437  007EA2  47                 	db	71	;'G'
  1438  007EA3  41                 	db	65	;'A'
  1439  007EA4  43                 	db	67	;'C'
  1440  007EA5  54                 	db	84	;'T'
  1441  007EA6  3D                 	db	61	;'='
  1442  007EA7  30                 	db	48	;'0'
  1443  007EA8  2C                 	db	44
  1444  007EA9  00                 	db	0
  1445  007EAA                     STR_54:
  1446  007EAA  41                 	db	65	;'A'
  1447  007EAB  54                 	db	84	;'T'
  1448  007EAC  2B                 	db	43
  1449  007EAD  53                 	db	83	;'S'
  1450  007EAE  41                 	db	65	;'A'
  1451  007EAF  50                 	db	80	;'P'
  1452  007EB0  42                 	db	66	;'B'
  1453  007EB1  52                 	db	82	;'R'
  1454  007EB2  3D                 	db	61	;'='
  1455  007EB3  31                 	db	49	;'1'
  1456  007EB4  2C                 	db	44
  1457  007EB5  00                 	db	0
  1458  007EB6  41                 	db	65	;'A'
  1459  007EB7  54                 	db	84	;'T'
  1460  007EB8  2B                 	db	43
  1461  007EB9  43                 	db	67	;'C'
  1462  007EBA  47                 	db	71	;'G'
  1463  007EBB  41                 	db	65	;'A'
  1464  007EBC  43                 	db	67	;'C'
  1465  007EBD  54                 	db	84	;'T'
  1466  007EBE  3D                 	db	61	;'='
  1467  007EBF  31                 	db	49	;'1'
  1468  007EC0  2C                 	db	44
  1469  007EC1  00                 	db	0
  1470  007EC2                     STR_56:
  1471  007EC2  41                 	db	65	;'A'
  1472  007EC3  54                 	db	84	;'T'
  1473  007EC4  2B                 	db	43
  1474  007EC5  53                 	db	83	;'S'
  1475  007EC6  41                 	db	65	;'A'
  1476  007EC7  50                 	db	80	;'P'
  1477  007EC8  42                 	db	66	;'B'
  1478  007EC9  52                 	db	82	;'R'
  1479  007ECA  3D                 	db	61	;'='
  1480  007ECB  32                 	db	50	;'2'
  1481  007ECC  2C                 	db	44
  1482  007ECD  00                 	db	0
  1483  007ECE                     STR_41:
  1484  007ECE  41                 	db	65	;'A'
  1485  007ECF  54                 	db	84	;'T'
  1486  007ED0  2B                 	db	43
  1487  007ED1  53                 	db	83	;'S'
  1488  007ED2  41                 	db	65	;'A'
  1489  007ED3  50                 	db	80	;'P'
  1490  007ED4  42                 	db	66	;'B'
  1491  007ED5  52                 	db	82	;'R'
  1492  007ED6  3D                 	db	61	;'='
  1493  007ED7  33                 	db	51	;'3'
  1494  007ED8  2C                 	db	44
  1495  007ED9  00                 	db	0
  1496  007EDA  41                 	db	65	;'A'
  1497  007EDB  54                 	db	84	;'T'
  1498  007EDC  2B                 	db	43
  1499  007EDD  43                 	db	67	;'C'
  1500  007EDE  47                 	db	71	;'G'
  1501  007EDF  43                 	db	67	;'C'
  1502  007EE0  4C                 	db	76	;'L'
  1503  007EE1  41                 	db	65	;'A'
  1504  007EE2  53                 	db	83	;'S'
  1505  007EE3  53                 	db	83	;'S'
  1506  007EE4  3D                 	db	61	;'='
  1507  007EE5  00                 	db	0
  1508  007EE6  41                 	db	65	;'A'
  1509  007EE7  54                 	db	84	;'T'
  1510  007EE8  2B                 	db	43
  1511  007EE9  43                 	db	67	;'C'
  1512  007EEA  47                 	db	71	;'G'
  1513  007EEB  44                 	db	68	;'D'
  1514  007EEC  43                 	db	67	;'C'
  1515  007EED  4F                 	db	79	;'O'
  1516  007EEE  4E                 	db	78	;'N'
  1517  007EEF  54                 	db	84	;'T'
  1518  007EF0  3D                 	db	61	;'='
  1519  007EF1  00                 	db	0
  1520  007EF2  41                 	db	65	;'A'
  1521  007EF3  54                 	db	84	;'T'
  1522  007EF4  2B                 	db	43
  1523  007EF5  43                 	db	67	;'C'
  1524  007EF6  47                 	db	71	;'G'
  1525  007EF7  52                 	db	82	;'R'
  1526  007EF8  45                 	db	69	;'E'
  1527  007EF9  47                 	db	71	;'G'
  1528  007EFA  3F                 	db	63	;'?'
  1529  007EFB  0D                 	db	13
  1530  007EFC  00                 	db	0
  1531  007EFD  41                 	db	65	;'A'
  1532  007EFE  54                 	db	84	;'T'
  1533  007EFF  2B                 	db	43
  1534  007F00  43                 	db	67	;'C'
  1535  007F01  47                 	db	71	;'G'
  1536  007F02  53                 	db	83	;'S'
  1537  007F03  4D                 	db	77	;'M'
  1538  007F04  53                 	db	83	;'S'
  1539  007F05  3F                 	db	63	;'?'
  1540  007F06  0D                 	db	13
  1541  007F07  00                 	db	0
  1542  007F08  41                 	db	65	;'A'
  1543  007F09  54                 	db	84	;'T'
  1544  007F0A  2B                 	db	43
  1545  007F0B  43                 	db	67	;'C'
  1546  007F0C  47                 	db	71	;'G'
  1547  007F0D  41                 	db	65	;'A'
  1548  007F0E  43                 	db	67	;'C'
  1549  007F0F  54                 	db	84	;'T'
  1550  007F10  3F                 	db	63	;'?'
  1551  007F11  0D                 	db	13
  1552  007F12  00                 	db	0
  1553  007F13  41                 	db	65	;'A'
  1554  007F14  54                 	db	84	;'T'
  1555  007F15  2B                 	db	43
  1556  007F16  43                 	db	67	;'C'
  1557  007F17  47                 	db	71	;'G'
  1558  007F18  41                 	db	65	;'A'
  1559  007F19  54                 	db	84	;'T'
  1560  007F1A  54                 	db	84	;'T'
  1561  007F1B  3F                 	db	63	;'?'
  1562  007F1C  0D                 	db	13
  1563  007F1D  00                 	db	0
  1564  007F1E  41                 	db	65	;'A'
  1565  007F1F  54                 	db	84	;'T'
  1566  007F20  2B                 	db	43
  1567  007F21  43                 	db	67	;'C'
  1568  007F22  47                 	db	71	;'G'
  1569  007F23  45                 	db	69	;'E'
  1570  007F24  52                 	db	82	;'R'
  1571  007F25  45                 	db	69	;'E'
  1572  007F26  50                 	db	80	;'P'
  1573  007F27  3D                 	db	61	;'='
  1574  007F28  00                 	db	0
  1575  007F29  41                 	db	65	;'A'
  1576  007F2A  54                 	db	84	;'T'
  1577  007F2B  2B                 	db	43
  1578  007F2C  43                 	db	67	;'C'
  1579  007F2D  4F                 	db	79	;'O'
  1580  007F2E  50                 	db	80	;'P'
  1581  007F2F  53                 	db	83	;'S'
  1582  007F30  3F                 	db	63	;'?'
  1583  007F31  0D                 	db	13
  1584  007F32  00                 	db	0
  1585  007F33  41                 	db	65	;'A'
  1586  007F34  54                 	db	84	;'T'
  1587  007F35  2B                 	db	43
  1588  007F36  43                 	db	67	;'C'
  1589  007F37  47                 	db	71	;'G'
  1590  007F38  52                 	db	82	;'R'
  1591  007F39  45                 	db	69	;'E'
  1592  007F3A  47                 	db	71	;'G'
  1593  007F3B  3D                 	db	61	;'='
  1594  007F3C  00                 	db	0
  1595  007F3D  41                 	db	65	;'A'
  1596  007F3E  54                 	db	84	;'T'
  1597  007F3F  2B                 	db	43
  1598  007F40  43                 	db	67	;'C'
  1599  007F41  47                 	db	71	;'G'
  1600  007F42  53                 	db	83	;'S'
  1601  007F43  4D                 	db	77	;'M'
  1602  007F44  53                 	db	83	;'S'
  1603  007F45  3D                 	db	61	;'='
  1604  007F46  00                 	db	0
  1605  007F47  41                 	db	65	;'A'
  1606  007F48  54                 	db	84	;'T'
  1607  007F49  2B                 	db	43
  1608  007F4A  43                 	db	67	;'C'
  1609  007F4B  49                 	db	73	;'I'
  1610  007F4C  4D                 	db	77	;'M'
  1611  007F4D  49                 	db	73	;'I'
  1612  007F4E  0D                 	db	13
  1613  007F4F  00                 	db	0
  1614  007F50  41                 	db	65	;'A'
  1615  007F51  54                 	db	84	;'T'
  1616  007F52  2B                 	db	43
  1617  007F53  43                 	db	67	;'C'
  1618  007F54  4E                 	db	78	;'N'
  1619  007F55  55                 	db	85	;'U'
  1620  007F56  4D                 	db	77	;'M'
  1621  007F57  0D                 	db	13
  1622  007F58  00                 	db	0
  1623  007F59  2C                 	db	44
  1624  007F5A  22                 	db	34
  1625  007F5B  52                 	db	82	;'R'
  1626  007F5C  41                 	db	65	;'A'
  1627  007F5D  54                 	db	84	;'T'
  1628  007F5E  45                 	db	69	;'E'
  1629  007F5F  22                 	db	34
  1630  007F60  2C                 	db	44
  1631  007F61  00                 	db	0
  1632  007F62  2C                 	db	44
  1633  007F63  22                 	db	34
  1634  007F64  55                 	db	85	;'U'
  1635  007F65  53                 	db	83	;'S'
  1636  007F66  45                 	db	69	;'E'
  1637  007F67  52                 	db	82	;'R'
  1638  007F68  22                 	db	34
  1639  007F69  2C                 	db	44
  1640  007F6A  00                 	db	0
  1641  007F6B                     STR_4:
  1642  007F6B  49                 	db	73	;'I'
  1643  007F6C  6E                 	db	110	;'n'
  1644  007F6D  74                 	db	116	;'t'
  1645  007F6E  65                 	db	101	;'e'
  1646  007F6F  72                 	db	114	;'r'
  1647  007F70  6E                 	db	110	;'n'
  1648  007F71  65                 	db	101	;'e'
  1649  007F72  74                 	db	116	;'t'
  1650  007F73  00                 	db	0
  1651  007F74  41                 	db	65	;'A'
  1652  007F75  54                 	db	84	;'T'
  1653  007F76  2B                 	db	43
  1654  007F77  47                 	db	71	;'G'
  1655  007F78  4D                 	db	77	;'M'
  1656  007F79  49                 	db	73	;'I'
  1657  007F7A  0D                 	db	13
  1658  007F7B  00                 	db	0
  1659  007F7C  41                 	db	65	;'A'
  1660  007F7D  54                 	db	84	;'T'
  1661  007F7E  2B                 	db	43
  1662  007F7F  47                 	db	71	;'G'
  1663  007F80  4F                 	db	79	;'O'
  1664  007F81  49                 	db	73	;'I'
  1665  007F82  0D                 	db	13
  1666  007F83  00                 	db	0
  1667  007F84  41                 	db	65	;'A'
  1668  007F85  54                 	db	84	;'T'
  1669  007F86  2B                 	db	43
  1670  007F87  47                 	db	71	;'G'
  1671  007F88  4D                 	db	77	;'M'
  1672  007F89  4D                 	db	77	;'M'
  1673  007F8A  0D                 	db	13
  1674  007F8B  00                 	db	0
  1675  007F8C  41                 	db	65	;'A'
  1676  007F8D  54                 	db	84	;'T'
  1677  007F8E  2B                 	db	43
  1678  007F8F  47                 	db	71	;'G'
  1679  007F90  53                 	db	83	;'S'
  1680  007F91  4E                 	db	78	;'N'
  1681  007F92  0D                 	db	13
  1682  007F93  00                 	db	0
  1683  007F94  41                 	db	65	;'A'
  1684  007F95  54                 	db	84	;'T'
  1685  007F96  2B                 	db	43
  1686  007F97  43                 	db	67	;'C'
  1687  007F98  53                 	db	83	;'S'
  1688  007F99  51                 	db	81	;'Q'
  1689  007F9A  0D                 	db	13
  1690  007F9B  00                 	db	0
  1691  007F9C  41                 	db	65	;'A'
  1692  007F9D  54                 	db	84	;'T'
  1693  007F9E  2B                 	db	43
  1694  007F9F  47                 	db	71	;'G'
  1695  007FA0  4D                 	db	77	;'M'
  1696  007FA1  52                 	db	82	;'R'
  1697  007FA2  0D                 	db	13
  1698  007FA3  00                 	db	0
  1699  007FA4  2C                 	db	44
  1700  007FA5  22                 	db	34
  1701  007FA6  50                 	db	80	;'P'
  1702  007FA7  57                 	db	87	;'W'
  1703  007FA8  44                 	db	68	;'D'
  1704  007FA9  22                 	db	34
  1705  007FAA  2C                 	db	44
  1706  007FAB  00                 	db	0
  1707  007FAC                     STR_44:
  1708  007FAC  2C                 	db	44
  1709  007FAD  22                 	db	34
  1710  007FAE  41                 	db	65	;'A'
  1711  007FAF  50                 	db	80	;'P'
  1712  007FB0  4E                 	db	78	;'N'
  1713  007FB1  22                 	db	34
  1714  007FB2  2C                 	db	44
  1715  007FB3  00                 	db	0
  1716  007FB4                     STR_5:
  1717  007FB4  44                 	db	68	;'D'
  1718  007FB5  6F                 	db	111	;'o'
  1719  007FB6  6E                 	db	110	;'n'
  1720  007FB7  65                 	db	101	;'e'
  1721  007FB8  2E                 	db	46
  1722  007FB9  0D                 	db	13
  1723  007FBA  0D                 	db	13
  1724  007FBB  00                 	db	0
  1725  007FBC  2C                 	db	44
  1726  007FBD  22                 	db	34
  1727  007FBE  49                 	db	73	;'I'
  1728  007FBF  50                 	db	80	;'P'
  1729  007FC0  22                 	db	34
  1730  007FC1  2C                 	db	44
  1731  007FC2  00                 	db	0
  1732  007FC3                     STR_25:
  1733  007FC3  44                 	db	68	;'D'
  1734  007FC4  61                 	db	97	;'a'
  1735  007FC5  74                 	db	116	;'t'
  1736  007FC6  61                 	db	97	;'a'
  1737  007FC7  3A                 	db	58	;':'
  1738  007FC8  20                 	db	32
  1739  007FC9  00                 	db	0
  1740  007FCA                     STR_29:
  1741  007FCA  41                 	db	65	;'A'
  1742  007FCB  54                 	db	84	;'T'
  1743  007FCC  45                 	db	69	;'E'
  1744  007FCD  30                 	db	48	;'0'
  1745  007FCE  0D                 	db	13
  1746  007FCF  00                 	db	0
  1747  007FD0                     STR_32:
  1748  007FD0  41                 	db	65	;'A'
  1749  007FD1  54                 	db	84	;'T'
  1750  007FD2  26                 	db	38
  1751  007FD3  57                 	db	87	;'W'
  1752  007FD4  0D                 	db	13
  1753  007FD5  00                 	db	0
  1754  007FD6  41                 	db	65	;'A'
  1755  007FD7  54                 	db	84	;'T'
  1756  007FD8  49                 	db	73	;'I'
  1757  007FD9  0D                 	db	13
  1758  007FDA  00                 	db	0
  1759  007FDB                     STR_15:
  1760  007FDB  33                 	db	51	;'3'
  1761  007FDC  35                 	db	53	;'5'
  1762  007FDD  30                 	db	48	;'0'
  1763  007FDE  30                 	db	48	;'0'
  1764  007FDF  00                 	db	0
  1765  007FE0                     STR_3:
  1766  007FE0  47                 	db	71	;'G'
  1767  007FE1  50                 	db	80	;'P'
  1768  007FE2  52                 	db	82	;'R'
  1769  007FE3  53                 	db	83	;'S'
  1770  007FE4  00                 	db	0
  1771  007FE5                     STR_28:
  1772  007FE5  41                 	db	65	;'A'
  1773  007FE6  54                 	db	84	;'T'
  1774  007FE7  0D                 	db	13
  1775  007FE8  00                 	db	0
  1776  007FE9                     STR_14:
  1777  007FE9  52                 	db	82	;'R'
  1778  007FEA  50                 	db	80	;'P'
  1779  007FEB  4D                 	db	77	;'M'
  1780  007FEC  00                 	db	0
  1781  007FED  43                 	db	67	;'C'
  1782  007FEE  43                 	db	67	;'C'
  1783  007FEF  00                 	db	0
  1784  007FF0  43                 	db	67	;'C'
  1785  007FF1  47                 	db	71	;'G'
  1786  007FF2  00                 	db	0
  1787  007FF3                     STR_13:
  1788  007FF3  33                 	db	51	;'3'
  1789  007FF4  30                 	db	48	;'0'
  1790  007FF5  00                 	db	0
  1791  007FF6                     STR_19:
  1792  007FF6  35                 	db	53	;'5'
  1793  007FF7  30                 	db	48	;'0'
  1794  007FF8  00                 	db	0
  1795  007FF9                     STR_17:
  1796  007FF9  33                 	db	51	;'3'
  1797  007FFA  35                 	db	53	;'5'
  1798  007FFB  00                 	db	0
  1799  007FFC                     STR_71:
  1800  007FFC  42                 	db	66	;'B'
  1801  007FFD  00                 	db	0
  1802  007FFE  00                 	db	0	; dummy byte at the end
  1803  0000                     
  1804                           	psect	nvCOMRAM
  1805  00007C                     __pnvCOMRAM:
  1806                           	callstack 0
  1807  00007C                     _val:
  1808                           	callstack 0
  1809  00007C                     	ds	2
  1810  0000                     _TXSTA	set	4012
  1811  0000                     _INTCONbits	set	4082
  1812  0000                     _TMR0IE	set	32661
  1813  0000                     _TMR0IF	set	32658
  1814  0000                     _GIE	set	32663
  1815  0000                     _INT0IF	set	32657
  1816  0000                     _PIE1	set	3997
  1817  0000                     _T0CON	set	4053
  1818  0000                     _INTCON2	set	4081
  1819  0000                     _INTCON	set	4082
  1820  0000                     _TMR0	set	4054
  1821  0000                     _RCSTA	set	4011
  1822  0000                     _TXSTAbits	set	4012
  1823  0000                     _RCIF	set	31989
  1824                           
  1825                           ; #config settings
  1826                           
  1827                           	psect	cinit
  1828  0015DE                     __pcinit:
  1829                           	callstack 0
  1830  0015DE                     start_initialization:
  1831                           	callstack 0
  1832  0015DE                     __initialization:
  1833                           	callstack 0
  1834                           
  1835                           ; Initialize objects allocated to BANK0 (4 bytes)
  1836                           ; load TBLPTR registers with __pidataBANK0
  1837  0015DE  0E9E               	movlw	low __pidataBANK0
  1838  0015E0  6EF6               	movwf	tblptrl,c
  1839  0015E2  0E1E               	movlw	high __pidataBANK0
  1840  0015E4  6EF7               	movwf	tblptrh,c
  1841  0015E6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1842  0015E8  6EF8               	movwf	tblptru,c
  1843  0015EA  EE00  F0E1         	lfsr	0,__pdataBANK0
  1844  0015EE  EE10 F004          	lfsr	1,4
  1845  0015F2                     copy_data0:
  1846  0015F2  0009               	tblrd		*+
  1847  0015F4  CFF5 FFEE          	movff	tablat,postinc0
  1848  0015F8  50E5               	movf	postdec1,w,c
  1849  0015FA  50E1               	movf	fsr1l,w,c
  1850  0015FC  E1FA               	bnz	copy_data0
  1851                           
  1852                           ; Initialize objects allocated to COMRAM (4 bytes)
  1853                           ; load TBLPTR registers with __pidataCOMRAM
  1854  0015FE  0E9A               	movlw	low __pidataCOMRAM
  1855  001600  6EF6               	movwf	tblptrl,c
  1856  001602  0E1E               	movlw	high __pidataCOMRAM
  1857  001604  6EF7               	movwf	tblptrh,c
  1858  001606  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1859  001608  6EF8               	movwf	tblptru,c
  1860  00160A  EE00  F078         	lfsr	0,__pdataCOMRAM
  1861  00160E  EE10 F004          	lfsr	1,4
  1862  001612                     copy_data1:
  1863  001612  0009               	tblrd		*+
  1864  001614  CFF5 FFEE          	movff	tablat,postinc0
  1865  001618  50E5               	movf	postdec1,w,c
  1866  00161A  50E1               	movf	fsr1l,w,c
  1867  00161C  E1FA               	bnz	copy_data1
  1868                           
  1869                           ; Clear objects allocated to BANK3 (200 bytes)
  1870  00161E  EE03  F000         	lfsr	0,__pbssBANK3
  1871  001622  0EC8               	movlw	200
  1872  001624                     clear_0:
  1873  001624  6AEE               	clrf	postinc0,c
  1874  001626  06E8               	decf	wreg,f,c
  1875  001628  E1FD               	bnz	clear_0
  1876                           
  1877                           ; Clear objects allocated to BANK2 (240 bytes)
  1878  00162A  EE02  F000         	lfsr	0,__pbssBANK2
  1879  00162E  0EF0               	movlw	240
  1880  001630                     clear_1:
  1881  001630  6AEE               	clrf	postinc0,c
  1882  001632  06E8               	decf	wreg,f,c
  1883  001634  E1FD               	bnz	clear_1
  1884                           
  1885                           ; Clear objects allocated to BANK1 (220 bytes)
  1886  001636  EE01  F000         	lfsr	0,__pbssBANK1
  1887  00163A  0EDC               	movlw	220
  1888  00163C                     clear_2:
  1889  00163C  6AEE               	clrf	postinc0,c
  1890  00163E  06E8               	decf	wreg,f,c
  1891  001640  E1FD               	bnz	clear_2
  1892                           
  1893                           ; Clear objects allocated to BANK0 (68 bytes)
  1894  001642  EE00  F080         	lfsr	0,__pbssBANK0
  1895  001646  0E44               	movlw	68
  1896  001648                     clear_3:
  1897  001648  6AEE               	clrf	postinc0,c
  1898  00164A  06E8               	decf	wreg,f,c
  1899  00164C  E1FD               	bnz	clear_3
  1900                           
  1901                           ; Clear objects allocated to COMRAM (13 bytes)
  1902  00164E  EE00  F06B         	lfsr	0,__pbssCOMRAM
  1903  001652  0E0D               	movlw	13
  1904  001654                     clear_4:
  1905  001654  6AEE               	clrf	postinc0,c
  1906  001656  06E8               	decf	wreg,f,c
  1907  001658  E1FD               	bnz	clear_4
  1908  00165A                     end_of_initialization:
  1909                           	callstack 0
  1910  00165A                     __end_of__initialization:
  1911                           	callstack 0
  1912  00165A  907E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1913  00165C  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1914  00165E  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1915  001660  6EF8               	movwf	tblptru,c
  1916  001662  0100               	movlb	0
  1917  001664  EF40  F00F         	goto	_main	;jump to C main() function
  1918                           
  1919                           	psect	bssCOMRAM
  1920  00006B                     __pbssCOMRAM:
  1921                           	callstack 0
  1922  00006B                     _IncVar:
  1923                           	callstack 0
  1924  00006B                     	ds	4
  1925  00006F                     _Rxfifocurrent@SIM800x_SDM$F1156:
  1926                           	callstack 0
  1927  00006F                     	ds	2
  1928  000071                     _Rxfifoptr@SIM800x_SDM$F1155:
  1929                           	callstack 0
  1930  000071                     	ds	2
  1931  000073                     _Rxstatus:
  1932                           	callstack 0
  1933  000073                     	ds	1
  1934  000074                     _Rxfifocurrent:
  1935                           	callstack 0
  1936  000074                     	ds	1
  1937  000075                     _Rxfifoptr:
  1938                           	callstack 0
  1939  000075                     	ds	1
  1940  000076                     _cpos:
  1941                           	callstack 0
  1942  000076                     	ds	2
  1943                           
  1944                           	psect	dataCOMRAM
  1945  000078                     __pdataCOMRAM:
  1946                           	callstack 0
  1947  000078                     _Tout:
  1948                           	callstack 0
  1949  000078                     	ds	4
  1950                           
  1951                           	psect	bssBANK0
  1952  000080                     __pbssBANK0:
  1953                           	callstack 0
  1954  000080                     	ds	20
  1955  000094                     	ds	20
  1956  0000A8                     	ds	20
  1957  0000BC                     _DecVar:
  1958                           	callstack 0
  1959  0000BC                     	ds	4
  1960  0000C0                     	ds	2
  1961  0000C2                     	ds	2
  1962                           
  1963                           	psect	dataBANK0
  1964  0000E1                     __pdataBANK0:
  1965                           	callstack 0
  1966  0000E1                     	ds	4
  1967                           
  1968                           	psect	bssBANK1
  1969  000100                     __pbssBANK1:
  1970                           	callstack 0
  1971  000100                     	ds	40
  1972  000128                     	ds	30
  1973  000146                     	ds	30
  1974  000164                     	ds	30
  1975  000182                     	ds	30
  1976  0001A0                     	ds	30
  1977  0001BE                     _rxmessage:
  1978                           	callstack 0
  1979  0001BE                     	ds	30
  1980                           
  1981                           	psect	bssBANK2
  1982  000200                     __pbssBANK2:
  1983                           	callstack 0
  1984  000200                     _RxFIFO:
  1985                           	callstack 0
  1986  000200                     	ds	100
  1987  000264                     	ds	40
  1988  00028C                     _txmessage:
  1989                           	callstack 0
  1990  00028C                     	ds	100
  1991                           
  1992                           	psect	bssBANK3
  1993  000300                     __pbssBANK3:
  1994                           	callstack 0
  1995  000300                     _RxFIFO@SIM800x_SDM$F1154:
  1996                           	callstack 0
  1997  000300                     	ds	200
  1998                           
  1999                           	psect	cstackBANK0
  2000  0000C4                     __pcstackBANK0:
  2001                           	callstack 0
  2002  0000C4                     SystemTask@msg:
  2003                           	callstack 0
  2004                           
  2005                           ; 20 bytes @ 0x0
  2006  0000C4                     	ds	20
  2007  0000D8                     SystemTask@cmd:
  2008                           	callstack 0
  2009                           
  2010                           ; 1 bytes @ 0x14
  2011  0000D8                     	ds	1
  2012  0000D9                     SystemTask@scode:
  2013                           	callstack 0
  2014                           
  2015                           ; 2 bytes @ 0x15
  2016  0000D9                     	ds	2
  2017  0000DB                     SystemTask@errcode:
  2018                           	callstack 0
  2019                           
  2020                           ; 2 bytes @ 0x17
  2021  0000DB                     	ds	2
  2022  0000DD                     SystemTask@cnt:
  2023                           	callstack 0
  2024                           
  2025                           ; 4 bytes @ 0x19
  2026  0000DD                     	ds	4
  2027                           
  2028                           	psect	cstackCOMRAM
  2029  000001                     __pcstackCOMRAM:
  2030                           	callstack 0
  2031  000001                     ??_SIM800xSDMPeek:
  2032  000001                     ?_strlen:
  2033                           	callstack 0
  2034  000001                     ?___awmod:
  2035                           	callstack 0
  2036  000001                     ?___lwmod:
  2037                           	callstack 0
  2038  000001                     ?_Tick_ms:
  2039                           	callstack 0
  2040  000001                     ?___lmul:
  2041                           	callstack 0
  2042  000001                     ?___lldiv:
  2043                           	callstack 0
  2044  000001                     SoftUARTTransmitByte@data:
  2045                           	callstack 0
  2046  000001                     SIM800xSDMSendByte@data:
  2047                           	callstack 0
  2048  000001                     USARTAsyncInit@bgr:
  2049                           	callstack 0
  2050  000001                     AddEntryToJsonObject@JsonObject:
  2051                           	callstack 0
  2052  000001                     SIM800xSDMSendBytes@data:
  2053                           	callstack 0
  2054  000001                     ___awmod@dividend:
  2055                           	callstack 0
  2056  000001                     ___lwmod@dividend:
  2057                           	callstack 0
  2058  000001                     strlen@s:
  2059                           	callstack 0
  2060  000001                     Wait_ms@value:
  2061                           	callstack 0
  2062  000001                     ___lmul@multiplier:
  2063                           	callstack 0
  2064  000001                     ___lldiv@dividend:
  2065                           	callstack 0
  2066                           
  2067                           ; 4 bytes @ 0x0
  2068  000001                     	ds	1
  2069  000002                     SoftUARTTransmitByte@tmp:
  2070                           	callstack 0
  2071  000002                     SIM800xSDMPrint@str:
  2072                           	callstack 0
  2073                           
  2074                           ; 2 bytes @ 0x1
  2075  000002                     	ds	1
  2076  000003                     SoftUARTTransmitByte@k:
  2077                           	callstack 0
  2078  000003                     SIM800xSDMPeek@idx:
  2079                           	callstack 0
  2080  000003                     AddEntryToJsonObject@key:
  2081                           	callstack 0
  2082  000003                     SIM800xSDMSendBytes@cnt:
  2083                           	callstack 0
  2084  000003                     ___awmod@divisor:
  2085                           	callstack 0
  2086  000003                     ___lwmod@divisor:
  2087                           	callstack 0
  2088  000003                     strlen@cp:
  2089                           	callstack 0
  2090                           
  2091                           ; 2 bytes @ 0x2
  2092  000003                     	ds	1
  2093  000004                     SoftUARTPrint@str:
  2094                           	callstack 0
  2095                           
  2096                           ; 2 bytes @ 0x3
  2097  000004                     	ds	1
  2098  000005                     ??_Wait_ms:
  2099  000005                     ___awmod@counter:
  2100                           	callstack 0
  2101  000005                     ___lwmod@counter:
  2102                           	callstack 0
  2103  000005                     AddEntryToJsonObject@value:
  2104                           	callstack 0
  2105  000005                     ___lmul@multiplicand:
  2106                           	callstack 0
  2107  000005                     ___lldiv@divisor:
  2108                           	callstack 0
  2109                           
  2110                           ; 4 bytes @ 0x4
  2111  000005                     	ds	1
  2112  000006                     ?_SIM800xSDMRxAvailable:
  2113                           	callstack 0
  2114  000006                     SIM800xSDMReadByte@data:
  2115                           	callstack 0
  2116  000006                     ___awmod@sign:
  2117                           	callstack 0
  2118                           
  2119                           ; 1 bytes @ 0x5
  2120  000006                     	ds	1
  2121  000007                     ??_SoftUARTRxAvailable:
  2122  000007                     ?_SoftUARTReceiveByte:
  2123                           	callstack 0
  2124  000007                     AddEntryToJsonObject@Cpos:
  2125                           	callstack 0
  2126                           
  2127                           ; 2 bytes @ 0x6
  2128  000007                     	ds	1
  2129  000008                     ??_SIM800xSDMRxAvailable:
  2130                           
  2131                           ; 1 bytes @ 0x7
  2132  000008                     	ds	1
  2133  000009                     ??_AddEntryToJsonObject:
  2134  000009                     SoftUARTReceiveByte@data:
  2135                           	callstack 0
  2136  000009                     Wait_ms@x:
  2137                           	callstack 0
  2138  000009                     ___lmul@product:
  2139                           	callstack 0
  2140  000009                     ___lldiv@quotient:
  2141                           	callstack 0
  2142                           
  2143                           ; 4 bytes @ 0x8
  2144  000009                     	ds	1
  2145  00000A                     ??_ProcessResp1:
  2146  00000A                     ?_SIM800xSDMReadF1Pkt:
  2147                           	callstack 0
  2148  00000A                     SIM800xSDMReadF1Pkt@data:
  2149                           	callstack 0
  2150                           
  2151                           ; 2 bytes @ 0x9
  2152  00000A                     	ds	2
  2153  00000C                     ??_SIM800xSDMReadF1Pkt:
  2154                           
  2155                           ; 1 bytes @ 0xB
  2156  00000C                     	ds	1
  2157  00000D                     ?_StrToInt:
  2158                           	callstack 0
  2159  00000D                     AddEntryToJsonObject@offset:
  2160                           	callstack 0
  2161  00000D                     ___lldiv@counter:
  2162                           	callstack 0
  2163  00000D                     StrToInt@str:
  2164                           	callstack 0
  2165  00000D                     SIM800xInit@tmp:
  2166                           	callstack 0
  2167                           
  2168                           ; 2 bytes @ 0xC
  2169  00000D                     	ds	1
  2170  00000E                     ?___llmod:
  2171                           	callstack 0
  2172  00000E                     ProcessResp1@time:
  2173                           	callstack 0
  2174  00000E                     ___llmod@dividend:
  2175                           	callstack 0
  2176                           
  2177                           ; 4 bytes @ 0xD
  2178  00000E                     	ds	1
  2179  00000F                     StrToInt@start:
  2180                           	callstack 0
  2181                           
  2182                           ; 1 bytes @ 0xE
  2183  00000F                     	ds	1
  2184  000010                     StrToInt@stop:
  2185                           	callstack 0
  2186  000010                     SIM800xSDMReadF1Pkt@val:
  2187                           	callstack 0
  2188                           
  2189                           ; 2 bytes @ 0xF
  2190  000010                     	ds	1
  2191  000011                     ??_StrToInt:
  2192                           
  2193                           ; 1 bytes @ 0x10
  2194  000011                     	ds	1
  2195  000012                     ProcessResp1@c:
  2196                           	callstack 0
  2197  000012                     SIM800xSDMReadF1Pkt@i:
  2198                           	callstack 0
  2199  000012                     ___llmod@divisor:
  2200                           	callstack 0
  2201                           
  2202                           ; 4 bytes @ 0x11
  2203  000012                     	ds	1
  2204  000013                     SIM800xIPOpen@cid:
  2205                           	callstack 0
  2206  000013                     SIM800xIPSetConnectionType@contype:
  2207                           	callstack 0
  2208  000013                     SIM800xIPSetAPN@apn:
  2209                           	callstack 0
  2210  000013                     SIM800xSDMReadF1Pkt@time:
  2211                           	callstack 0
  2212                           
  2213                           ; 4 bytes @ 0x12
  2214  000013                     	ds	2
  2215  000015                     SIM800xIPSetConnectionType@cid:
  2216                           	callstack 0
  2217  000015                     SIM800xIPSetAPN@cid:
  2218                           	callstack 0
  2219                           
  2220                           ; 1 bytes @ 0x14
  2221  000015                     	ds	1
  2222  000016                     ___llmod@counter:
  2223                           	callstack 0
  2224  000016                     StrToInt@val:
  2225                           	callstack 0
  2226                           
  2227                           ; 4 bytes @ 0x15
  2228  000016                     	ds	1
  2229  000017                     ?_sprintf:
  2230                           	callstack 0
  2231  000017                     SIM800xSDMReadF1Pkt@tmp:
  2232                           	callstack 0
  2233  000017                     sprintf@sp:
  2234                           	callstack 0
  2235                           
  2236                           ; 2 bytes @ 0x16
  2237  000017                     	ds	1
  2238  000018                     ProcessResp2@str:
  2239                           	callstack 0
  2240                           
  2241                           ; 2 bytes @ 0x17
  2242  000018                     	ds	1
  2243  000019                     sprintf@f:
  2244                           	callstack 0
  2245                           
  2246                           ; 2 bytes @ 0x18
  2247  000019                     	ds	1
  2248  00001A                     ??_ProcessResp2:
  2249  00001A                     StrToInt@j:
  2250                           	callstack 0
  2251                           
  2252                           ; 1 bytes @ 0x19
  2253  00001A                     	ds	1
  2254  00001B                     StrToInt@ctrl:
  2255                           	callstack 0
  2256                           
  2257                           ; 1 bytes @ 0x1A
  2258  00001B                     	ds	1
  2259  00001C                     StrToInt@po:
  2260                           	callstack 0
  2261                           
  2262                           ; 4 bytes @ 0x1B
  2263  00001C                     	ds	2
  2264  00001E                     ProcessResp2@time:
  2265                           	callstack 0
  2266                           
  2267                           ; 4 bytes @ 0x1D
  2268  00001E                     	ds	2
  2269  000020                     StrToInt@i:
  2270                           	callstack 0
  2271                           
  2272                           ; 1 bytes @ 0x1F
  2273  000020                     	ds	1
  2274  000021                     ProcessResp4@ec:
  2275                           	callstack 0
  2276                           
  2277                           ; 2 bytes @ 0x20
  2278  000021                     	ds	1
  2279  000022                     ProcessResp2@res:
  2280                           	callstack 0
  2281                           
  2282                           ; 2 bytes @ 0x21
  2283  000022                     	ds	1
  2284  000023                     ??_sprintf:
  2285  000023                     ??_ProcessResp4:
  2286                           
  2287                           ; 1 bytes @ 0x22
  2288  000023                     	ds	1
  2289  000024                     SIM800xIPGetState@ip:
  2290                           	callstack 0
  2291                           
  2292                           ; 2 bytes @ 0x23
  2293  000024                     	ds	1
  2294  000025                     sprintf@prec:
  2295                           	callstack 0
  2296                           
  2297                           ; 2 bytes @ 0x24
  2298  000025                     	ds	1
  2299  000026                     ??_SIM800xIPGetState:
  2300                           
  2301                           ; 1 bytes @ 0x25
  2302  000026                     	ds	1
  2303  000027                     sprintf@val:
  2304                           	callstack 0
  2305  000027                     ProcessResp4@str:
  2306                           	callstack 0
  2307                           
  2308                           ; 20 bytes @ 0x26
  2309  000027                     	ds	3
  2310  00002A                     SIM800xIPGetState@str:
  2311                           	callstack 0
  2312                           
  2313                           ; 30 bytes @ 0x29
  2314  00002A                     	ds	1
  2315  00002B                     sprintf@ap:
  2316                           	callstack 0
  2317                           
  2318                           ; 2 bytes @ 0x2A
  2319  00002B                     	ds	2
  2320  00002D                     sprintf@flag:
  2321                           	callstack 0
  2322                           
  2323                           ; 1 bytes @ 0x2C
  2324  00002D                     	ds	1
  2325  00002E                     sprintf@c:
  2326                           	callstack 0
  2327                           
  2328                           ; 1 bytes @ 0x2D
  2329  00002E                     	ds	1
  2330  00002F                     SIM800xHTTPInputData@data:
  2331                           	callstack 0
  2332  00002F                     SIM800xHTTPAction@statuscode:
  2333                           	callstack 0
  2334  00002F                     SIM800xHTTPRead@data:
  2335                           	callstack 0
  2336                           
  2337                           ; 2 bytes @ 0x2E
  2338  00002F                     	ds	2
  2339  000031                     SIM800xHTTPAction@cnt:
  2340                           	callstack 0
  2341  000031                     SIM800xHTTPInputData@cnt:
  2342                           	callstack 0
  2343  000031                     SIM800xHTTPRead@strindex:
  2344                           	callstack 0
  2345                           
  2346                           ; 4 bytes @ 0x30
  2347  000031                     	ds	2
  2348  000033                     SIM800xHTTPAction@tout:
  2349                           	callstack 0
  2350                           
  2351                           ; 4 bytes @ 0x32
  2352  000033                     	ds	2
  2353  000035                     SIM800xHTTPInputData@timeout:
  2354                           	callstack 0
  2355  000035                     SIM800xHTTPRead@size:
  2356                           	callstack 0
  2357                           
  2358                           ; 4 bytes @ 0x34
  2359  000035                     	ds	2
  2360  000037                     SIM800xHTTPAction@errcode:
  2361                           	callstack 0
  2362                           
  2363                           ; 2 bytes @ 0x36
  2364  000037                     	ds	2
  2365  000039                     ??_SIM800xHTTPAction:
  2366  000039                     SIM800xHTTPInputData@errcode:
  2367                           	callstack 0
  2368  000039                     SIM800xHTTPRead@cnt:
  2369                           	callstack 0
  2370                           
  2371                           ; 2 bytes @ 0x38
  2372  000039                     	ds	2
  2373  00003B                     ??_SIM800xHTTPInputData:
  2374  00003B                     SIM800xHTTPRead@errcode:
  2375                           	callstack 0
  2376  00003B                     ProcessResp4@time:
  2377                           	callstack 0
  2378                           
  2379                           ; 4 bytes @ 0x3A
  2380  00003B                     	ds	2
  2381  00003D                     ??_SIM800xHTTPRead:
  2382  00003D                     SIM800xHTTPAction@str:
  2383                           	callstack 0
  2384                           
  2385                           ; 30 bytes @ 0x3C
  2386  00003D                     	ds	2
  2387  00003F                     ProcessResp4@res:
  2388                           	callstack 0
  2389  00003F                     SIM800xHTTPInputData@str:
  2390                           	callstack 0
  2391                           
  2392                           ; 30 bytes @ 0x3E
  2393  00003F                     	ds	2
  2394  000041                     SIM800xHTTPInit@errcode:
  2395                           	callstack 0
  2396  000041                     SIM800xHTTPSetURL@url:
  2397                           	callstack 0
  2398  000041                     SIM800xHTTPSetContent@content:
  2399                           	callstack 0
  2400  000041                     SIM800xHTTPRead@str:
  2401                           	callstack 0
  2402                           
  2403                           ; 30 bytes @ 0x40
  2404  000041                     	ds	2
  2405  000043                     SIM800xHTTPSetURL@errcode:
  2406                           	callstack 0
  2407  000043                     SIM800xHTTPSetContent@errcode:
  2408                           	callstack 0
  2409                           
  2410                           ; 2 bytes @ 0x42
  2411  000043                     	ds	2
  2412  000045                     
  2413                           ; 1 bytes @ 0x44
  2414  000045                     	ds	3
  2415  000048                     SIM800xIPGetState@time1:
  2416                           	callstack 0
  2417                           
  2418                           ; 4 bytes @ 0x47
  2419  000048                     	ds	4
  2420  00004C                     SIM800xIPGetState@res:
  2421                           	callstack 0
  2422                           
  2423                           ; 1 bytes @ 0x4B
  2424  00004C                     	ds	1
  2425  00004D                     SIM800xIPGetState@cid:
  2426                           	callstack 0
  2427                           
  2428                           ; 1 bytes @ 0x4C
  2429  00004D                     	ds	1
  2430  00004E                     SIM800xIPGetState@len:
  2431                           	callstack 0
  2432                           
  2433                           ; 1 bytes @ 0x4D
  2434  00004E                     	ds	1
  2435  00004F                     SIM800xIPGetState@i:
  2436                           	callstack 0
  2437                           
  2438                           ; 1 bytes @ 0x4E
  2439  00004F                     	ds	1
  2440  000050                     SystemInit@ip:
  2441                           	callstack 0
  2442                           
  2443                           ; 20 bytes @ 0x4F
  2444  000050                     	ds	11
  2445  00005B                     SIM800xHTTPAction@t:
  2446                           	callstack 0
  2447                           
  2448                           ; 4 bytes @ 0x5A
  2449  00005B                     	ds	2
  2450  00005D                     SIM800xHTTPInputData@len:
  2451                           	callstack 0
  2452                           
  2453                           ; 4 bytes @ 0x5C
  2454  00005D                     	ds	2
  2455  00005F                     SIM800xHTTPAction@method:
  2456                           	callstack 0
  2457  00005F                     SIM800xHTTPRead@sz:
  2458                           	callstack 0
  2459                           
  2460                           ; 4 bytes @ 0x5E
  2461  00005F                     	ds	1
  2462  000060                     SIM800xHTTPAction@time:
  2463                           	callstack 0
  2464                           
  2465                           ; 4 bytes @ 0x5F
  2466  000060                     	ds	1
  2467  000061                     SIM800xHTTPInputData@time:
  2468                           	callstack 0
  2469                           
  2470                           ; 4 bytes @ 0x60
  2471  000061                     	ds	2
  2472  000063                     SIM800xHTTPRead@time:
  2473                           	callstack 0
  2474                           
  2475                           ; 4 bytes @ 0x62
  2476  000063                     	ds	1
  2477  000064                     SystemInit@err:
  2478                           	callstack 0
  2479  000064                     SIM800xHTTPAction@res:
  2480                           	callstack 0
  2481                           
  2482                           ; 2 bytes @ 0x63
  2483  000064                     	ds	1
  2484  000065                     SIM800xHTTPInputData@res:
  2485                           	callstack 0
  2486                           
  2487                           ; 2 bytes @ 0x64
  2488  000065                     	ds	2
  2489  000067                     SIM800xHTTPRead@res:
  2490                           	callstack 0
  2491                           
  2492                           ; 2 bytes @ 0x66
  2493  000067                     	ds	2
  2494  000069                     ??_SystemTask:
  2495                           
  2496                           ; 1 bytes @ 0x68
  2497  000069                     	ds	2
  2498  00006B                     
  2499                           ; 1 bytes @ 0x6A
  2500 ;;
  2501 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2502 ;;
  2503 ;; *************** function _main *****************
  2504 ;; Defined at:
  2505 ;;		line 12 in file "Src/main.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;		None
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;		None
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  1    wreg      void 
  2512 ;; Registers used:
  2513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2519 ;;      Params:         0       0       0       0       0       0       0
  2520 ;;      Locals:         0       0       0       0       0       0       0
  2521 ;;      Temps:          0       0       0       0       0       0       0
  2522 ;;      Totals:         0       0       0       0       0       0       0
  2523 ;;Total ram usage:        0 bytes
  2524 ;; Hardware stack levels required when called: 8
  2525 ;; This function calls:
  2526 ;;		_SystemInit
  2527 ;;		_SystemTask
  2528 ;; This function is called by:
  2529 ;;		Startup code after reset
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           	psect	text0
  2534  001E80                     __ptext0:
  2535                           	callstack 0
  2536  001E80                     _main:
  2537                           	callstack 0
  2538  001E80  FFFF               	dw	65535	; assembler added errata NOP
  2539                           
  2540                           ;main.c: 15: SystemInit();
  2541                           
  2542                           ;incstack = 0
  2543  001E82  ECF9  F005         	call	_SystemInit	;wreg free
  2544  001E86                     l4150:
  2545  001E86  FFFF               	dw	65535	; assembler added errata NOP
  2546                           
  2547                           ;main.c: 18: {;main.c: 19: SystemTask();
  2548  001E88  ECD3  F006         	call	_SystemTask	;wreg free
  2549  001E8C  D7FC               	goto	l4150
  2550  001E8E                     __end_of_main:
  2551                           	callstack 0
  2552                           
  2553 ;; *************** function _SystemTask *****************
  2554 ;; Defined at:
  2555 ;;		line 98 in file "Src/ApplicationExample.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;		None
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;  msg            20    0[BANK0 ] unsigned char [20]
  2560 ;;  cnt             4   25[BANK0 ] unsigned long 
  2561 ;;  errcode         2   23[BANK0 ] unsigned int 
  2562 ;;  scode           2   21[BANK0 ] unsigned int 
  2563 ;;  cmd             1   20[BANK0 ] unsigned char 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  1    wreg      void 
  2566 ;; Registers used:
  2567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2573 ;;      Params:         0       0       0       0       0       0       0
  2574 ;;      Locals:         0      29       0       0       0       0       0
  2575 ;;      Temps:          2       0       0       0       0       0       0
  2576 ;;      Totals:         2      29       0       0       0       0       0
  2577 ;;Total ram usage:       31 bytes
  2578 ;; Hardware stack levels used: 1
  2579 ;; Hardware stack levels required when called: 6
  2580 ;; This function calls:
  2581 ;;		_SIM800xHTTPAction
  2582 ;;		_SIM800xHTTPInputData
  2583 ;;		_SIM800xHTTPRead
  2584 ;;		_SoftUARTPrint
  2585 ;;		_SoftUARTReceiveByte
  2586 ;;		_SoftUARTRxAvailable
  2587 ;;		_sprintf
  2588 ;; This function is called by:
  2589 ;;		_main
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text1
  2594  000DA6                     __ptext1:
  2595                           	callstack 0
  2596  000DA6                     _SystemTask:
  2597                           	callstack 0
  2598  000DA6  FFFF               	dw	65535	; assembler added errata NOP
  2599                           
  2600                           ;ApplicationExample.c: 100: uint8_t cmd = 0;
  2601                           
  2602                           ;incstack = 0
  2603  000DA8  0E00               	movlw	0
  2604  000DAA  0100               	movlb	0	; () banked
  2605  000DAC  6FD8               	movwf	SystemTask@cmd& (0+255),b
  2606                           
  2607                           ;ApplicationExample.c: 101: uint16_t scode = 0, errcode = 0;
  2608  000DAE  0E00               	movlw	0
  2609  000DB0  6FDA               	movwf	(SystemTask@scode+1)& (0+255),b
  2610  000DB2  0E00               	movlw	0
  2611  000DB4  6FD9               	movwf	SystemTask@scode& (0+255),b
  2612  000DB6  0E00               	movlw	0
  2613  000DB8  6FDC               	movwf	(SystemTask@errcode+1)& (0+255),b
  2614  000DBA  0E00               	movlw	0
  2615  000DBC  6FDB               	movwf	SystemTask@errcode& (0+255),b
  2616                           
  2617                           ;ApplicationExample.c: 102: uint32_t cnt = 0;
  2618  000DBE  0E00               	movlw	0
  2619  000DC0  6FDD               	movwf	SystemTask@cnt& (0+255),b
  2620  000DC2  0E00               	movlw	0
  2621  000DC4  6FDE               	movwf	(SystemTask@cnt+1)& (0+255),b
  2622  000DC6  0E00               	movlw	0
  2623  000DC8  6FDF               	movwf	(SystemTask@cnt+2)& (0+255),b
  2624  000DCA  0E00               	movlw	0
  2625  000DCC  6FE0               	movwf	(SystemTask@cnt+3)& (0+255),b
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;ApplicationExample.c: 103: if(SoftUARTRxAvailable())
  2629  000DCE  ECD4  F00E         	call	_SoftUARTRxAvailable	;wreg free
  2630  000DD2  0900               	iorlw	0
  2631  000DD4  B4D8               	btfsc	status,2,c
  2632  000DD6  D005               	goto	l4118
  2633                           
  2634                           ;ApplicationExample.c: 104: cmd = (uint8_t)SoftUARTReceiveByte();
  2635  000DD8  EC17  F00E         	call	_SoftUARTReceiveByte	;wreg free
  2636  000DDC  5007               	movf	?_SoftUARTReceiveByte^0,w,c
  2637  000DDE  0100               	movlb	0	; () banked
  2638  000DE0  6FD8               	movwf	SystemTask@cmd& (0+255),b
  2639  000DE2                     l4118:
  2640  000DE2  FFFF               	dw	65535	; assembler added errata NOP
  2641                           
  2642                           ;ApplicationExample.c: 105: if(cmd == '1')
  2643  000DE4  0E31               	movlw	49
  2644  000DE6  0100               	movlb	0	; () banked
  2645  000DE8  19D8               	xorwf	SystemTask@cmd& (0+255),w,b
  2646  000DEA  A4D8               	btfss	status,2,c
  2647  000DEC  D0A5               	goto	l4136
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;ApplicationExample.c: 106: {;ApplicationExample.c: 108: SoftUARTPrint("Sending message 
      +                          to thinger.io...\r");
  2651  000DEE  0EF2               	movlw	low STR_22
  2652  000DF0  6E04               	movwf	SoftUARTPrint@str^0,c
  2653  000DF2  0E7A               	movlw	high STR_22
  2654  000DF4  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  2655  000DF6  EC94  F00C         	call	_SoftUARTPrint	;wreg free
  2656                           
  2657                           ;ApplicationExample.c: 110: SIM800xHTTPInputData(txmessage, (uint32_t)(cpos + 1), 5000, 
      +                          &errcode);
  2658  000DFA  0E8C               	movlw	low _txmessage
  2659  000DFC  6E2F               	movwf	SIM800xHTTPInputData@data^0,c
  2660  000DFE  0E02               	movlw	high _txmessage
  2661  000E00  6E30               	movwf	(SIM800xHTTPInputData@data+1)^0,c
  2662  000E02  0E01               	movlw	1
  2663  000E04  2476               	addwf	_cpos^0,w,c
  2664  000E06  6E69               	movwf	??_SystemTask^0,c
  2665  000E08  0E00               	movlw	0
  2666  000E0A  2077               	addwfc	(_cpos+1)^0,w,c
  2667  000E0C  6E6A               	movwf	(??_SystemTask+1)^0,c
  2668  000E0E  C069  F031         	movff	??_SystemTask,SIM800xHTTPInputData@cnt
  2669  000E12  C06A  F032         	movff	??_SystemTask+1,SIM800xHTTPInputData@cnt+1
  2670  000E16  6A33               	clrf	(SIM800xHTTPInputData@cnt+2)^0,c
  2671  000E18  6A34               	clrf	(SIM800xHTTPInputData@cnt+3)^0,c
  2672  000E1A  0E88               	movlw	136
  2673  000E1C  6E35               	movwf	SIM800xHTTPInputData@timeout^0,c
  2674  000E1E  0E13               	movlw	19
  2675  000E20  6E36               	movwf	(SIM800xHTTPInputData@timeout+1)^0,c
  2676  000E22  0E00               	movlw	0
  2677  000E24  6E37               	movwf	(SIM800xHTTPInputData@timeout+2)^0,c
  2678  000E26  0E00               	movlw	0
  2679  000E28  6E38               	movwf	(SIM800xHTTPInputData@timeout+3)^0,c
  2680  000E2A  0EDB               	movlw	low SystemTask@errcode
  2681  000E2C  6E39               	movwf	SIM800xHTTPInputData@errcode^0,c
  2682  000E2E  0E00               	movlw	high SystemTask@errcode
  2683  000E30  6E3A               	movwf	(SIM800xHTTPInputData@errcode+1)^0,c
  2684  000E32  ECF8  F004         	call	_SIM800xHTTPInputData	;wreg free
  2685                           
  2686                           ;ApplicationExample.c: 112: if(SIM800xHTTPAction(1, &scode, &cnt, 10000, &errcode) == SI
      +                          M800X_OK)
  2687  000E36  0ED9               	movlw	low SystemTask@scode
  2688  000E38  6E2F               	movwf	SIM800xHTTPAction@statuscode^0,c
  2689  000E3A  0E00               	movlw	high SystemTask@scode
  2690  000E3C  6E30               	movwf	(SIM800xHTTPAction@statuscode+1)^0,c
  2691  000E3E  0EDD               	movlw	low SystemTask@cnt
  2692  000E40  6E31               	movwf	SIM800xHTTPAction@cnt^0,c
  2693  000E42  0E00               	movlw	high SystemTask@cnt
  2694  000E44  6E32               	movwf	(SIM800xHTTPAction@cnt+1)^0,c
  2695  000E46  0E10               	movlw	16
  2696  000E48  6E33               	movwf	SIM800xHTTPAction@tout^0,c
  2697  000E4A  0E27               	movlw	39
  2698  000E4C  6E34               	movwf	(SIM800xHTTPAction@tout+1)^0,c
  2699  000E4E  0E00               	movlw	0
  2700  000E50  6E35               	movwf	(SIM800xHTTPAction@tout+2)^0,c
  2701  000E52  0E00               	movlw	0
  2702  000E54  6E36               	movwf	(SIM800xHTTPAction@tout+3)^0,c
  2703  000E56  0EDB               	movlw	low SystemTask@errcode
  2704  000E58  6E37               	movwf	SIM800xHTTPAction@errcode^0,c
  2705  000E5A  0E00               	movlw	high SystemTask@errcode
  2706  000E5C  6E38               	movwf	(SIM800xHTTPAction@errcode+1)^0,c
  2707  000E5E  0E01               	movlw	1
  2708  000E60  ECEE  F003         	call	_SIM800xHTTPAction
  2709  000E64  0900               	iorlw	0
  2710  000E66  A4D8               	btfss	status,2,c
  2711  000E68  D060               	goto	l4134
  2712                           
  2713                           ;ApplicationExample.c: 113: {;ApplicationExample.c: 114: if(SIM800xHTTPRead(rxmessage, 0
      +                          , cnt, &cnt, &errcode) == SIM800X_OK)
  2714  000E6A  0EBE               	movlw	low _rxmessage
  2715  000E6C  6E2F               	movwf	SIM800xHTTPRead@data^0,c
  2716  000E6E  0E01               	movlw	high _rxmessage
  2717  000E70  6E30               	movwf	(SIM800xHTTPRead@data+1)^0,c
  2718  000E72  0E00               	movlw	0
  2719  000E74  6E31               	movwf	SIM800xHTTPRead@strindex^0,c
  2720  000E76  0E00               	movlw	0
  2721  000E78  6E32               	movwf	(SIM800xHTTPRead@strindex+1)^0,c
  2722  000E7A  0E00               	movlw	0
  2723  000E7C  6E33               	movwf	(SIM800xHTTPRead@strindex+2)^0,c
  2724  000E7E  0E00               	movlw	0
  2725  000E80  6E34               	movwf	(SIM800xHTTPRead@strindex+3)^0,c
  2726  000E82  C0DD  F035         	movff	SystemTask@cnt,SIM800xHTTPRead@size
  2727  000E86  C0DE  F036         	movff	SystemTask@cnt+1,SIM800xHTTPRead@size+1
  2728  000E8A  C0DF  F037         	movff	SystemTask@cnt+2,SIM800xHTTPRead@size+2
  2729  000E8E  C0E0  F038         	movff	SystemTask@cnt+3,SIM800xHTTPRead@size+3
  2730  000E92  0EDD               	movlw	low SystemTask@cnt
  2731  000E94  6E39               	movwf	SIM800xHTTPRead@cnt^0,c
  2732  000E96  0E00               	movlw	high SystemTask@cnt
  2733  000E98  6E3A               	movwf	(SIM800xHTTPRead@cnt+1)^0,c
  2734  000E9A  0EDB               	movlw	low SystemTask@errcode
  2735  000E9C  6E3B               	movwf	SIM800xHTTPRead@errcode^0,c
  2736  000E9E  0E00               	movlw	high SystemTask@errcode
  2737  000EA0  6E3C               	movwf	(SIM800xHTTPRead@errcode+1)^0,c
  2738  000EA2  EC81  F001         	call	_SIM800xHTTPRead	;wreg free
  2739  000EA6  0900               	iorlw	0
  2740  000EA8  A4D8               	btfss	status,2,c
  2741  000EAA  D046               	goto	l4136
  2742                           
  2743                           ;ApplicationExample.c: 115: {;ApplicationExample.c: 116: char msg[20];;ApplicationExampl
      +                          e.c: 117: sprintf(msg, "HTTP response code: %u\r", scode);
  2744  000EAC  0EC4               	movlw	low SystemTask@msg
  2745  000EAE  6E17               	movwf	sprintf@sp^0,c
  2746  000EB0  0E00               	movlw	high SystemTask@msg
  2747  000EB2  6E18               	movwf	(sprintf@sp+1)^0,c
  2748  000EB4  0E7F               	movlw	low STR_23
  2749  000EB6  6E19               	movwf	sprintf@f^0,c
  2750  000EB8  0E7C               	movlw	high STR_23
  2751  000EBA  6E1A               	movwf	(sprintf@f+1)^0,c
  2752  000EBC  C0D9  F01B         	movff	SystemTask@scode,?_sprintf+4
  2753  000EC0  C0DA  F01C         	movff	SystemTask@scode+1,?_sprintf+5
  2754  000EC4  ECBD  F002         	call	_sprintf	;wreg free
  2755                           
  2756                           ;ApplicationExample.c: 118: SoftUARTPrint(msg);
  2757  000EC8  0EC4               	movlw	low SystemTask@msg
  2758  000ECA  6E04               	movwf	SoftUARTPrint@str^0,c
  2759  000ECC  0E00               	movlw	high SystemTask@msg
  2760  000ECE  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  2761  000ED0  EC94  F00C         	call	_SoftUARTPrint	;wreg free
  2762                           
  2763                           ;ApplicationExample.c: 119: sprintf(msg, "Received data length: %ld\r", cnt);
  2764  000ED4  0EC4               	movlw	low SystemTask@msg
  2765  000ED6  6E17               	movwf	sprintf@sp^0,c
  2766  000ED8  0E00               	movlw	high SystemTask@msg
  2767  000EDA  6E18               	movwf	(sprintf@sp+1)^0,c
  2768  000EDC  0EE7               	movlw	low STR_24
  2769  000EDE  6E19               	movwf	sprintf@f^0,c
  2770  000EE0  0E7B               	movlw	high STR_24
  2771  000EE2  6E1A               	movwf	(sprintf@f+1)^0,c
  2772  000EE4  C0DD  F01B         	movff	SystemTask@cnt,?_sprintf+4
  2773  000EE8  C0DE  F01C         	movff	SystemTask@cnt+1,?_sprintf+5
  2774  000EEC  C0DF  F01D         	movff	SystemTask@cnt+2,?_sprintf+6
  2775  000EF0  C0E0  F01E         	movff	SystemTask@cnt+3,?_sprintf+7
  2776  000EF4  ECBD  F002         	call	_sprintf	;wreg free
  2777                           
  2778                           ;ApplicationExample.c: 120: SoftUARTPrint(msg);
  2779  000EF8  0EC4               	movlw	low SystemTask@msg
  2780  000EFA  6E04               	movwf	SoftUARTPrint@str^0,c
  2781  000EFC  0E00               	movlw	high SystemTask@msg
  2782  000EFE  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  2783  000F00  EC94  F00C         	call	_SoftUARTPrint	;wreg free
  2784                           
  2785                           ;ApplicationExample.c: 121: SoftUARTPrint("Data: ");
  2786  000F04  0EC3               	movlw	low STR_25
  2787  000F06  6E04               	movwf	SoftUARTPrint@str^0,c
  2788  000F08  0E7F               	movlw	high STR_25
  2789  000F0A  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  2790  000F0C  EC94  F00C         	call	_SoftUARTPrint	;wreg free
  2791                           
  2792                           ;ApplicationExample.c: 122: SoftUARTPrint(msg);
  2793  000F10  0EC4               	movlw	low SystemTask@msg
  2794  000F12  6E04               	movwf	SoftUARTPrint@str^0,c
  2795  000F14  0E00               	movlw	high SystemTask@msg
  2796  000F16  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  2797  000F18  EC94  F00C         	call	_SoftUARTPrint	;wreg free
  2798                           
  2799                           ;ApplicationExample.c: 123: SoftUARTPrint("\r\r");
  2800  000F1C  0E31               	movlw	low (STR_21+29)
  2801  000F1E  6E04               	movwf	SoftUARTPrint@str^0,c
  2802  000F20  0E7B               	movlw	high (STR_21+29)
  2803  000F22  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  2804  000F24  EC94  F00C         	call	_SoftUARTPrint	;wreg free
  2805  000F28  D007               	goto	l4136
  2806  000F2A                     l4134:
  2807  000F2A  FFFF               	dw	65535	; assembler added errata NOP
  2808                           
  2809                           ;ApplicationExample.c: 126: {;ApplicationExample.c: 127: SoftUARTPrint("Sending failed.\
      +                          r");
  2810  000F2C  0E8B               	movlw	low STR_27
  2811  000F2E  6E04               	movwf	SoftUARTPrint@str^0,c
  2812  000F30  0E7D               	movlw	high STR_27
  2813  000F32  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  2814  000F34  EC94  F00C         	call	_SoftUARTPrint	;wreg free
  2815  000F38                     l4136:
  2816  000F38  FFFF               	dw	65535	; assembler added errata NOP
  2817  000F3A  0012               	return		;funcret
  2818  000F3C  FFFF               	dw	65535	; errata NOP
  2819  000F3E                     __end_of_SystemTask:
  2820                           	callstack 0
  2821                           
  2822 ;; *************** function _SoftUARTRxAvailable *****************
  2823 ;; Defined at:
  2824 ;;		line 352 in file "Src/SoftwareUART.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;		None
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;		None
  2829 ;; Return value:  Size  Location     Type
  2830 ;;                  1    wreg      unsigned char 
  2831 ;; Registers used:
  2832 ;;		wreg, status,2, status,0, cstack
  2833 ;; Tracked objects:
  2834 ;;		On entry : 0/0
  2835 ;;		On exit  : 0/0
  2836 ;;		Unchanged: 0/0
  2837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2838 ;;      Params:         0       0       0       0       0       0       0
  2839 ;;      Locals:         0       0       0       0       0       0       0
  2840 ;;      Temps:          2       0       0       0       0       0       0
  2841 ;;      Totals:         2       0       0       0       0       0       0
  2842 ;;Total ram usage:        2 bytes
  2843 ;; Hardware stack levels used: 1
  2844 ;; Hardware stack levels required when called: 3
  2845 ;; This function calls:
  2846 ;;		___awmod
  2847 ;; This function is called by:
  2848 ;;		_SystemTask
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           	psect	text2
  2853  001DA8                     __ptext2:
  2854                           	callstack 0
  2855  001DA8                     _SoftUARTRxAvailable:
  2856                           	callstack 0
  2857  001DA8  FFFF               	dw	65535	; assembler added errata NOP
  2858                           
  2859                           ;SoftwareUART.c: 355: return (uint8_t)((Rxfifocurrent + 100 - Rxfifoptr) % 100);
  2860                           
  2861                           ;incstack = 0
  2862  001DAA  5075               	movf	_Rxfifoptr^0,w,c	;volatile
  2863  001DAC  C074  F007         	movff	_Rxfifocurrent,??_SoftUARTRxAvailable	;volatile
  2864  001DB0  6A08               	clrf	(??_SoftUARTRxAvailable+1)^0,c
  2865  001DB2  5E07               	subwf	??_SoftUARTRxAvailable^0,f,c
  2866  001DB4  0E00               	movlw	0
  2867  001DB6  5A08               	subwfb	(??_SoftUARTRxAvailable+1)^0,f,c
  2868  001DB8  0E64               	movlw	100
  2869  001DBA  2407               	addwf	??_SoftUARTRxAvailable^0,w,c
  2870  001DBC  6E01               	movwf	___awmod@dividend^0,c
  2871  001DBE  0E00               	movlw	0
  2872  001DC0  2008               	addwfc	(??_SoftUARTRxAvailable+1)^0,w,c
  2873  001DC2  6E02               	movwf	(___awmod@dividend+1)^0,c
  2874  001DC4  0E00               	movlw	0
  2875  001DC6  6E04               	movwf	(___awmod@divisor+1)^0,c
  2876  001DC8  0E64               	movlw	100
  2877  001DCA  6E03               	movwf	___awmod@divisor^0,c
  2878  001DCC  EC34  F00B         	call	___awmod	;wreg free
  2879  001DD0  5001               	movf	?___awmod^0,w,c
  2880  001DD2  0012               	return		;funcret
  2881  001DD4  FFFF               	dw	65535	; errata NOP
  2882  001DD6                     __end_of_SoftUARTRxAvailable:
  2883                           	callstack 0
  2884                           
  2885 ;; *************** function _SoftUARTReceiveByte *****************
  2886 ;; Defined at:
  2887 ;;		line 360 in file "Src/SoftwareUART.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;		None
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;  data            1    8[COMRAM] unsigned char 
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  2    6[COMRAM] int 
  2894 ;; Registers used:
  2895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2901 ;;      Params:         2       0       0       0       0       0       0
  2902 ;;      Locals:         1       0       0       0       0       0       0
  2903 ;;      Temps:          0       0       0       0       0       0       0
  2904 ;;      Totals:         3       0       0       0       0       0       0
  2905 ;;Total ram usage:        3 bytes
  2906 ;; Hardware stack levels used: 1
  2907 ;; Hardware stack levels required when called: 3
  2908 ;; This function calls:
  2909 ;;		___awmod
  2910 ;; This function is called by:
  2911 ;;		_SystemTask
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915                           	psect	text3
  2916  001C2E                     __ptext3:
  2917                           	callstack 0
  2918  001C2E                     _SoftUARTReceiveByte:
  2919                           	callstack 0
  2920  001C2E  FFFF               	dw	65535	; assembler added errata NOP
  2921                           
  2922                           ;SoftwareUART.c: 363: if(Rxfifocurrent == Rxfifoptr)
  2923                           
  2924                           ;incstack = 0
  2925  001C30  5075               	movf	_Rxfifoptr^0,w,c	;volatile
  2926  001C32  1874               	xorwf	_Rxfifocurrent^0,w,c	;volatile
  2927  001C34  A4D8               	btfss	status,2,c
  2928  001C36  D003               	goto	l3816
  2929                           
  2930                           ;SoftwareUART.c: 364: return -1;
  2931  001C38  6807               	setf	?_SoftUARTReceiveByte^0,c
  2932  001C3A  6808               	setf	(?_SoftUARTReceiveByte+1)^0,c
  2933  001C3C  D01A               	goto	l251
  2934  001C3E                     l3816:
  2935  001C3E  FFFF               	dw	65535	; assembler added errata NOP
  2936                           
  2937                           ;SoftwareUART.c: 366: uint8_t data = RxFIFO[Rxfifoptr];
  2938  001C40  0E00               	movlw	low _RxFIFO
  2939  001C42  2475               	addwf	_Rxfifoptr^0,w,c	;volatile
  2940  001C44  6ED9               	movwf	fsr2l,c
  2941  001C46  6ADA               	clrf	fsr2h,c
  2942  001C48  0E02               	movlw	high _RxFIFO
  2943  001C4A  22DA               	addwfc	fsr2h,f,c
  2944  001C4C  50DF               	movf	indf2,w,c
  2945  001C4E  6E09               	movwf	SoftUARTReceiveByte@data^0,c
  2946                           
  2947                           ;SoftwareUART.c: 367: Rxfifoptr = (uint8_t)((Rxfifoptr + 1) % 100);
  2948  001C50  0E01               	movlw	1
  2949  001C52  2475               	addwf	_Rxfifoptr^0,w,c	;volatile
  2950  001C54  6E01               	movwf	___awmod@dividend^0,c
  2951  001C56  6A02               	clrf	(___awmod@dividend+1)^0,c
  2952  001C58  0E00               	movlw	0
  2953  001C5A  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  2954  001C5C  0E00               	movlw	0
  2955  001C5E  6E04               	movwf	(___awmod@divisor+1)^0,c
  2956  001C60  0E64               	movlw	100
  2957  001C62  6E03               	movwf	___awmod@divisor^0,c
  2958  001C64  EC34  F00B         	call	___awmod	;wreg free
  2959  001C68  5001               	movf	?___awmod^0,w,c
  2960  001C6A  6E75               	movwf	_Rxfifoptr^0,c	;volatile
  2961                           
  2962                           ;SoftwareUART.c: 369: return data;
  2963  001C6C  C009  F007         	movff	SoftUARTReceiveByte@data,?_SoftUARTReceiveByte
  2964  001C70  6A08               	clrf	(?_SoftUARTReceiveByte+1)^0,c
  2965  001C72                     l251:
  2966  001C72  FFFF               	dw	65535	; assembler added errata NOP
  2967  001C74  0012               	return		;funcret
  2968  001C76  FFFF               	dw	65535	; errata NOP
  2969  001C78                     __end_of_SoftUARTReceiveByte:
  2970                           	callstack 0
  2971                           
  2972 ;; *************** function ___awmod *****************
  2973 ;; Defined at:
  2974 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;  dividend        2    0[COMRAM] int 
  2977 ;;  divisor         2    2[COMRAM] int 
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;  sign            1    5[COMRAM] unsigned char 
  2980 ;;  counter         1    4[COMRAM] unsigned char 
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  2    0[COMRAM] int 
  2983 ;; Registers used:
  2984 ;;		wreg, status,2, status,0
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2990 ;;      Params:         4       0       0       0       0       0       0
  2991 ;;      Locals:         2       0       0       0       0       0       0
  2992 ;;      Temps:          0       0       0       0       0       0       0
  2993 ;;      Totals:         6       0       0       0       0       0       0
  2994 ;;Total ram usage:        6 bytes
  2995 ;; Hardware stack levels used: 1
  2996 ;; Hardware stack levels required when called: 2
  2997 ;; This function calls:
  2998 ;;		Nothing
  2999 ;; This function is called by:
  3000 ;;		_SoftUARTRxAvailable
  3001 ;;		_SoftUARTReceiveByte
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005                           	psect	text4
  3006  001668                     __ptext4:
  3007                           	callstack 0
  3008  001668                     ___awmod:
  3009                           	callstack 0
  3010  001668  FFFF               	dw	65535	; assembler added errata NOP
  3011                           
  3012                           ;incstack = 0
  3013  00166A  0E00               	movlw	0
  3014  00166C  6E06               	movwf	___awmod@sign^0,c
  3015  00166E  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  3016  001670  D006               	goto	l3522
  3017  001672  6C01               	negf	___awmod@dividend^0,c
  3018  001674  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3019  001676  B0D8               	btfsc	status,0,c
  3020  001678  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3021  00167A  0E01               	movlw	1
  3022  00167C  6E06               	movwf	___awmod@sign^0,c
  3023  00167E                     l3522:
  3024  00167E  FFFF               	dw	65535	; assembler added errata NOP
  3025  001680  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3026  001682  D004               	goto	l3526
  3027  001684  6C03               	negf	___awmod@divisor^0,c
  3028  001686  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3029  001688  B0D8               	btfsc	status,0,c
  3030  00168A  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3031  00168C                     l3526:
  3032  00168C  FFFF               	dw	65535	; assembler added errata NOP
  3033  00168E  5003               	movf	___awmod@divisor^0,w,c
  3034  001690  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3035  001692  B4D8               	btfsc	status,2,c
  3036  001694  D01C               	goto	l3542
  3037  001696  0E01               	movlw	1
  3038  001698  6E05               	movwf	___awmod@counter^0,c
  3039  00169A  D005               	goto	l3532
  3040  00169C                     l3530:
  3041  00169C  FFFF               	dw	65535	; assembler added errata NOP
  3042  00169E  90D8               	bcf	status,0,c
  3043  0016A0  3603               	rlcf	___awmod@divisor^0,f,c
  3044  0016A2  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3045  0016A4  2A05               	incf	___awmod@counter^0,f,c
  3046  0016A6                     l3532:
  3047  0016A6  FFFF               	dw	65535	; assembler added errata NOP
  3048  0016A8  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3049  0016AA  D7F8               	goto	l3530
  3050  0016AC                     u2250:
  3051  0016AC  FFFF               	dw	65535	; assembler added errata NOP
  3052  0016AE  5003               	movf	___awmod@divisor^0,w,c
  3053  0016B0  5C01               	subwf	___awmod@dividend^0,w,c
  3054  0016B2  5004               	movf	(___awmod@divisor+1)^0,w,c
  3055  0016B4  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3056  0016B6  A0D8               	btfss	status,0,c
  3057  0016B8  D004               	goto	l3538
  3058  0016BA  5003               	movf	___awmod@divisor^0,w,c
  3059  0016BC  5E01               	subwf	___awmod@dividend^0,f,c
  3060  0016BE  5004               	movf	(___awmod@divisor+1)^0,w,c
  3061  0016C0  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3062  0016C2                     l3538:
  3063  0016C2  FFFF               	dw	65535	; assembler added errata NOP
  3064  0016C4  90D8               	bcf	status,0,c
  3065  0016C6  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3066  0016C8  3203               	rrcf	___awmod@divisor^0,f,c
  3067  0016CA  2E05               	decfsz	___awmod@counter^0,f,c
  3068  0016CC  D7EF               	goto	u2250
  3069  0016CE                     l3542:
  3070  0016CE  FFFF               	dw	65535	; assembler added errata NOP
  3071  0016D0  5006               	movf	___awmod@sign^0,w,c
  3072  0016D2  B4D8               	btfsc	status,2,c
  3073  0016D4  D004               	goto	l3546
  3074  0016D6  6C01               	negf	___awmod@dividend^0,c
  3075  0016D8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3076  0016DA  B0D8               	btfsc	status,0,c
  3077  0016DC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3078  0016DE                     l3546:
  3079  0016DE  FFFF               	dw	65535	; assembler added errata NOP
  3080  0016E0  C001  F001         	movff	___awmod@dividend,?___awmod
  3081  0016E4  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3082  0016E8  0012               	return		;funcret
  3083  0016EA  FFFF               	dw	65535	; errata NOP
  3084  0016EC                     __end_of___awmod:
  3085                           	callstack 0
  3086                           
  3087 ;; *************** function _SIM800xHTTPRead *****************
  3088 ;; Defined at:
  3089 ;;		line 1677 in file "Src/SIM800x.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  data            2   46[COMRAM] PTR unsigned char 
  3092 ;;		 -> rxmessage(30), 
  3093 ;;  strindex        4   48[COMRAM] unsigned long 
  3094 ;;  size            4   52[COMRAM] unsigned long 
  3095 ;;  cnt             2   56[COMRAM] PTR unsigned long 
  3096 ;;		 -> SystemTask@cnt(4), 
  3097 ;;  errcode         2   58[COMRAM] PTR unsigned int 
  3098 ;;		 -> SystemTask@errcode(2), 
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;  sz              4   94[COMRAM] unsigned long 
  3101 ;;  str            30   64[COMRAM] unsigned char [30]
  3102 ;;  time            4   98[COMRAM] unsigned long 
  3103 ;;  res             2  102[COMRAM] int 
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  1    wreg      enum E2115
  3106 ;; Registers used:
  3107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3113 ;;      Params:        14       0       0       0       0       0       0
  3114 ;;      Locals:        40       0       0       0       0       0       0
  3115 ;;      Temps:          4       0       0       0       0       0       0
  3116 ;;      Totals:        58       0       0       0       0       0       0
  3117 ;;Total ram usage:       58 bytes
  3118 ;; Hardware stack levels used: 1
  3119 ;; Hardware stack levels required when called: 5
  3120 ;; This function calls:
  3121 ;;		_SIM800xSDMFlush
  3122 ;;		_SIM800xSDMPeek
  3123 ;;		_SIM800xSDMPrint
  3124 ;;		_SIM800xSDMReadByte
  3125 ;;		_SIM800xSDMReadF1Pkt
  3126 ;;		_SIM800xSDMRxAvailable
  3127 ;;		_StrToInt
  3128 ;;		_Tick_ms
  3129 ;;		_sprintf
  3130 ;; This function is called by:
  3131 ;;		_SystemTask
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           	psect	text5
  3136  000302                     __ptext5:
  3137                           	callstack 0
  3138  000302                     _SIM800xHTTPRead:
  3139                           	callstack 0
  3140  000302  FFFF               	dw	65535	; assembler added errata NOP
  3141                           
  3142                           ;SIM800x.c: 1680: if((strindex > 0x4E000) || (size > 0x4E000) || (size < 1))
  3143                           
  3144                           ;incstack = 0
  3145  000304  5034               	movf	(SIM800xHTTPRead@strindex+3)^0,w,c
  3146  000306  E117               	bnz	l3978
  3147  000308  0431               	decf	SIM800xHTTPRead@strindex^0,w,c
  3148  00030A  0EE0               	movlw	224
  3149  00030C  5832               	subwfb	(SIM800xHTTPRead@strindex+1)^0,w,c
  3150  00030E  0E04               	movlw	4
  3151  000310  5833               	subwfb	(SIM800xHTTPRead@strindex+2)^0,w,c
  3152  000312  B0D8               	btfsc	status,0,c
  3153  000314  D00F               	goto	u2780
  3154  000316  5038               	movf	(SIM800xHTTPRead@size+3)^0,w,c
  3155  000318  E10E               	bnz	l3978
  3156  00031A  0435               	decf	SIM800xHTTPRead@size^0,w,c
  3157  00031C  0EE0               	movlw	224
  3158  00031E  5836               	subwfb	(SIM800xHTTPRead@size+1)^0,w,c
  3159  000320  0E04               	movlw	4
  3160  000322  5837               	subwfb	(SIM800xHTTPRead@size+2)^0,w,c
  3161  000324  B0D8               	btfsc	status,0,c
  3162  000326  D006               	goto	u2780
  3163  000328  5035               	movf	SIM800xHTTPRead@size^0,w,c
  3164  00032A  1036               	iorwf	(SIM800xHTTPRead@size+1)^0,w,c
  3165  00032C  1037               	iorwf	(SIM800xHTTPRead@size+2)^0,w,c
  3166  00032E  1038               	iorwf	(SIM800xHTTPRead@size+3)^0,w,c
  3167  000330  A4D8               	btfss	status,2,c
  3168  000332  D003               	goto	l3982
  3169  000334                     u2780:
  3170  000334  FFFF               	dw	65535	; assembler added errata NOP
  3171  000336                     l3978:
  3172                           
  3173                           ;SIM800x.c: 1681: return SIM800X_ERROR;
  3174  000336  0E01               	movlw	1
  3175  000338  D11D               	goto	l827
  3176  00033A                     l3982:
  3177  00033A  FFFF               	dw	65535	; assembler added errata NOP
  3178                           
  3179                           ;SIM800x.c: 1683: char str[30] = {0, 0, 0, 0};
  3180  00033C  EE20  F041         	lfsr	2,SIM800xHTTPRead@str
  3181  000340  0E1D               	movlw	29
  3182  000342                     u2791:
  3183  000342  6ADE               	clrf	postinc2,c
  3184  000344  06E8               	decf	wreg,f,c
  3185  000346  E2FD               	bc	u2791
  3186                           
  3187                           ;SIM800x.c: 1685: sprintf(str, "AT+HTTPREAD=%ld,%ld\r", strindex, size);
  3188  000348  0E41               	movlw	low SIM800xHTTPRead@str
  3189  00034A  6E17               	movwf	sprintf@sp^0,c
  3190  00034C  0E00               	movlw	high SIM800xHTTPRead@str
  3191  00034E  6E18               	movwf	(sprintf@sp+1)^0,c
  3192  000350  0EDA               	movlw	low STR_98
  3193  000352  6E19               	movwf	sprintf@f^0,c
  3194  000354  0E7C               	movlw	high STR_98
  3195  000356  6E1A               	movwf	(sprintf@f+1)^0,c
  3196  000358  C031  F01B         	movff	SIM800xHTTPRead@strindex,?_sprintf+4
  3197  00035C  C032  F01C         	movff	SIM800xHTTPRead@strindex+1,?_sprintf+5
  3198  000360  C033  F01D         	movff	SIM800xHTTPRead@strindex+2,?_sprintf+6
  3199  000364  C034  F01E         	movff	SIM800xHTTPRead@strindex+3,?_sprintf+7
  3200  000368  C035  F01F         	movff	SIM800xHTTPRead@size,?_sprintf+8
  3201  00036C  C036  F020         	movff	SIM800xHTTPRead@size+1,?_sprintf+9
  3202  000370  C037  F021         	movff	SIM800xHTTPRead@size+2,?_sprintf+10
  3203  000374  C038  F022         	movff	SIM800xHTTPRead@size+3,?_sprintf+11
  3204  000378  ECBD  F002         	call	_sprintf	;wreg free
  3205                           
  3206                           ;SIM800x.c: 1686: SIM800xSDMFlush();
  3207  00037C  EC18  F00F         	call	_SIM800xSDMFlush	;wreg free
  3208                           
  3209                           ;SIM800x.c: 1687: SIM800xSDMPrint(str);
  3210  000380  0E41               	movlw	low SIM800xHTTPRead@str
  3211  000382  6E02               	movwf	SIM800xSDMPrint@str^0,c
  3212  000384  0E00               	movlw	high SIM800xHTTPRead@str
  3213  000386  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  3214  000388  ECC4  F00C         	call	_SIM800xSDMPrint	;wreg free
  3215                           
  3216                           ;SIM800x.c: 1689: uint32_t time = Tick_ms();
  3217  00038C  EC0D  F00F         	call	_Tick_ms	;wreg free
  3218  000390  C001  F063         	movff	?_Tick_ms,SIM800xHTTPRead@time
  3219  000394  C002  F064         	movff	?_Tick_ms+1,SIM800xHTTPRead@time+1
  3220  000398  C003  F065         	movff	?_Tick_ms+2,SIM800xHTTPRead@time+2
  3221  00039C  C004  F066         	movff	?_Tick_ms+3,SIM800xHTTPRead@time+3
  3222                           
  3223                           ;SIM800x.c: 1690: while(SIM800xSDMRxAvailable() < 16)
  3224  0003A0  D01C               	goto	l3998
  3225  0003A2                     l3992:
  3226  0003A2  FFFF               	dw	65535	; assembler added errata NOP
  3227                           
  3228                           ;SIM800x.c: 1691: {;SIM800x.c: 1692: if((Tick_ms() - time) > Tout)
  3229  0003A4  EC0D  F00F         	call	_Tick_ms	;wreg free
  3230  0003A8  5063               	movf	SIM800xHTTPRead@time^0,w,c
  3231  0003AA  5C01               	subwf	?_Tick_ms^0,w,c
  3232  0003AC  6E3D               	movwf	??_SIM800xHTTPRead^0,c
  3233  0003AE  5064               	movf	(SIM800xHTTPRead@time+1)^0,w,c
  3234  0003B0  5802               	subwfb	(?_Tick_ms+1)^0,w,c
  3235  0003B2  6E3E               	movwf	(??_SIM800xHTTPRead+1)^0,c
  3236  0003B4  5065               	movf	(SIM800xHTTPRead@time+2)^0,w,c
  3237  0003B6  5803               	subwfb	(?_Tick_ms+2)^0,w,c
  3238  0003B8  6E3F               	movwf	(??_SIM800xHTTPRead+2)^0,c
  3239  0003BA  5066               	movf	(SIM800xHTTPRead@time+3)^0,w,c
  3240  0003BC  5804               	subwfb	(?_Tick_ms+3)^0,w,c
  3241  0003BE  6E40               	movwf	(??_SIM800xHTTPRead+3)^0,c
  3242  0003C0  503D               	movf	??_SIM800xHTTPRead^0,w,c
  3243  0003C2  5C78               	subwf	_Tout^0,w,c
  3244  0003C4  503E               	movf	(??_SIM800xHTTPRead+1)^0,w,c
  3245  0003C6  5879               	subwfb	(_Tout+1)^0,w,c
  3246  0003C8  503F               	movf	(??_SIM800xHTTPRead+2)^0,w,c
  3247  0003CA  587A               	subwfb	(_Tout+2)^0,w,c
  3248  0003CC  5040               	movf	(??_SIM800xHTTPRead+3)^0,w,c
  3249  0003CE  587B               	subwfb	(_Tout+3)^0,w,c
  3250  0003D0  B0D8               	btfsc	status,0,c
  3251  0003D2  D003               	goto	l3998
  3252  0003D4                     u2800:
  3253  0003D4  FFFF               	dw	65535	; assembler added errata NOP
  3254                           
  3255                           ;SIM800x.c: 1693: {;SIM800x.c: 1694: return SIM800X_TIME_OUT;
  3256  0003D6  0E05               	movlw	5
  3257  0003D8  D0CD               	goto	l827
  3258  0003DA                     l3998:
  3259  0003DA  FFFF               	dw	65535	; assembler added errata NOP
  3260  0003DC  ECBB  F00E         	call	_SIM800xSDMRxAvailable	;wreg free
  3261  0003E0  5007               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  3262  0003E2  E104               	bnz	u2810
  3263  0003E4  0E10               	movlw	16
  3264  0003E6  5C06               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  3265  0003E8  A0D8               	btfss	status,0,c
  3266  0003EA  D7DB               	goto	l3992
  3267  0003EC                     u2810:
  3268                           
  3269                           ;SIM800x.c: 1695: };SIM800x.c: 1696: };SIM800x.c: 1698: int res = SIM800xSDMReadF1Pkt(st
      +                          r);
  3270  0003EC  0E41               	movlw	low SIM800xHTTPRead@str
  3271  0003EE  6E0A               	movwf	SIM800xSDMReadF1Pkt@data^0,c
  3272  0003F0  0E00               	movlw	high SIM800xHTTPRead@str
  3273  0003F2  6E0B               	movwf	(SIM800xSDMReadF1Pkt@data+1)^0,c
  3274  0003F4  EC6A  F008         	call	_SIM800xSDMReadF1Pkt	;wreg free
  3275  0003F8  C00A  F067         	movff	?_SIM800xSDMReadF1Pkt,SIM800xHTTPRead@res
  3276  0003FC  C00B  F068         	movff	?_SIM800xSDMReadF1Pkt+1,SIM800xHTTPRead@res+1
  3277                           
  3278                           ;SIM800x.c: 1699: if(res < 0)
  3279  000400  BE68               	btfsc	(SIM800xHTTPRead@res+1)^0,7,c
  3280  000402  D7E8               	goto	u2800
  3281                           
  3282                           ;SIM800x.c: 1703: else if((str[0] == '+') && (str[1] == 'H'))
  3283  000404  0E2B               	movlw	43
  3284  000406  1841               	xorwf	SIM800xHTTPRead@str^0,w,c
  3285  000408  A4D8               	btfss	status,2,c
  3286  00040A  D090               	goto	l4046
  3287  00040C  0E48               	movlw	72
  3288  00040E  1842               	xorwf	(SIM800xHTTPRead@str+1)^0,w,c
  3289  000410  A4D8               	btfss	status,2,c
  3290  000412  D08C               	goto	l4046
  3291                           
  3292                           ;SIM800x.c: 1704: {;SIM800x.c: 1706: str[(uint8_t)res] = '\0';
  3293  000414  0E41               	movlw	low SIM800xHTTPRead@str
  3294  000416  2467               	addwf	SIM800xHTTPRead@res^0,w,c
  3295  000418  6ED9               	movwf	fsr2l,c
  3296  00041A  6ADA               	clrf	fsr2h,c
  3297  00041C  0E00               	movlw	high SIM800xHTTPRead@str
  3298  00041E  22DA               	addwfc	fsr2h,f,c
  3299  000420  0E00               	movlw	0
  3300  000422  6EDF               	movwf	indf2,c
  3301                           
  3302                           ;SIM800x.c: 1707: *cnt = (uint16_t)StrToInt(str, 11, (uint16_t)(res - 1));
  3303  000424  0E41               	movlw	low SIM800xHTTPRead@str
  3304  000426  6E0D               	movwf	StrToInt@str^0,c
  3305  000428  0E00               	movlw	high SIM800xHTTPRead@str
  3306  00042A  6E0E               	movwf	(StrToInt@str+1)^0,c
  3307  00042C  0E0B               	movlw	11
  3308  00042E  6E0F               	movwf	StrToInt@start^0,c
  3309  000430  0467               	decf	SIM800xHTTPRead@res^0,w,c
  3310  000432  6E10               	movwf	StrToInt@stop^0,c
  3311  000434  EC9F  F007         	call	_StrToInt	;wreg free
  3312  000438  500D               	movf	?_StrToInt^0,w,c
  3313  00043A  6E3D               	movwf	??_SIM800xHTTPRead^0,c
  3314  00043C  500E               	movf	(?_StrToInt+1)^0,w,c
  3315  00043E  6E3E               	movwf	(??_SIM800xHTTPRead+1)^0,c
  3316  000440  6A3F               	clrf	(??_SIM800xHTTPRead+2)^0,c
  3317  000442  6A40               	clrf	(??_SIM800xHTTPRead+3)^0,c
  3318  000444  C039  FFD9         	movff	SIM800xHTTPRead@cnt,fsr2l
  3319  000448  C03A  FFDA         	movff	SIM800xHTTPRead@cnt+1,fsr2h
  3320  00044C  C03D  FFDE         	movff	??_SIM800xHTTPRead,postinc2
  3321  000450  C03E  FFDE         	movff	??_SIM800xHTTPRead+1,postinc2
  3322  000454  C03F  FFDE         	movff	??_SIM800xHTTPRead+2,postinc2
  3323  000458  C040  FFDE         	movff	??_SIM800xHTTPRead+3,postinc2
  3324                           
  3325                           ;SIM800x.c: 1709: uint32_t sz = *cnt;
  3326  00045C  C039  FFD9         	movff	SIM800xHTTPRead@cnt,fsr2l
  3327  000460  C03A  FFDA         	movff	SIM800xHTTPRead@cnt+1,fsr2h
  3328  000464  CFDE F05F          	movff	postinc2,SIM800xHTTPRead@sz
  3329  000468  CFDE F060          	movff	postinc2,SIM800xHTTPRead@sz+1
  3330  00046C  CFDE F061          	movff	postinc2,SIM800xHTTPRead@sz+2
  3331  000470  CFDE F062          	movff	postinc2,SIM800xHTTPRead@sz+3
  3332                           
  3333                           ;SIM800x.c: 1710: while((sz--) != 0)
  3334  000474  D017               	goto	l4028
  3335  000476                     l4020:
  3336  000476  FFFF               	dw	65535	; assembler added errata NOP
  3337                           
  3338                           ;SIM800x.c: 1711: {;SIM800x.c: 1712: if(SIM800xSDMRxAvailable())
  3339  000478  ECBB  F00E         	call	_SIM800xSDMRxAvailable	;wreg free
  3340  00047C  5006               	movf	?_SIM800xSDMRxAvailable^0,w,c
  3341  00047E  1007               	iorwf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  3342  000480  B4D8               	btfsc	status,2,c
  3343  000482  D009               	goto	l4026
  3344                           
  3345                           ;SIM800x.c: 1713: {;SIM800x.c: 1714: *(data++) = SIM800xSDMReadByte();
  3346  000484  ECCA  F00D         	call	_SIM800xSDMReadByte	;wreg free
  3347  000488  C02F  FFD9         	movff	SIM800xHTTPRead@data,fsr2l
  3348  00048C  C030  FFDA         	movff	SIM800xHTTPRead@data+1,fsr2h
  3349  000490  6EDF               	movwf	indf2,c
  3350  000492  4A2F               	infsnz	SIM800xHTTPRead@data^0,f,c
  3351  000494  2A30               	incf	(SIM800xHTTPRead@data+1)^0,f,c
  3352  000496                     l4026:
  3353  000496  FFFF               	dw	65535	; assembler added errata NOP
  3354                           
  3355                           ;SIM800x.c: 1715: };SIM800x.c: 1716: *data = '\0';
  3356  000498  C02F  FFD9         	movff	SIM800xHTTPRead@data,fsr2l
  3357  00049C  C030  FFDA         	movff	SIM800xHTTPRead@data+1,fsr2h
  3358  0004A0  0E00               	movlw	0
  3359  0004A2  6EDF               	movwf	indf2,c
  3360  0004A4                     l4028:
  3361  0004A4  FFFF               	dw	65535	; assembler added errata NOP
  3362  0004A6  065F               	decf	SIM800xHTTPRead@sz^0,f,c
  3363  0004A8  0E00               	movlw	0
  3364  0004AA  5A60               	subwfb	(SIM800xHTTPRead@sz+1)^0,f,c
  3365  0004AC  5A61               	subwfb	(SIM800xHTTPRead@sz+2)^0,f,c
  3366  0004AE  5A62               	subwfb	(SIM800xHTTPRead@sz+3)^0,f,c
  3367  0004B0  285F               	incf	SIM800xHTTPRead@sz^0,w,c
  3368  0004B2  E1E1               	bnz	l4020
  3369  0004B4  2860               	incf	(SIM800xHTTPRead@sz+1)^0,w,c
  3370  0004B6  E1DF               	bnz	l4020
  3371  0004B8  2861               	incf	(SIM800xHTTPRead@sz+2)^0,w,c
  3372  0004BA  E1DD               	bnz	l4020
  3373  0004BC  2862               	incf	(SIM800xHTTPRead@sz+3)^0,w,c
  3374  0004BE  A4D8               	btfss	status,2,c
  3375  0004C0  D7DA               	goto	l4020
  3376                           
  3377                           ;SIM800x.c: 1717: };SIM800x.c: 1719: time = Tick_ms();
  3378  0004C2  EC0D  F00F         	call	_Tick_ms	;wreg free
  3379  0004C6  C001  F063         	movff	?_Tick_ms,SIM800xHTTPRead@time
  3380  0004CA  C002  F064         	movff	?_Tick_ms+1,SIM800xHTTPRead@time+1
  3381  0004CE  C003  F065         	movff	?_Tick_ms+2,SIM800xHTTPRead@time+2
  3382  0004D2  C004  F066         	movff	?_Tick_ms+3,SIM800xHTTPRead@time+3
  3383                           
  3384                           ;SIM800x.c: 1720: while(SIM800xSDMRxAvailable() < 6)
  3385  0004D6  D019               	goto	l4038
  3386  0004D8                     l4032:
  3387  0004D8  FFFF               	dw	65535	; assembler added errata NOP
  3388                           
  3389                           ;SIM800x.c: 1721: {;SIM800x.c: 1722: if((Tick_ms() - time) > Tout)
  3390  0004DA  EC0D  F00F         	call	_Tick_ms	;wreg free
  3391  0004DE  5063               	movf	SIM800xHTTPRead@time^0,w,c
  3392  0004E0  5C01               	subwf	?_Tick_ms^0,w,c
  3393  0004E2  6E3D               	movwf	??_SIM800xHTTPRead^0,c
  3394  0004E4  5064               	movf	(SIM800xHTTPRead@time+1)^0,w,c
  3395  0004E6  5802               	subwfb	(?_Tick_ms+1)^0,w,c
  3396  0004E8  6E3E               	movwf	(??_SIM800xHTTPRead+1)^0,c
  3397  0004EA  5065               	movf	(SIM800xHTTPRead@time+2)^0,w,c
  3398  0004EC  5803               	subwfb	(?_Tick_ms+2)^0,w,c
  3399  0004EE  6E3F               	movwf	(??_SIM800xHTTPRead+2)^0,c
  3400  0004F0  5066               	movf	(SIM800xHTTPRead@time+3)^0,w,c
  3401  0004F2  5804               	subwfb	(?_Tick_ms+3)^0,w,c
  3402  0004F4  6E40               	movwf	(??_SIM800xHTTPRead+3)^0,c
  3403  0004F6  503D               	movf	??_SIM800xHTTPRead^0,w,c
  3404  0004F8  5C78               	subwf	_Tout^0,w,c
  3405  0004FA  503E               	movf	(??_SIM800xHTTPRead+1)^0,w,c
  3406  0004FC  5879               	subwfb	(_Tout+1)^0,w,c
  3407  0004FE  503F               	movf	(??_SIM800xHTTPRead+2)^0,w,c
  3408  000500  587A               	subwfb	(_Tout+2)^0,w,c
  3409  000502  5040               	movf	(??_SIM800xHTTPRead+3)^0,w,c
  3410  000504  587B               	subwfb	(_Tout+3)^0,w,c
  3411  000506  A0D8               	btfss	status,0,c
  3412  000508  D765               	goto	u2800
  3413  00050A                     l4038:
  3414  00050A  FFFF               	dw	65535	; assembler added errata NOP
  3415  00050C  ECBB  F00E         	call	_SIM800xSDMRxAvailable	;wreg free
  3416  000510  5007               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  3417  000512  E104               	bnz	u2880
  3418  000514  0E06               	movlw	6
  3419  000516  5C06               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  3420  000518  A0D8               	btfss	status,0,c
  3421  00051A  D7DE               	goto	l4032
  3422  00051C                     u2880:
  3423                           
  3424                           ;SIM800x.c: 1725: };SIM800x.c: 1726: };SIM800x.c: 1728: if(SIM800xSDMPeek(2) == 'O')
  3425  00051C  0E02               	movlw	2
  3426  00051E  EC61  F00E         	call	_SIM800xSDMPeek
  3427  000522  0A4F               	xorlw	79
  3428  000524  A4D8               	btfss	status,2,c
  3429  000526  D706               	goto	u2780
  3430                           
  3431                           ;SIM800x.c: 1729: {;SIM800x.c: 1730: return SIM800X_OK;
  3432  000528  0E00               	movlw	0
  3433  00052A  D024               	goto	l827
  3434  00052C                     l4046:
  3435  00052C  FFFF               	dw	65535	; assembler added errata NOP
  3436                           
  3437                           ;SIM800x.c: 1734: else if((str[0] == '+') && (str[3] == 'E'))
  3438  00052E  0E2B               	movlw	43
  3439  000530  1841               	xorwf	SIM800xHTTPRead@str^0,w,c
  3440  000532  A4D8               	btfss	status,2,c
  3441  000534  D6FF               	goto	u2780
  3442  000536  0E45               	movlw	69
  3443  000538  1844               	xorwf	(SIM800xHTTPRead@str+3)^0,w,c
  3444  00053A  A4D8               	btfss	status,2,c
  3445  00053C  D6FB               	goto	u2780
  3446                           
  3447                           ;SIM800x.c: 1735: {;SIM800x.c: 1736: str[(uint8_t)res] = '\0';
  3448  00053E  0E41               	movlw	low SIM800xHTTPRead@str
  3449  000540  2467               	addwf	SIM800xHTTPRead@res^0,w,c
  3450  000542  6ED9               	movwf	fsr2l,c
  3451  000544  6ADA               	clrf	fsr2h,c
  3452  000546  0E00               	movlw	high SIM800xHTTPRead@str
  3453  000548  22DA               	addwfc	fsr2h,f,c
  3454  00054A  0E00               	movlw	0
  3455  00054C  6EDF               	movwf	indf2,c
  3456                           
  3457                           ;SIM800x.c: 1737: *errcode = (uint16_t)StrToInt(str, 12, (uint16_t)(res - 1));
  3458  00054E  0E41               	movlw	low SIM800xHTTPRead@str
  3459  000550  6E0D               	movwf	StrToInt@str^0,c
  3460  000552  0E00               	movlw	high SIM800xHTTPRead@str
  3461  000554  6E0E               	movwf	(StrToInt@str+1)^0,c
  3462  000556  0E0C               	movlw	12
  3463  000558  6E0F               	movwf	StrToInt@start^0,c
  3464  00055A  0467               	decf	SIM800xHTTPRead@res^0,w,c
  3465  00055C  6E10               	movwf	StrToInt@stop^0,c
  3466  00055E  EC9F  F007         	call	_StrToInt	;wreg free
  3467  000562  C03B  FFD9         	movff	SIM800xHTTPRead@errcode,fsr2l
  3468  000566  C03C  FFDA         	movff	SIM800xHTTPRead@errcode+1,fsr2h
  3469  00056A  C00D  FFDE         	movff	?_StrToInt,postinc2
  3470  00056E  C00E  FFDD         	movff	?_StrToInt+1,postdec2
  3471                           
  3472                           ;SIM800x.c: 1738: return SIM800X_CME_ERROR;
  3473  000572  0E02               	movlw	2
  3474  000574                     l827:
  3475  000574  FFFF               	dw	65535	; assembler added errata NOP
  3476  000576  0012               	return		;funcret
  3477  000578  FFFF               	dw	65535	; errata NOP
  3478  00057A                     __end_of_SIM800xHTTPRead:
  3479                           	callstack 0
  3480                           
  3481 ;; *************** function _SIM800xHTTPInputData *****************
  3482 ;; Defined at:
  3483 ;;		line 1554 in file "Src/SIM800x.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;  data            2   46[COMRAM] PTR unsigned char 
  3486 ;;		 -> txmessage(100), 
  3487 ;;  cnt             4   48[COMRAM] unsigned long 
  3488 ;;  timeout         4   52[COMRAM] unsigned long 
  3489 ;;  errcode         2   56[COMRAM] PTR unsigned int 
  3490 ;;		 -> SystemTask@errcode(2), 
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;  str            30   62[COMRAM] unsigned char [30]
  3493 ;;  time            4   96[COMRAM] unsigned long 
  3494 ;;  len             4   92[COMRAM] unsigned long 
  3495 ;;  res             2  100[COMRAM] int 
  3496 ;; Return value:  Size  Location     Type
  3497 ;;                  1    wreg      enum E2115
  3498 ;; Registers used:
  3499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3500 ;; Tracked objects:
  3501 ;;		On entry : 0/0
  3502 ;;		On exit  : 0/0
  3503 ;;		Unchanged: 0/0
  3504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3505 ;;      Params:        12       0       0       0       0       0       0
  3506 ;;      Locals:        40       0       0       0       0       0       0
  3507 ;;      Temps:          4       0       0       0       0       0       0
  3508 ;;      Totals:        56       0       0       0       0       0       0
  3509 ;;Total ram usage:       56 bytes
  3510 ;; Hardware stack levels used: 1
  3511 ;; Hardware stack levels required when called: 5
  3512 ;; This function calls:
  3513 ;;		_SIM800xSDMFlush
  3514 ;;		_SIM800xSDMPeek
  3515 ;;		_SIM800xSDMPrint
  3516 ;;		_SIM800xSDMReadF1Pkt
  3517 ;;		_SIM800xSDMRxAvailable
  3518 ;;		_SIM800xSDMSendBytes
  3519 ;;		_StrToInt
  3520 ;;		_Tick_ms
  3521 ;;		_sprintf
  3522 ;;		_strlen
  3523 ;; This function is called by:
  3524 ;;		_SystemTask
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           	psect	text6
  3529  0009F0                     __ptext6:
  3530                           	callstack 0
  3531  0009F0                     _SIM800xHTTPInputData:
  3532                           	callstack 0
  3533  0009F0  FFFF               	dw	65535	; assembler added errata NOP
  3534                           
  3535                           ;SIM800x.c: 1556: uint32_t len = strlen(data);
  3536                           
  3537                           ;incstack = 0
  3538  0009F2  C02F  F001         	movff	SIM800xHTTPInputData@data,strlen@s
  3539  0009F6  C030  F002         	movff	SIM800xHTTPInputData@data+1,strlen@s+1
  3540  0009FA  ECF1  F00D         	call	_strlen	;wreg free
  3541  0009FE  C001  F05D         	movff	?_strlen,SIM800xHTTPInputData@len
  3542  000A02  C002  F05E         	movff	?_strlen+1,SIM800xHTTPInputData@len+1
  3543  000A06  6A5F               	clrf	(SIM800xHTTPInputData@len+2)^0,c
  3544  000A08  6A60               	clrf	(SIM800xHTTPInputData@len+3)^0,c
  3545                           
  3546                           ;SIM800x.c: 1558: if((cnt > 0x4E000) || (len > 0x4E000) || (timeout < 1000) || (timeout 
      +                          > 120000))
  3547  000A0A  5034               	movf	(SIM800xHTTPInputData@cnt+3)^0,w,c
  3548  000A0C  E106               	bnz	u2521
  3549  000A0E  0431               	decf	SIM800xHTTPInputData@cnt^0,w,c
  3550  000A10  0EE0               	movlw	224
  3551  000A12  5832               	subwfb	(SIM800xHTTPInputData@cnt+1)^0,w,c
  3552  000A14  0E04               	movlw	4
  3553  000A16  5833               	subwfb	(SIM800xHTTPInputData@cnt+2)^0,w,c
  3554  000A18  B0D8               	btfsc	status,0,c
  3555  000A1A                     u2521:
  3556  000A1A  D0E8               	goto	l781
  3557  000A1C  5060               	movf	(SIM800xHTTPInputData@len+3)^0,w,c
  3558  000A1E  E106               	bnz	u2531
  3559  000A20  045D               	decf	SIM800xHTTPInputData@len^0,w,c
  3560  000A22  0EE0               	movlw	224
  3561  000A24  585E               	subwfb	(SIM800xHTTPInputData@len+1)^0,w,c
  3562  000A26  0E04               	movlw	4
  3563  000A28  585F               	subwfb	(SIM800xHTTPInputData@len+2)^0,w,c
  3564  000A2A  B0D8               	btfsc	status,0,c
  3565  000A2C                     u2531:
  3566  000A2C  D0DF               	goto	l781
  3567  000A2E  5038               	movf	(SIM800xHTTPInputData@timeout+3)^0,w,c
  3568  000A30  1037               	iorwf	(SIM800xHTTPInputData@timeout+2)^0,w,c
  3569  000A32  E106               	bnz	u2540
  3570  000A34  0EE8               	movlw	232
  3571  000A36  5C35               	subwf	SIM800xHTTPInputData@timeout^0,w,c
  3572  000A38  0E03               	movlw	3
  3573  000A3A  5836               	subwfb	(SIM800xHTTPInputData@timeout+1)^0,w,c
  3574  000A3C  A0D8               	btfss	status,0,c
  3575  000A3E  D0D6               	goto	l781
  3576  000A40                     u2540:
  3577  000A40  5038               	movf	(SIM800xHTTPInputData@timeout+3)^0,w,c
  3578  000A42  E109               	bnz	u2550
  3579  000A44  0EC1               	movlw	193
  3580  000A46  5C35               	subwf	SIM800xHTTPInputData@timeout^0,w,c
  3581  000A48  0ED4               	movlw	212
  3582  000A4A  5836               	subwfb	(SIM800xHTTPInputData@timeout+1)^0,w,c
  3583  000A4C  0E01               	movlw	1
  3584  000A4E  5837               	subwfb	(SIM800xHTTPInputData@timeout+2)^0,w,c
  3585  000A50  B0D8               	btfsc	status,0,c
  3586  000A52  D0CC               	goto	l781
  3587  000A54  D001               	goto	l3834
  3588  000A56                     u2550:
  3589  000A56  D0CA               	goto	l781
  3590  000A58                     l3834:
  3591  000A58  FFFF               	dw	65535	; assembler added errata NOP
  3592                           
  3593                           ;SIM800x.c: 1561: char str[30] = {0, 0, 0, 0};
  3594  000A5A  EE20  F03F         	lfsr	2,SIM800xHTTPInputData@str
  3595  000A5E  0E1D               	movlw	29
  3596  000A60                     u2561:
  3597  000A60  6ADE               	clrf	postinc2,c
  3598  000A62  06E8               	decf	wreg,f,c
  3599  000A64  E2FD               	bc	u2561
  3600                           
  3601                           ;SIM800x.c: 1563: sprintf(str, "AT+HTTPDATA=%ld,%ld\r", cnt, timeout);
  3602  000A66  0E3F               	movlw	low SIM800xHTTPInputData@str
  3603  000A68  6E17               	movwf	sprintf@sp^0,c
  3604  000A6A  0E00               	movlw	high SIM800xHTTPInputData@str
  3605  000A6C  6E18               	movwf	(sprintf@sp+1)^0,c
  3606  000A6E  0EC5               	movlw	low STR_96
  3607  000A70  6E19               	movwf	sprintf@f^0,c
  3608  000A72  0E7C               	movlw	high STR_96
  3609  000A74  6E1A               	movwf	(sprintf@f+1)^0,c
  3610  000A76  C031  F01B         	movff	SIM800xHTTPInputData@cnt,?_sprintf+4
  3611  000A7A  C032  F01C         	movff	SIM800xHTTPInputData@cnt+1,?_sprintf+5
  3612  000A7E  C033  F01D         	movff	SIM800xHTTPInputData@cnt+2,?_sprintf+6
  3613  000A82  C034  F01E         	movff	SIM800xHTTPInputData@cnt+3,?_sprintf+7
  3614  000A86  C035  F01F         	movff	SIM800xHTTPInputData@timeout,?_sprintf+8
  3615  000A8A  C036  F020         	movff	SIM800xHTTPInputData@timeout+1,?_sprintf+9
  3616  000A8E  C037  F021         	movff	SIM800xHTTPInputData@timeout+2,?_sprintf+10
  3617  000A92  C038  F022         	movff	SIM800xHTTPInputData@timeout+3,?_sprintf+11
  3618  000A96  ECBD  F002         	call	_sprintf	;wreg free
  3619                           
  3620                           ;SIM800x.c: 1564: SIM800xSDMFlush();
  3621  000A9A  EC18  F00F         	call	_SIM800xSDMFlush	;wreg free
  3622                           
  3623                           ;SIM800x.c: 1565: SIM800xSDMPrint(str);
  3624  000A9E  0E3F               	movlw	low SIM800xHTTPInputData@str
  3625  000AA0  6E02               	movwf	SIM800xSDMPrint@str^0,c
  3626  000AA2  0E00               	movlw	high SIM800xHTTPInputData@str
  3627  000AA4  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  3628  000AA6  ECC4  F00C         	call	_SIM800xSDMPrint	;wreg free
  3629                           
  3630                           ;SIM800x.c: 1567: uint32_t time = Tick_ms();
  3631  000AAA  EC0D  F00F         	call	_Tick_ms	;wreg free
  3632  000AAE  C001  F061         	movff	?_Tick_ms,SIM800xHTTPInputData@time
  3633  000AB2  C002  F062         	movff	?_Tick_ms+1,SIM800xHTTPInputData@time+1
  3634  000AB6  C003  F063         	movff	?_Tick_ms+2,SIM800xHTTPInputData@time+2
  3635  000ABA  C004  F064         	movff	?_Tick_ms+3,SIM800xHTTPInputData@time+3
  3636                           
  3637                           ;SIM800x.c: 1568: while(SIM800xSDMRxAvailable() < 6)
  3638  000ABE  D019               	goto	l3848
  3639  000AC0                     l3844:
  3640  000AC0  FFFF               	dw	65535	; assembler added errata NOP
  3641                           
  3642                           ;SIM800x.c: 1569: {;SIM800x.c: 1570: if((Tick_ms() - time) > Tout)
  3643  000AC2  EC0D  F00F         	call	_Tick_ms	;wreg free
  3644  000AC6  5061               	movf	SIM800xHTTPInputData@time^0,w,c
  3645  000AC8  5C01               	subwf	?_Tick_ms^0,w,c
  3646  000ACA  6E3B               	movwf	??_SIM800xHTTPInputData^0,c
  3647  000ACC  5062               	movf	(SIM800xHTTPInputData@time+1)^0,w,c
  3648  000ACE  5802               	subwfb	(?_Tick_ms+1)^0,w,c
  3649  000AD0  6E3C               	movwf	(??_SIM800xHTTPInputData+1)^0,c
  3650  000AD2  5063               	movf	(SIM800xHTTPInputData@time+2)^0,w,c
  3651  000AD4  5803               	subwfb	(?_Tick_ms+2)^0,w,c
  3652  000AD6  6E3D               	movwf	(??_SIM800xHTTPInputData+2)^0,c
  3653  000AD8  5064               	movf	(SIM800xHTTPInputData@time+3)^0,w,c
  3654  000ADA  5804               	subwfb	(?_Tick_ms+3)^0,w,c
  3655  000ADC  6E3E               	movwf	(??_SIM800xHTTPInputData+3)^0,c
  3656  000ADE  503B               	movf	??_SIM800xHTTPInputData^0,w,c
  3657  000AE0  5C78               	subwf	_Tout^0,w,c
  3658  000AE2  503C               	movf	(??_SIM800xHTTPInputData+1)^0,w,c
  3659  000AE4  5879               	subwfb	(_Tout+1)^0,w,c
  3660  000AE6  503D               	movf	(??_SIM800xHTTPInputData+2)^0,w,c
  3661  000AE8  587A               	subwfb	(_Tout+2)^0,w,c
  3662  000AEA  503E               	movf	(??_SIM800xHTTPInputData+3)^0,w,c
  3663  000AEC  587B               	subwfb	(_Tout+3)^0,w,c
  3664  000AEE  A0D8               	btfss	status,0,c
  3665  000AF0  D07D               	goto	l781
  3666  000AF2                     l3848:
  3667  000AF2  FFFF               	dw	65535	; assembler added errata NOP
  3668  000AF4  ECBB  F00E         	call	_SIM800xSDMRxAvailable	;wreg free
  3669  000AF8  5007               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  3670  000AFA  E104               	bnz	u2580
  3671  000AFC  0E06               	movlw	6
  3672  000AFE  5C06               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  3673  000B00  A0D8               	btfss	status,0,c
  3674  000B02  D7DE               	goto	l3844
  3675  000B04                     u2580:
  3676                           
  3677                           ;SIM800x.c: 1573: };SIM800x.c: 1574: };SIM800x.c: 1576: int res = SIM800xSDMReadF1Pkt(st
      +                          r);
  3678  000B04  0E3F               	movlw	low SIM800xHTTPInputData@str
  3679  000B06  6E0A               	movwf	SIM800xSDMReadF1Pkt@data^0,c
  3680  000B08  0E00               	movlw	high SIM800xHTTPInputData@str
  3681  000B0A  6E0B               	movwf	(SIM800xSDMReadF1Pkt@data+1)^0,c
  3682  000B0C  EC6A  F008         	call	_SIM800xSDMReadF1Pkt	;wreg free
  3683  000B10  C00A  F065         	movff	?_SIM800xSDMReadF1Pkt,SIM800xHTTPInputData@res
  3684  000B14  C00B  F066         	movff	?_SIM800xSDMReadF1Pkt+1,SIM800xHTTPInputData@res+1
  3685                           
  3686                           ;SIM800x.c: 1577: if(res < 0)
  3687  000B18  BE66               	btfsc	(SIM800xHTTPInputData@res+1)^0,7,c
  3688  000B1A  D068               	goto	l781
  3689                           
  3690                           ;SIM800x.c: 1581: else if(str[0] == 'D')
  3691  000B1C  0E44               	movlw	68
  3692  000B1E  183F               	xorwf	SIM800xHTTPInputData@str^0,w,c
  3693  000B20  A4D8               	btfss	status,2,c
  3694  000B22  D03D               	goto	l3876
  3695                           
  3696                           ;SIM800x.c: 1582: {;SIM800x.c: 1583: SIM800xSDMFlush();
  3697  000B24  EC18  F00F         	call	_SIM800xSDMFlush	;wreg free
  3698                           
  3699                           ;SIM800x.c: 1585: SIM800xSDMSendBytes(data, cnt);
  3700  000B28  C02F  F001         	movff	SIM800xHTTPInputData@data,SIM800xSDMSendBytes@data
  3701  000B2C  C030  F002         	movff	SIM800xHTTPInputData@data+1,SIM800xSDMSendBytes@data+1
  3702  000B30  C031  F003         	movff	SIM800xHTTPInputData@cnt,SIM800xSDMSendBytes@cnt
  3703  000B34  C032  F004         	movff	SIM800xHTTPInputData@cnt+1,SIM800xSDMSendBytes@cnt+1
  3704  000B38  ECA2  F00E         	call	_SIM800xSDMSendBytes	;wreg free
  3705                           
  3706                           ;SIM800x.c: 1587: time = Tick_ms();
  3707  000B3C  EC0D  F00F         	call	_Tick_ms	;wreg free
  3708  000B40  C001  F061         	movff	?_Tick_ms,SIM800xHTTPInputData@time
  3709  000B44  C002  F062         	movff	?_Tick_ms+1,SIM800xHTTPInputData@time+1
  3710  000B48  C003  F063         	movff	?_Tick_ms+2,SIM800xHTTPInputData@time+2
  3711  000B4C  C004  F064         	movff	?_Tick_ms+3,SIM800xHTTPInputData@time+3
  3712                           
  3713                           ;SIM800x.c: 1588: while(SIM800xSDMRxAvailable() < 6)
  3714  000B50  D019               	goto	l3870
  3715  000B52                     l3866:
  3716  000B52  FFFF               	dw	65535	; assembler added errata NOP
  3717                           
  3718                           ;SIM800x.c: 1589: {;SIM800x.c: 1590: if((Tick_ms() - time) > Tout)
  3719  000B54  EC0D  F00F         	call	_Tick_ms	;wreg free
  3720  000B58  5061               	movf	SIM800xHTTPInputData@time^0,w,c
  3721  000B5A  5C01               	subwf	?_Tick_ms^0,w,c
  3722  000B5C  6E3B               	movwf	??_SIM800xHTTPInputData^0,c
  3723  000B5E  5062               	movf	(SIM800xHTTPInputData@time+1)^0,w,c
  3724  000B60  5802               	subwfb	(?_Tick_ms+1)^0,w,c
  3725  000B62  6E3C               	movwf	(??_SIM800xHTTPInputData+1)^0,c
  3726  000B64  5063               	movf	(SIM800xHTTPInputData@time+2)^0,w,c
  3727  000B66  5803               	subwfb	(?_Tick_ms+2)^0,w,c
  3728  000B68  6E3D               	movwf	(??_SIM800xHTTPInputData+2)^0,c
  3729  000B6A  5064               	movf	(SIM800xHTTPInputData@time+3)^0,w,c
  3730  000B6C  5804               	subwfb	(?_Tick_ms+3)^0,w,c
  3731  000B6E  6E3E               	movwf	(??_SIM800xHTTPInputData+3)^0,c
  3732  000B70  503B               	movf	??_SIM800xHTTPInputData^0,w,c
  3733  000B72  5C78               	subwf	_Tout^0,w,c
  3734  000B74  503C               	movf	(??_SIM800xHTTPInputData+1)^0,w,c
  3735  000B76  5879               	subwfb	(_Tout+1)^0,w,c
  3736  000B78  503D               	movf	(??_SIM800xHTTPInputData+2)^0,w,c
  3737  000B7A  587A               	subwfb	(_Tout+2)^0,w,c
  3738  000B7C  503E               	movf	(??_SIM800xHTTPInputData+3)^0,w,c
  3739  000B7E  587B               	subwfb	(_Tout+3)^0,w,c
  3740  000B80  A0D8               	btfss	status,0,c
  3741  000B82  D034               	goto	l781
  3742  000B84                     l3870:
  3743  000B84  FFFF               	dw	65535	; assembler added errata NOP
  3744  000B86  ECBB  F00E         	call	_SIM800xSDMRxAvailable	;wreg free
  3745  000B8A  5007               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  3746  000B8C  E104               	bnz	u2620
  3747  000B8E  0E06               	movlw	6
  3748  000B90  5C06               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  3749  000B92  A0D8               	btfss	status,0,c
  3750  000B94  D7DE               	goto	l3866
  3751  000B96                     u2620:
  3752                           
  3753                           ;SIM800x.c: 1593: };SIM800x.c: 1594: };SIM800x.c: 1596: if(SIM800xSDMPeek(2) == 'O')
  3754  000B96  0E02               	movlw	2
  3755  000B98  EC61  F00E         	call	_SIM800xSDMPeek
  3756  000B9C  D027               	goto	l781
  3757  000B9E                     l3876:
  3758  000B9E  FFFF               	dw	65535	; assembler added errata NOP
  3759                           
  3760                           ;SIM800x.c: 1599: else if(str[0] == 'O')
  3761  000BA0  0E4F               	movlw	79
  3762  000BA2  183F               	xorwf	SIM800xHTTPInputData@str^0,w,c
  3763  000BA4  B4D8               	btfsc	status,2,c
  3764  000BA6  D022               	goto	l781
  3765                           
  3766                           ;SIM800x.c: 1603: else if(str[0] == 'E')
  3767  000BA8  0E45               	movlw	69
  3768  000BAA  183F               	xorwf	SIM800xHTTPInputData@str^0,w,c
  3769  000BAC  B4D8               	btfsc	status,2,c
  3770  000BAE  D01E               	goto	l781
  3771                           
  3772                           ;SIM800x.c: 1607: else if(str[0] == '+')
  3773  000BB0  0E2B               	movlw	43
  3774  000BB2  183F               	xorwf	SIM800xHTTPInputData@str^0,w,c
  3775  000BB4  A4D8               	btfss	status,2,c
  3776  000BB6  D01A               	goto	l781
  3777                           
  3778                           ;SIM800x.c: 1608: {;SIM800x.c: 1609: str[(uint8_t)res] = '\0';
  3779  000BB8  0E3F               	movlw	low SIM800xHTTPInputData@str
  3780  000BBA  2465               	addwf	SIM800xHTTPInputData@res^0,w,c
  3781  000BBC  6ED9               	movwf	fsr2l,c
  3782  000BBE  6ADA               	clrf	fsr2h,c
  3783  000BC0  0E00               	movlw	high SIM800xHTTPInputData@str
  3784  000BC2  22DA               	addwfc	fsr2h,f,c
  3785  000BC4  0E00               	movlw	0
  3786  000BC6  6EDF               	movwf	indf2,c
  3787                           
  3788                           ;SIM800x.c: 1610: *errcode = (uint16_t)StrToInt(str, 12, (uint16_t)(res - 1));
  3789  000BC8  0E3F               	movlw	low SIM800xHTTPInputData@str
  3790  000BCA  6E0D               	movwf	StrToInt@str^0,c
  3791  000BCC  0E00               	movlw	high SIM800xHTTPInputData@str
  3792  000BCE  6E0E               	movwf	(StrToInt@str+1)^0,c
  3793  000BD0  0E0C               	movlw	12
  3794  000BD2  6E0F               	movwf	StrToInt@start^0,c
  3795  000BD4  0465               	decf	SIM800xHTTPInputData@res^0,w,c
  3796  000BD6  6E10               	movwf	StrToInt@stop^0,c
  3797  000BD8  EC9F  F007         	call	_StrToInt	;wreg free
  3798  000BDC  C039  FFD9         	movff	SIM800xHTTPInputData@errcode,fsr2l
  3799  000BE0  C03A  FFDA         	movff	SIM800xHTTPInputData@errcode+1,fsr2h
  3800  000BE4  C00D  FFDE         	movff	?_StrToInt,postinc2
  3801  000BE8  C00E  FFDD         	movff	?_StrToInt+1,postdec2
  3802  000BEC                     l781:
  3803  000BEC  FFFF               	dw	65535	; assembler added errata NOP
  3804  000BEE  0012               	return		;funcret
  3805  000BF0  FFFF               	dw	65535	; errata NOP
  3806  000BF2                     __end_of_SIM800xHTTPInputData:
  3807                           	callstack 0
  3808                           
  3809 ;; *************** function _SIM800xSDMSendBytes *****************
  3810 ;; Defined at:
  3811 ;;		line 135 in file "Src/SIM800x_SDM.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;  data            2    0[COMRAM] PTR unsigned char 
  3814 ;;		 -> txmessage(100), 
  3815 ;;  cnt             2    2[COMRAM] unsigned int 
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;		None
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  1    wreg      void 
  3820 ;; Registers used:
  3821 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3827 ;;      Params:         4       0       0       0       0       0       0
  3828 ;;      Locals:         0       0       0       0       0       0       0
  3829 ;;      Temps:          0       0       0       0       0       0       0
  3830 ;;      Totals:         4       0       0       0       0       0       0
  3831 ;;Total ram usage:        4 bytes
  3832 ;; Hardware stack levels used: 1
  3833 ;; Hardware stack levels required when called: 2
  3834 ;; This function calls:
  3835 ;;		Nothing
  3836 ;; This function is called by:
  3837 ;;		_SIM800xHTTPInputData
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841                           	psect	text7
  3842  001D44                     __ptext7:
  3843                           	callstack 0
  3844  001D44                     _SIM800xSDMSendBytes:
  3845                           	callstack 0
  3846  001D44  FFFF               	dw	65535	; assembler added errata NOP
  3847                           
  3848                           ;SIM800x_SDM.c: 138: while((cnt--) != 0)
  3849                           
  3850                           ;incstack = 0
  3851  001D46  D00B               	goto	l3512
  3852  001D48                     l1025:
  3853  001D48  FFFF               	dw	65535	; assembler added errata NOP
  3854  001D4A  A2AC               	btfss	172,1,c	;volatile
  3855  001D4C  D7FD               	goto	l1025
  3856  001D4E  C001  FFD9         	movff	SIM800xSDMSendBytes@data,fsr2l
  3857  001D52  C002  FFDA         	movff	SIM800xSDMSendBytes@data+1,fsr2h
  3858  001D56  50DF               	movf	indf2,w,c
  3859  001D58  6EAD               	movwf	173,c	;volatile
  3860  001D5A  4A01               	infsnz	SIM800xSDMSendBytes@data^0,f,c
  3861  001D5C  2A02               	incf	(SIM800xSDMSendBytes@data+1)^0,f,c
  3862  001D5E                     l3512:
  3863  001D5E  FFFF               	dw	65535	; assembler added errata NOP
  3864  001D60  0603               	decf	SIM800xSDMSendBytes@cnt^0,f,c
  3865  001D62  A0D8               	btfss	status,0,c
  3866  001D64  0604               	decf	(SIM800xSDMSendBytes@cnt+1)^0,f,c
  3867  001D66  2803               	incf	SIM800xSDMSendBytes@cnt^0,w,c
  3868  001D68  E1EF               	bnz	l1025
  3869  001D6A  2804               	incf	(SIM800xSDMSendBytes@cnt+1)^0,w,c
  3870  001D6C  B4D8               	btfsc	status,2,c
  3871  001D6E  0012               	return		;funcret
  3872  001D70  FFFF               	dw	65535	; assembler added errata NOP
  3873  001D72  D7EA               	goto	l1025
  3874  001D74  FFFF               	dw	65535	; errata NOP
  3875  001D76                     __end_of_SIM800xSDMSendBytes:
  3876                           	callstack 0
  3877                           
  3878 ;; *************** function _SIM800xHTTPAction *****************
  3879 ;; Defined at:
  3880 ;;		line 1618 in file "Src/SIM800x.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;  method          1    wreg     unsigned char 
  3883 ;;  statuscode      2   46[COMRAM] PTR unsigned int 
  3884 ;;		 -> SystemTask@scode(2), 
  3885 ;;  cnt             2   48[COMRAM] PTR unsigned long 
  3886 ;;		 -> SystemTask@cnt(4), 
  3887 ;;  tout            4   50[COMRAM] unsigned long 
  3888 ;;  errcode         2   54[COMRAM] PTR unsigned int 
  3889 ;;		 -> SystemTask@errcode(2), 
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;  method          1   94[COMRAM] unsigned char 
  3892 ;;  t               4   90[COMRAM] unsigned long 
  3893 ;;  str            30   60[COMRAM] unsigned char [30]
  3894 ;;  time            4   95[COMRAM] unsigned long 
  3895 ;;  res             2   99[COMRAM] int 
  3896 ;; Return value:  Size  Location     Type
  3897 ;;                  1    wreg      enum E2115
  3898 ;; Registers used:
  3899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3900 ;; Tracked objects:
  3901 ;;		On entry : 0/0
  3902 ;;		On exit  : 0/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3905 ;;      Params:        10       0       0       0       0       0       0
  3906 ;;      Locals:        41       0       0       0       0       0       0
  3907 ;;      Temps:          4       0       0       0       0       0       0
  3908 ;;      Totals:        55       0       0       0       0       0       0
  3909 ;;Total ram usage:       55 bytes
  3910 ;; Hardware stack levels used: 1
  3911 ;; Hardware stack levels required when called: 5
  3912 ;; This function calls:
  3913 ;;		_SIM800xSDMFlush
  3914 ;;		_SIM800xSDMPrint
  3915 ;;		_SIM800xSDMReadF1Pkt
  3916 ;;		_SIM800xSDMRxAvailable
  3917 ;;		_StrToInt
  3918 ;;		_Tick_ms
  3919 ;;		_sprintf
  3920 ;; This function is called by:
  3921 ;;		_SystemTask
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           	psect	text8
  3926  0007DC                     __ptext8:
  3927                           	callstack 0
  3928  0007DC                     _SIM800xHTTPAction:
  3929                           	callstack 0
  3930  0007DC  FFFF               	dw	65535	; assembler added errata NOP
  3931                           
  3932                           ;incstack = 0
  3933                           ;SIM800xHTTPAction@method stored from wreg
  3934  0007DE  6E5F               	movwf	SIM800xHTTPAction@method^0,c
  3935                           
  3936                           ;SIM800x.c: 1621: if(method > 3)
  3937  0007E0  0E03               	movlw	3
  3938  0007E2  645F               	cpfsgt	SIM800xHTTPAction@method^0,c
  3939  0007E4  D003               	goto	l3902
  3940  0007E6                     u2660:
  3941  0007E6  FFFF               	dw	65535	; assembler added errata NOP
  3942                           
  3943                           ;SIM800x.c: 1622: return SIM800X_ERROR;
  3944  0007E8  0E01               	movlw	1
  3945  0007EA  D0FF               	goto	l805
  3946  0007EC                     l3902:
  3947  0007EC  FFFF               	dw	65535	; assembler added errata NOP
  3948                           
  3949                           ;SIM800x.c: 1624: char str[30] = {0, 0, 0, 0};
  3950  0007EE  EE20  F03D         	lfsr	2,SIM800xHTTPAction@str
  3951  0007F2  0E1D               	movlw	29
  3952  0007F4                     u2671:
  3953  0007F4  6ADE               	clrf	postinc2,c
  3954  0007F6  06E8               	decf	wreg,f,c
  3955  0007F8  E2FD               	bc	u2671
  3956                           
  3957                           ;SIM800x.c: 1626: sprintf(str, "AT+HTTPACTION=%u\r", (uint8_t)(method & 0x03));
  3958  0007FA  0E3D               	movlw	low SIM800xHTTPAction@str
  3959  0007FC  6E17               	movwf	sprintf@sp^0,c
  3960  0007FE  0E00               	movlw	high SIM800xHTTPAction@str
  3961  000800  6E18               	movwf	(sprintf@sp+1)^0,c
  3962  000802  0E67               	movlw	low STR_97
  3963  000804  6E19               	movwf	sprintf@f^0,c
  3964  000806  0E7D               	movlw	high STR_97
  3965  000808  6E1A               	movwf	(sprintf@f+1)^0,c
  3966  00080A  C05F  F039         	movff	SIM800xHTTPAction@method,??_SIM800xHTTPAction
  3967  00080E  0E03               	movlw	3
  3968  000810  1639               	andwf	??_SIM800xHTTPAction^0,f,c
  3969  000812  5039               	movf	??_SIM800xHTTPAction^0,w,c
  3970  000814  6E1B               	movwf	(?_sprintf+4)^0,c
  3971  000816  6A1C               	clrf	(?_sprintf+5)^0,c
  3972  000818  ECBD  F002         	call	_sprintf	;wreg free
  3973                           
  3974                           ;SIM800x.c: 1627: SIM800xSDMFlush();
  3975  00081C  EC18  F00F         	call	_SIM800xSDMFlush	;wreg free
  3976                           
  3977                           ;SIM800x.c: 1628: SIM800xSDMPrint(str);
  3978  000820  0E3D               	movlw	low SIM800xHTTPAction@str
  3979  000822  6E02               	movwf	SIM800xSDMPrint@str^0,c
  3980  000824  0E00               	movlw	high SIM800xHTTPAction@str
  3981  000826  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  3982  000828  ECC4  F00C         	call	_SIM800xSDMPrint	;wreg free
  3983                           
  3984                           ;SIM800x.c: 1630: uint32_t time = Tick_ms();
  3985  00082C  EC0D  F00F         	call	_Tick_ms	;wreg free
  3986  000830  C001  F060         	movff	?_Tick_ms,SIM800xHTTPAction@time
  3987  000834  C002  F061         	movff	?_Tick_ms+1,SIM800xHTTPAction@time+1
  3988  000838  C003  F062         	movff	?_Tick_ms+2,SIM800xHTTPAction@time+2
  3989  00083C  C004  F063         	movff	?_Tick_ms+3,SIM800xHTTPAction@time+3
  3990                           
  3991                           ;SIM800x.c: 1631: while(SIM800xSDMRxAvailable() < 6)
  3992  000840  D01C               	goto	l3918
  3993  000842                     l3912:
  3994  000842  FFFF               	dw	65535	; assembler added errata NOP
  3995                           
  3996                           ;SIM800x.c: 1632: {;SIM800x.c: 1633: if((Tick_ms() - time) > Tout)
  3997  000844  EC0D  F00F         	call	_Tick_ms	;wreg free
  3998  000848  5060               	movf	SIM800xHTTPAction@time^0,w,c
  3999  00084A  5C01               	subwf	?_Tick_ms^0,w,c
  4000  00084C  6E39               	movwf	??_SIM800xHTTPAction^0,c
  4001  00084E  5061               	movf	(SIM800xHTTPAction@time+1)^0,w,c
  4002  000850  5802               	subwfb	(?_Tick_ms+1)^0,w,c
  4003  000852  6E3A               	movwf	(??_SIM800xHTTPAction+1)^0,c
  4004  000854  5062               	movf	(SIM800xHTTPAction@time+2)^0,w,c
  4005  000856  5803               	subwfb	(?_Tick_ms+2)^0,w,c
  4006  000858  6E3B               	movwf	(??_SIM800xHTTPAction+2)^0,c
  4007  00085A  5063               	movf	(SIM800xHTTPAction@time+3)^0,w,c
  4008  00085C  5804               	subwfb	(?_Tick_ms+3)^0,w,c
  4009  00085E  6E3C               	movwf	(??_SIM800xHTTPAction+3)^0,c
  4010  000860  5039               	movf	??_SIM800xHTTPAction^0,w,c
  4011  000862  5C78               	subwf	_Tout^0,w,c
  4012  000864  503A               	movf	(??_SIM800xHTTPAction+1)^0,w,c
  4013  000866  5879               	subwfb	(_Tout+1)^0,w,c
  4014  000868  503B               	movf	(??_SIM800xHTTPAction+2)^0,w,c
  4015  00086A  587A               	subwfb	(_Tout+2)^0,w,c
  4016  00086C  503C               	movf	(??_SIM800xHTTPAction+3)^0,w,c
  4017  00086E  587B               	subwfb	(_Tout+3)^0,w,c
  4018  000870  B0D8               	btfsc	status,0,c
  4019  000872  D003               	goto	l3918
  4020  000874                     u2680:
  4021  000874  FFFF               	dw	65535	; assembler added errata NOP
  4022                           
  4023                           ;SIM800x.c: 1634: {;SIM800x.c: 1635: return SIM800X_TIME_OUT;
  4024  000876  0E05               	movlw	5
  4025  000878  D0B8               	goto	l805
  4026  00087A                     l3918:
  4027  00087A  FFFF               	dw	65535	; assembler added errata NOP
  4028  00087C  ECBB  F00E         	call	_SIM800xSDMRxAvailable	;wreg free
  4029  000880  5007               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  4030  000882  E104               	bnz	u2690
  4031  000884  0E06               	movlw	6
  4032  000886  5C06               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  4033  000888  A0D8               	btfss	status,0,c
  4034  00088A  D7DB               	goto	l3912
  4035  00088C                     u2690:
  4036                           
  4037                           ;SIM800x.c: 1636: };SIM800x.c: 1637: };SIM800x.c: 1639: int res = SIM800xSDMReadF1Pkt(st
      +                          r);
  4038  00088C  0E3D               	movlw	low SIM800xHTTPAction@str
  4039  00088E  6E0A               	movwf	SIM800xSDMReadF1Pkt@data^0,c
  4040  000890  0E00               	movlw	high SIM800xHTTPAction@str
  4041  000892  6E0B               	movwf	(SIM800xSDMReadF1Pkt@data+1)^0,c
  4042  000894  EC6A  F008         	call	_SIM800xSDMReadF1Pkt	;wreg free
  4043  000898  C00A  F064         	movff	?_SIM800xSDMReadF1Pkt,SIM800xHTTPAction@res
  4044  00089C  C00B  F065         	movff	?_SIM800xSDMReadF1Pkt+1,SIM800xHTTPAction@res+1
  4045                           
  4046                           ;SIM800x.c: 1640: if(res < 0)
  4047  0008A0  BE65               	btfsc	(SIM800xHTTPAction@res+1)^0,7,c
  4048  0008A2  D7E8               	goto	u2680
  4049                           
  4050                           ;SIM800x.c: 1644: else if(str[0] == 'O')
  4051  0008A4  0E4F               	movlw	79
  4052  0008A6  183D               	xorwf	SIM800xHTTPAction@str^0,w,c
  4053  0008A8  A4D8               	btfss	status,2,c
  4054  0008AA  D07F               	goto	l3958
  4055                           
  4056                           ;SIM800x.c: 1645: {;SIM800x.c: 1647: uint32_t t = (uint32_t)(tout + 5000);
  4057  0008AC  0E88               	movlw	136
  4058  0008AE  2433               	addwf	SIM800xHTTPAction@tout^0,w,c
  4059  0008B0  6E5B               	movwf	SIM800xHTTPAction@t^0,c
  4060  0008B2  0E13               	movlw	19
  4061  0008B4  2034               	addwfc	(SIM800xHTTPAction@tout+1)^0,w,c
  4062  0008B6  6E5C               	movwf	(SIM800xHTTPAction@t+1)^0,c
  4063  0008B8  0E00               	movlw	0
  4064  0008BA  2035               	addwfc	(SIM800xHTTPAction@tout+2)^0,w,c
  4065  0008BC  6E5D               	movwf	(SIM800xHTTPAction@t+2)^0,c
  4066  0008BE  0E00               	movlw	0
  4067  0008C0  2036               	addwfc	(SIM800xHTTPAction@tout+3)^0,w,c
  4068  0008C2  6E5E               	movwf	(SIM800xHTTPAction@t+3)^0,c
  4069                           
  4070                           ;SIM800x.c: 1648: time = Tick_ms();
  4071  0008C4  EC0D  F00F         	call	_Tick_ms	;wreg free
  4072  0008C8  C001  F060         	movff	?_Tick_ms,SIM800xHTTPAction@time
  4073  0008CC  C002  F061         	movff	?_Tick_ms+1,SIM800xHTTPAction@time+1
  4074  0008D0  C003  F062         	movff	?_Tick_ms+2,SIM800xHTTPAction@time+2
  4075  0008D4  C004  F063         	movff	?_Tick_ms+3,SIM800xHTTPAction@time+3
  4076                           
  4077                           ;SIM800x.c: 1649: while(SIM800xSDMRxAvailable() < 24)
  4078  0008D8  D019               	goto	l3942
  4079  0008DA                     l3936:
  4080  0008DA  FFFF               	dw	65535	; assembler added errata NOP
  4081                           
  4082                           ;SIM800x.c: 1650: {;SIM800x.c: 1651: if((Tick_ms() - time) > t)
  4083  0008DC  EC0D  F00F         	call	_Tick_ms	;wreg free
  4084  0008E0  5060               	movf	SIM800xHTTPAction@time^0,w,c
  4085  0008E2  5C01               	subwf	?_Tick_ms^0,w,c
  4086  0008E4  6E39               	movwf	??_SIM800xHTTPAction^0,c
  4087  0008E6  5061               	movf	(SIM800xHTTPAction@time+1)^0,w,c
  4088  0008E8  5802               	subwfb	(?_Tick_ms+1)^0,w,c
  4089  0008EA  6E3A               	movwf	(??_SIM800xHTTPAction+1)^0,c
  4090  0008EC  5062               	movf	(SIM800xHTTPAction@time+2)^0,w,c
  4091  0008EE  5803               	subwfb	(?_Tick_ms+2)^0,w,c
  4092  0008F0  6E3B               	movwf	(??_SIM800xHTTPAction+2)^0,c
  4093  0008F2  5063               	movf	(SIM800xHTTPAction@time+3)^0,w,c
  4094  0008F4  5804               	subwfb	(?_Tick_ms+3)^0,w,c
  4095  0008F6  6E3C               	movwf	(??_SIM800xHTTPAction+3)^0,c
  4096  0008F8  5039               	movf	??_SIM800xHTTPAction^0,w,c
  4097  0008FA  5C5B               	subwf	SIM800xHTTPAction@t^0,w,c
  4098  0008FC  503A               	movf	(??_SIM800xHTTPAction+1)^0,w,c
  4099  0008FE  585C               	subwfb	(SIM800xHTTPAction@t+1)^0,w,c
  4100  000900  503B               	movf	(??_SIM800xHTTPAction+2)^0,w,c
  4101  000902  585D               	subwfb	(SIM800xHTTPAction@t+2)^0,w,c
  4102  000904  503C               	movf	(??_SIM800xHTTPAction+3)^0,w,c
  4103  000906  585E               	subwfb	(SIM800xHTTPAction@t+3)^0,w,c
  4104  000908  A0D8               	btfss	status,0,c
  4105  00090A  D7B4               	goto	u2680
  4106  00090C                     l3942:
  4107  00090C  FFFF               	dw	65535	; assembler added errata NOP
  4108  00090E  ECBB  F00E         	call	_SIM800xSDMRxAvailable	;wreg free
  4109  000912  5007               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  4110  000914  E104               	bnz	u2730
  4111  000916  0E18               	movlw	24
  4112  000918  5C06               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  4113  00091A  A0D8               	btfss	status,0,c
  4114  00091C  D7DE               	goto	l3936
  4115  00091E                     u2730:
  4116                           
  4117                           ;SIM800x.c: 1654: };SIM800x.c: 1655: };SIM800x.c: 1657: res = SIM800xSDMReadF1Pkt(str);
  4118  00091E  0E3D               	movlw	low SIM800xHTTPAction@str
  4119  000920  6E0A               	movwf	SIM800xSDMReadF1Pkt@data^0,c
  4120  000922  0E00               	movlw	high SIM800xHTTPAction@str
  4121  000924  6E0B               	movwf	(SIM800xSDMReadF1Pkt@data+1)^0,c
  4122  000926  EC6A  F008         	call	_SIM800xSDMReadF1Pkt	;wreg free
  4123  00092A  C00A  F064         	movff	?_SIM800xSDMReadF1Pkt,SIM800xHTTPAction@res
  4124  00092E  C00B  F065         	movff	?_SIM800xSDMReadF1Pkt+1,SIM800xHTTPAction@res+1
  4125                           
  4126                           ;SIM800x.c: 1658: if(str[0] == '+')
  4127  000932  0E2B               	movlw	43
  4128  000934  183D               	xorwf	SIM800xHTTPAction@str^0,w,c
  4129  000936  A4D8               	btfss	status,2,c
  4130  000938  D756               	goto	u2660
  4131                           
  4132                           ;SIM800x.c: 1659: {;SIM800x.c: 1660: str[(uint8_t)res] = '\0';
  4133  00093A  0E3D               	movlw	low SIM800xHTTPAction@str
  4134  00093C  2464               	addwf	SIM800xHTTPAction@res^0,w,c
  4135  00093E  6ED9               	movwf	fsr2l,c
  4136  000940  6ADA               	clrf	fsr2h,c
  4137  000942  0E00               	movlw	high SIM800xHTTPAction@str
  4138  000944  22DA               	addwfc	fsr2h,f,c
  4139  000946  0E00               	movlw	0
  4140  000948  6EDF               	movwf	indf2,c
  4141                           
  4142                           ;SIM800x.c: 1661: *statuscode = (uint16_t)StrToInt(str, 15, 17);
  4143  00094A  0E3D               	movlw	low SIM800xHTTPAction@str
  4144  00094C  6E0D               	movwf	StrToInt@str^0,c
  4145  00094E  0E00               	movlw	high SIM800xHTTPAction@str
  4146  000950  6E0E               	movwf	(StrToInt@str+1)^0,c
  4147  000952  0E0F               	movlw	15
  4148  000954  6E0F               	movwf	StrToInt@start^0,c
  4149  000956  0E11               	movlw	17
  4150  000958  6E10               	movwf	StrToInt@stop^0,c
  4151  00095A  EC9F  F007         	call	_StrToInt	;wreg free
  4152  00095E  C02F  FFD9         	movff	SIM800xHTTPAction@statuscode,fsr2l
  4153  000962  C030  FFDA         	movff	SIM800xHTTPAction@statuscode+1,fsr2h
  4154  000966  C00D  FFDE         	movff	?_StrToInt,postinc2
  4155  00096A  C00E  FFDD         	movff	?_StrToInt+1,postdec2
  4156                           
  4157                           ;SIM800x.c: 1662: *cnt = (uint16_t)StrToInt(str, 19, (uint16_t)(res - 1));
  4158  00096E  0E3D               	movlw	low SIM800xHTTPAction@str
  4159  000970  6E0D               	movwf	StrToInt@str^0,c
  4160  000972  0E00               	movlw	high SIM800xHTTPAction@str
  4161  000974  6E0E               	movwf	(StrToInt@str+1)^0,c
  4162  000976  0E13               	movlw	19
  4163  000978  6E0F               	movwf	StrToInt@start^0,c
  4164  00097A  0464               	decf	SIM800xHTTPAction@res^0,w,c
  4165  00097C  6E10               	movwf	StrToInt@stop^0,c
  4166  00097E  EC9F  F007         	call	_StrToInt	;wreg free
  4167  000982  500D               	movf	?_StrToInt^0,w,c
  4168  000984  6E39               	movwf	??_SIM800xHTTPAction^0,c
  4169  000986  500E               	movf	(?_StrToInt+1)^0,w,c
  4170  000988  6E3A               	movwf	(??_SIM800xHTTPAction+1)^0,c
  4171  00098A  6A3B               	clrf	(??_SIM800xHTTPAction+2)^0,c
  4172  00098C  6A3C               	clrf	(??_SIM800xHTTPAction+3)^0,c
  4173  00098E  C031  FFD9         	movff	SIM800xHTTPAction@cnt,fsr2l
  4174  000992  C032  FFDA         	movff	SIM800xHTTPAction@cnt+1,fsr2h
  4175  000996  C039  FFDE         	movff	??_SIM800xHTTPAction,postinc2
  4176  00099A  C03A  FFDE         	movff	??_SIM800xHTTPAction+1,postinc2
  4177  00099E  C03B  FFDE         	movff	??_SIM800xHTTPAction+2,postinc2
  4178  0009A2  C03C  FFDE         	movff	??_SIM800xHTTPAction+3,postinc2
  4179                           
  4180                           ;SIM800x.c: 1663: return SIM800X_OK;
  4181  0009A6  0E00               	movlw	0
  4182  0009A8  D020               	goto	l805
  4183  0009AA                     l3958:
  4184  0009AA  FFFF               	dw	65535	; assembler added errata NOP
  4185                           
  4186                           ;SIM800x.c: 1666: else if(str[0] == '+')
  4187  0009AC  0E2B               	movlw	43
  4188  0009AE  183D               	xorwf	SIM800xHTTPAction@str^0,w,c
  4189  0009B0  A4D8               	btfss	status,2,c
  4190  0009B2  D719               	goto	u2660
  4191                           
  4192                           ;SIM800x.c: 1667: {;SIM800x.c: 1668: str[(uint8_t)res] = '\0';
  4193  0009B4  0E3D               	movlw	low SIM800xHTTPAction@str
  4194  0009B6  2464               	addwf	SIM800xHTTPAction@res^0,w,c
  4195  0009B8  6ED9               	movwf	fsr2l,c
  4196  0009BA  6ADA               	clrf	fsr2h,c
  4197  0009BC  0E00               	movlw	high SIM800xHTTPAction@str
  4198  0009BE  22DA               	addwfc	fsr2h,f,c
  4199  0009C0  0E00               	movlw	0
  4200  0009C2  6EDF               	movwf	indf2,c
  4201                           
  4202                           ;SIM800x.c: 1669: *errcode = (uint16_t)StrToInt(str, 12, (uint16_t)(res - 1));
  4203  0009C4  0E3D               	movlw	low SIM800xHTTPAction@str
  4204  0009C6  6E0D               	movwf	StrToInt@str^0,c
  4205  0009C8  0E00               	movlw	high SIM800xHTTPAction@str
  4206  0009CA  6E0E               	movwf	(StrToInt@str+1)^0,c
  4207  0009CC  0E0C               	movlw	12
  4208  0009CE  6E0F               	movwf	StrToInt@start^0,c
  4209  0009D0  0464               	decf	SIM800xHTTPAction@res^0,w,c
  4210  0009D2  6E10               	movwf	StrToInt@stop^0,c
  4211  0009D4  EC9F  F007         	call	_StrToInt	;wreg free
  4212  0009D8  C037  FFD9         	movff	SIM800xHTTPAction@errcode,fsr2l
  4213  0009DC  C038  FFDA         	movff	SIM800xHTTPAction@errcode+1,fsr2h
  4214  0009E0  C00D  FFDE         	movff	?_StrToInt,postinc2
  4215  0009E4  C00E  FFDD         	movff	?_StrToInt+1,postdec2
  4216                           
  4217                           ;SIM800x.c: 1670: return SIM800X_CME_ERROR;
  4218  0009E8  0E02               	movlw	2
  4219  0009EA                     l805:
  4220  0009EA  FFFF               	dw	65535	; assembler added errata NOP
  4221  0009EC  0012               	return		;funcret
  4222  0009EE  FFFF               	dw	65535	; errata NOP
  4223  0009F0                     __end_of_SIM800xHTTPAction:
  4224                           	callstack 0
  4225                           
  4226 ;; *************** function _sprintf *****************
  4227 ;; Defined at:
  4228 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  4229 ;; Parameters:    Size  Location     Type
  4230 ;;  sp              2   22[COMRAM] PTR unsigned char 
  4231 ;;		 -> SIM800xHTTPRead@str(30), SIM800xHTTPAction@str(30), SIM800xHTTPInputData@str(30), SIM800xHTTPSetTimeout@str(30),
      + 
  4232 ;;		 -> SIM800xHTTPSetBreakEnd@str(30), SIM800xHTTPSetBreak@str(30), SIM800xHTTPSetRedir@str(25), SIM800xHTTPSetPort@str
      +(30), 
  4233 ;;		 -> SIM800xGPRSGetAddress@str(40), SIM800xGPRSSetDataMode@str(20), SIM800xGPRSSetQoSRequest@str(40), SIM800xGPRSSetQ
      +oSMin@str(40), 
  4234 ;;		 -> SIM800xIPGetParameters@str(30), SIM800xIPSetRate@str(8), SIM800xSetBaudRate@str(15), SystemTask@msg(20), 
  4235 ;;  f               2   24[COMRAM] PTR const unsigned char 
  4236 ;;		 -> STR_98(21), STR_97(18), STR_96(21), STR_93(26), 
  4237 ;;		 -> STR_92(28), STR_91(25), STR_90(24), STR_89(26), 
  4238 ;;		 -> STR_69(15), STR_68(20), STR_64(29), STR_63(29), 
  4239 ;;		 -> STR_57(15), STR_51(4), STR_31(12), STR_24(27), 
  4240 ;;		 -> STR_23(24), 
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;  val             4   38[COMRAM] unsigned long 
  4243 ;;  tmpval          4    0        struct .
  4244 ;;  cp              3    0        PTR const unsigned char 
  4245 ;;  ap              2   42[COMRAM] PTR void [1]
  4246 ;;		 -> ?_sprintf(2), 
  4247 ;;  prec            2   36[COMRAM] int 
  4248 ;;  len             2    0        unsigned int 
  4249 ;;  c               1   45[COMRAM] unsigned char 
  4250 ;;  flag            1   44[COMRAM] unsigned char 
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  2   22[COMRAM] int 
  4253 ;; Registers used:
  4254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4260 ;;      Params:        12       0       0       0       0       0       0
  4261 ;;      Locals:        10       0       0       0       0       0       0
  4262 ;;      Temps:          2       0       0       0       0       0       0
  4263 ;;      Totals:        24       0       0       0       0       0       0
  4264 ;;Total ram usage:       24 bytes
  4265 ;; Hardware stack levels used: 1
  4266 ;; Hardware stack levels required when called: 3
  4267 ;; This function calls:
  4268 ;;		___lldiv
  4269 ;;		___llmod
  4270 ;; This function is called by:
  4271 ;;		_SystemTask
  4272 ;;		_SIM800xHTTPInputData
  4273 ;;		_SIM800xHTTPAction
  4274 ;;		_SIM800xHTTPRead
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           	psect	text9
  4279  00057A                     __ptext9:
  4280                           	callstack 0
  4281  00057A                     _sprintf:
  4282                           	callstack 0
  4283  00057A  FFFF               	dw	65535	; assembler added errata NOP
  4284                           
  4285                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 517: int prec;;doprnt.c: 52
      +                          5: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;doprnt.c:
      +                           542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long val;;doprnt.c:
      +                           546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_start();
  4286                           
  4287                           ;incstack = 0
  4288  00057C  0E1B               	movlw	low (?_sprintf+4)
  4289  00057E  6E2B               	movwf	sprintf@ap^0,c
  4290  000580  0E00               	movlw	high (?_sprintf+4)
  4291  000582  6E2C               	movwf	(sprintf@ap+1)^0,c
  4292                           
  4293                           ;doprnt.c: 553: while((c = *f++)) {
  4294  000584  D114               	goto	u1900
  4295  000586                     l3254:
  4296  000586  FFFF               	dw	65535	; assembler added errata NOP
  4297                           
  4298                           ;doprnt.c: 555: if(c != '%')
  4299  000588  0E25               	movlw	37
  4300  00058A  182E               	xorwf	sprintf@c^0,w,c
  4301  00058C  B4D8               	btfsc	status,2,c
  4302  00058E  D009               	goto	l3260
  4303                           
  4304                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  4305  000590  C017  FFD9         	movff	sprintf@sp,fsr2l
  4306  000594  C018  FFDA         	movff	sprintf@sp+1,fsr2h
  4307  000598  C02E  FFDF         	movff	sprintf@c,indf2
  4308  00059C  4A17               	infsnz	sprintf@sp^0,f,c
  4309  00059E  2A18               	incf	(sprintf@sp+1)^0,f,c
  4310                           
  4311                           ;doprnt.c: 559: continue;
  4312  0005A0  D106               	goto	u1900
  4313  0005A2                     l3260:
  4314  0005A2  FFFF               	dw	65535	; assembler added errata NOP
  4315                           
  4316                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  4317  0005A4  0E00               	movlw	0
  4318  0005A6  6E2D               	movwf	sprintf@flag^0,c
  4319  0005A8  D006               	goto	l3268
  4320  0005AA                     l3262:
  4321  0005AA  FFFF               	dw	65535	; assembler added errata NOP
  4322                           
  4323                           ;doprnt.c: 669: flag |= 0x10;
  4324  0005AC  882D               	bsf	sprintf@flag^0,4,c
  4325                           
  4326                           ;doprnt.c: 670: goto loop;
  4327  0005AE  D003               	goto	l3268
  4328  0005B0                     l3264:
  4329  0005B0  FFFF               	dw	65535	; assembler added errata NOP
  4330                           
  4331                           ;doprnt.c: 844: flag |= 0x40;
  4332  0005B2  8C2D               	bsf	sprintf@flag^0,6,c
  4333                           
  4334                           ;doprnt.c: 845: break;
  4335  0005B4  D01C               	goto	l1214
  4336  0005B6                     l3268:
  4337  0005B6  FFFF               	dw	65535	; assembler added errata NOP
  4338  0005B8  C019  FFF6         	movff	sprintf@f,tblptrl
  4339  0005BC  C01A  FFF7         	movff	sprintf@f+1,tblptrh
  4340  0005C0  4A19               	infsnz	sprintf@f^0,f,c
  4341  0005C2  2A1A               	incf	(sprintf@f+1)^0,f,c
  4342  0005C4                     	if	0	;tblptru may be non-zero
  4343  0005C4                     	endif
  4344  0005C4                     	if	0	;tblptru may be non-zero
  4345  0005C4                     	endif
  4346  0005C4  0008               	tblrd		*
  4347  0005C6  FFFF               	dw	65535	; errata NOP
  4348  0005C8  CFF5 F02E          	movff	tablat,sprintf@c
  4349  0005CC  502E               	movf	sprintf@c^0,w,c
  4350                           
  4351                           ; Switch size 1, requested type "simple"
  4352                           ; Number of cases is 5, Range of values is 0 to 117
  4353                           ; switch strategies available:
  4354                           ; Name         Instructions Cycles
  4355                           ; simple_byte           16     9 (average)
  4356                           ;	Chosen strategy is simple_byte
  4357  0005CE  0A00               	xorlw	0	; case 0
  4358  0005D0  B4D8               	btfsc	status,2,c
  4359  0005D2  D0FB               	goto	u1910
  4360  0005D4  0A64               	xorlw	100	; case 100
  4361  0005D6  B4D8               	btfsc	status,2,c
  4362  0005D8  D00A               	goto	l1214
  4363  0005DA  0A0D               	xorlw	13	; case 105
  4364  0005DC  B4D8               	btfsc	status,2,c
  4365  0005DE  D007               	goto	l1214
  4366  0005E0  0A05               	xorlw	5	; case 108
  4367  0005E2  B4D8               	btfsc	status,2,c
  4368  0005E4  D7E2               	goto	l3262
  4369  0005E6  0A19               	xorlw	25	; case 117
  4370  0005E8  B4D8               	btfsc	status,2,c
  4371  0005EA  D7E2               	goto	l3264
  4372  0005EC  D0E0               	goto	u1900
  4373  0005EE                     l1214:
  4374  0005EE  FFFF               	dw	65535	; assembler added errata NOP
  4375                           
  4376                           ;doprnt.c: 1277: if((flag & 0x40) == 0x00)
  4377  0005F0  BC2D               	btfsc	sprintf@flag^0,6,c
  4378  0005F2  D030               	goto	l1217
  4379                           
  4380                           ;doprnt.c: 1279: {;doprnt.c: 1281: if(flag & 0x10)
  4381  0005F4  A82D               	btfss	sprintf@flag^0,4,c
  4382  0005F6  D00E               	goto	l3276
  4383                           
  4384                           ;doprnt.c: 1282: val = (unsigned long)(*(long *)__va_arg((*(long **)ap), (long)0));
  4385  0005F8  C02B  FFD9         	movff	sprintf@ap,fsr2l
  4386  0005FC  C02C  FFDA         	movff	sprintf@ap+1,fsr2h
  4387  000600  CFDE F027          	movff	postinc2,sprintf@val
  4388  000604  CFDE F028          	movff	postinc2,sprintf@val+1
  4389  000608  CFDE F029          	movff	postinc2,sprintf@val+2
  4390  00060C  CFDE F02A          	movff	postinc2,sprintf@val+3
  4391  000610  0E04               	movlw	4
  4392  000612  D00F               	goto	L1
  4393  000614                     l3276:
  4394  000614  FFFF               	dw	65535	; assembler added errata NOP
  4395                           
  4396                           ;doprnt.c: 1283: else;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)a
      +                          p), (int)0));
  4397  000616  C02B  FFD9         	movff	sprintf@ap,fsr2l
  4398  00061A  C02C  FFDA         	movff	sprintf@ap+1,fsr2h
  4399  00061E  CFDE F027          	movff	postinc2,sprintf@val
  4400  000622  CFDD F028          	movff	postdec2,sprintf@val+1
  4401  000626  0E00               	movlw	0
  4402  000628  BE28               	btfsc	(sprintf@val+1)^0,7,c
  4403  00062A  0EFF               	movlw	-1
  4404  00062C  6E29               	movwf	(sprintf@val+2)^0,c
  4405  00062E  6E2A               	movwf	(sprintf@val+3)^0,c
  4406  000630  0E02               	movlw	2
  4407  000632                     L1:
  4408  000632  FFFF               	dw	65535	; assembler added errata NOP
  4409  000634  262B               	addwf	sprintf@ap^0,f,c
  4410  000636  0E00               	movlw	0
  4411  000638  222C               	addwfc	(sprintf@ap+1)^0,f,c
  4412                           
  4413                           ;doprnt.c: 1287: if((long)val < 0) {
  4414  00063A  AE2A               	btfss	(sprintf@val+3)^0,7,c
  4415  00063C  D030               	goto	l3294
  4416                           
  4417                           ;doprnt.c: 1288: flag |= 0x03;
  4418  00063E  0E03               	movlw	3
  4419  000640  122D               	iorwf	sprintf@flag^0,f,c
  4420                           
  4421                           ;doprnt.c: 1289: val = -val;
  4422  000642  1E2A               	comf	(sprintf@val+3)^0,f,c
  4423  000644  1E29               	comf	(sprintf@val+2)^0,f,c
  4424  000646  1E28               	comf	(sprintf@val+1)^0,f,c
  4425  000648  6C27               	negf	sprintf@val^0,c
  4426  00064A  0E00               	movlw	0
  4427  00064C  2228               	addwfc	(sprintf@val+1)^0,f,c
  4428  00064E  2229               	addwfc	(sprintf@val+2)^0,f,c
  4429  000650  222A               	addwfc	(sprintf@val+3)^0,f,c
  4430  000652  D025               	goto	l3294
  4431  000654                     l1217:
  4432  000654  FFFF               	dw	65535	; assembler added errata NOP
  4433                           
  4434                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
  4435  000656  A82D               	btfss	sprintf@flag^0,4,c
  4436  000658  D00E               	goto	l3290
  4437                           
  4438                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  4439  00065A  C02B  FFD9         	movff	sprintf@ap,fsr2l
  4440  00065E  C02C  FFDA         	movff	sprintf@ap+1,fsr2h
  4441  000662  CFDE F027          	movff	postinc2,sprintf@val
  4442  000666  CFDE F028          	movff	postinc2,sprintf@val+1
  4443  00066A  CFDE F029          	movff	postinc2,sprintf@val+2
  4444  00066E  CFDE F02A          	movff	postinc2,sprintf@val+3
  4445  000672  0E04               	movlw	4
  4446  000674  D010               	goto	L2
  4447  000676                     l3290:
  4448  000676  FFFF               	dw	65535	; assembler added errata NOP
  4449                           
  4450                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  4451  000678  C02B  FFD9         	movff	sprintf@ap,fsr2l
  4452  00067C  C02C  FFDA         	movff	sprintf@ap+1,fsr2h
  4453  000680  CFDE F023          	movff	postinc2,??_sprintf
  4454  000684  CFDD F024          	movff	postdec2,??_sprintf+1
  4455  000688  C023  F027         	movff	??_sprintf,sprintf@val
  4456  00068C  C024  F028         	movff	??_sprintf+1,sprintf@val+1
  4457  000690  6A29               	clrf	(sprintf@val+2)^0,c
  4458  000692  6A2A               	clrf	(sprintf@val+3)^0,c
  4459  000694  0E02               	movlw	2
  4460  000696                     L2:
  4461  000696  FFFF               	dw	65535	; assembler added errata NOP
  4462  000698  262B               	addwf	sprintf@ap^0,f,c
  4463  00069A  0E00               	movlw	0
  4464  00069C  222C               	addwfc	(sprintf@ap+1)^0,f,c
  4465  00069E                     l3294:
  4466  00069E  FFFF               	dw	65535	; assembler added errata NOP
  4467                           
  4468                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  4469  0006A0  0E01               	movlw	1
  4470  0006A2  6E2E               	movwf	sprintf@c^0,c
  4471  0006A4                     l3300:
  4472  0006A4  FFFF               	dw	65535	; assembler added errata NOP
  4473                           
  4474                           ;doprnt.c: 1332: if(val < dpowers[c])
  4475  0006A6  502E               	movf	sprintf@c^0,w,c
  4476  0006A8  0D04               	mullw	4
  4477  0006AA  0E8F               	movlw	low _dpowers
  4478  0006AC  24F3               	addwf	243,w,c
  4479  0006AE  6EF6               	movwf	tblptrl,c
  4480  0006B0  0E79               	movlw	high _dpowers
  4481  0006B2  20F4               	addwfc	244,w,c
  4482  0006B4  6EF7               	movwf	tblptrh,c
  4483  0006B6                     	if	0	;There are less than 3 active tblptr bytes
  4484  0006B6                     	endif
  4485  0006B6  0009               	tblrd		*+
  4486  0006B8  FFFF               	dw	65535	; errata NOP
  4487  0006BA  50F5               	movf	tablat,w,c
  4488  0006BC  5C27               	subwf	sprintf@val^0,w,c
  4489  0006BE  0009               	tblrd		*+
  4490  0006C0  FFFF               	dw	65535	; errata NOP
  4491  0006C2  50F5               	movf	tablat,w,c
  4492  0006C4  5828               	subwfb	(sprintf@val+1)^0,w,c
  4493  0006C6  0009               	tblrd		*+
  4494  0006C8  FFFF               	dw	65535	; errata NOP
  4495  0006CA  50F5               	movf	tablat,w,c
  4496  0006CC  5829               	subwfb	(sprintf@val+2)^0,w,c
  4497  0006CE  0009               	tblrd		*+
  4498  0006D0  FFFF               	dw	65535	; errata NOP
  4499  0006D2  50F5               	movf	tablat,w,c
  4500  0006D4  582A               	subwfb	(sprintf@val+3)^0,w,c
  4501  0006D6  A0D8               	btfss	status,0,c
  4502  0006D8  D005               	goto	u1880
  4503  0006DA  2A2E               	incf	sprintf@c^0,f,c
  4504  0006DC  0E0A               	movlw	10
  4505  0006DE  182E               	xorwf	sprintf@c^0,w,c
  4506  0006E0  A4D8               	btfss	status,2,c
  4507  0006E2  D7E0               	goto	l3300
  4508  0006E4                     u1880:
  4509  0006E4  FFFF               	dw	65535	; assembler added errata NOP
  4510                           
  4511                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  4512  0006E6  C02D  F023         	movff	sprintf@flag,??_sprintf
  4513  0006EA  0E03               	movlw	3
  4514  0006EC  1623               	andwf	??_sprintf^0,f,c
  4515  0006EE  B4D8               	btfsc	status,2,c
  4516  0006F0  D008               	goto	l3314
  4517                           
  4518                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  4519  0006F2  C017  FFD9         	movff	sprintf@sp,fsr2l
  4520  0006F6  C018  FFDA         	movff	sprintf@sp+1,fsr2h
  4521  0006FA  0E2D               	movlw	45
  4522  0006FC  6EDF               	movwf	indf2,c
  4523  0006FE  4A17               	infsnz	sprintf@sp^0,f,c
  4524  000700  2A18               	incf	(sprintf@sp+1)^0,f,c
  4525  000702                     l3314:
  4526  000702  FFFF               	dw	65535	; assembler added errata NOP
  4527                           
  4528                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  4529  000704  C02E  F025         	movff	sprintf@c,sprintf@prec
  4530  000708  6A26               	clrf	(sprintf@prec+1)^0,c
  4531                           
  4532                           ;doprnt.c: 1500: while(prec--) {
  4533  00070A  D048               	goto	l3322
  4534  00070C                     l3316:
  4535  00070C  FFFF               	dw	65535	; assembler added errata NOP
  4536                           
  4537                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  4538  00070E  C025  F023         	movff	sprintf@prec,??_sprintf
  4539  000712  C026  F024         	movff	sprintf@prec+1,??_sprintf+1
  4540  000716  90D8               	bcf	status,0,c
  4541  000718  3623               	rlcf	??_sprintf^0,f,c
  4542  00071A  3624               	rlcf	(??_sprintf+1)^0,f,c
  4543  00071C  90D8               	bcf	status,0,c
  4544  00071E  3623               	rlcf	??_sprintf^0,f,c
  4545  000720  3624               	rlcf	(??_sprintf+1)^0,f,c
  4546  000722  0E8F               	movlw	low _dpowers
  4547  000724  2423               	addwf	??_sprintf^0,w,c
  4548  000726  6EF6               	movwf	tblptrl,c
  4549  000728  0E79               	movlw	high _dpowers
  4550  00072A  2024               	addwfc	(??_sprintf+1)^0,w,c
  4551  00072C  6EF7               	movwf	tblptrh,c
  4552  00072E                     	if	0	;There are less than 3 active tblptr bytes
  4553  00072E                     	endif
  4554  00072E  0009               	tblrd		*+
  4555  000730  FFFF               	dw	65535	; errata NOP
  4556  000732  CFF5 F005          	movff	tablat,___lldiv@divisor
  4557  000736  0009               	tblrd		*+
  4558  000738  FFFF               	dw	65535	; errata NOP
  4559  00073A  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  4560  00073E  0009               	tblrd		*+
  4561  000740  FFFF               	dw	65535	; errata NOP
  4562  000742  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  4563  000746  000A               	tblrd		*-
  4564  000748  FFFF               	dw	65535	; errata NOP
  4565  00074A  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  4566  00074E  C027  F001         	movff	sprintf@val,___lldiv@dividend
  4567  000752  C028  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  4568  000756  C029  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  4569  00075A  C02A  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  4570  00075E  ECA7  F00A         	call	___lldiv	;wreg free
  4571  000762  C001  F00E         	movff	?___lldiv,___llmod@dividend
  4572  000766  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  4573  00076A  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  4574  00076E  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  4575  000772  0E0A               	movlw	10
  4576  000774  6E12               	movwf	___llmod@divisor^0,c
  4577  000776  0E00               	movlw	0
  4578  000778  6E13               	movwf	(___llmod@divisor+1)^0,c
  4579  00077A  0E00               	movlw	0
  4580  00077C  6E14               	movwf	(___llmod@divisor+2)^0,c
  4581  00077E  0E00               	movlw	0
  4582  000780  6E15               	movwf	(___llmod@divisor+3)^0,c
  4583  000782  ECB5  F00B         	call	___llmod	;wreg free
  4584  000786  500E               	movf	?___llmod^0,w,c
  4585  000788  0F30               	addlw	48
  4586  00078A  6E2E               	movwf	sprintf@c^0,c
  4587                           
  4588                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  4589  00078C  C017  FFD9         	movff	sprintf@sp,fsr2l
  4590  000790  C018  FFDA         	movff	sprintf@sp+1,fsr2h
  4591  000794  C02E  FFDF         	movff	sprintf@c,indf2
  4592  000798  4A17               	infsnz	sprintf@sp^0,f,c
  4593  00079A  2A18               	incf	(sprintf@sp+1)^0,f,c
  4594  00079C                     l3322:
  4595  00079C  FFFF               	dw	65535	; assembler added errata NOP
  4596  00079E  0625               	decf	sprintf@prec^0,f,c
  4597  0007A0  A0D8               	btfss	status,0,c
  4598  0007A2  0626               	decf	(sprintf@prec+1)^0,f,c
  4599  0007A4  2825               	incf	sprintf@prec^0,w,c
  4600  0007A6  E1B2               	bnz	l3316
  4601  0007A8  2826               	incf	(sprintf@prec+1)^0,w,c
  4602  0007AA  A4D8               	btfss	status,2,c
  4603  0007AC  D7AF               	goto	l3316
  4604  0007AE                     u1900:
  4605  0007AE  FFFF               	dw	65535	; assembler added errata NOP
  4606  0007B0  C019  FFF6         	movff	sprintf@f,tblptrl
  4607  0007B4  C01A  FFF7         	movff	sprintf@f+1,tblptrh
  4608  0007B8  4A19               	infsnz	sprintf@f^0,f,c
  4609  0007BA  2A1A               	incf	(sprintf@f+1)^0,f,c
  4610  0007BC                     	if	0	;tblptru may be non-zero
  4611  0007BC                     	endif
  4612  0007BC                     	if	0	;tblptru may be non-zero
  4613  0007BC                     	endif
  4614  0007BC  0008               	tblrd		*
  4615  0007BE  FFFF               	dw	65535	; errata NOP
  4616  0007C0  CFF5 F02E          	movff	tablat,sprintf@c
  4617  0007C4  502E               	movf	sprintf@c^0,w,c
  4618  0007C6  A4D8               	btfss	status,2,c
  4619  0007C8  D6DE               	goto	l3254
  4620  0007CA                     u1910:
  4621  0007CA  FFFF               	dw	65535	; assembler added errata NOP
  4622                           
  4623                           ;doprnt.c: 1564: *sp = 0;
  4624  0007CC  C017  FFD9         	movff	sprintf@sp,fsr2l
  4625  0007D0  C018  FFDA         	movff	sprintf@sp+1,fsr2h
  4626  0007D4  0E00               	movlw	0
  4627  0007D6  6EDF               	movwf	indf2,c
  4628  0007D8  0012               	return		;funcret
  4629  0007DA  FFFF               	dw	65535	; errata NOP
  4630  0007DC                     __end_of_sprintf:
  4631                           	callstack 0
  4632                           
  4633 ;; *************** function ___llmod *****************
  4634 ;; Defined at:
  4635 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\llmod.c"
  4636 ;; Parameters:    Size  Location     Type
  4637 ;;  dividend        4   13[COMRAM] unsigned long 
  4638 ;;  divisor         4   17[COMRAM] unsigned long 
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;  counter         1   21[COMRAM] unsigned char 
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  4   13[COMRAM] unsigned long 
  4643 ;; Registers used:
  4644 ;;		wreg, status,2, status,0
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4650 ;;      Params:         8       0       0       0       0       0       0
  4651 ;;      Locals:         1       0       0       0       0       0       0
  4652 ;;      Temps:          0       0       0       0       0       0       0
  4653 ;;      Totals:         9       0       0       0       0       0       0
  4654 ;;Total ram usage:        9 bytes
  4655 ;; Hardware stack levels used: 1
  4656 ;; Hardware stack levels required when called: 2
  4657 ;; This function calls:
  4658 ;;		Nothing
  4659 ;; This function is called by:
  4660 ;;		_sprintf
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664                           	psect	text10
  4665  00176A                     __ptext10:
  4666                           	callstack 0
  4667  00176A                     ___llmod:
  4668                           	callstack 0
  4669  00176A  FFFF               	dw	65535	; assembler added errata NOP
  4670                           
  4671                           ;incstack = 0
  4672  00176C  5012               	movf	___llmod@divisor^0,w,c
  4673  00176E  1013               	iorwf	(___llmod@divisor+1)^0,w,c
  4674  001770  1014               	iorwf	(___llmod@divisor+2)^0,w,c
  4675  001772  1015               	iorwf	(___llmod@divisor+3)^0,w,c
  4676  001774  B4D8               	btfsc	status,2,c
  4677  001776  D028               	goto	l1643
  4678  001778  0E01               	movlw	1
  4679  00177A  6E16               	movwf	___llmod@counter^0,c
  4680  00177C  D007               	goto	l3242
  4681  00177E                     l3240:
  4682  00177E  FFFF               	dw	65535	; assembler added errata NOP
  4683  001780  90D8               	bcf	status,0,c
  4684  001782  3612               	rlcf	___llmod@divisor^0,f,c
  4685  001784  3613               	rlcf	(___llmod@divisor+1)^0,f,c
  4686  001786  3614               	rlcf	(___llmod@divisor+2)^0,f,c
  4687  001788  3615               	rlcf	(___llmod@divisor+3)^0,f,c
  4688  00178A  2A16               	incf	___llmod@counter^0,f,c
  4689  00178C                     l3242:
  4690  00178C  FFFF               	dw	65535	; assembler added errata NOP
  4691  00178E  AE15               	btfss	(___llmod@divisor+3)^0,7,c
  4692  001790  D7F6               	goto	l3240
  4693  001792                     u1800:
  4694  001792  FFFF               	dw	65535	; assembler added errata NOP
  4695  001794  5012               	movf	___llmod@divisor^0,w,c
  4696  001796  5C0E               	subwf	___llmod@dividend^0,w,c
  4697  001798  5013               	movf	(___llmod@divisor+1)^0,w,c
  4698  00179A  580F               	subwfb	(___llmod@dividend+1)^0,w,c
  4699  00179C  5014               	movf	(___llmod@divisor+2)^0,w,c
  4700  00179E  5810               	subwfb	(___llmod@dividend+2)^0,w,c
  4701  0017A0  5015               	movf	(___llmod@divisor+3)^0,w,c
  4702  0017A2  5811               	subwfb	(___llmod@dividend+3)^0,w,c
  4703  0017A4  A0D8               	btfss	status,0,c
  4704  0017A6  D008               	goto	l3248
  4705  0017A8  5012               	movf	___llmod@divisor^0,w,c
  4706  0017AA  5E0E               	subwf	___llmod@dividend^0,f,c
  4707  0017AC  5013               	movf	(___llmod@divisor+1)^0,w,c
  4708  0017AE  5A0F               	subwfb	(___llmod@dividend+1)^0,f,c
  4709  0017B0  5014               	movf	(___llmod@divisor+2)^0,w,c
  4710  0017B2  5A10               	subwfb	(___llmod@dividend+2)^0,f,c
  4711  0017B4  5015               	movf	(___llmod@divisor+3)^0,w,c
  4712  0017B6  5A11               	subwfb	(___llmod@dividend+3)^0,f,c
  4713  0017B8                     l3248:
  4714  0017B8  FFFF               	dw	65535	; assembler added errata NOP
  4715  0017BA  90D8               	bcf	status,0,c
  4716  0017BC  3215               	rrcf	(___llmod@divisor+3)^0,f,c
  4717  0017BE  3214               	rrcf	(___llmod@divisor+2)^0,f,c
  4718  0017C0  3213               	rrcf	(___llmod@divisor+1)^0,f,c
  4719  0017C2  3212               	rrcf	___llmod@divisor^0,f,c
  4720  0017C4  2E16               	decfsz	___llmod@counter^0,f,c
  4721  0017C6  D7E5               	goto	u1800
  4722  0017C8                     l1643:
  4723  0017C8  FFFF               	dw	65535	; assembler added errata NOP
  4724  0017CA  C00E  F00E         	movff	___llmod@dividend,?___llmod
  4725  0017CE  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  4726  0017D2  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  4727  0017D6  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  4728  0017DA  0012               	return		;funcret
  4729  0017DC  FFFF               	dw	65535	; errata NOP
  4730  0017DE                     __end_of___llmod:
  4731                           	callstack 0
  4732                           
  4733 ;; *************** function ___lldiv *****************
  4734 ;; Defined at:
  4735 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  4736 ;; Parameters:    Size  Location     Type
  4737 ;;  dividend        4    0[COMRAM] unsigned long 
  4738 ;;  divisor         4    4[COMRAM] unsigned long 
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;  quotient        4    8[COMRAM] unsigned long 
  4741 ;;  counter         1   12[COMRAM] unsigned char 
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  4    0[COMRAM] unsigned long 
  4744 ;; Registers used:
  4745 ;;		wreg, status,2, status,0
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4751 ;;      Params:         8       0       0       0       0       0       0
  4752 ;;      Locals:         5       0       0       0       0       0       0
  4753 ;;      Temps:          0       0       0       0       0       0       0
  4754 ;;      Totals:        13       0       0       0       0       0       0
  4755 ;;Total ram usage:       13 bytes
  4756 ;; Hardware stack levels used: 1
  4757 ;; Hardware stack levels required when called: 2
  4758 ;; This function calls:
  4759 ;;		Nothing
  4760 ;; This function is called by:
  4761 ;;		_sprintf
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764                           
  4765                           	psect	text11
  4766  00154E                     __ptext11:
  4767                           	callstack 0
  4768  00154E                     ___lldiv:
  4769                           	callstack 0
  4770  00154E  FFFF               	dw	65535	; assembler added errata NOP
  4771                           
  4772                           ;incstack = 0
  4773  001550  0E00               	movlw	0
  4774  001552  6E09               	movwf	___lldiv@quotient^0,c
  4775  001554  0E00               	movlw	0
  4776  001556  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  4777  001558  0E00               	movlw	0
  4778  00155A  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  4779  00155C  0E00               	movlw	0
  4780  00155E  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  4781  001560  5005               	movf	___lldiv@divisor^0,w,c
  4782  001562  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  4783  001564  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  4784  001566  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  4785  001568  B4D8               	btfsc	status,2,c
  4786  00156A  D02E               	goto	l1262
  4787  00156C  0E01               	movlw	1
  4788  00156E  6E0D               	movwf	___lldiv@counter^0,c
  4789  001570  D007               	goto	l3222
  4790  001572                     l3220:
  4791  001572  FFFF               	dw	65535	; assembler added errata NOP
  4792  001574  90D8               	bcf	status,0,c
  4793  001576  3605               	rlcf	___lldiv@divisor^0,f,c
  4794  001578  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  4795  00157A  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  4796  00157C  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  4797  00157E  2A0D               	incf	___lldiv@counter^0,f,c
  4798  001580                     l3222:
  4799  001580  FFFF               	dw	65535	; assembler added errata NOP
  4800  001582  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  4801  001584  D7F6               	goto	l3220
  4802  001586                     u1770:
  4803  001586  FFFF               	dw	65535	; assembler added errata NOP
  4804  001588  90D8               	bcf	status,0,c
  4805  00158A  3609               	rlcf	___lldiv@quotient^0,f,c
  4806  00158C  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  4807  00158E  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  4808  001590  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  4809  001592  5005               	movf	___lldiv@divisor^0,w,c
  4810  001594  5C01               	subwf	___lldiv@dividend^0,w,c
  4811  001596  5006               	movf	(___lldiv@divisor+1)^0,w,c
  4812  001598  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  4813  00159A  5007               	movf	(___lldiv@divisor+2)^0,w,c
  4814  00159C  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  4815  00159E  5008               	movf	(___lldiv@divisor+3)^0,w,c
  4816  0015A0  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  4817  0015A2  A0D8               	btfss	status,0,c
  4818  0015A4  D009               	goto	l3232
  4819  0015A6  5005               	movf	___lldiv@divisor^0,w,c
  4820  0015A8  5E01               	subwf	___lldiv@dividend^0,f,c
  4821  0015AA  5006               	movf	(___lldiv@divisor+1)^0,w,c
  4822  0015AC  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  4823  0015AE  5007               	movf	(___lldiv@divisor+2)^0,w,c
  4824  0015B0  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  4825  0015B2  5008               	movf	(___lldiv@divisor+3)^0,w,c
  4826  0015B4  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  4827  0015B6  8009               	bsf	___lldiv@quotient^0,0,c
  4828  0015B8                     l3232:
  4829  0015B8  FFFF               	dw	65535	; assembler added errata NOP
  4830  0015BA  90D8               	bcf	status,0,c
  4831  0015BC  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  4832  0015BE  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  4833  0015C0  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  4834  0015C2  3205               	rrcf	___lldiv@divisor^0,f,c
  4835  0015C4  2E0D               	decfsz	___lldiv@counter^0,f,c
  4836  0015C6  D7DF               	goto	u1770
  4837  0015C8                     l1262:
  4838  0015C8  FFFF               	dw	65535	; assembler added errata NOP
  4839  0015CA  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4840  0015CE  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4841  0015D2  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4842  0015D6  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4843  0015DA  0012               	return		;funcret
  4844  0015DC  FFFF               	dw	65535	; errata NOP
  4845  0015DE                     __end_of___lldiv:
  4846                           	callstack 0
  4847                           
  4848 ;; *************** function _SystemInit *****************
  4849 ;; Defined at:
  4850 ;;		line 34 in file "Src/ApplicationExample.c"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;		None
  4853 ;; Auto vars:     Size  Location     Type
  4854 ;;  ip             20   79[COMRAM] unsigned char [20]
  4855 ;;  err             2   99[COMRAM] unsigned int 
  4856 ;; Return value:  Size  Location     Type
  4857 ;;                  1    wreg      unsigned char 
  4858 ;; Registers used:
  4859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/0
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4865 ;;      Params:         0       0       0       0       0       0       0
  4866 ;;      Locals:        22       0       0       0       0       0       0
  4867 ;;      Temps:          0       0       0       0       0       0       0
  4868 ;;      Totals:        22       0       0       0       0       0       0
  4869 ;;Total ram usage:       22 bytes
  4870 ;; Hardware stack levels used: 1
  4871 ;; Hardware stack levels required when called: 7
  4872 ;; This function calls:
  4873 ;;		_AddEntryToJsonObject
  4874 ;;		_SIM800xHTTPInit
  4875 ;;		_SIM800xHTTPSetContent
  4876 ;;		_SIM800xHTTPSetURL
  4877 ;;		_SIM800xIPGetState
  4878 ;;		_SIM800xIPOpen
  4879 ;;		_SIM800xIPSetAPN
  4880 ;;		_SIM800xIPSetConnectionType
  4881 ;;		_SIM800xInit
  4882 ;;		_SoftUARTInit
  4883 ;;		_SoftUARTPrint
  4884 ;;		_SystimeInit
  4885 ;;		_USARTAsyncInit
  4886 ;; This function is called by:
  4887 ;;		_main
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           
  4891                           	psect	text12
  4892  000BF2                     __ptext12:
  4893                           	callstack 0
  4894  000BF2                     _SystemInit:
  4895                           	callstack 0
  4896  000BF2  FFFF               	dw	65535	; assembler added errata NOP
  4897                           
  4898                           ;ApplicationExample.c: 36: SystimeInit();
  4899                           
  4900                           ;incstack = 0
  4901  000BF4  ECEB  F00E         	call	_SystimeInit	;wreg free
  4902                           
  4903                           ;ApplicationExample.c: 37: USARTAsyncInit(103);
  4904  000BF8  0E67               	movlw	103
  4905  000BFA  EC23  F00F         	call	_USARTAsyncInit
  4906                           
  4907                           ;ApplicationExample.c: 38: SoftUARTInit();
  4908  000BFE  EC2D  F00F         	call	_SoftUARTInit	;wreg free
  4909                           
  4910                           ;ApplicationExample.c: 40: if(SIM800xInit() == SIM800X_OK)
  4911  000C02  EC04  F00A         	call	_SIM800xInit	;wreg free
  4912  000C06  0900               	iorlw	0
  4913  000C08  A4D8               	btfss	status,2,c
  4914  000C0A  D0C3               	goto	l54
  4915                           
  4916                           ;ApplicationExample.c: 41: {;ApplicationExample.c: 42: SoftUARTPrint("Modem Initialized.
      +                          \r\r");
  4917  000C0C  0E04               	movlw	low STR_1
  4918  000C0E  6E04               	movwf	SoftUARTPrint@str^0,c
  4919  000C10  0E7D               	movlw	high STR_1
  4920  000C12  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  4921  000C14  EC94  F00C         	call	_SoftUARTPrint	;wreg free
  4922                           
  4923                           ;ApplicationExample.c: 46: SoftUARTPrint("Setting IP configurations...\r");
  4924  000C18  0E73               	movlw	low STR_2
  4925  000C1A  6E04               	movwf	SoftUARTPrint@str^0,c
  4926  000C1C  0E7B               	movlw	high STR_2
  4927  000C1E  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  4928  000C20  EC94  F00C         	call	_SoftUARTPrint	;wreg free
  4929                           
  4930                           ;ApplicationExample.c: 47: if(SIM800xIPSetConnectionType(1, "GPRS") == SIM800X_OK)
  4931  000C24  0EE0               	movlw	low STR_3
  4932  000C26  6E13               	movwf	SIM800xIPSetConnectionType@contype^0,c
  4933  000C28  0E7F               	movlw	high STR_3
  4934  000C2A  6E14               	movwf	(SIM800xIPSetConnectionType@contype+1)^0,c
  4935  000C2C  0E01               	movlw	1
  4936  000C2E  EC28  F00C         	call	_SIM800xIPSetConnectionType
  4937  000C32  0900               	iorlw	0
  4938  000C34  A4D8               	btfss	status,2,c
  4939  000C36  D0AD               	goto	l54
  4940                           
  4941                           ;ApplicationExample.c: 48: {;ApplicationExample.c: 49: if(SIM800xIPSetAPN(1, "Internet")
      +                           == SIM800X_OK)
  4942  000C38  0E6B               	movlw	low STR_4
  4943  000C3A  6E13               	movwf	SIM800xIPSetAPN@apn^0,c
  4944  000C3C  0E7F               	movlw	high STR_4
  4945  000C3E  6E14               	movwf	(SIM800xIPSetAPN@apn+1)^0,c
  4946  000C40  0E01               	movlw	1
  4947  000C42  EC5E  F00C         	call	_SIM800xIPSetAPN
  4948  000C46  0900               	iorlw	0
  4949  000C48  A4D8               	btfss	status,2,c
  4950  000C4A  D0A3               	goto	l54
  4951                           
  4952                           ;ApplicationExample.c: 50: {;ApplicationExample.c: 51: if(SIM800xIPOpen(1) == SIM800X_OK
      +                          )
  4953  000C4C  0E01               	movlw	1
  4954  000C4E  EC3C  F00E         	call	_SIM800xIPOpen
  4955  000C52  0900               	iorlw	0
  4956  000C54  A4D8               	btfss	status,2,c
  4957  000C56  D09D               	goto	l54
  4958                           
  4959                           ;ApplicationExample.c: 52: {;ApplicationExample.c: 53: char ip[20];;ApplicationExample.c
      +                          : 54: SoftUARTPrint("Done.\r\r");
  4960  000C58  0EB4               	movlw	low STR_5
  4961  000C5A  6E04               	movwf	SoftUARTPrint@str^0,c
  4962  000C5C  0E7F               	movlw	high STR_5
  4963  000C5E  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  4964  000C60  EC94  F00C         	call	_SoftUARTPrint	;wreg free
  4965                           
  4966                           ;ApplicationExample.c: 55: SIM800xIPGetState(1, ip);
  4967  000C64  0E50               	movlw	low SystemInit@ip
  4968  000C66  6E24               	movwf	SIM800xIPGetState@ip^0,c
  4969  000C68  0E00               	movlw	high SystemInit@ip
  4970  000C6A  6E25               	movwf	(SIM800xIPGetState@ip+1)^0,c
  4971  000C6C  0E01               	movlw	1
  4972  000C6E  EC83  F009         	call	_SIM800xIPGetState
  4973                           
  4974                           ;ApplicationExample.c: 56: SoftUARTPrint("Bearer profile Activated, IP: ");
  4975  000C72  0E54               	movlw	low STR_6
  4976  000C74  6E04               	movwf	SoftUARTPrint@str^0,c
  4977  000C76  0E7B               	movlw	high STR_6
  4978  000C78  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  4979  000C7A  EC94  F00C         	call	_SoftUARTPrint	;wreg free
  4980                           
  4981                           ;ApplicationExample.c: 57: SoftUARTPrint(ip);
  4982  000C7E  0E50               	movlw	low SystemInit@ip
  4983  000C80  6E04               	movwf	SoftUARTPrint@str^0,c
  4984  000C82  0E00               	movlw	high SystemInit@ip
  4985  000C84  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  4986  000C86  EC94  F00C         	call	_SoftUARTPrint	;wreg free
  4987                           
  4988                           ;ApplicationExample.c: 58: SoftUARTPrint("\r\r");
  4989  000C8A  0E31               	movlw	low (STR_21+29)
  4990  000C8C  6E04               	movwf	SoftUARTPrint@str^0,c
  4991  000C8E  0E7B               	movlw	high (STR_21+29)
  4992  000C90  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  4993  000C92  EC94  F00C         	call	_SoftUARTPrint	;wreg free
  4994                           
  4995                           ;ApplicationExample.c: 59: uint16_t err;;ApplicationExample.c: 63: SoftUARTPrint("Settin
      +                          g HTTP configurations...\r");
  4996  000C96  0E34               	movlw	low STR_8
  4997  000C98  6E04               	movwf	SoftUARTPrint@str^0,c
  4998  000C9A  0E7B               	movlw	high STR_8
  4999  000C9C  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  5000  000C9E  EC94  F00C         	call	_SoftUARTPrint	;wreg free
  5001                           
  5002                           ;ApplicationExample.c: 64: if(SIM800xHTTPInit(&err) == SIM800X_OK)
  5003  000CA2  0E64               	movlw	low SystemInit@err
  5004  000CA4  6E41               	movwf	SIM800xHTTPInit@errcode^0,c
  5005  000CA6  0E00               	movlw	high SystemInit@err
  5006  000CA8  6E42               	movwf	(SIM800xHTTPInit@errcode+1)^0,c
  5007  000CAA  ECFC  F00E         	call	_SIM800xHTTPInit	;wreg free
  5008  000CAE  0900               	iorlw	0
  5009  000CB0  A4D8               	btfss	status,2,c
  5010  000CB2  D06F               	goto	l54
  5011                           
  5012                           ;ApplicationExample.c: 65: {;ApplicationExample.c: 66: if(SIM800xHTTPSetURL("http://back
      +                          end.thinger.io/v3/users/FirmwareEngineers/devices/SIM800L/callback/data?authorization=ey
      +                          JhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODAzNjA0NzAsImlhdCI6MTY4MDM1MzI3MCwicm9sZ
      +                          SI6InVzZXIiLCJ1c3IiOiJGaXJtd2FyZUVuZ2luZW
  5013  000CB4  0EB8               	movlw	low STR_9
  5014  000CB6  6E41               	movwf	SIM800xHTTPSetURL@url^0,c
  5015  000CB8  0E79               	movlw	high STR_9
  5016  000CBA  6E42               	movwf	(SIM800xHTTPSetURL@url+1)^0,c
  5017  000CBC  0E64               	movlw	low SystemInit@err
  5018  000CBE  6E43               	movwf	SIM800xHTTPSetURL@errcode^0,c
  5019  000CC0  0E00               	movlw	high SystemInit@err
  5020  000CC2  6E44               	movwf	(SIM800xHTTPSetURL@errcode+1)^0,c
  5021  000CC4  EC4E  F00D         	call	_SIM800xHTTPSetURL	;wreg free
  5022  000CC8  0900               	iorlw	0
  5023  000CCA  A4D8               	btfss	status,2,c
  5024  000CCC  D062               	goto	l54
  5025                           
  5026                           ;ApplicationExample.c: 67: {;ApplicationExample.c: 68: if(SIM800xHTTPSetContent("applica
      +                          tion/json", &err) == SIM800X_OK)
  5027  000CCE  0E9C               	movlw	low STR_10
  5028  000CD0  6E41               	movwf	SIM800xHTTPSetContent@content^0,c
  5029  000CD2  0E7D               	movlw	high STR_10
  5030  000CD4  6E42               	movwf	(SIM800xHTTPSetContent@content+1)^0,c
  5031  000CD6  0E64               	movlw	low SystemInit@err
  5032  000CD8  6E43               	movwf	SIM800xHTTPSetContent@errcode^0,c
  5033  000CDA  0E00               	movlw	high SystemInit@err
  5034  000CDC  6E44               	movwf	(SIM800xHTTPSetContent@errcode+1)^0,c
  5035  000CDE  EC78  F00D         	call	_SIM800xHTTPSetContent	;wreg free
  5036  000CE2  0900               	iorlw	0
  5037  000CE4  A4D8               	btfss	status,2,c
  5038  000CE6  D055               	goto	l54
  5039                           
  5040                           ;ApplicationExample.c: 69: {;ApplicationExample.c: 70: SoftUARTPrint("Done.\r\r");
  5041  000CE8  0EB4               	movlw	low STR_5
  5042  000CEA  6E04               	movwf	SoftUARTPrint@str^0,c
  5043  000CEC  0E7F               	movlw	high STR_5
  5044  000CEE  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  5045  000CF0  EC94  F00C         	call	_SoftUARTPrint	;wreg free
  5046                           
  5047                           ;ApplicationExample.c: 75: AddEntryToJsonObject(txmessage, "Engine Temperature (C)", "30
      +                          ", &cpos);
  5048  000CF4  0E8C               	movlw	low _txmessage
  5049  000CF6  6E01               	movwf	AddEntryToJsonObject@JsonObject^0,c
  5050  000CF8  0E02               	movlw	high _txmessage
  5051  000CFA  6E02               	movwf	(AddEntryToJsonObject@JsonObject+1)^0,c
  5052  000CFC  0EAE               	movlw	low STR_12
  5053  000CFE  6E03               	movwf	AddEntryToJsonObject@key^0,c
  5054  000D00  0E7C               	movlw	high STR_12
  5055  000D02  6E04               	movwf	(AddEntryToJsonObject@key+1)^0,c
  5056  000D04  0EF3               	movlw	low STR_13
  5057  000D06  6E05               	movwf	AddEntryToJsonObject@value^0,c
  5058  000D08  0E7F               	movlw	high STR_13
  5059  000D0A  6E06               	movwf	(AddEntryToJsonObject@value+1)^0,c
  5060  000D0C  0E76               	movlw	low _cpos
  5061  000D0E  6E07               	movwf	AddEntryToJsonObject@Cpos^0,c
  5062  000D10  0E00               	movlw	high _cpos
  5063  000D12  6E08               	movwf	(AddEntryToJsonObject@Cpos+1)^0,c
  5064  000D14  EC0D  F000         	call	_AddEntryToJsonObject	;wreg free
  5065                           
  5066                           ;ApplicationExample.c: 76: AddEntryToJsonObject(txmessage, "RPM", "3500", &cpos);
  5067  000D18  0E8C               	movlw	low _txmessage
  5068  000D1A  6E01               	movwf	AddEntryToJsonObject@JsonObject^0,c
  5069  000D1C  0E02               	movlw	high _txmessage
  5070  000D1E  6E02               	movwf	(AddEntryToJsonObject@JsonObject+1)^0,c
  5071  000D20  0EE9               	movlw	low STR_14
  5072  000D22  6E03               	movwf	AddEntryToJsonObject@key^0,c
  5073  000D24  0E7F               	movlw	high STR_14
  5074  000D26  6E04               	movwf	(AddEntryToJsonObject@key+1)^0,c
  5075  000D28  0EDB               	movlw	low STR_15
  5076  000D2A  6E05               	movwf	AddEntryToJsonObject@value^0,c
  5077  000D2C  0E7F               	movlw	high STR_15
  5078  000D2E  6E06               	movwf	(AddEntryToJsonObject@value+1)^0,c
  5079  000D30  0E76               	movlw	low _cpos
  5080  000D32  6E07               	movwf	AddEntryToJsonObject@Cpos^0,c
  5081  000D34  0E00               	movlw	high _cpos
  5082  000D36  6E08               	movwf	(AddEntryToJsonObject@Cpos+1)^0,c
  5083  000D38  EC0D  F000         	call	_AddEntryToJsonObject	;wreg free
  5084                           
  5085                           ;ApplicationExample.c: 77: AddEntryToJsonObject(txmessage, "Vehicle Speed (MPH)", "35", 
      +                          &cpos);
  5086  000D3C  0E8C               	movlw	low _txmessage
  5087  000D3E  6E01               	movwf	AddEntryToJsonObject@JsonObject^0,c
  5088  000D40  0E02               	movlw	high _txmessage
  5089  000D42  6E02               	movwf	(AddEntryToJsonObject@JsonObject+1)^0,c
  5090  000D44  0E2D               	movlw	low STR_16
  5091  000D46  6E03               	movwf	AddEntryToJsonObject@key^0,c
  5092  000D48  0E7D               	movlw	high STR_16
  5093  000D4A  6E04               	movwf	(AddEntryToJsonObject@key+1)^0,c
  5094  000D4C  0EF9               	movlw	low STR_17
  5095  000D4E  6E05               	movwf	AddEntryToJsonObject@value^0,c
  5096  000D50  0E7F               	movlw	high STR_17
  5097  000D52  6E06               	movwf	(AddEntryToJsonObject@value+1)^0,c
  5098  000D54  0E76               	movlw	low _cpos
  5099  000D56  6E07               	movwf	AddEntryToJsonObject@Cpos^0,c
  5100  000D58  0E00               	movlw	high _cpos
  5101  000D5A  6E08               	movwf	(AddEntryToJsonObject@Cpos+1)^0,c
  5102  000D5C  EC0D  F000         	call	_AddEntryToJsonObject	;wreg free
  5103                           
  5104                           ;ApplicationExample.c: 78: AddEntryToJsonObject(txmessage, "Fuel Level (%)", "50", &cpos
      +                          );
  5105  000D60  0E8C               	movlw	low _txmessage
  5106  000D62  6E01               	movwf	AddEntryToJsonObject@JsonObject^0,c
  5107  000D64  0E02               	movlw	high _txmessage
  5108  000D66  6E02               	movwf	(AddEntryToJsonObject@JsonObject+1)^0,c
  5109  000D68  0EEB               	movlw	low STR_18
  5110  000D6A  6E03               	movwf	AddEntryToJsonObject@key^0,c
  5111  000D6C  0E7D               	movlw	high STR_18
  5112  000D6E  6E04               	movwf	(AddEntryToJsonObject@key+1)^0,c
  5113  000D70  0EF6               	movlw	low STR_19
  5114  000D72  6E05               	movwf	AddEntryToJsonObject@value^0,c
  5115  000D74  0E7F               	movlw	high STR_19
  5116  000D76  6E06               	movwf	(AddEntryToJsonObject@value+1)^0,c
  5117  000D78  0E76               	movlw	low _cpos
  5118  000D7A  6E07               	movwf	AddEntryToJsonObject@Cpos^0,c
  5119  000D7C  0E00               	movlw	high _cpos
  5120  000D7E  6E08               	movwf	(AddEntryToJsonObject@Cpos+1)^0,c
  5121  000D80  EC0D  F000         	call	_AddEntryToJsonObject	;wreg free
  5122                           
  5123                           ;ApplicationExample.c: 83: SoftUARTPrint("System Initialization completed.\r\r");
  5124  000D84  0ECF               	movlw	low STR_20
  5125  000D86  6E04               	movwf	SoftUARTPrint@str^0,c
  5126  000D88  0E7A               	movlw	high STR_20
  5127  000D8A  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  5128  000D8C  EC94  F00C         	call	_SoftUARTPrint	;wreg free
  5129  000D90  D007               	goto	l58
  5130  000D92                     l54:
  5131  000D92  FFFF               	dw	65535	; assembler added errata NOP
  5132                           
  5133                           ;ApplicationExample.c: 85: };ApplicationExample.c: 86: };ApplicationExample.c: 87: };App
      +                          licationExample.c: 88: };ApplicationExample.c: 89: };ApplicationExample.c: 90: };Applica
      +                          tionExample.c: 91: };ApplicationExample.c: 92: SoftUARTPrint("System Initialization fail
      +                          ed.\r\r");
  5134  000D94  0E14               	movlw	low STR_21
  5135  000D96  6E04               	movwf	SoftUARTPrint@str^0,c
  5136  000D98  0E7B               	movlw	high STR_21
  5137  000D9A  6E05               	movwf	(SoftUARTPrint@str+1)^0,c
  5138  000D9C  EC94  F00C         	call	_SoftUARTPrint	;wreg free
  5139  000DA0                     l58:
  5140  000DA0  FFFF               	dw	65535	; assembler added errata NOP
  5141  000DA2  0012               	return		;funcret
  5142  000DA4  FFFF               	dw	65535	; errata NOP
  5143  000DA6                     __end_of_SystemInit:
  5144                           	callstack 0
  5145                           
  5146 ;; *************** function _USARTAsyncInit *****************
  5147 ;; Defined at:
  5148 ;;		line 62 in file "C:/EmbeddedDevOps/M8M_APIs/PIC18.X/Src/USART.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;  bgr             1    wreg     unsigned char 
  5151 ;; Auto vars:     Size  Location     Type
  5152 ;;  bgr             1    0[COMRAM] unsigned char 
  5153 ;; Return value:  Size  Location     Type
  5154 ;;                  1    wreg      void 
  5155 ;; Registers used:
  5156 ;;		wreg, status,2
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5162 ;;      Params:         0       0       0       0       0       0       0
  5163 ;;      Locals:         1       0       0       0       0       0       0
  5164 ;;      Temps:          0       0       0       0       0       0       0
  5165 ;;      Totals:         1       0       0       0       0       0       0
  5166 ;;Total ram usage:        1 bytes
  5167 ;; Hardware stack levels used: 1
  5168 ;; Hardware stack levels required when called: 2
  5169 ;; This function calls:
  5170 ;;		Nothing
  5171 ;; This function is called by:
  5172 ;;		_SystemInit
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           	psect	text13
  5177  001E46                     __ptext13:
  5178                           	callstack 0
  5179  001E46                     _USARTAsyncInit:
  5180                           	callstack 0
  5181  001E46  FFFF               	dw	65535	; assembler added errata NOP
  5182                           
  5183                           ;incstack = 0
  5184                           ;USARTAsyncInit@bgr stored from wreg
  5185  001E48  6E01               	movwf	USARTAsyncInit@bgr^0,c
  5186                           
  5187                           ;USART.c: 65: TXSTA = 0x24;
  5188  001E4A  0E24               	movlw	36
  5189  001E4C  6EAC               	movwf	172,c	;volatile
  5190                           
  5191                           ;USART.c: 66: RCSTA = 0x90;
  5192  001E4E  0E90               	movlw	144
  5193  001E50  6EAB               	movwf	171,c	;volatile
  5194                           
  5195                           ;USART.c: 67: SPBRG = bgr;
  5196  001E52  C001  FFAF         	movff	USARTAsyncInit@bgr,4015	;volatile
  5197  001E56  0012               	return		;funcret
  5198  001E58  FFFF               	dw	65535	; errata NOP
  5199  001E5A                     __end_of_USARTAsyncInit:
  5200                           	callstack 0
  5201                           
  5202 ;; *************** function _SystimeInit *****************
  5203 ;; Defined at:
  5204 ;;		line 55 in file "Src/SystemTime.c"
  5205 ;; Parameters:    Size  Location     Type
  5206 ;;		None
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;		None
  5209 ;; Return value:  Size  Location     Type
  5210 ;;                  1    wreg      void 
  5211 ;; Registers used:
  5212 ;;		wreg, status,2, status,0
  5213 ;; Tracked objects:
  5214 ;;		On entry : 0/0
  5215 ;;		On exit  : 0/0
  5216 ;;		Unchanged: 0/0
  5217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5218 ;;      Params:         0       0       0       0       0       0       0
  5219 ;;      Locals:         0       0       0       0       0       0       0
  5220 ;;      Temps:          0       0       0       0       0       0       0
  5221 ;;      Totals:         0       0       0       0       0       0       0
  5222 ;;Total ram usage:        0 bytes
  5223 ;; Hardware stack levels used: 1
  5224 ;; Hardware stack levels required when called: 2
  5225 ;; This function calls:
  5226 ;;		Nothing
  5227 ;; This function is called by:
  5228 ;;		_SystemInit
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           	psect	text14
  5233  001DD6                     __ptext14:
  5234                           	callstack 0
  5235  001DD6                     _SystimeInit:
  5236                           	callstack 0
  5237  001DD6  FFFF               	dw	65535	; assembler added errata NOP
  5238                           
  5239                           ;incstack = 0
  5240  001DD8  0EFC               	movlw	252
  5241  001DDA  6E7D               	movwf	(_val+1)^0,c	;volatile
  5242  001DDC  0E1A               	movlw	26
  5243  001DDE  6E7C               	movwf	_val^0,c	;volatile
  5244                           
  5245                           ;SystemTime.c: 64: };SystemTime.c: 66: INTCON |= 0xC0;
  5246                           
  5247                           ;SystemTime.c: 60: }
  5248  001DE0  0EC0               	movlw	192
  5249  001DE2  12F2               	iorwf	242,f,c	;volatile
  5250                           
  5251                           ;SystemTime.c: 68: T0CON = 0x81;
  5252  001DE4  0E81               	movlw	129
  5253  001DE6  6ED5               	movwf	213,c	;volatile
  5254                           
  5255                           ;SystemTime.c: 69: TMR0 = val;
  5256  001DE8  C07C  FFD6         	movff	_val,4054	;volatile
  5257  001DEC  C07D  FFD7         	movff	_val+1,4055	;volatile
  5258                           
  5259                           ;SystemTime.c: 70: TMR0IF = 0;
  5260  001DF0  94F2               	bcf	4082,2,c	;volatile
  5261                           
  5262                           ;SystemTime.c: 71: TMR0IE = 1;
  5263  001DF2  8AF2               	bsf	4082,5,c	;volatile
  5264  001DF4  0012               	return		;funcret
  5265  001DF6  FFFF               	dw	65535	; errata NOP
  5266  001DF8                     __end_of_SystimeInit:
  5267                           	callstack 0
  5268                           
  5269 ;; *************** function _SoftUARTPrint *****************
  5270 ;; Defined at:
  5271 ;;		line 344 in file "Src/SoftwareUART.c"
  5272 ;; Parameters:    Size  Location     Type
  5273 ;;  str             2    3[COMRAM] PTR const unsigned char 
  5274 ;;		 -> STR_27(17), STR_26(3), STR_25(7), SystemTask@msg(20), 
  5275 ;;		 -> STR_22(34), STR_21(32), STR_20(35), STR_11(8), 
  5276 ;;		 -> STR_8(32), STR_7(3), STR_6(31), SystemInit@ip(20), 
  5277 ;;		 -> STR_5(8), STR_2(30), STR_1(21), 
  5278 ;; Auto vars:     Size  Location     Type
  5279 ;;		None
  5280 ;; Return value:  Size  Location     Type
  5281 ;;                  1    wreg      void 
  5282 ;; Registers used:
  5283 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5284 ;; Tracked objects:
  5285 ;;		On entry : 0/0
  5286 ;;		On exit  : 0/0
  5287 ;;		Unchanged: 0/0
  5288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5289 ;;      Params:         2       0       0       0       0       0       0
  5290 ;;      Locals:         0       0       0       0       0       0       0
  5291 ;;      Temps:          0       0       0       0       0       0       0
  5292 ;;      Totals:         2       0       0       0       0       0       0
  5293 ;;Total ram usage:        2 bytes
  5294 ;; Hardware stack levels used: 1
  5295 ;; Hardware stack levels required when called: 3
  5296 ;; This function calls:
  5297 ;;		_SoftUARTTransmitByte
  5298 ;; This function is called by:
  5299 ;;		_SystemInit
  5300 ;;		_SystemTask
  5301 ;; This function uses a non-reentrant model
  5302 ;;
  5303                           
  5304                           	psect	text15
  5305  001928                     __ptext15:
  5306                           	callstack 0
  5307  001928                     _SoftUARTPrint:
  5308                           	callstack 0
  5309  001928  FFFF               	dw	65535	; assembler added errata NOP
  5310                           
  5311                           ;SoftwareUART.c: 346: while(*str!='\0'){
  5312                           
  5313                           ;incstack = 0
  5314  00192A  D016               	goto	l3614
  5315  00192C                     l3610:
  5316  00192C  FFFF               	dw	65535	; assembler added errata NOP
  5317                           
  5318                           ;SoftwareUART.c: 347: SoftUARTTransmitByte(*(str++));
  5319  00192E  C004  FFF6         	movff	SoftUARTPrint@str,tblptrl
  5320  001932  C005  FFF7         	movff	SoftUARTPrint@str+1,tblptrh
  5321  001936  6AF8               	clrf	tblptru,c
  5322  001938  0E05               	movlw	(high __ramtop+-1)
  5323  00193A  64F7               	cpfsgt	tblptrh,c
  5324  00193C  D004               	bra	u2317
  5325  00193E  0008               	tblrd		*
  5326  001940  FFFF               	dw	65535	; errata NOP
  5327  001942  50F5               	movf	tablat,w,c
  5328  001944  D005               	bra	u2310
  5329  001946                     u2317:
  5330  001946  CFF6 FFE1          	movff	tblptrl,fsr1l
  5331  00194A  CFF7 FFE2          	movff	tblptrh,fsr1h
  5332  00194E  50E7               	movf	indf1,w,c
  5333  001950                     u2310:
  5334  001950  EC23  F00D         	call	_SoftUARTTransmitByte
  5335  001954  4A04               	infsnz	SoftUARTPrint@str^0,f,c
  5336  001956  2A05               	incf	(SoftUARTPrint@str+1)^0,f,c
  5337  001958                     l3614:
  5338  001958  FFFF               	dw	65535	; assembler added errata NOP
  5339  00195A  C004  FFF6         	movff	SoftUARTPrint@str,tblptrl
  5340  00195E  C005  FFF7         	movff	SoftUARTPrint@str+1,tblptrh
  5341  001962  6AF8               	clrf	tblptru,c
  5342  001964  0E05               	movlw	(high __ramtop+-1)
  5343  001966  64F7               	cpfsgt	tblptrh,c
  5344  001968  D004               	bra	u2327
  5345  00196A  0008               	tblrd		*
  5346  00196C  FFFF               	dw	65535	; errata NOP
  5347  00196E  50F5               	movf	tablat,w,c
  5348  001970  D005               	bra	u2320
  5349  001972                     u2327:
  5350  001972  CFF6 FFE1          	movff	tblptrl,fsr1l
  5351  001976  CFF7 FFE2          	movff	tblptrh,fsr1h
  5352  00197A  50E7               	movf	indf1,w,c
  5353  00197C                     u2320:
  5354  00197C  0900               	iorlw	0
  5355  00197E  B4D8               	btfsc	status,2,c
  5356  001980  0012               	return		;funcret
  5357  001982  FFFF               	dw	65535	; assembler added errata NOP
  5358  001984  D7D3               	goto	l3610
  5359  001986  FFFF               	dw	65535	; errata NOP
  5360  001988                     __end_of_SoftUARTPrint:
  5361                           	callstack 0
  5362                           
  5363 ;; *************** function _SoftUARTTransmitByte *****************
  5364 ;; Defined at:
  5365 ;;		line 301 in file "Src/SoftwareUART.c"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;  data            1    wreg     unsigned char 
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;  data            1    0[COMRAM] unsigned char 
  5370 ;;  k               1    2[COMRAM] unsigned char 
  5371 ;;  tmp             1    1[COMRAM] unsigned char 
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  1    wreg      void 
  5374 ;; Registers used:
  5375 ;;		wreg, status,2, status,0
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5381 ;;      Params:         0       0       0       0       0       0       0
  5382 ;;      Locals:         3       0       0       0       0       0       0
  5383 ;;      Temps:          0       0       0       0       0       0       0
  5384 ;;      Totals:         3       0       0       0       0       0       0
  5385 ;;Total ram usage:        3 bytes
  5386 ;; Hardware stack levels used: 1
  5387 ;; Hardware stack levels required when called: 2
  5388 ;; This function calls:
  5389 ;;		Nothing
  5390 ;; This function is called by:
  5391 ;;		_SoftUARTPrint
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394                           
  5395                           	psect	text16
  5396  001A46                     __ptext16:
  5397                           	callstack 0
  5398  001A46                     _SoftUARTTransmitByte:
  5399                           	callstack 0
  5400  001A46  FFFF               	dw	65535	; assembler added errata NOP
  5401                           
  5402                           ;incstack = 0
  5403                           ;SoftUARTTransmitByte@data stored from wreg
  5404  001A48  6E01               	movwf	SoftUARTTransmitByte@data^0,c
  5405                           
  5406                           ;SoftwareUART.c: 304: uint8_t tmp;;SoftwareUART.c: 305: if(GIE)
  5407  001A4A  AEF2               	btfss	4082,7,c	;volatile
  5408  001A4C  D002               	goto	l3344
  5409                           
  5410                           ;SoftwareUART.c: 306: tmp = 1;
  5411  001A4E  0E01               	movlw	1
  5412  001A50  6E02               	movwf	SoftUARTTransmitByte@tmp^0,c
  5413  001A52                     l3344:
  5414  001A52  FFFF               	dw	65535	; assembler added errata NOP
  5415                           
  5416                           ;SoftwareUART.c: 307: (INTCONbits.GIE = 0);
  5417  001A54  9EF2               	bcf	242,7,c	;volatile
  5418                           
  5419                           ;SoftwareUART.c: 309: IO.Bytes[0x01 + 9] &= (~(1 << 0x3));
  5420  001A56  968A               	bcf	138,3,c	;volatile
  5421                           
  5422                           ;SoftwareUART.c: 310: _delay((unsigned long)(((1000000/9600))*((16 * 1000000)/4000000.0)
      +                          ));
  5423  001A58  0E68               	movlw	104
  5424  001A5A                     u3057:
  5425  001A5A  FFFF               	dw	65535	; errata NOP
  5426  001A5C  2EE8               	decfsz	wreg,f,c
  5427  001A5E  D7FD               	bra	u3057
  5428                           
  5429                           ;SoftwareUART.c: 312: for(uint8_t k = 0;k < 8;k++){
  5430  001A60  0E00               	movlw	0
  5431  001A62  6E03               	movwf	SoftUARTTransmitByte@k^0,c
  5432  001A64                     l227:
  5433  001A64  FFFF               	dw	65535	; assembler added errata NOP
  5434                           
  5435                           ;SoftwareUART.c: 314: if(data & 0x01)
  5436  001A66  A001               	btfss	SoftUARTTransmitByte@data^0,0,c
  5437  001A68  D002               	goto	l3358
  5438                           
  5439                           ;SoftwareUART.c: 315: IO.Bytes[0x01 + 9] |= (1 << 0x3);
  5440  001A6A  868A               	bsf	138,3,c	;volatile
  5441  001A6C  D002               	goto	l3360
  5442  001A6E                     l3358:
  5443  001A6E  FFFF               	dw	65535	; assembler added errata NOP
  5444                           
  5445                           ;SoftwareUART.c: 316: else;SoftwareUART.c: 317: IO.Bytes[0x01 + 9] &= (~(1 << 0x3));
  5446  001A70  968A               	bcf	138,3,c	;volatile
  5447  001A72                     l3360:
  5448  001A72  FFFF               	dw	65535	; assembler added errata NOP
  5449                           
  5450                           ;SoftwareUART.c: 318: data >>= 1;
  5451  001A74  90D8               	bcf	status,0,c
  5452  001A76  3201               	rrcf	SoftUARTTransmitByte@data^0,f,c
  5453                           
  5454                           ;SoftwareUART.c: 319: _delay((unsigned long)(((1000000/9600))*((16 * 1000000)/4000000.0)
      +                          ));
  5455  001A78  0E68               	movlw	104
  5456  001A7A                     u3067:
  5457  001A7A  FFFF               	dw	65535	; errata NOP
  5458  001A7C  2EE8               	decfsz	wreg,f,c
  5459  001A7E  D7FD               	bra	u3067
  5460  001A80  2A03               	incf	SoftUARTTransmitByte@k^0,f,c
  5461  001A82  0E07               	movlw	7
  5462  001A84  6403               	cpfsgt	SoftUARTTransmitByte@k^0,c
  5463  001A86  D7EE               	goto	l227
  5464                           
  5465                           ;SoftwareUART.c: 321: };SoftwareUART.c: 323: IO.Bytes[0x01 + 9] |= (1 << 0x3);
  5466  001A88  868A               	bsf	138,3,c	;volatile
  5467                           
  5468                           ;SoftwareUART.c: 324: _delay((unsigned long)(((1000000/9600))*((16 * 1000000)/4000000.0)
      +                          ));
  5469  001A8A  0E68               	movlw	104
  5470  001A8C                     u3077:
  5471  001A8C  FFFF               	dw	65535	; errata NOP
  5472  001A8E  2EE8               	decfsz	wreg,f,c
  5473  001A90  D7FD               	bra	u3077
  5474                           
  5475                           ;SoftwareUART.c: 325: if(tmp)
  5476  001A92  5002               	movf	SoftUARTTransmitByte@tmp^0,w,c
  5477  001A94  A4D8               	btfss	status,2,c
  5478                           
  5479                           ;SoftwareUART.c: 326: (INTCONbits.GIE = 1);
  5480  001A96  8EF2               	bsf	242,7,c	;volatile
  5481  001A98  0012               	return		;funcret
  5482  001A9A  FFFF               	dw	65535	; errata NOP
  5483  001A9C                     __end_of_SoftUARTTransmitByte:
  5484                           	callstack 0
  5485                           
  5486 ;; *************** function _SoftUARTInit *****************
  5487 ;; Defined at:
  5488 ;;		line 275 in file "Src/SoftwareUART.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;		None
  5491 ;; Auto vars:     Size  Location     Type
  5492 ;;		None
  5493 ;; Return value:  Size  Location     Type
  5494 ;;                  1    wreg      void 
  5495 ;; Registers used:
  5496 ;;		wreg, status,2, status,0
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5502 ;;      Params:         0       0       0       0       0       0       0
  5503 ;;      Locals:         0       0       0       0       0       0       0
  5504 ;;      Temps:          0       0       0       0       0       0       0
  5505 ;;      Totals:         0       0       0       0       0       0       0
  5506 ;;Total ram usage:        0 bytes
  5507 ;; Hardware stack levels used: 1
  5508 ;; Hardware stack levels required when called: 2
  5509 ;; This function calls:
  5510 ;;		Nothing
  5511 ;; This function is called by:
  5512 ;;		_SystemInit
  5513 ;; This function uses a non-reentrant model
  5514 ;;
  5515                           
  5516                           	psect	text17
  5517  001E5A                     __ptext17:
  5518                           	callstack 0
  5519  001E5A                     _SoftUARTInit:
  5520                           	callstack 0
  5521  001E5A  FFFF               	dw	65535	; assembler added errata NOP
  5522                           
  5523                           ;SoftwareUART.c: 277: IO.Bytes[0x01 + 9] |= (1 << 0x3);
  5524                           
  5525                           ;incstack = 0
  5526  001E5C  868A               	bsf	138,3,c	;volatile
  5527                           
  5528                           ;SoftwareUART.c: 278: IO.Bytes[(uint8_t)0x01 + 18] &= ~(1 << 0x3);
  5529  001E5E  9693               	bcf	147,3,c	;volatile
  5530                           
  5531                           ;SoftwareUART.c: 281: INTCON2 &= 0xBF;
  5532  001E60  9CF1               	bcf	241,6,c	;volatile
  5533                           
  5534                           ;SoftwareUART.c: 282: INTCON |= 0xD0;
  5535  001E62  0ED0               	movlw	208
  5536  001E64  12F2               	iorwf	242,f,c	;volatile
  5537                           
  5538                           ;SoftwareUART.c: 283: (INTCONbits.GIE = 1);
  5539  001E66  8EF2               	bsf	242,7,c	;volatile
  5540                           
  5541                           ;SoftwareUART.c: 284: INT0IF = 0;
  5542  001E68  92F2               	bcf	4082,1,c	;volatile
  5543  001E6A  0012               	return		;funcret
  5544  001E6C  FFFF               	dw	65535	; errata NOP
  5545  001E6E                     __end_of_SoftUARTInit:
  5546                           	callstack 0
  5547                           
  5548 ;; *************** function _SIM800xInit *****************
  5549 ;; Defined at:
  5550 ;;		line 269 in file "Src/SIM800x.c"
  5551 ;; Parameters:    Size  Location     Type
  5552 ;;		None
  5553 ;; Auto vars:     Size  Location     Type
  5554 ;;  tmp             2   12[COMRAM] unsigned int 
  5555 ;; Return value:  Size  Location     Type
  5556 ;;                  1    wreg      enum E2115
  5557 ;; Registers used:
  5558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5559 ;; Tracked objects:
  5560 ;;		On entry : 0/0
  5561 ;;		On exit  : 0/0
  5562 ;;		Unchanged: 0/0
  5563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5564 ;;      Params:         0       0       0       0       0       0       0
  5565 ;;      Locals:         2       0       0       0       0       0       0
  5566 ;;      Temps:          0       0       0       0       0       0       0
  5567 ;;      Totals:         2       0       0       0       0       0       0
  5568 ;;Total ram usage:        2 bytes
  5569 ;; Hardware stack levels used: 1
  5570 ;; Hardware stack levels required when called: 4
  5571 ;; This function calls:
  5572 ;;		_SIM800xSDMFlush
  5573 ;;		_SIM800xSDMInit
  5574 ;;		_SIM800xSDMPeek
  5575 ;;		_SIM800xSDMPrint
  5576 ;;		_SIM800xSDMReadByte
  5577 ;;		_SIM800xSDMRxAvailable
  5578 ;;		_Wait_ms
  5579 ;; This function is called by:
  5580 ;;		_SystemInit
  5581 ;; This function uses a non-reentrant model
  5582 ;;
  5583                           
  5584                           	psect	text18
  5585  001408                     __ptext18:
  5586                           	callstack 0
  5587  001408                     _SIM800xInit:
  5588                           	callstack 0
  5589  001408  FFFF               	dw	65535	; assembler added errata NOP
  5590                           
  5591                           ;SIM800x.c: 272: SIM800xSDMInit();
  5592                           
  5593                           ;incstack = 0
  5594  00140A  EC47  F00F         	call	_SIM800xSDMInit	;wreg free
  5595                           
  5596                           ;SIM800x.c: 318: Wait_ms(5000);
  5597  00140E  0E88               	movlw	136
  5598  001410  6E01               	movwf	Wait_ms@value^0,c
  5599  001412  0E13               	movlw	19
  5600  001414  6E02               	movwf	(Wait_ms@value+1)^0,c
  5601  001416  0E00               	movlw	0
  5602  001418  6E03               	movwf	(Wait_ms@value+2)^0,c
  5603  00141A  0E00               	movlw	0
  5604  00141C  6E04               	movwf	(Wait_ms@value+3)^0,c
  5605  00141E  ECEF  F00B         	call	_Wait_ms	;wreg free
  5606                           
  5607                           ;SIM800x.c: 321: SIM800xSDMFlush();
  5608  001422  EC18  F00F         	call	_SIM800xSDMFlush	;wreg free
  5609                           
  5610                           ;SIM800x.c: 322: SIM800xSDMPrint("AT\r");
  5611  001426  0EE5               	movlw	low STR_28
  5612  001428  6E02               	movwf	SIM800xSDMPrint@str^0,c
  5613  00142A  0E7F               	movlw	high STR_28
  5614  00142C  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  5615  00142E  ECC4  F00C         	call	_SIM800xSDMPrint	;wreg free
  5616                           
  5617                           ;SIM800x.c: 323: Wait_ms(500);
  5618  001432  0EF4               	movlw	244
  5619  001434  6E01               	movwf	Wait_ms@value^0,c
  5620  001436  0E01               	movlw	1
  5621  001438  6E02               	movwf	(Wait_ms@value+1)^0,c
  5622  00143A  0E00               	movlw	0
  5623  00143C  6E03               	movwf	(Wait_ms@value+2)^0,c
  5624  00143E  0E00               	movlw	0
  5625  001440  6E04               	movwf	(Wait_ms@value+3)^0,c
  5626  001442  ECEF  F00B         	call	_Wait_ms	;wreg free
  5627                           
  5628                           ;SIM800x.c: 324: uint16_t tmp = SIM800xSDMRxAvailable();
  5629  001446  ECBB  F00E         	call	_SIM800xSDMRxAvailable	;wreg free
  5630  00144A  C006  F00D         	movff	?_SIM800xSDMRxAvailable,SIM800xInit@tmp
  5631  00144E  C007  F00E         	movff	?_SIM800xSDMRxAvailable+1,SIM800xInit@tmp+1
  5632                           
  5633                           ;SIM800x.c: 325: if(tmp > 5)
  5634  001452  500E               	movf	(SIM800xInit@tmp+1)^0,w,c
  5635  001454  E108               	bnz	l3592
  5636  001456  0E06               	movlw	6
  5637  001458  5C0D               	subwf	SIM800xInit@tmp^0,w,c
  5638  00145A  B0D8               	btfsc	status,0,c
  5639  00145C  D004               	goto	l3592
  5640  00145E  D023               	goto	l3604
  5641  001460                     l3590:
  5642  001460  FFFF               	dw	65535	; assembler added errata NOP
  5643                           
  5644                           ;SIM800x.c: 328: {;SIM800x.c: 329: SIM800xSDMReadByte();
  5645  001462  ECCA  F00D         	call	_SIM800xSDMReadByte	;wreg free
  5646  001466                     l3592:
  5647  001466  FFFF               	dw	65535	; assembler added errata NOP
  5648  001468  ECBB  F00E         	call	_SIM800xSDMRxAvailable	;wreg free
  5649  00146C  0E06               	movlw	6
  5650  00146E  1806               	xorwf	?_SIM800xSDMRxAvailable^0,w,c
  5651  001470  1007               	iorwf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  5652  001472  A4D8               	btfss	status,2,c
  5653  001474  D7F5               	goto	l3590
  5654                           
  5655                           ;SIM800x.c: 330: };SIM800x.c: 333: if(SIM800xSDMPeek(2) == 'O')
  5656  001476  0E02               	movlw	2
  5657  001478  EC61  F00E         	call	_SIM800xSDMPeek
  5658  00147C  0A4F               	xorlw	79
  5659  00147E  A4D8               	btfss	status,2,c
  5660  001480  D012               	goto	l3604
  5661                           
  5662                           ;SIM800x.c: 334: {;SIM800x.c: 335: SIM800xSDMPrint("ATE0\r");
  5663  001482  0ECA               	movlw	low STR_29
  5664  001484  6E02               	movwf	SIM800xSDMPrint@str^0,c
  5665  001486  0E7F               	movlw	high STR_29
  5666  001488  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  5667  00148A  ECC4  F00C         	call	_SIM800xSDMPrint	;wreg free
  5668                           
  5669                           ;SIM800x.c: 336: Wait_ms(500);
  5670  00148E  0EF4               	movlw	244
  5671  001490  6E01               	movwf	Wait_ms@value^0,c
  5672  001492  0E01               	movlw	1
  5673  001494  6E02               	movwf	(Wait_ms@value+1)^0,c
  5674  001496  0E00               	movlw	0
  5675  001498  6E03               	movwf	(Wait_ms@value+2)^0,c
  5676  00149A  0E00               	movlw	0
  5677  00149C  6E04               	movwf	(Wait_ms@value+3)^0,c
  5678  00149E  ECEF  F00B         	call	_Wait_ms	;wreg free
  5679                           
  5680                           ;SIM800x.c: 338: return SIM800X_OK;
  5681  0014A2  0E00               	movlw	0
  5682  0014A4  D002               	goto	l409
  5683  0014A6                     l3604:
  5684  0014A6  FFFF               	dw	65535	; assembler added errata NOP
  5685                           
  5686                           ;SIM800x.c: 339: };SIM800x.c: 340: };SIM800x.c: 341: return SIM800X_TIME_OUT;
  5687  0014A8  0E05               	movlw	5
  5688  0014AA                     l409:
  5689  0014AA  FFFF               	dw	65535	; assembler added errata NOP
  5690  0014AC  0012               	return		;funcret
  5691  0014AE  FFFF               	dw	65535	; errata NOP
  5692  0014B0                     __end_of_SIM800xInit:
  5693                           	callstack 0
  5694                           
  5695 ;; *************** function _Wait_ms *****************
  5696 ;; Defined at:
  5697 ;;		line 103 in file "Src/SystemTime.c"
  5698 ;; Parameters:    Size  Location     Type
  5699 ;;  value           4    0[COMRAM] unsigned long 
  5700 ;; Auto vars:     Size  Location     Type
  5701 ;;  x               4    8[COMRAM] unsigned long 
  5702 ;; Return value:  Size  Location     Type
  5703 ;;                  1    wreg      void 
  5704 ;; Registers used:
  5705 ;;		wreg, status,2, status,0
  5706 ;; Tracked objects:
  5707 ;;		On entry : 0/0
  5708 ;;		On exit  : 0/0
  5709 ;;		Unchanged: 0/0
  5710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5711 ;;      Params:         4       0       0       0       0       0       0
  5712 ;;      Locals:         4       0       0       0       0       0       0
  5713 ;;      Temps:          4       0       0       0       0       0       0
  5714 ;;      Totals:        12       0       0       0       0       0       0
  5715 ;;Total ram usage:       12 bytes
  5716 ;; Hardware stack levels used: 1
  5717 ;; Hardware stack levels required when called: 2
  5718 ;; This function calls:
  5719 ;;		Nothing
  5720 ;; This function is called by:
  5721 ;;		_SIM800xInit
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           	psect	text19
  5726  0017DE                     __ptext19:
  5727                           	callstack 0
  5728  0017DE                     _Wait_ms:
  5729                           	callstack 0
  5730  0017DE  FFFF               	dw	65535	; assembler added errata NOP
  5731                           
  5732                           ;SystemTime.c: 106: uint32_t x = IncVar;
  5733                           
  5734                           ;incstack = 0
  5735  0017E0  C06B  F009         	movff	_IncVar,Wait_ms@x	;volatile
  5736  0017E4  C06C  F00A         	movff	_IncVar+1,Wait_ms@x+1	;volatile
  5737  0017E8  C06D  F00B         	movff	_IncVar+2,Wait_ms@x+2	;volatile
  5738  0017EC  C06E  F00C         	movff	_IncVar+3,Wait_ms@x+3	;volatile
  5739                           
  5740                           ;SystemTime.c: 108: while((value != 0)){
  5741  0017F0  D025               	goto	u1990
  5742  0017F2                     l3374:
  5743  0017F2  FFFF               	dw	65535	; assembler added errata NOP
  5744                           
  5745                           ;SystemTime.c: 111: --value;
  5746  0017F4  0601               	decf	Wait_ms@value^0,f,c
  5747  0017F6  0E00               	movlw	0
  5748  0017F8  5A02               	subwfb	(Wait_ms@value+1)^0,f,c
  5749  0017FA  5A03               	subwfb	(Wait_ms@value+2)^0,f,c
  5750  0017FC  5A04               	subwfb	(Wait_ms@value+3)^0,f,c
  5751                           
  5752                           ;SystemTime.c: 112: x+=1;
  5753  0017FE  0E01               	movlw	1
  5754  001800  2609               	addwf	Wait_ms@x^0,f,c
  5755  001802  0E00               	movlw	0
  5756  001804  220A               	addwfc	(Wait_ms@x+1)^0,f,c
  5757  001806  220B               	addwfc	(Wait_ms@x+2)^0,f,c
  5758  001808  220C               	addwfc	(Wait_ms@x+3)^0,f,c
  5759  00180A                     l290:
  5760  00180A  FFFF               	dw	65535	; assembler added errata NOP
  5761  00180C  5001               	movf	Wait_ms@value^0,w,c
  5762  00180E  1002               	iorwf	(Wait_ms@value+1)^0,w,c
  5763  001810  1003               	iorwf	(Wait_ms@value+2)^0,w,c
  5764  001812  1004               	iorwf	(Wait_ms@value+3)^0,w,c
  5765  001814  B4D8               	btfsc	status,2,c
  5766  001816  D012               	goto	u1990
  5767  001818  5009               	movf	Wait_ms@x^0,w,c
  5768  00181A  5C6B               	subwf	_IncVar^0,w,c	;volatile
  5769  00181C  6E05               	movwf	??_Wait_ms^0,c
  5770  00181E  500A               	movf	(Wait_ms@x+1)^0,w,c
  5771  001820  586C               	subwfb	(_IncVar+1)^0,w,c	;volatile
  5772  001822  6E06               	movwf	(??_Wait_ms+1)^0,c
  5773  001824  500B               	movf	(Wait_ms@x+2)^0,w,c
  5774  001826  586D               	subwfb	(_IncVar+2)^0,w,c	;volatile
  5775  001828  6E07               	movwf	(??_Wait_ms+2)^0,c
  5776  00182A  500C               	movf	(Wait_ms@x+3)^0,w,c
  5777  00182C  586E               	subwfb	(_IncVar+3)^0,w,c	;volatile
  5778  00182E  6E08               	movwf	(??_Wait_ms+3)^0,c
  5779  001830  5005               	movf	??_Wait_ms^0,w,c
  5780  001832  1006               	iorwf	(??_Wait_ms+1)^0,w,c
  5781  001834  1007               	iorwf	(??_Wait_ms+2)^0,w,c
  5782  001836  1008               	iorwf	(??_Wait_ms+3)^0,w,c
  5783  001838  A4D8               	btfss	status,2,c
  5784  00183A  D7DB               	goto	l3374
  5785  00183C                     u1990:
  5786  00183C  FFFF               	dw	65535	; assembler added errata NOP
  5787  00183E  5001               	movf	Wait_ms@value^0,w,c
  5788  001840  1002               	iorwf	(Wait_ms@value+1)^0,w,c
  5789  001842  1003               	iorwf	(Wait_ms@value+2)^0,w,c
  5790  001844  1004               	iorwf	(Wait_ms@value+3)^0,w,c
  5791  001846  B4D8               	btfsc	status,2,c
  5792  001848  0012               	return		;funcret
  5793  00184A  FFFF               	dw	65535	; assembler added errata NOP
  5794  00184C  D7DE               	goto	l290
  5795  00184E  FFFF               	dw	65535	; errata NOP
  5796  001850                     __end_of_Wait_ms:
  5797                           	callstack 0
  5798                           
  5799 ;; *************** function _SIM800xSDMInit *****************
  5800 ;; Defined at:
  5801 ;;		line 48 in file "Src/SIM800x_SDM.c"
  5802 ;; Parameters:    Size  Location     Type
  5803 ;;		None
  5804 ;; Auto vars:     Size  Location     Type
  5805 ;;		None
  5806 ;; Return value:  Size  Location     Type
  5807 ;;                  1    wreg      void 
  5808 ;; Registers used:
  5809 ;;		wreg, status,2, status,0
  5810 ;; Tracked objects:
  5811 ;;		On entry : 0/0
  5812 ;;		On exit  : 0/0
  5813 ;;		Unchanged: 0/0
  5814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5815 ;;      Params:         0       0       0       0       0       0       0
  5816 ;;      Locals:         0       0       0       0       0       0       0
  5817 ;;      Temps:          0       0       0       0       0       0       0
  5818 ;;      Totals:         0       0       0       0       0       0       0
  5819 ;;Total ram usage:        0 bytes
  5820 ;; Hardware stack levels used: 1
  5821 ;; Hardware stack levels required when called: 2
  5822 ;; This function calls:
  5823 ;;		Nothing
  5824 ;; This function is called by:
  5825 ;;		_SIM800xInit
  5826 ;; This function uses a non-reentrant model
  5827 ;;
  5828                           
  5829                           	psect	text20
  5830  001E8E                     __ptext20:
  5831                           	callstack 0
  5832  001E8E                     _SIM800xSDMInit:
  5833                           	callstack 0
  5834  001E8E  FFFF               	dw	65535	; assembler added errata NOP
  5835                           
  5836                           ;SIM800x_SDM.c: 53: INTCON |= 0xC0;
  5837                           
  5838                           ;incstack = 0
  5839  001E90  0EC0               	movlw	192
  5840  001E92  12F2               	iorwf	242,f,c	;volatile
  5841                           
  5842                           ;SIM800x_SDM.c: 54: PIE1 |= 0x20;
  5843  001E94  8A9D               	bsf	157,5,c	;volatile
  5844  001E96  0012               	return		;funcret
  5845  001E98  FFFF               	dw	65535	; errata NOP
  5846  001E9A                     __end_of_SIM800xSDMInit:
  5847                           	callstack 0
  5848                           
  5849 ;; *************** function _SIM800xIPSetConnectionType *****************
  5850 ;; Defined at:
  5851 ;;		line 641 in file "Src/SIM800x.c"
  5852 ;; Parameters:    Size  Location     Type
  5853 ;;  cid             1    wreg     unsigned char 
  5854 ;;  contype         2   18[COMRAM] PTR const unsigned char 
  5855 ;;		 -> STR_3(5), 
  5856 ;; Auto vars:     Size  Location     Type
  5857 ;;  cid             1   20[COMRAM] unsigned char 
  5858 ;; Return value:  Size  Location     Type
  5859 ;;                  1    wreg      enum E2115
  5860 ;; Registers used:
  5861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5862 ;; Tracked objects:
  5863 ;;		On entry : 0/0
  5864 ;;		On exit  : 0/0
  5865 ;;		Unchanged: 0/0
  5866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5867 ;;      Params:         2       0       0       0       0       0       0
  5868 ;;      Locals:         1       0       0       0       0       0       0
  5869 ;;      Temps:          0       0       0       0       0       0       0
  5870 ;;      Totals:         3       0       0       0       0       0       0
  5871 ;;Total ram usage:        3 bytes
  5872 ;; Hardware stack levels used: 1
  5873 ;; Hardware stack levels required when called: 5
  5874 ;; This function calls:
  5875 ;;		_ProcessResp1
  5876 ;;		_SIM800xSDMFlush
  5877 ;;		_SIM800xSDMPrint
  5878 ;;		_SIM800xSDMSendByte
  5879 ;;		_strlen
  5880 ;; This function is called by:
  5881 ;;		_SystemInit
  5882 ;; This function uses a non-reentrant model
  5883 ;;
  5884                           
  5885                           	psect	text21
  5886  001850                     __ptext21:
  5887                           	callstack 0
  5888  001850                     _SIM800xIPSetConnectionType:
  5889                           	callstack 0
  5890  001850  FFFF               	dw	65535	; assembler added errata NOP
  5891                           
  5892                           ;incstack = 0
  5893                           ;SIM800xIPSetConnectionType@cid stored from wreg
  5894  001852  6E15               	movwf	SIM800xIPSetConnectionType@cid^0,c
  5895                           
  5896                           ;SIM800x.c: 644: if((cid == 0) || (strlen(contype) > 4))
  5897  001854  5015               	movf	SIM800xIPSetConnectionType@cid^0,w,c
  5898  001856  B4D8               	btfsc	status,2,c
  5899  001858  D00C               	goto	u2350
  5900  00185A  C013  F001         	movff	SIM800xIPSetConnectionType@contype,strlen@s
  5901  00185E  C014  F002         	movff	SIM800xIPSetConnectionType@contype+1,strlen@s+1
  5902  001862  ECF1  F00D         	call	_strlen	;wreg free
  5903  001866  5002               	movf	(?_strlen+1)^0,w,c
  5904  001868  E104               	bnz	u2350
  5905  00186A  0E05               	movlw	5
  5906  00186C  5C01               	subwf	?_strlen^0,w,c
  5907  00186E  A0D8               	btfss	status,0,c
  5908  001870  D003               	goto	l3624
  5909  001872                     u2350:
  5910  001872  FFFF               	dw	65535	; assembler added errata NOP
  5911                           
  5912                           ;SIM800x.c: 645: return SIM800X_ERROR;
  5913  001874  0E01               	movlw	1
  5914  001876  D01F               	goto	l511
  5915  001878                     l3624:
  5916  001878  FFFF               	dw	65535	; assembler added errata NOP
  5917                           
  5918                           ;SIM800x.c: 647: SIM800xSDMFlush();
  5919  00187A  EC18  F00F         	call	_SIM800xSDMFlush	;wreg free
  5920                           
  5921                           ;SIM800x.c: 648: SIM800xSDMPrint("AT+SAPBR=3,");
  5922  00187E  0ECE               	movlw	low STR_41
  5923  001880  6E02               	movwf	SIM800xSDMPrint@str^0,c
  5924  001882  0E7E               	movlw	high STR_41
  5925  001884  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  5926  001886  ECC4  F00C         	call	_SIM800xSDMPrint	;wreg free
  5927                           
  5928                           ;SIM800x.c: 649: SIM800xSDMSendByte((uint8_t)((cid & 0x03) + 48));
  5929  00188A  5015               	movf	SIM800xIPSetConnectionType@cid^0,w,c
  5930  00188C  0B03               	andlw	3
  5931  00188E  0F30               	addlw	48
  5932  001890  EC37  F00F         	call	_SIM800xSDMSendByte
  5933                           
  5934                           ;SIM800x.c: 650: SIM800xSDMPrint(",\"CONTYPE\",");
  5935  001894  0E86               	movlw	low STR_42
  5936  001896  6E02               	movwf	SIM800xSDMPrint@str^0,c
  5937  001898  0E7E               	movlw	high STR_42
  5938  00189A  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  5939  00189C  ECC4  F00C         	call	_SIM800xSDMPrint	;wreg free
  5940                           
  5941                           ;SIM800x.c: 651: SIM800xSDMPrint(contype);
  5942  0018A0  C013  F002         	movff	SIM800xIPSetConnectionType@contype,SIM800xSDMPrint@str
  5943  0018A4  C014  F003         	movff	SIM800xIPSetConnectionType@contype+1,SIM800xSDMPrint@str+1
  5944  0018A8  ECC4  F00C         	call	_SIM800xSDMPrint	;wreg free
  5945                           
  5946                           ;SIM800x.c: 652: SIM800xSDMSendByte('\r');
  5947  0018AC  0E0D               	movlw	13
  5948  0018AE  EC37  F00F         	call	_SIM800xSDMSendByte
  5949                           
  5950                           ;SIM800x.c: 654: return ProcessResp1();
  5951  0018B2  EC76  F00B         	call	_ProcessResp1	;wreg free
  5952  0018B6                     l511:
  5953  0018B6  FFFF               	dw	65535	; assembler added errata NOP
  5954  0018B8  0012               	return		;funcret
  5955  0018BA  FFFF               	dw	65535	; errata NOP
  5956  0018BC                     __end_of_SIM800xIPSetConnectionType:
  5957                           	callstack 0
  5958                           
  5959 ;; *************** function _SIM800xIPSetAPN *****************
  5960 ;; Defined at:
  5961 ;;		line 659 in file "Src/SIM800x.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;  cid             1    wreg     unsigned char 
  5964 ;;  apn             2   18[COMRAM] PTR const unsigned char 
  5965 ;;		 -> STR_4(9), 
  5966 ;; Auto vars:     Size  Location     Type
  5967 ;;  cid             1   20[COMRAM] unsigned char 
  5968 ;; Return value:  Size  Location     Type
  5969 ;;                  1    wreg      enum E2115
  5970 ;; Registers used:
  5971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5972 ;; Tracked objects:
  5973 ;;		On entry : 0/0
  5974 ;;		On exit  : 0/0
  5975 ;;		Unchanged: 0/0
  5976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5977 ;;      Params:         2       0       0       0       0       0       0
  5978 ;;      Locals:         1       0       0       0       0       0       0
  5979 ;;      Temps:          0       0       0       0       0       0       0
  5980 ;;      Totals:         3       0       0       0       0       0       0
  5981 ;;Total ram usage:        3 bytes
  5982 ;; Hardware stack levels used: 1
  5983 ;; Hardware stack levels required when called: 5
  5984 ;; This function calls:
  5985 ;;		_ProcessResp1
  5986 ;;		_SIM800xSDMFlush
  5987 ;;		_SIM800xSDMPrint
  5988 ;;		_SIM800xSDMSendByte
  5989 ;;		_strlen
  5990 ;; This function is called by:
  5991 ;;		_SystemInit
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995                           	psect	text22
  5996  0018BC                     __ptext22:
  5997                           	callstack 0
  5998  0018BC                     _SIM800xIPSetAPN:
  5999                           	callstack 0
  6000  0018BC  FFFF               	dw	65535	; assembler added errata NOP
  6001                           
  6002                           ;incstack = 0
  6003                           ;SIM800xIPSetAPN@cid stored from wreg
  6004  0018BE  6E15               	movwf	SIM800xIPSetAPN@cid^0,c
  6005                           
  6006                           ;SIM800x.c: 662: if((cid == 0) || (strlen(apn) > 64))
  6007  0018C0  5015               	movf	SIM800xIPSetAPN@cid^0,w,c
  6008  0018C2  B4D8               	btfsc	status,2,c
  6009  0018C4  D00C               	goto	u2370
  6010  0018C6  C013  F001         	movff	SIM800xIPSetAPN@apn,strlen@s
  6011  0018CA  C014  F002         	movff	SIM800xIPSetAPN@apn+1,strlen@s+1
  6012  0018CE  ECF1  F00D         	call	_strlen	;wreg free
  6013  0018D2  5002               	movf	(?_strlen+1)^0,w,c
  6014  0018D4  E104               	bnz	u2370
  6015  0018D6  0E41               	movlw	65
  6016  0018D8  5C01               	subwf	?_strlen^0,w,c
  6017  0018DA  A0D8               	btfss	status,0,c
  6018  0018DC  D003               	goto	l3648
  6019  0018DE                     u2370:
  6020  0018DE  FFFF               	dw	65535	; assembler added errata NOP
  6021                           
  6022                           ;SIM800x.c: 663: return SIM800X_ERROR;
  6023  0018E0  0E01               	movlw	1
  6024  0018E2  D01F               	goto	l517
  6025  0018E4                     l3648:
  6026  0018E4  FFFF               	dw	65535	; assembler added errata NOP
  6027                           
  6028                           ;SIM800x.c: 665: SIM800xSDMFlush();
  6029  0018E6  EC18  F00F         	call	_SIM800xSDMFlush	;wreg free
  6030                           
  6031                           ;SIM800x.c: 666: SIM800xSDMPrint("AT+SAPBR=3,");
  6032  0018EA  0ECE               	movlw	low STR_41
  6033  0018EC  6E02               	movwf	SIM800xSDMPrint@str^0,c
  6034  0018EE  0E7E               	movlw	high STR_41
  6035  0018F0  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6036  0018F2  ECC4  F00C         	call	_SIM800xSDMPrint	;wreg free
  6037                           
  6038                           ;SIM800x.c: 667: SIM800xSDMSendByte((uint8_t)((cid & 0x03) + 48));
  6039  0018F6  5015               	movf	SIM800xIPSetAPN@cid^0,w,c
  6040  0018F8  0B03               	andlw	3
  6041  0018FA  0F30               	addlw	48
  6042  0018FC  EC37  F00F         	call	_SIM800xSDMSendByte
  6043                           
  6044                           ;SIM800x.c: 668: SIM800xSDMPrint(",\"APN\",");
  6045  001900  0EAC               	movlw	low STR_44
  6046  001902  6E02               	movwf	SIM800xSDMPrint@str^0,c
  6047  001904  0E7F               	movlw	high STR_44
  6048  001906  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6049  001908  ECC4  F00C         	call	_SIM800xSDMPrint	;wreg free
  6050                           
  6051                           ;SIM800x.c: 669: SIM800xSDMPrint(apn);
  6052  00190C  C013  F002         	movff	SIM800xIPSetAPN@apn,SIM800xSDMPrint@str
  6053  001910  C014  F003         	movff	SIM800xIPSetAPN@apn+1,SIM800xSDMPrint@str+1
  6054  001914  ECC4  F00C         	call	_SIM800xSDMPrint	;wreg free
  6055                           
  6056                           ;SIM800x.c: 670: SIM800xSDMSendByte('\r');
  6057  001918  0E0D               	movlw	13
  6058  00191A  EC37  F00F         	call	_SIM800xSDMSendByte
  6059                           
  6060                           ;SIM800x.c: 672: return ProcessResp1();
  6061  00191E  EC76  F00B         	call	_ProcessResp1	;wreg free
  6062  001922                     l517:
  6063  001922  FFFF               	dw	65535	; assembler added errata NOP
  6064  001924  0012               	return		;funcret
  6065  001926  FFFF               	dw	65535	; errata NOP
  6066  001928                     __end_of_SIM800xIPSetAPN:
  6067                           	callstack 0
  6068                           
  6069 ;; *************** function _SIM800xIPOpen *****************
  6070 ;; Defined at:
  6071 ;;		line 754 in file "Src/SIM800x.c"
  6072 ;; Parameters:    Size  Location     Type
  6073 ;;  cid             1    wreg     unsigned char 
  6074 ;; Auto vars:     Size  Location     Type
  6075 ;;  cid             1   18[COMRAM] unsigned char 
  6076 ;; Return value:  Size  Location     Type
  6077 ;;                  1    wreg      enum E2115
  6078 ;; Registers used:
  6079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6085 ;;      Params:         0       0       0       0       0       0       0
  6086 ;;      Locals:         1       0       0       0       0       0       0
  6087 ;;      Temps:          0       0       0       0       0       0       0
  6088 ;;      Totals:         1       0       0       0       0       0       0
  6089 ;;Total ram usage:        1 bytes
  6090 ;; Hardware stack levels used: 1
  6091 ;; Hardware stack levels required when called: 5
  6092 ;; This function calls:
  6093 ;;		_ProcessResp1
  6094 ;;		_SIM800xSDMFlush
  6095 ;;		_SIM800xSDMPrint
  6096 ;;		_SIM800xSDMSendByte
  6097 ;; This function is called by:
  6098 ;;		_SystemInit
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102                           	psect	text23
  6103  001C78                     __ptext23:
  6104                           	callstack 0
  6105  001C78                     _SIM800xIPOpen:
  6106                           	callstack 0
  6107  001C78  FFFF               	dw	65535	; assembler added errata NOP
  6108                           
  6109                           ;incstack = 0
  6110                           ;SIM800xIPOpen@cid stored from wreg
  6111  001C7A  6E13               	movwf	SIM800xIPOpen@cid^0,c
  6112                           
  6113                           ;SIM800x.c: 757: if(cid == 0)
  6114  001C7C  5013               	movf	SIM800xIPOpen@cid^0,w,c
  6115  001C7E  A4D8               	btfss	status,2,c
  6116  001C80  D002               	goto	l3670
  6117                           
  6118                           ;SIM800x.c: 758: return SIM800X_ERROR;
  6119  001C82  0E01               	movlw	1
  6120  001C84  D01B               	goto	l545
  6121  001C86                     l3670:
  6122  001C86  FFFF               	dw	65535	; assembler added errata NOP
  6123                           
  6124                           ;SIM800x.c: 760: SIM800xSDMFlush();
  6125  001C88  EC18  F00F         	call	_SIM800xSDMFlush	;wreg free
  6126                           
  6127                           ;SIM800x.c: 761: SIM800xSDMPrint("AT+SAPBR=1,");
  6128  001C8C  0EAA               	movlw	low STR_54
  6129  001C8E  6E02               	movwf	SIM800xSDMPrint@str^0,c
  6130  001C90  0E7E               	movlw	high STR_54
  6131  001C92  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6132  001C94  ECC4  F00C         	call	_SIM800xSDMPrint	;wreg free
  6133                           
  6134                           ;SIM800x.c: 762: SIM800xSDMSendByte((uint8_t)((cid & 0x03) + 48));
  6135  001C98  5013               	movf	SIM800xIPOpen@cid^0,w,c
  6136  001C9A  0B03               	andlw	3
  6137  001C9C  0F30               	addlw	48
  6138  001C9E  EC37  F00F         	call	_SIM800xSDMSendByte
  6139                           
  6140                           ;SIM800x.c: 763: SIM800xSDMSendByte('\r');
  6141  001CA2  0E0D               	movlw	13
  6142  001CA4  EC37  F00F         	call	_SIM800xSDMSendByte
  6143                           
  6144                           ;SIM800x.c: 765: Tout = 85000;
  6145  001CA8  0E08               	movlw	8
  6146  001CAA  6E78               	movwf	_Tout^0,c
  6147  001CAC  0E4C               	movlw	76
  6148  001CAE  6E79               	movwf	(_Tout+1)^0,c
  6149  001CB0  0E01               	movlw	1
  6150  001CB2  6E7A               	movwf	(_Tout+2)^0,c
  6151  001CB4  0E00               	movlw	0
  6152  001CB6  6E7B               	movwf	(_Tout+3)^0,c
  6153                           
  6154                           ;SIM800x.c: 766: return ProcessResp1();
  6155  001CB8  EC76  F00B         	call	_ProcessResp1	;wreg free
  6156  001CBC                     l545:
  6157  001CBC  FFFF               	dw	65535	; assembler added errata NOP
  6158  001CBE  0012               	return		;funcret
  6159  001CC0  FFFF               	dw	65535	; errata NOP
  6160  001CC2                     __end_of_SIM800xIPOpen:
  6161                           	callstack 0
  6162                           
  6163 ;; *************** function _ProcessResp1 *****************
  6164 ;; Defined at:
  6165 ;;		line 165 in file "Src/SIM800x.c"
  6166 ;; Parameters:    Size  Location     Type
  6167 ;;		None
  6168 ;; Auto vars:     Size  Location     Type
  6169 ;;  time            4   13[COMRAM] unsigned long 
  6170 ;;  c               1   17[COMRAM] unsigned char 
  6171 ;; Return value:  Size  Location     Type
  6172 ;;                  1    wreg      enum E2114
  6173 ;; Registers used:
  6174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6175 ;; Tracked objects:
  6176 ;;		On entry : 0/0
  6177 ;;		On exit  : 0/0
  6178 ;;		Unchanged: 0/0
  6179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6180 ;;      Params:         0       0       0       0       0       0       0
  6181 ;;      Locals:         5       0       0       0       0       0       0
  6182 ;;      Temps:          4       0       0       0       0       0       0
  6183 ;;      Totals:         9       0       0       0       0       0       0
  6184 ;;Total ram usage:        9 bytes
  6185 ;; Hardware stack levels used: 1
  6186 ;; Hardware stack levels required when called: 4
  6187 ;; This function calls:
  6188 ;;		_SIM800xSDMPeek
  6189 ;;		_SIM800xSDMRxAvailable
  6190 ;;		_Tick_ms
  6191 ;; This function is called by:
  6192 ;;		_SIM800xIPSetConnectionType
  6193 ;;		_SIM800xIPSetAPN
  6194 ;;		_SIM800xIPOpen
  6195 ;; This function uses a non-reentrant model
  6196 ;;
  6197                           
  6198                           	psect	text24
  6199  0016EC                     __ptext24:
  6200                           	callstack 0
  6201  0016EC                     _ProcessResp1:
  6202                           	callstack 0
  6203  0016EC  FFFF               	dw	65535	; assembler added errata NOP
  6204                           
  6205                           ;SIM800x.c: 167: uint32_t time = Tick_ms();
  6206                           
  6207                           ;incstack = 0
  6208  0016EE  EC0D  F00F         	call	_Tick_ms	;wreg free
  6209  0016F2  C001  F00E         	movff	?_Tick_ms,ProcessResp1@time
  6210  0016F6  C002  F00F         	movff	?_Tick_ms+1,ProcessResp1@time+1
  6211  0016FA  C003  F010         	movff	?_Tick_ms+2,ProcessResp1@time+2
  6212  0016FE  C004  F011         	movff	?_Tick_ms+3,ProcessResp1@time+3
  6213                           
  6214                           ;SIM800x.c: 168: while(SIM800xSDMRxAvailable() < 6)
  6215  001702  D01B               	goto	l3388
  6216  001704                     l3382:
  6217  001704  FFFF               	dw	65535	; assembler added errata NOP
  6218                           
  6219                           ;SIM800x.c: 169: {;SIM800x.c: 170: if((Tick_ms() - time) > Tout)
  6220  001706  EC0D  F00F         	call	_Tick_ms	;wreg free
  6221  00170A  500E               	movf	ProcessResp1@time^0,w,c
  6222  00170C  5C01               	subwf	?_Tick_ms^0,w,c
  6223  00170E  6E0A               	movwf	??_ProcessResp1^0,c
  6224  001710  500F               	movf	(ProcessResp1@time+1)^0,w,c
  6225  001712  5802               	subwfb	(?_Tick_ms+1)^0,w,c
  6226  001714  6E0B               	movwf	(??_ProcessResp1+1)^0,c
  6227  001716  5010               	movf	(ProcessResp1@time+2)^0,w,c
  6228  001718  5803               	subwfb	(?_Tick_ms+2)^0,w,c
  6229  00171A  6E0C               	movwf	(??_ProcessResp1+2)^0,c
  6230  00171C  5011               	movf	(ProcessResp1@time+3)^0,w,c
  6231  00171E  5804               	subwfb	(?_Tick_ms+3)^0,w,c
  6232  001720  6E0D               	movwf	(??_ProcessResp1+3)^0,c
  6233  001722  500A               	movf	??_ProcessResp1^0,w,c
  6234  001724  5C78               	subwf	_Tout^0,w,c
  6235  001726  500B               	movf	(??_ProcessResp1+1)^0,w,c
  6236  001728  5879               	subwfb	(_Tout+1)^0,w,c
  6237  00172A  500C               	movf	(??_ProcessResp1+2)^0,w,c
  6238  00172C  587A               	subwfb	(_Tout+2)^0,w,c
  6239  00172E  500D               	movf	(??_ProcessResp1+3)^0,w,c
  6240  001730  587B               	subwfb	(_Tout+3)^0,w,c
  6241  001732  B0D8               	btfsc	status,0,c
  6242  001734  D002               	goto	l3388
  6243                           
  6244                           ;SIM800x.c: 171: {;SIM800x.c: 172: return SIM800X_TIME_OUT;
  6245  001736  0E05               	movlw	5
  6246  001738  D015               	goto	l365
  6247  00173A                     l3388:
  6248  00173A  FFFF               	dw	65535	; assembler added errata NOP
  6249  00173C  ECBB  F00E         	call	_SIM800xSDMRxAvailable	;wreg free
  6250  001740  5007               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  6251  001742  E104               	bnz	u2020
  6252  001744  0E06               	movlw	6
  6253  001746  5C06               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  6254  001748  A0D8               	btfss	status,0,c
  6255  00174A  D7DC               	goto	l3382
  6256  00174C                     u2020:
  6257                           
  6258                           ;SIM800x.c: 173: };SIM800x.c: 174: };SIM800x.c: 175: char c = SIM800xSDMPeek(2);
  6259  00174C  0E02               	movlw	2
  6260  00174E  EC61  F00E         	call	_SIM800xSDMPeek
  6261  001752  6E12               	movwf	ProcessResp1@c^0,c
  6262                           
  6263                           ;SIM800x.c: 176: if(c == 'O')
  6264  001754  0E4F               	movlw	79
  6265  001756  1812               	xorwf	ProcessResp1@c^0,w,c
  6266  001758  A4D8               	btfss	status,2,c
  6267  00175A  D002               	goto	l3398
  6268                           
  6269                           ;SIM800x.c: 177: return SIM800X_OK;
  6270  00175C  0E00               	movlw	0
  6271  00175E  D002               	goto	l365
  6272  001760                     l3398:
  6273  001760  FFFF               	dw	65535	; assembler added errata NOP
  6274                           
  6275                           ;SIM800x.c: 178: return SIM800X_ERROR;
  6276  001762  0E01               	movlw	1
  6277  001764                     l365:
  6278  001764  FFFF               	dw	65535	; assembler added errata NOP
  6279  001766  0012               	return		;funcret
  6280  001768  FFFF               	dw	65535	; errata NOP
  6281  00176A                     __end_of_ProcessResp1:
  6282                           	callstack 0
  6283                           
  6284 ;; *************** function _SIM800xIPGetState *****************
  6285 ;; Defined at:
  6286 ;;		line 798 in file "Src/SIM800x.c"
  6287 ;; Parameters:    Size  Location     Type
  6288 ;;  cid             1    wreg     unsigned char 
  6289 ;;  ip              2   35[COMRAM] PTR unsigned char 
  6290 ;;		 -> SystemInit@ip(20), 
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;  cid             1   76[COMRAM] unsigned char 
  6293 ;;  i               1   78[COMRAM] unsigned char 
  6294 ;;  len             1   77[COMRAM] unsigned char 
  6295 ;;  str            30   41[COMRAM] unsigned char [30]
  6296 ;;  time1           4   71[COMRAM] unsigned long 
  6297 ;;  res             1   75[COMRAM] enum E2114
  6298 ;;  res1            1    0        enum E2260
  6299 ;; Return value:  Size  Location     Type
  6300 ;;                  1    wreg      enum E2261
  6301 ;; Registers used:
  6302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6303 ;; Tracked objects:
  6304 ;;		On entry : 0/0
  6305 ;;		On exit  : 0/0
  6306 ;;		Unchanged: 0/0
  6307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6308 ;;      Params:         2       0       0       0       0       0       0
  6309 ;;      Locals:        38       0       0       0       0       0       0
  6310 ;;      Temps:          4       0       0       0       0       0       0
  6311 ;;      Totals:        44       0       0       0       0       0       0
  6312 ;;Total ram usage:       44 bytes
  6313 ;; Hardware stack levels used: 1
  6314 ;; Hardware stack levels required when called: 6
  6315 ;; This function calls:
  6316 ;;		_ProcessResp2
  6317 ;;		_SIM800xSDMFlush
  6318 ;;		_SIM800xSDMPrint
  6319 ;;		_SIM800xSDMRxAvailable
  6320 ;;		_SIM800xSDMSendByte
  6321 ;;		_Tick_ms
  6322 ;;		_strlen
  6323 ;; This function is called by:
  6324 ;;		_SystemInit
  6325 ;; This function uses a non-reentrant model
  6326 ;;
  6327                           
  6328                           	psect	text25
  6329  001306                     __ptext25:
  6330                           	callstack 0
  6331  001306                     _SIM800xIPGetState:
  6332                           	callstack 0
  6333  001306  FFFF               	dw	65535	; assembler added errata NOP
  6334                           
  6335                           ;incstack = 0
  6336                           ;SIM800xIPGetState@cid stored from wreg
  6337  001308  6E4D               	movwf	SIM800xIPGetState@cid^0,c
  6338                           
  6339                           ;SIM800x.c: 801: if(cid == 0)
  6340  00130A  504D               	movf	SIM800xIPGetState@cid^0,w,c
  6341  00130C  B4D8               	btfsc	status,2,c
  6342  00130E  D079               	goto	l560
  6343                           
  6344                           ;SIM800x.c: 804: char str[30];;SIM800x.c: 805: SIM800xSDMFlush();
  6345  001310  EC18  F00F         	call	_SIM800xSDMFlush	;wreg free
  6346                           
  6347                           ;SIM800x.c: 806: SIM800xSDMPrint("AT+SAPBR=2,");
  6348  001314  0EC2               	movlw	low STR_56
  6349  001316  6E02               	movwf	SIM800xSDMPrint@str^0,c
  6350  001318  0E7E               	movlw	high STR_56
  6351  00131A  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6352  00131C  ECC4  F00C         	call	_SIM800xSDMPrint	;wreg free
  6353                           
  6354                           ;SIM800x.c: 807: SIM800xSDMSendByte((uint8_t)((cid & 0x03) + 48));
  6355  001320  504D               	movf	SIM800xIPGetState@cid^0,w,c
  6356  001322  0B03               	andlw	3
  6357  001324  0F30               	addlw	48
  6358  001326  EC37  F00F         	call	_SIM800xSDMSendByte
  6359                           
  6360                           ;SIM800x.c: 808: SIM800xSDMSendByte('\r');
  6361  00132A  0E0D               	movlw	13
  6362  00132C  EC37  F00F         	call	_SIM800xSDMSendByte
  6363                           
  6364                           ;SIM800x.c: 809: SIM800xIPStatusType res1;;SIM800x.c: 811: uint32_t time1 = Tick_ms();
  6365  001330  EC0D  F00F         	call	_Tick_ms	;wreg free
  6366  001334  C001  F048         	movff	?_Tick_ms,SIM800xIPGetState@time1
  6367  001338  C002  F049         	movff	?_Tick_ms+1,SIM800xIPGetState@time1+1
  6368  00133C  C003  F04A         	movff	?_Tick_ms+2,SIM800xIPGetState@time1+2
  6369  001340  C004  F04B         	movff	?_Tick_ms+3,SIM800xIPGetState@time1+3
  6370                           
  6371                           ;SIM800x.c: 812: while(SIM800xSDMRxAvailable() < 25)
  6372  001344  D019               	goto	l3702
  6373  001346                     l3698:
  6374  001346  FFFF               	dw	65535	; assembler added errata NOP
  6375                           
  6376                           ;SIM800x.c: 813: {;SIM800x.c: 814: if((Tick_ms() - time1) > Tout)
  6377  001348  EC0D  F00F         	call	_Tick_ms	;wreg free
  6378  00134C  5048               	movf	SIM800xIPGetState@time1^0,w,c
  6379  00134E  5C01               	subwf	?_Tick_ms^0,w,c
  6380  001350  6E26               	movwf	??_SIM800xIPGetState^0,c
  6381  001352  5049               	movf	(SIM800xIPGetState@time1+1)^0,w,c
  6382  001354  5802               	subwfb	(?_Tick_ms+1)^0,w,c
  6383  001356  6E27               	movwf	(??_SIM800xIPGetState+1)^0,c
  6384  001358  504A               	movf	(SIM800xIPGetState@time1+2)^0,w,c
  6385  00135A  5803               	subwfb	(?_Tick_ms+2)^0,w,c
  6386  00135C  6E28               	movwf	(??_SIM800xIPGetState+2)^0,c
  6387  00135E  504B               	movf	(SIM800xIPGetState@time1+3)^0,w,c
  6388  001360  5804               	subwfb	(?_Tick_ms+3)^0,w,c
  6389  001362  6E29               	movwf	(??_SIM800xIPGetState+3)^0,c
  6390  001364  5026               	movf	??_SIM800xIPGetState^0,w,c
  6391  001366  5C78               	subwf	_Tout^0,w,c
  6392  001368  5027               	movf	(??_SIM800xIPGetState+1)^0,w,c
  6393  00136A  5879               	subwfb	(_Tout+1)^0,w,c
  6394  00136C  5028               	movf	(??_SIM800xIPGetState+2)^0,w,c
  6395  00136E  587A               	subwfb	(_Tout+2)^0,w,c
  6396  001370  5029               	movf	(??_SIM800xIPGetState+3)^0,w,c
  6397  001372  587B               	subwfb	(_Tout+3)^0,w,c
  6398  001374  A0D8               	btfss	status,0,c
  6399  001376  D045               	goto	l560
  6400  001378                     l3702:
  6401  001378  FFFF               	dw	65535	; assembler added errata NOP
  6402  00137A  ECBB  F00E         	call	_SIM800xSDMRxAvailable	;wreg free
  6403  00137E  5007               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  6404  001380  E104               	bnz	u2410
  6405  001382  0E19               	movlw	25
  6406  001384  5C06               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  6407  001386  A0D8               	btfss	status,0,c
  6408  001388  D7DE               	goto	l3698
  6409  00138A                     u2410:
  6410                           
  6411                           ;SIM800x.c: 816: };SIM800x.c: 817: SIM800x_APIStatusType res = ProcessResp2(str);
  6412  00138A  0E2A               	movlw	low SIM800xIPGetState@str
  6413  00138C  6E18               	movwf	ProcessResp2@str^0,c
  6414  00138E  0E00               	movlw	high SIM800xIPGetState@str
  6415  001390  6E19               	movwf	(ProcessResp2@str+1)^0,c
  6416  001392  EC58  F00A         	call	_ProcessResp2	;wreg free
  6417  001396  6E4C               	movwf	SIM800xIPGetState@res^0,c
  6418                           
  6419                           ;SIM800x.c: 818: if(res == SIM800X_OK)
  6420  001398  504C               	movf	SIM800xIPGetState@res^0,w,c
  6421  00139A  A4D8               	btfss	status,2,c
  6422  00139C  D032               	goto	l560
  6423                           
  6424                           ;SIM800x.c: 819: {;SIM800x.c: 820: uint8_t len = (uint8_t)(strlen(str) - 1);
  6425  00139E  0E2A               	movlw	low SIM800xIPGetState@str
  6426  0013A0  6E01               	movwf	strlen@s^0,c
  6427  0013A2  0E00               	movlw	high SIM800xIPGetState@str
  6428  0013A4  6E02               	movwf	(strlen@s+1)^0,c
  6429  0013A6  ECF1  F00D         	call	_strlen	;wreg free
  6430  0013AA  0401               	decf	?_strlen^0,w,c
  6431  0013AC  6E4E               	movwf	SIM800xIPGetState@len^0,c
  6432                           
  6433                           ;SIM800x.c: 822: for(uint8_t i = 13; i < len; i++)
  6434  0013AE  0E0D               	movlw	13
  6435  0013B0  6E4F               	movwf	SIM800xIPGetState@i^0,c
  6436  0013B2  D016               	goto	l3718
  6437  0013B4                     l3714:
  6438  0013B4  FFFF               	dw	65535	; assembler added errata NOP
  6439                           
  6440                           ;SIM800x.c: 823: {;SIM800x.c: 824: ip[i - 13] = str[i];
  6441  0013B6  0E2A               	movlw	low SIM800xIPGetState@str
  6442  0013B8  244F               	addwf	SIM800xIPGetState@i^0,w,c
  6443  0013BA  6ED9               	movwf	fsr2l,c
  6444  0013BC  6ADA               	clrf	fsr2h,c
  6445  0013BE  0E00               	movlw	high SIM800xIPGetState@str
  6446  0013C0  22DA               	addwfc	fsr2h,f,c
  6447  0013C2  504F               	movf	SIM800xIPGetState@i^0,w,c
  6448  0013C4  2424               	addwf	SIM800xIPGetState@ip^0,w,c
  6449  0013C6  6E26               	movwf	??_SIM800xIPGetState^0,c
  6450  0013C8  0E00               	movlw	0
  6451  0013CA  2025               	addwfc	(SIM800xIPGetState@ip+1)^0,w,c
  6452  0013CC  6E27               	movwf	(??_SIM800xIPGetState+1)^0,c
  6453  0013CE  0EF3               	movlw	243
  6454  0013D0  2426               	addwf	??_SIM800xIPGetState^0,w,c
  6455  0013D2  6EE1               	movwf	fsr1l,c
  6456  0013D4  0EFF               	movlw	255
  6457  0013D6  2027               	addwfc	(??_SIM800xIPGetState+1)^0,w,c
  6458  0013D8  6EE2               	movwf	fsr1h,c
  6459  0013DA  CFDF FFE7          	movff	indf2,indf1
  6460  0013DE  2A4F               	incf	SIM800xIPGetState@i^0,f,c
  6461  0013E0                     l3718:
  6462  0013E0  FFFF               	dw	65535	; assembler added errata NOP
  6463  0013E2  504E               	movf	SIM800xIPGetState@len^0,w,c
  6464  0013E4  5C4F               	subwf	SIM800xIPGetState@i^0,w,c
  6465  0013E6  A0D8               	btfss	status,0,c
  6466  0013E8  D7E5               	goto	l3714
  6467                           
  6468                           ;SIM800x.c: 825: };SIM800x.c: 826: ip[(uint8_t)(len - 13)] = '\0';
  6469  0013EA  C04E  F026         	movff	SIM800xIPGetState@len,??_SIM800xIPGetState
  6470  0013EE  0EF3               	movlw	243
  6471  0013F0  2626               	addwf	??_SIM800xIPGetState^0,f,c
  6472  0013F2  5026               	movf	??_SIM800xIPGetState^0,w,c
  6473  0013F4  2424               	addwf	SIM800xIPGetState@ip^0,w,c
  6474  0013F6  6ED9               	movwf	fsr2l,c
  6475  0013F8  0E00               	movlw	0
  6476  0013FA  2025               	addwfc	(SIM800xIPGetState@ip+1)^0,w,c
  6477  0013FC  6EDA               	movwf	fsr2h,c
  6478  0013FE  0E00               	movlw	0
  6479  001400  6EDF               	movwf	indf2,c
  6480  001402                     l560:
  6481  001402  FFFF               	dw	65535	; assembler added errata NOP
  6482  001404  0012               	return		;funcret
  6483  001406  FFFF               	dw	65535	; errata NOP
  6484  001408                     __end_of_SIM800xIPGetState:
  6485                           	callstack 0
  6486                           
  6487 ;; *************** function _ProcessResp2 *****************
  6488 ;; Defined at:
  6489 ;;		line 182 in file "Src/SIM800x.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;  str             2   23[COMRAM] PTR unsigned char 
  6492 ;;		 -> SIM800xGPRSGetAddress@str(40), SIM800xIPGetState@str(30), SIM800xGetSoftwareRevisionID@str(30), 
  6493 ;; Auto vars:     Size  Location     Type
  6494 ;;  time            4   29[COMRAM] unsigned long 
  6495 ;;  res             2   33[COMRAM] int 
  6496 ;; Return value:  Size  Location     Type
  6497 ;;                  1    wreg      enum E2114
  6498 ;; Registers used:
  6499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6500 ;; Tracked objects:
  6501 ;;		On entry : 0/0
  6502 ;;		On exit  : 0/0
  6503 ;;		Unchanged: 0/0
  6504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6505 ;;      Params:         2       0       0       0       0       0       0
  6506 ;;      Locals:         6       0       0       0       0       0       0
  6507 ;;      Temps:          4       0       0       0       0       0       0
  6508 ;;      Totals:        12       0       0       0       0       0       0
  6509 ;;Total ram usage:       12 bytes
  6510 ;; Hardware stack levels used: 1
  6511 ;; Hardware stack levels required when called: 5
  6512 ;; This function calls:
  6513 ;;		_SIM800xSDMPeek
  6514 ;;		_SIM800xSDMReadF1Pkt
  6515 ;;		_Tick_ms
  6516 ;; This function is called by:
  6517 ;;		_SIM800xIPGetState
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           	psect	text26
  6522  0014B0                     __ptext26:
  6523                           	callstack 0
  6524  0014B0                     _ProcessResp2:
  6525                           	callstack 0
  6526  0014B0  FFFF               	dw	65535	; assembler added errata NOP
  6527                           
  6528                           ;SIM800x.c: 185: int res = SIM800xSDMReadF1Pkt((char*)str);
  6529                           
  6530                           ;incstack = 0
  6531  0014B2  C018  F00A         	movff	ProcessResp2@str,SIM800xSDMReadF1Pkt@data
  6532  0014B6  C019  F00B         	movff	ProcessResp2@str+1,SIM800xSDMReadF1Pkt@data+1
  6533  0014BA  EC6A  F008         	call	_SIM800xSDMReadF1Pkt	;wreg free
  6534  0014BE  C00A  F022         	movff	?_SIM800xSDMReadF1Pkt,ProcessResp2@res
  6535  0014C2  C00B  F023         	movff	?_SIM800xSDMReadF1Pkt+1,ProcessResp2@res+1
  6536                           
  6537                           ;SIM800x.c: 186: if(res < 0)
  6538  0014C6  AE23               	btfss	(ProcessResp2@res+1)^0,7,c
  6539  0014C8  D002               	goto	l3412
  6540                           
  6541                           ;SIM800x.c: 187: {;SIM800x.c: 188: return SIM800X_TIME_OUT;
  6542  0014CA  0E05               	movlw	5
  6543  0014CC  D03D               	goto	l371
  6544  0014CE                     l3412:
  6545  0014CE  FFFF               	dw	65535	; assembler added errata NOP
  6546                           
  6547                           ;SIM800x.c: 190: else if(res == 0)
  6548  0014D0  5022               	movf	ProcessResp2@res^0,w,c
  6549  0014D2  1023               	iorwf	(ProcessResp2@res+1)^0,w,c
  6550  0014D4  A4D8               	btfss	status,2,c
  6551  0014D6  D003               	goto	l3418
  6552  0014D8                     u2050:
  6553  0014D8  FFFF               	dw	65535	; assembler added errata NOP
  6554                           
  6555                           ;SIM800x.c: 191: {;SIM800x.c: 192: return SIM800X_INVALID_RESPONSE;
  6556  0014DA  0E08               	movlw	8
  6557  0014DC  D035               	goto	l371
  6558  0014DE                     l3418:
  6559  0014DE  FFFF               	dw	65535	; assembler added errata NOP
  6560                           
  6561                           ;SIM800x.c: 193: };SIM800x.c: 194: str[res] = '\0';
  6562  0014E0  5022               	movf	ProcessResp2@res^0,w,c
  6563  0014E2  2418               	addwf	ProcessResp2@str^0,w,c
  6564  0014E4  6ED9               	movwf	fsr2l,c
  6565  0014E6  5023               	movf	(ProcessResp2@res+1)^0,w,c
  6566  0014E8  2019               	addwfc	(ProcessResp2@str+1)^0,w,c
  6567  0014EA  6EDA               	movwf	fsr2h,c
  6568  0014EC  0E00               	movlw	0
  6569  0014EE  6EDF               	movwf	indf2,c
  6570                           
  6571                           ;SIM800x.c: 196: uint32_t time = Tick_ms();
  6572  0014F0  EC0D  F00F         	call	_Tick_ms	;wreg free
  6573  0014F4  C001  F01E         	movff	?_Tick_ms,ProcessResp2@time
  6574  0014F8  C002  F01F         	movff	?_Tick_ms+1,ProcessResp2@time+1
  6575  0014FC  C003  F020         	movff	?_Tick_ms+2,ProcessResp2@time+2
  6576  001500  C004  F021         	movff	?_Tick_ms+3,ProcessResp2@time+3
  6577                           
  6578                           ;SIM800x.c: 197: while(SIM800xSDMPeek(2) != 'O')
  6579  001504  D019               	goto	l3428
  6580  001506                     l3422:
  6581  001506  FFFF               	dw	65535	; assembler added errata NOP
  6582                           
  6583                           ;SIM800x.c: 198: {;SIM800x.c: 199: if((Tick_ms() - time) > Tout)
  6584  001508  EC0D  F00F         	call	_Tick_ms	;wreg free
  6585  00150C  501E               	movf	ProcessResp2@time^0,w,c
  6586  00150E  5C01               	subwf	?_Tick_ms^0,w,c
  6587  001510  6E1A               	movwf	??_ProcessResp2^0,c
  6588  001512  501F               	movf	(ProcessResp2@time+1)^0,w,c
  6589  001514  5802               	subwfb	(?_Tick_ms+1)^0,w,c
  6590  001516  6E1B               	movwf	(??_ProcessResp2+1)^0,c
  6591  001518  5020               	movf	(ProcessResp2@time+2)^0,w,c
  6592  00151A  5803               	subwfb	(?_Tick_ms+2)^0,w,c
  6593  00151C  6E1C               	movwf	(??_ProcessResp2+2)^0,c
  6594  00151E  5021               	movf	(ProcessResp2@time+3)^0,w,c
  6595  001520  5804               	subwfb	(?_Tick_ms+3)^0,w,c
  6596  001522  6E1D               	movwf	(??_ProcessResp2+3)^0,c
  6597  001524  501A               	movf	??_ProcessResp2^0,w,c
  6598  001526  5C78               	subwf	_Tout^0,w,c
  6599  001528  501B               	movf	(??_ProcessResp2+1)^0,w,c
  6600  00152A  5879               	subwfb	(_Tout+1)^0,w,c
  6601  00152C  501C               	movf	(??_ProcessResp2+2)^0,w,c
  6602  00152E  587A               	subwfb	(_Tout+2)^0,w,c
  6603  001530  501D               	movf	(??_ProcessResp2+3)^0,w,c
  6604  001532  587B               	subwfb	(_Tout+3)^0,w,c
  6605  001534  A0D8               	btfss	status,0,c
  6606  001536  D7D0               	goto	u2050
  6607  001538                     l3428:
  6608  001538  FFFF               	dw	65535	; assembler added errata NOP
  6609  00153A  0E02               	movlw	2
  6610  00153C  EC61  F00E         	call	_SIM800xSDMPeek
  6611  001540  0A4F               	xorlw	79
  6612  001542  A4D8               	btfss	status,2,c
  6613  001544  D7E0               	goto	l3422
  6614                           
  6615                           ;SIM800x.c: 202: };SIM800x.c: 203: };SIM800x.c: 204: return SIM800X_OK;
  6616  001546  0E00               	movlw	0
  6617  001548                     l371:
  6618  001548  FFFF               	dw	65535	; assembler added errata NOP
  6619  00154A  0012               	return		;funcret
  6620  00154C  FFFF               	dw	65535	; errata NOP
  6621  00154E                     __end_of_ProcessResp2:
  6622                           	callstack 0
  6623                           
  6624 ;; *************** function _SIM800xSDMPeek *****************
  6625 ;; Defined at:
  6626 ;;		line 209 in file "Src/SIM800x_SDM.c"
  6627 ;; Parameters:    Size  Location     Type
  6628 ;;  idx             1    wreg     unsigned char 
  6629 ;; Auto vars:     Size  Location     Type
  6630 ;;  idx             1    2[COMRAM] unsigned char 
  6631 ;; Return value:  Size  Location     Type
  6632 ;;                  1    wreg      unsigned char 
  6633 ;; Registers used:
  6634 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6635 ;; Tracked objects:
  6636 ;;		On entry : 0/0
  6637 ;;		On exit  : 0/0
  6638 ;;		Unchanged: 0/0
  6639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6640 ;;      Params:         0       0       0       0       0       0       0
  6641 ;;      Locals:         1       0       0       0       0       0       0
  6642 ;;      Temps:          2       0       0       0       0       0       0
  6643 ;;      Totals:         3       0       0       0       0       0       0
  6644 ;;Total ram usage:        3 bytes
  6645 ;; Hardware stack levels used: 1
  6646 ;; Hardware stack levels required when called: 2
  6647 ;; This function calls:
  6648 ;;		Nothing
  6649 ;; This function is called by:
  6650 ;;		_ProcessResp1
  6651 ;;		_ProcessResp2
  6652 ;;		_SIM800xInit
  6653 ;;		_SIM800xHTTPInputData
  6654 ;;		_SIM800xHTTPRead
  6655 ;; This function uses a non-reentrant model
  6656 ;;
  6657                           
  6658                           	psect	text27
  6659  001CC2                     __ptext27:
  6660                           	callstack 0
  6661  001CC2                     _SIM800xSDMPeek:
  6662                           	callstack 0
  6663  001CC2  FFFF               	dw	65535	; assembler added errata NOP
  6664                           
  6665                           ;incstack = 0
  6666                           ;SIM800xSDMPeek@idx stored from wreg
  6667  001CC4  6E03               	movwf	SIM800xSDMPeek@idx^0,c
  6668                           
  6669                           ;SIM800x_SDM.c: 212: if((Rxfifoptr + idx) >= Rxfifocurrent)
  6670  001CC6  5003               	movf	SIM800xSDMPeek@idx^0,w,c
  6671  001CC8  2471               	addwf	_Rxfifoptr@SIM800x_SDM$F1155^0,w,c	;volatile
  6672  001CCA  6E01               	movwf	??_SIM800xSDMPeek^0,c
  6673  001CCC  0E00               	movlw	0
  6674  001CCE  2072               	addwfc	(_Rxfifoptr@SIM800x_SDM$F1155+1)^0,w,c	;volatile
  6675  001CD0  6E02               	movwf	(??_SIM800xSDMPeek+1)^0,c
  6676  001CD2  506F               	movf	_Rxfifocurrent@SIM800x_SDM$F1156^0,w,c	;volatile
  6677  001CD4  5C01               	subwf	??_SIM800xSDMPeek^0,w,c
  6678  001CD6  5070               	movf	(_Rxfifocurrent@SIM800x_SDM$F1156+1)^0,w,c	;volatile
  6679  001CD8  5802               	subwfb	(??_SIM800xSDMPeek+1)^0,w,c
  6680  001CDA  A0D8               	btfss	status,0,c
  6681  001CDC  D002               	goto	l3158
  6682                           
  6683                           ;SIM800x_SDM.c: 213: return 0xFF;
  6684  001CDE  0EFF               	movlw	255
  6685  001CE0  D010               	goto	l1051
  6686  001CE2                     l3158:
  6687  001CE2  FFFF               	dw	65535	; assembler added errata NOP
  6688                           
  6689                           ;SIM800x_SDM.c: 214: return RxFIFO[Rxfifoptr + idx];
  6690  001CE4  0E00               	movlw	low _RxFIFO@SIM800x_SDM$F1154
  6691  001CE6  6E01               	movwf	??_SIM800xSDMPeek^0,c
  6692  001CE8  0E03               	movlw	high _RxFIFO@SIM800x_SDM$F1154
  6693  001CEA  6E02               	movwf	(??_SIM800xSDMPeek+1)^0,c
  6694  001CEC  5003               	movf	SIM800xSDMPeek@idx^0,w,c
  6695  001CEE  2601               	addwf	??_SIM800xSDMPeek^0,f,c
  6696  001CF0  0E00               	movlw	0
  6697  001CF2  2202               	addwfc	(??_SIM800xSDMPeek+1)^0,f,c
  6698  001CF4  5071               	movf	_Rxfifoptr@SIM800x_SDM$F1155^0,w,c	;volatile
  6699  001CF6  2401               	addwf	??_SIM800xSDMPeek^0,w,c
  6700  001CF8  6ED9               	movwf	fsr2l,c
  6701  001CFA  5072               	movf	(_Rxfifoptr@SIM800x_SDM$F1155+1)^0,w,c	;volatile
  6702  001CFC  2002               	addwfc	(??_SIM800xSDMPeek+1)^0,w,c
  6703  001CFE  6EDA               	movwf	fsr2h,c
  6704  001D00  50DF               	movf	indf2,w,c
  6705  001D02                     l1051:
  6706  001D02  FFFF               	dw	65535	; assembler added errata NOP
  6707  001D04  0012               	return		;funcret
  6708  001D06  FFFF               	dw	65535	; errata NOP
  6709  001D08                     __end_of_SIM800xSDMPeek:
  6710                           	callstack 0
  6711                           
  6712 ;; *************** function _SIM800xHTTPSetURL *****************
  6713 ;; Defined at:
  6714 ;;		line 1405 in file "Src/SIM800x.c"
  6715 ;; Parameters:    Size  Location     Type
  6716 ;;  url             2   64[COMRAM] PTR const unsigned char 
  6717 ;;		 -> STR_9(279), 
  6718 ;;  errcode         2   66[COMRAM] PTR unsigned int 
  6719 ;;		 -> SystemInit@err(2), 
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;		None
  6722 ;; Return value:  Size  Location     Type
  6723 ;;                  1    wreg      enum E2115
  6724 ;; Registers used:
  6725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6726 ;; Tracked objects:
  6727 ;;		On entry : 0/0
  6728 ;;		On exit  : 0/0
  6729 ;;		Unchanged: 0/0
  6730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6731 ;;      Params:         4       0       0       0       0       0       0
  6732 ;;      Locals:         0       0       0       0       0       0       0
  6733 ;;      Temps:          0       0       0       0       0       0       0
  6734 ;;      Totals:         4       0       0       0       0       0       0
  6735 ;;Total ram usage:        4 bytes
  6736 ;; Hardware stack levels used: 1
  6737 ;; Hardware stack levels required when called: 6
  6738 ;; This function calls:
  6739 ;;		_ProcessResp4
  6740 ;;		_SIM800xSDMFlush
  6741 ;;		_SIM800xSDMPrint
  6742 ;;		_SIM800xSDMSendByte
  6743 ;;		_strlen
  6744 ;; This function is called by:
  6745 ;;		_SystemInit
  6746 ;; This function uses a non-reentrant model
  6747 ;;
  6748                           
  6749                           	psect	text28
  6750  001A9C                     __ptext28:
  6751                           	callstack 0
  6752  001A9C                     _SIM800xHTTPSetURL:
  6753                           	callstack 0
  6754  001A9C  FFFF               	dw	65535	; assembler added errata NOP
  6755                           
  6756                           ;SIM800x.c: 1408: if(strlen(url) > 500)
  6757                           
  6758                           ;incstack = 0
  6759  001A9E  C041  F001         	movff	SIM800xHTTPSetURL@url,strlen@s
  6760  001AA2  C042  F002         	movff	SIM800xHTTPSetURL@url+1,strlen@s+1
  6761  001AA6  ECF1  F00D         	call	_strlen	;wreg free
  6762  001AAA  0EF5               	movlw	245
  6763  001AAC  5C01               	subwf	?_strlen^0,w,c
  6764  001AAE  0E01               	movlw	1
  6765  001AB0  5802               	subwfb	(?_strlen+1)^0,w,c
  6766  001AB2  A0D8               	btfss	status,0,c
  6767  001AB4  D002               	goto	l3738
  6768                           
  6769                           ;SIM800x.c: 1409: return SIM800X_ERROR;
  6770  001AB6  0E01               	movlw	1
  6771  001AB8  D018               	goto	l739
  6772  001ABA                     l3738:
  6773  001ABA  FFFF               	dw	65535	; assembler added errata NOP
  6774                           
  6775                           ;SIM800x.c: 1411: SIM800xSDMFlush();
  6776  001ABC  EC18  F00F         	call	_SIM800xSDMFlush	;wreg free
  6777                           
  6778                           ;SIM800x.c: 1412: SIM800xSDMPrint("AT+HTTPPARA=\"URL\",");
  6779  001AC0  0E54               	movlw	low STR_86
  6780  001AC2  6E02               	movwf	SIM800xSDMPrint@str^0,c
  6781  001AC4  0E7D               	movlw	high STR_86
  6782  001AC6  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6783  001AC8  ECC4  F00C         	call	_SIM800xSDMPrint	;wreg free
  6784                           
  6785                           ;SIM800x.c: 1413: SIM800xSDMPrint(url);
  6786  001ACC  C041  F002         	movff	SIM800xHTTPSetURL@url,SIM800xSDMPrint@str
  6787  001AD0  C042  F003         	movff	SIM800xHTTPSetURL@url+1,SIM800xSDMPrint@str+1
  6788  001AD4  ECC4  F00C         	call	_SIM800xSDMPrint	;wreg free
  6789                           
  6790                           ;SIM800x.c: 1414: SIM800xSDMSendByte('\r');
  6791  001AD8  0E0D               	movlw	13
  6792  001ADA  EC37  F00F         	call	_SIM800xSDMSendByte
  6793                           
  6794                           ;SIM800x.c: 1416: return ProcessResp4(errcode);
  6795  001ADE  C043  F021         	movff	SIM800xHTTPSetURL@errcode,ProcessResp4@ec
  6796  001AE2  C044  F022         	movff	SIM800xHTTPSetURL@errcode+1,ProcessResp4@ec+1
  6797  001AE6  EC01  F009         	call	_ProcessResp4	;wreg free
  6798  001AEA                     l739:
  6799  001AEA  FFFF               	dw	65535	; assembler added errata NOP
  6800  001AEC  0012               	return		;funcret
  6801  001AEE  FFFF               	dw	65535	; errata NOP
  6802  001AF0                     __end_of_SIM800xHTTPSetURL:
  6803                           	callstack 0
  6804                           
  6805 ;; *************** function _SIM800xHTTPSetContent *****************
  6806 ;; Defined at:
  6807 ;;		line 1522 in file "Src/SIM800x.c"
  6808 ;; Parameters:    Size  Location     Type
  6809 ;;  content         2   64[COMRAM] PTR const unsigned char 
  6810 ;;		 -> STR_10(17), 
  6811 ;;  errcode         2   66[COMRAM] PTR unsigned int 
  6812 ;;		 -> SystemInit@err(2), 
  6813 ;; Auto vars:     Size  Location     Type
  6814 ;;		None
  6815 ;; Return value:  Size  Location     Type
  6816 ;;                  1    wreg      enum E2115
  6817 ;; Registers used:
  6818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6819 ;; Tracked objects:
  6820 ;;		On entry : 0/0
  6821 ;;		On exit  : 0/0
  6822 ;;		Unchanged: 0/0
  6823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6824 ;;      Params:         4       0       0       0       0       0       0
  6825 ;;      Locals:         0       0       0       0       0       0       0
  6826 ;;      Temps:          0       0       0       0       0       0       0
  6827 ;;      Totals:         4       0       0       0       0       0       0
  6828 ;;Total ram usage:        4 bytes
  6829 ;; Hardware stack levels used: 1
  6830 ;; Hardware stack levels required when called: 6
  6831 ;; This function calls:
  6832 ;;		_ProcessResp4
  6833 ;;		_SIM800xSDMFlush
  6834 ;;		_SIM800xSDMPrint
  6835 ;;		_SIM800xSDMSendByte
  6836 ;;		_strlen
  6837 ;; This function is called by:
  6838 ;;		_SystemInit
  6839 ;; This function uses a non-reentrant model
  6840 ;;
  6841                           
  6842                           	psect	text29
  6843  001AF0                     __ptext29:
  6844                           	callstack 0
  6845  001AF0                     _SIM800xHTTPSetContent:
  6846                           	callstack 0
  6847  001AF0  FFFF               	dw	65535	; assembler added errata NOP
  6848                           
  6849                           ;SIM800x.c: 1525: if(strlen(content) > 80)
  6850                           
  6851                           ;incstack = 0
  6852  001AF2  C041  F001         	movff	SIM800xHTTPSetContent@content,strlen@s
  6853  001AF6  C042  F002         	movff	SIM800xHTTPSetContent@content+1,strlen@s+1
  6854  001AFA  ECF1  F00D         	call	_strlen	;wreg free
  6855  001AFE  5002               	movf	(?_strlen+1)^0,w,c
  6856  001B00  E104               	bnz	u2450
  6857  001B02  0E51               	movlw	81
  6858  001B04  5C01               	subwf	?_strlen^0,w,c
  6859  001B06  A0D8               	btfss	status,0,c
  6860  001B08  D002               	goto	l3756
  6861  001B0A                     u2450:
  6862                           
  6863                           ;SIM800x.c: 1526: return SIM800X_ERROR;
  6864  001B0A  0E01               	movlw	1
  6865  001B0C  D018               	goto	l771
  6866  001B0E                     l3756:
  6867  001B0E  FFFF               	dw	65535	; assembler added errata NOP
  6868                           
  6869                           ;SIM800x.c: 1528: SIM800xSDMFlush();
  6870  001B10  EC18  F00F         	call	_SIM800xSDMFlush	;wreg free
  6871                           
  6872                           ;SIM800x.c: 1529: SIM800xSDMPrint("AT+HTTPPARA=\"CONTENT\",");
  6873  001B14  0E97               	movlw	low STR_94
  6874  001B16  6E02               	movwf	SIM800xSDMPrint@str^0,c
  6875  001B18  0E7C               	movlw	high STR_94
  6876  001B1A  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6877  001B1C  ECC4  F00C         	call	_SIM800xSDMPrint	;wreg free
  6878                           
  6879                           ;SIM800x.c: 1530: SIM800xSDMPrint(content);
  6880  001B20  C041  F002         	movff	SIM800xHTTPSetContent@content,SIM800xSDMPrint@str
  6881  001B24  C042  F003         	movff	SIM800xHTTPSetContent@content+1,SIM800xSDMPrint@str+1
  6882  001B28  ECC4  F00C         	call	_SIM800xSDMPrint	;wreg free
  6883                           
  6884                           ;SIM800x.c: 1531: SIM800xSDMSendByte('\r');
  6885  001B2C  0E0D               	movlw	13
  6886  001B2E  EC37  F00F         	call	_SIM800xSDMSendByte
  6887                           
  6888                           ;SIM800x.c: 1533: return ProcessResp4(errcode);
  6889  001B32  C043  F021         	movff	SIM800xHTTPSetContent@errcode,ProcessResp4@ec
  6890  001B36  C044  F022         	movff	SIM800xHTTPSetContent@errcode+1,ProcessResp4@ec+1
  6891  001B3A  EC01  F009         	call	_ProcessResp4	;wreg free
  6892  001B3E                     l771:
  6893  001B3E  FFFF               	dw	65535	; assembler added errata NOP
  6894  001B40  0012               	return		;funcret
  6895  001B42  FFFF               	dw	65535	; errata NOP
  6896  001B44                     __end_of_SIM800xHTTPSetContent:
  6897                           	callstack 0
  6898                           
  6899 ;; *************** function _strlen *****************
  6900 ;; Defined at:
  6901 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\strlen.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6904 ;;		 -> SIM800xGPRSGetAddress@str(40), SIM800xIPGetParameters@str(30), SIM800xIPGetState@str(30), txmessage(100), 
  6905 ;;		 -> STR_10(17), STR_9(279), STR_4(9), STR_3(5), 
  6906 ;; Auto vars:     Size  Location     Type
  6907 ;;  cp              2    2[COMRAM] PTR const unsigned char 
  6908 ;;		 -> SIM800xGPRSGetAddress@str(40), SIM800xIPGetParameters@str(30), SIM800xIPGetState@str(30), txmessage(100), 
  6909 ;;		 -> STR_10(17), STR_9(279), STR_4(9), STR_3(5), 
  6910 ;; Return value:  Size  Location     Type
  6911 ;;                  2    0[COMRAM] unsigned int 
  6912 ;; Registers used:
  6913 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  6914 ;; Tracked objects:
  6915 ;;		On entry : 0/0
  6916 ;;		On exit  : 0/0
  6917 ;;		Unchanged: 0/0
  6918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6919 ;;      Params:         2       0       0       0       0       0       0
  6920 ;;      Locals:         2       0       0       0       0       0       0
  6921 ;;      Temps:          0       0       0       0       0       0       0
  6922 ;;      Totals:         4       0       0       0       0       0       0
  6923 ;;Total ram usage:        4 bytes
  6924 ;; Hardware stack levels used: 1
  6925 ;; Hardware stack levels required when called: 2
  6926 ;; This function calls:
  6927 ;;		Nothing
  6928 ;; This function is called by:
  6929 ;;		_SIM800xIPSetConnectionType
  6930 ;;		_SIM800xIPSetAPN
  6931 ;;		_SIM800xIPGetState
  6932 ;;		_SIM800xHTTPSetURL
  6933 ;;		_SIM800xHTTPSetContent
  6934 ;;		_SIM800xHTTPInputData
  6935 ;; This function uses a non-reentrant model
  6936 ;;
  6937                           
  6938                           	psect	text30
  6939  001BE2                     __ptext30:
  6940                           	callstack 0
  6941  001BE2                     _strlen:
  6942                           	callstack 0
  6943  001BE2  FFFF               	dw	65535	; assembler added errata NOP
  6944                           
  6945                           ;incstack = 0
  6946  001BE4  C001  F003         	movff	strlen@s,strlen@cp
  6947  001BE8  C002  F004         	movff	strlen@s+1,strlen@cp+1
  6948  001BEC  D003               	goto	l3334
  6949  001BEE                     l3332:
  6950  001BEE  FFFF               	dw	65535	; assembler added errata NOP
  6951  001BF0  4A03               	infsnz	strlen@cp^0,f,c
  6952  001BF2  2A04               	incf	(strlen@cp+1)^0,f,c
  6953  001BF4                     l3334:
  6954  001BF4  FFFF               	dw	65535	; assembler added errata NOP
  6955  001BF6  C003  FFF6         	movff	strlen@cp,tblptrl
  6956  001BFA  C004  FFF7         	movff	strlen@cp+1,tblptrh
  6957  001BFE  6AF8               	clrf	tblptru,c
  6958  001C00  0E05               	movlw	(high __ramtop+-1)
  6959  001C02  64F7               	cpfsgt	tblptrh,c
  6960  001C04  D004               	bra	u1927
  6961  001C06  0008               	tblrd		*
  6962  001C08  FFFF               	dw	65535	; errata NOP
  6963  001C0A  50F5               	movf	tablat,w,c
  6964  001C0C  D005               	bra	u1920
  6965  001C0E                     u1927:
  6966  001C0E  CFF6 FFE1          	movff	tblptrl,fsr1l
  6967  001C12  CFF7 FFE2          	movff	tblptrh,fsr1h
  6968  001C16  50E7               	movf	indf1,w,c
  6969  001C18                     u1920:
  6970  001C18  0900               	iorlw	0
  6971  001C1A  A4D8               	btfss	status,2,c
  6972  001C1C  D7E8               	goto	l3332
  6973  001C1E  5001               	movf	strlen@s^0,w,c
  6974  001C20  5C03               	subwf	strlen@cp^0,w,c
  6975  001C22  6E01               	movwf	?_strlen^0,c
  6976  001C24  5002               	movf	(strlen@s+1)^0,w,c
  6977  001C26  5804               	subwfb	(strlen@cp+1)^0,w,c
  6978  001C28  6E02               	movwf	(?_strlen+1)^0,c
  6979  001C2A  0012               	return		;funcret
  6980  001C2C  FFFF               	dw	65535	; errata NOP
  6981  001C2E                     __end_of_strlen:
  6982                           	callstack 0
  6983                           
  6984 ;; *************** function _SIM800xHTTPInit *****************
  6985 ;; Defined at:
  6986 ;;		line 1369 in file "Src/SIM800x.c"
  6987 ;; Parameters:    Size  Location     Type
  6988 ;;  errcode         2   64[COMRAM] PTR unsigned int 
  6989 ;;		 -> SystemInit@err(2), 
  6990 ;; Auto vars:     Size  Location     Type
  6991 ;;		None
  6992 ;; Return value:  Size  Location     Type
  6993 ;;                  1    wreg      enum E2115
  6994 ;; Registers used:
  6995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6996 ;; Tracked objects:
  6997 ;;		On entry : 0/0
  6998 ;;		On exit  : 0/0
  6999 ;;		Unchanged: 0/0
  7000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7001 ;;      Params:         2       0       0       0       0       0       0
  7002 ;;      Locals:         0       0       0       0       0       0       0
  7003 ;;      Temps:          0       0       0       0       0       0       0
  7004 ;;      Totals:         2       0       0       0       0       0       0
  7005 ;;Total ram usage:        2 bytes
  7006 ;; Hardware stack levels used: 1
  7007 ;; Hardware stack levels required when called: 6
  7008 ;; This function calls:
  7009 ;;		_ProcessResp4
  7010 ;;		_SIM800xSDMFlush
  7011 ;;		_SIM800xSDMPrint
  7012 ;; This function is called by:
  7013 ;;		_SystemInit
  7014 ;; This function uses a non-reentrant model
  7015 ;;
  7016                           
  7017                           	psect	text31
  7018  001DF8                     __ptext31:
  7019                           	callstack 0
  7020  001DF8                     _SIM800xHTTPInit:
  7021                           	callstack 0
  7022  001DF8  FFFF               	dw	65535	; assembler added errata NOP
  7023                           
  7024                           ;SIM800x.c: 1372: SIM800xSDMFlush();
  7025                           
  7026                           ;incstack = 0
  7027  001DFA  EC18  F00F         	call	_SIM800xSDMFlush	;wreg free
  7028                           
  7029                           ;SIM800x.c: 1373: SIM800xSDMPrint("AT+HTTPINIT\r");
  7030  001DFE  0E3C               	movlw	low STR_83
  7031  001E00  6E02               	movwf	SIM800xSDMPrint@str^0,c
  7032  001E02  0E7E               	movlw	high STR_83
  7033  001E04  6E03               	movwf	(SIM800xSDMPrint@str+1)^0,c
  7034  001E06  ECC4  F00C         	call	_SIM800xSDMPrint	;wreg free
  7035                           
  7036                           ;SIM800x.c: 1374: return ProcessResp4(errcode);
  7037  001E0A  C041  F021         	movff	SIM800xHTTPInit@errcode,ProcessResp4@ec
  7038  001E0E  C042  F022         	movff	SIM800xHTTPInit@errcode+1,ProcessResp4@ec+1
  7039  001E12  EC01  F009         	call	_ProcessResp4	;wreg free
  7040  001E16  0012               	return		;funcret
  7041  001E18  FFFF               	dw	65535	; errata NOP
  7042  001E1A                     __end_of_SIM800xHTTPInit:
  7043                           	callstack 0
  7044                           
  7045 ;; *************** function _SIM800xSDMPrint *****************
  7046 ;; Defined at:
  7047 ;;		line 158 in file "Src/SIM800x_SDM.c"
  7048 ;; Parameters:    Size  Location     Type
  7049 ;;  str             2    1[COMRAM] PTR const unsigned char 
  7050 ;;		 -> STR_105(9), STR_104(8), STR_103(10), STR_102(16), 
  7051 ;;		 -> STR_101(13), STR_100(16), STR_99(14), SIM800xHTTPRead@str(30), 
  7052 ;;		 -> SIM800xHTTPAction@str(30), SIM800xHTTPInputData@str(30), STR_95(24), STR_94(23), 
  7053 ;;		 -> SIM800xHTTPSetTimeout@str(30), SIM800xHTTPSetBreakEnd@str(30), SIM800xHTTPSetBreak@str(30), SIM800xHTTPSetRedir@
      +str(25), 
  7054 ;;		 -> SIM800xHTTPSetPort@str(30), STR_88(21), STR_87(18), STR_86(19), 
  7055 ;;		 -> STR_85(19), STR_84(13), STR_83(13), STR_82(10), 
  7056 ;;		 -> STR_81(11), STR_80(6), STR_79(10), STR_78(11), 
  7057 ;;		 -> STR_77(11), STR_76(12), STR_75(12), STR_74(2), 
  7058 ;;		 -> STR_73(3), STR_72(3), STR_71(2), STR_70(13), 
  7059 ;;		 -> SIM800xGPRSGetAddress@str(40), SIM800xGPRSSetDataMode@str(20), STR_67(12), STR_66(12), 
  7060 ;;		 -> STR_65(11), SIM800xGPRSSetQoSRequest@str(40), SIM800xGPRSSetQoSMin@str(40), STR_62(7), 
  7061 ;;		 -> STR_61(12), STR_60(12), STR_59(12), STR_58(11), 
  7062 ;;		 -> SIM800xIPGetParameters@str(30), STR_56(12), STR_55(12), STR_54(12), 
  7063 ;;		 -> STR_53(9), STR_52(12), SIM800xIPSetRate@str(8), STR_50(13), 
  7064 ;;		 -> STR_49(12), STR_48(8), STR_47(12), STR_46(9), 
  7065 ;;		 -> STR_45(12), STR_44(8), STR_43(12), STR_42(12), 
  7066 ;;		 -> STR_41(12), STR_40(9), STR_39(5), STR_38(8), 
  7067 ;;		 -> STR_37(8), STR_36(8), STR_35(8), STR_34(8), 
  7068 ;;		 -> STR_33(4), STR_32(6), SIM800xSetBaudRate@str(15), STR_30(13), 
  7069 ;;		 -> STR_29(6), STR_28(4), STR_10(17), STR_9(279), 
  7070 ;;		 -> STR_4(9), STR_3(5), 
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;		None
  7073 ;; Return value:  Size  Location     Type
  7074 ;;                  1    wreg      void 
  7075 ;; Registers used:
  7076 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7077 ;; Tracked objects:
  7078 ;;		On entry : 0/0
  7079 ;;		On exit  : 0/0
  7080 ;;		Unchanged: 0/0
  7081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7082 ;;      Params:         2       0       0       0       0       0       0
  7083 ;;      Locals:         0       0       0       0       0       0       0
  7084 ;;      Temps:          0       0       0       0       0       0       0
  7085 ;;      Totals:         2       0       0       0       0       0       0
  7086 ;;Total ram usage:        2 bytes
  7087 ;; Hardware stack levels used: 1
  7088 ;; Hardware stack levels required when called: 3
  7089 ;; This function calls:
  7090 ;;		_SIM800xSDMSendByte
  7091 ;; This function is called by:
  7092 ;;		_SIM800xInit
  7093 ;;		_SIM800xIPSetConnectionType
  7094 ;;		_SIM800xIPSetAPN
  7095 ;;		_SIM800xIPOpen
  7096 ;;		_SIM800xIPGetState
  7097 ;;		_SIM800xHTTPInit
  7098 ;;		_SIM800xHTTPSetURL
  7099 ;;		_SIM800xHTTPSetContent
  7100 ;;		_SIM800xHTTPInputData
  7101 ;;		_SIM800xHTTPAction
  7102 ;;		_SIM800xHTTPRead
  7103 ;; This function uses a non-reentrant model
  7104 ;;
  7105                           
  7106                           	psect	text32
  7107  001988                     __ptext32:
  7108                           	callstack 0
  7109  001988                     _SIM800xSDMPrint:
  7110                           	callstack 0
  7111  001988  FFFF               	dw	65535	; assembler added errata NOP
  7112                           
  7113                           ;SIM800x_SDM.c: 160: while(*str!='\0')
  7114                           
  7115                           ;incstack = 0
  7116  00198A  D016               	goto	l3504
  7117  00198C                     l3500:
  7118  00198C  FFFF               	dw	65535	; assembler added errata NOP
  7119                           
  7120                           ;SIM800x_SDM.c: 161: {;SIM800x_SDM.c: 162: SIM800xSDMSendByte(*(str++));
  7121  00198E  C002  FFF6         	movff	SIM800xSDMPrint@str,tblptrl
  7122  001992  C003  FFF7         	movff	SIM800xSDMPrint@str+1,tblptrh
  7123  001996  6AF8               	clrf	tblptru,c
  7124  001998  0E05               	movlw	(high __ramtop+-1)
  7125  00199A  64F7               	cpfsgt	tblptrh,c
  7126  00199C  D004               	bra	u2177
  7127  00199E  0008               	tblrd		*
  7128  0019A0  FFFF               	dw	65535	; errata NOP
  7129  0019A2  50F5               	movf	tablat,w,c
  7130  0019A4  D005               	bra	u2170
  7131  0019A6                     u2177:
  7132  0019A6  CFF6 FFE1          	movff	tblptrl,fsr1l
  7133  0019AA  CFF7 FFE2          	movff	tblptrh,fsr1h
  7134  0019AE  50E7               	movf	indf1,w,c
  7135  0019B0                     u2170:
  7136  0019B0  EC37  F00F         	call	_SIM800xSDMSendByte
  7137  0019B4  4A02               	infsnz	SIM800xSDMPrint@str^0,f,c
  7138  0019B6  2A03               	incf	(SIM800xSDMPrint@str+1)^0,f,c
  7139  0019B8                     l3504:
  7140  0019B8  FFFF               	dw	65535	; assembler added errata NOP
  7141  0019BA  C002  FFF6         	movff	SIM800xSDMPrint@str,tblptrl
  7142  0019BE  C003  FFF7         	movff	SIM800xSDMPrint@str+1,tblptrh
  7143  0019C2  6AF8               	clrf	tblptru,c
  7144  0019C4  0E05               	movlw	(high __ramtop+-1)
  7145  0019C6  64F7               	cpfsgt	tblptrh,c
  7146  0019C8  D004               	bra	u2187
  7147  0019CA  0008               	tblrd		*
  7148  0019CC  FFFF               	dw	65535	; errata NOP
  7149  0019CE  50F5               	movf	tablat,w,c
  7150  0019D0  D005               	bra	u2180
  7151  0019D2                     u2187:
  7152  0019D2  CFF6 FFE1          	movff	tblptrl,fsr1l
  7153  0019D6  CFF7 FFE2          	movff	tblptrh,fsr1h
  7154  0019DA  50E7               	movf	indf1,w,c
  7155  0019DC                     u2180:
  7156  0019DC  0900               	iorlw	0
  7157  0019DE  B4D8               	btfsc	status,2,c
  7158  0019E0  0012               	return		;funcret
  7159  0019E2  FFFF               	dw	65535	; assembler added errata NOP
  7160  0019E4  D7D3               	goto	l3500
  7161  0019E6  FFFF               	dw	65535	; errata NOP
  7162  0019E8                     __end_of_SIM800xSDMPrint:
  7163                           	callstack 0
  7164                           
  7165 ;; *************** function _SIM800xSDMSendByte *****************
  7166 ;; Defined at:
  7167 ;;		line 118 in file "Src/SIM800x_SDM.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;  data            1    wreg     unsigned char 
  7170 ;; Auto vars:     Size  Location     Type
  7171 ;;  data            1    0[COMRAM] unsigned char 
  7172 ;; Return value:  Size  Location     Type
  7173 ;;                  1    wreg      void 
  7174 ;; Registers used:
  7175 ;;		wreg
  7176 ;; Tracked objects:
  7177 ;;		On entry : 0/0
  7178 ;;		On exit  : 0/0
  7179 ;;		Unchanged: 0/0
  7180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7181 ;;      Params:         0       0       0       0       0       0       0
  7182 ;;      Locals:         1       0       0       0       0       0       0
  7183 ;;      Temps:          0       0       0       0       0       0       0
  7184 ;;      Totals:         1       0       0       0       0       0       0
  7185 ;;Total ram usage:        1 bytes
  7186 ;; Hardware stack levels used: 1
  7187 ;; Hardware stack levels required when called: 2
  7188 ;; This function calls:
  7189 ;;		Nothing
  7190 ;; This function is called by:
  7191 ;;		_SIM800xIPSetConnectionType
  7192 ;;		_SIM800xIPSetAPN
  7193 ;;		_SIM800xIPOpen
  7194 ;;		_SIM800xIPGetState
  7195 ;;		_SIM800xHTTPSetURL
  7196 ;;		_SIM800xHTTPSetContent
  7197 ;;		_SIM800xSDMPrint
  7198 ;; This function uses a non-reentrant model
  7199 ;;
  7200                           
  7201                           	psect	text33
  7202  001E6E                     __ptext33:
  7203                           	callstack 0
  7204  001E6E                     _SIM800xSDMSendByte:
  7205                           	callstack 0
  7206  001E6E  FFFF               	dw	65535	; assembler added errata NOP
  7207                           
  7208                           ;incstack = 0
  7209                           ;SIM800xSDMSendByte@data stored from wreg
  7210  001E70  6E01               	movwf	SIM800xSDMSendByte@data^0,c
  7211  001E72  FFFF               	dw	65535	; assembler added errata NOP
  7212                           
  7213                           ;SIM800x_SDM.c: 128: while(TXSTAbits.TRMT == 0); TXREG = data;;
  7214  001E74  A2AC               	btfss	172,1,c	;volatile
  7215  001E76  D7FD               	goto	l3210
  7216  001E78  C001  FFAD         	movff	SIM800xSDMSendByte@data,4013	;volatile
  7217  001E7C  0012               	return		;funcret
  7218  001E7E  FFFF               	dw	65535	; errata NOP
  7219  001E80                     __end_of_SIM800xSDMSendByte:
  7220                           	callstack 0
  7221                           
  7222 ;; *************** function _ProcessResp4 *****************
  7223 ;; Defined at:
  7224 ;;		line 227 in file "Src/SIM800x.c"
  7225 ;; Parameters:    Size  Location     Type
  7226 ;;  ec              2   32[COMRAM] PTR unsigned int 
  7227 ;;		 -> SystemInit@err(2), 
  7228 ;; Auto vars:     Size  Location     Type
  7229 ;;  str            20   38[COMRAM] unsigned char [20]
  7230 ;;  time            4   58[COMRAM] unsigned long 
  7231 ;;  res             2   62[COMRAM] int 
  7232 ;; Return value:  Size  Location     Type
  7233 ;;                  1    wreg      enum E2114
  7234 ;; Registers used:
  7235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7236 ;; Tracked objects:
  7237 ;;		On entry : 0/0
  7238 ;;		On exit  : 0/0
  7239 ;;		Unchanged: 0/0
  7240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7241 ;;      Params:         2       0       0       0       0       0       0
  7242 ;;      Locals:        26       0       0       0       0       0       0
  7243 ;;      Temps:          4       0       0       0       0       0       0
  7244 ;;      Totals:        32       0       0       0       0       0       0
  7245 ;;Total ram usage:       32 bytes
  7246 ;; Hardware stack levels used: 1
  7247 ;; Hardware stack levels required when called: 5
  7248 ;; This function calls:
  7249 ;;		_SIM800xSDMReadF1Pkt
  7250 ;;		_SIM800xSDMRxAvailable
  7251 ;;		_StrToInt
  7252 ;;		_Tick_ms
  7253 ;; This function is called by:
  7254 ;;		_SIM800xHTTPInit
  7255 ;;		_SIM800xHTTPSetURL
  7256 ;;		_SIM800xHTTPSetContent
  7257 ;; This function uses a non-reentrant model
  7258 ;;
  7259                           
  7260                           	psect	text34
  7261  001202                     __ptext34:
  7262                           	callstack 0
  7263  001202                     _ProcessResp4:
  7264                           	callstack 0
  7265  001202  FFFF               	dw	65535	; assembler added errata NOP
  7266                           
  7267                           ;SIM800x.c: 229: uint32_t time = Tick_ms();
  7268                           
  7269                           ;incstack = 0
  7270  001204  EC0D  F00F         	call	_Tick_ms	;wreg free
  7271  001208  C001  F03B         	movff	?_Tick_ms,ProcessResp4@time
  7272  00120C  C002  F03C         	movff	?_Tick_ms+1,ProcessResp4@time+1
  7273  001210  C003  F03D         	movff	?_Tick_ms+2,ProcessResp4@time+2
  7274  001214  C004  F03E         	movff	?_Tick_ms+3,ProcessResp4@time+3
  7275                           
  7276                           ;SIM800x.c: 230: while(SIM800xSDMRxAvailable() < 6)
  7277  001218  D01C               	goto	l3442
  7278  00121A                     l3436:
  7279  00121A  FFFF               	dw	65535	; assembler added errata NOP
  7280                           
  7281                           ;SIM800x.c: 231: {;SIM800x.c: 232: if((Tick_ms() - time) > Tout)
  7282  00121C  EC0D  F00F         	call	_Tick_ms	;wreg free
  7283  001220  503B               	movf	ProcessResp4@time^0,w,c
  7284  001222  5C01               	subwf	?_Tick_ms^0,w,c
  7285  001224  6E23               	movwf	??_ProcessResp4^0,c
  7286  001226  503C               	movf	(ProcessResp4@time+1)^0,w,c
  7287  001228  5802               	subwfb	(?_Tick_ms+1)^0,w,c
  7288  00122A  6E24               	movwf	(??_ProcessResp4+1)^0,c
  7289  00122C  503D               	movf	(ProcessResp4@time+2)^0,w,c
  7290  00122E  5803               	subwfb	(?_Tick_ms+2)^0,w,c
  7291  001230  6E25               	movwf	(??_ProcessResp4+2)^0,c
  7292  001232  503E               	movf	(ProcessResp4@time+3)^0,w,c
  7293  001234  5804               	subwfb	(?_Tick_ms+3)^0,w,c
  7294  001236  6E26               	movwf	(??_ProcessResp4+3)^0,c
  7295  001238  5023               	movf	??_ProcessResp4^0,w,c
  7296  00123A  5C78               	subwf	_Tout^0,w,c
  7297  00123C  5024               	movf	(??_ProcessResp4+1)^0,w,c
  7298  00123E  5879               	subwfb	(_Tout+1)^0,w,c
  7299  001240  5025               	movf	(??_ProcessResp4+2)^0,w,c
  7300  001242  587A               	subwfb	(_Tout+2)^0,w,c
  7301  001244  5026               	movf	(??_ProcessResp4+3)^0,w,c
  7302  001246  587B               	subwfb	(_Tout+3)^0,w,c
  7303  001248  B0D8               	btfsc	status,0,c
  7304  00124A  D003               	goto	l3442
  7305  00124C                     u2080:
  7306  00124C  FFFF               	dw	65535	; assembler added errata NOP
  7307                           
  7308                           ;SIM800x.c: 233: {;SIM800x.c: 234: return SIM800X_TIME_OUT;
  7309  00124E  0E05               	movlw	5
  7310  001250  D057               	goto	l389
  7311  001252                     l3442:
  7312  001252  FFFF               	dw	65535	; assembler added errata NOP
  7313  001254  ECBB  F00E         	call	_SIM800xSDMRxAvailable	;wreg free
  7314  001258  5007               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  7315  00125A  E104               	bnz	u2090
  7316  00125C  0E06               	movlw	6
  7317  00125E  5C06               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  7318  001260  A0D8               	btfss	status,0,c
  7319  001262  D7DB               	goto	l3436
  7320  001264                     u2090:
  7321                           
  7322                           ;SIM800x.c: 235: };SIM800x.c: 236: };SIM800x.c: 237: char str[20] = {0, 0, 0, 0};
  7323  001264  EE20  F027         	lfsr	2,ProcessResp4@str
  7324  001268  0E13               	movlw	19
  7325  00126A                     u2101:
  7326  00126A  6ADE               	clrf	postinc2,c
  7327  00126C  06E8               	decf	wreg,f,c
  7328  00126E  E2FD               	bc	u2101
  7329                           
  7330                           ;SIM800x.c: 240: int res = SIM800xSDMReadF1Pkt(str);
  7331  001270  0E27               	movlw	low ProcessResp4@str
  7332  001272  6E0A               	movwf	SIM800xSDMReadF1Pkt@data^0,c
  7333  001274  0E00               	movlw	high ProcessResp4@str
  7334  001276  6E0B               	movwf	(SIM800xSDMReadF1Pkt@data+1)^0,c
  7335  001278  EC6A  F008         	call	_SIM800xSDMReadF1Pkt	;wreg free
  7336  00127C  C00A  F03F         	movff	?_SIM800xSDMReadF1Pkt,ProcessResp4@res
  7337  001280  C00B  F040         	movff	?_SIM800xSDMReadF1Pkt+1,ProcessResp4@res+1
  7338                           
  7339                           ;SIM800x.c: 241: if(res < 0)
  7340  001284  BE40               	btfsc	(ProcessResp4@res+1)^0,7,c
  7341  001286  D7E2               	goto	u2080
  7342                           
  7343                           ;SIM800x.c: 245: else if(str[0] == 'O')
  7344  001288  0E4F               	movlw	79
  7345  00128A  1827               	xorwf	ProcessResp4@str^0,w,c
  7346  00128C  A4D8               	btfss	status,2,c
  7347  00128E  D002               	goto	l3464
  7348                           
  7349                           ;SIM800x.c: 246: {;SIM800x.c: 247: return SIM800X_OK;
  7350  001290  0E00               	movlw	0
  7351  001292  D036               	goto	l389
  7352  001294                     l3464:
  7353  001294  FFFF               	dw	65535	; assembler added errata NOP
  7354                           
  7355                           ;SIM800x.c: 249: else if(str[0] == 'E')
  7356  001296  0E45               	movlw	69
  7357  001298  1827               	xorwf	ProcessResp4@str^0,w,c
  7358  00129A  A4D8               	btfss	status,2,c
  7359  00129C  D002               	goto	l3472
  7360                           
  7361                           ;SIM800x.c: 250: {;SIM800x.c: 251: return SIM800X_ERROR;
  7362  00129E  0E01               	movlw	1
  7363  0012A0  D02F               	goto	l389
  7364  0012A2                     l3472:
  7365  0012A2  FFFF               	dw	65535	; assembler added errata NOP
  7366                           
  7367                           ;SIM800x.c: 253: else if(str[0] == '+')
  7368  0012A4  0E2B               	movlw	43
  7369  0012A6  1827               	xorwf	ProcessResp4@str^0,w,c
  7370  0012A8  A4D8               	btfss	status,2,c
  7371  0012AA  D01A               	goto	l396
  7372                           
  7373                           ;SIM800x.c: 254: {;SIM800x.c: 255: str[(uint8_t)res] = '\0';
  7374  0012AC  0E27               	movlw	low ProcessResp4@str
  7375  0012AE  243F               	addwf	ProcessResp4@res^0,w,c
  7376  0012B0  6ED9               	movwf	fsr2l,c
  7377  0012B2  6ADA               	clrf	fsr2h,c
  7378  0012B4  0E00               	movlw	high ProcessResp4@str
  7379  0012B6  22DA               	addwfc	fsr2h,f,c
  7380  0012B8  0E00               	movlw	0
  7381  0012BA  6EDF               	movwf	indf2,c
  7382                           
  7383                           ;SIM800x.c: 256: *ec = (uint16_t)StrToInt(str, 12, (uint16_t)(res - 1));
  7384  0012BC  0E27               	movlw	low ProcessResp4@str
  7385  0012BE  6E0D               	movwf	StrToInt@str^0,c
  7386  0012C0  0E00               	movlw	high ProcessResp4@str
  7387  0012C2  6E0E               	movwf	(StrToInt@str+1)^0,c
  7388  0012C4  0E0C               	movlw	12
  7389  0012C6  6E0F               	movwf	StrToInt@start^0,c
  7390  0012C8  043F               	decf	ProcessResp4@res^0,w,c
  7391  0012CA  6E10               	movwf	StrToInt@stop^0,c
  7392  0012CC  EC9F  F007         	call	_StrToInt	;wreg free
  7393  0012D0  C021  FFD9         	movff	ProcessResp4@ec,fsr2l
  7394  0012D4  C022  FFDA         	movff	ProcessResp4@ec+1,fsr2h
  7395  0012D8  C00D  FFDE         	movff	?_StrToInt,postinc2
  7396  0012DC  C00E  FFDD         	movff	?_StrToInt+1,postdec2
  7397  0012E0                     l396:
  7398  0012E0  FFFF               	dw	65535	; assembler added errata NOP
  7399                           
  7400                           ;SIM800x.c: 257: };SIM800x.c: 259: if(str[3] == 'E')
  7401  0012E2  0E45               	movlw	69
  7402  0012E4  182A               	xorwf	(ProcessResp4@str+3)^0,w,c
  7403  0012E6  A4D8               	btfss	status,2,c
  7404  0012E8  D002               	goto	l3484
  7405                           
  7406                           ;SIM800x.c: 260: return SIM800X_CME_ERROR;
  7407  0012EA  0E02               	movlw	2
  7408  0012EC  D009               	goto	l389
  7409  0012EE                     l3484:
  7410  0012EE  FFFF               	dw	65535	; assembler added errata NOP
  7411                           
  7412                           ;SIM800x.c: 261: if(str[3] == 'S')
  7413  0012F0  0E53               	movlw	83
  7414  0012F2  182A               	xorwf	(ProcessResp4@str+3)^0,w,c
  7415  0012F4  A4D8               	btfss	status,2,c
  7416  0012F6  D002               	goto	l3490
  7417                           
  7418                           ;SIM800x.c: 262: return SIM800X_CMS_ERROR;
  7419  0012F8  0E03               	movlw	3
  7420  0012FA  D002               	goto	l389
  7421  0012FC                     l3490:
  7422  0012FC  FFFF               	dw	65535	; assembler added errata NOP
  7423                           
  7424                           ;SIM800x.c: 264: return SIM800X_INVALID_RESPONSE;
  7425  0012FE  0E08               	movlw	8
  7426  001300                     l389:
  7427  001300  FFFF               	dw	65535	; assembler added errata NOP
  7428  001302  0012               	return		;funcret
  7429  001304  FFFF               	dw	65535	; errata NOP
  7430  001306                     __end_of_ProcessResp4:
  7431                           	callstack 0
  7432                           
  7433 ;; *************** function _StrToInt *****************
  7434 ;; Defined at:
  7435 ;;		line 131 in file "Src/SIM800x.c"
  7436 ;; Parameters:    Size  Location     Type
  7437 ;;  str             2   12[COMRAM] PTR const unsigned char 
  7438 ;;		 -> SIM800x3GPPGetSubscriberNumber@str(40), SIM800x3GPPGetSignalQuality@str(20), SIM800x3GPPGetOperatorName@str(40),
      + SIM800xHTTPReadHeader@str(30), 
  7439 ;;		 -> SIM800xHTTPReadState@str(30), SIM800xHTTPRead@str(30), SIM800xHTTPAction@str(30), SIM800xHTTPInputData@str(30), 
  7440 ;;		 -> SIM800xGPRSGetNRegState@str(20), SIM800xGPRSSetDataMode@str(20), SIM800xGetIMSI@str(20), ProcessResp4@str(20), 
  7441 ;;  start           1   14[COMRAM] unsigned char 
  7442 ;;  stop            1   15[COMRAM] unsigned char 
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;  j               1   25[COMRAM] unsigned char 
  7445 ;;  i               1   31[COMRAM] unsigned char 
  7446 ;;  po              4   27[COMRAM] unsigned long 
  7447 ;;  val             4   21[COMRAM] unsigned long 
  7448 ;;  ctrl            1   26[COMRAM] unsigned char 
  7449 ;; Return value:  Size  Location     Type
  7450 ;;                  4   12[COMRAM] unsigned long 
  7451 ;; Registers used:
  7452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7453 ;; Tracked objects:
  7454 ;;		On entry : 0/0
  7455 ;;		On exit  : 0/0
  7456 ;;		Unchanged: 0/0
  7457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7458 ;;      Params:         4       0       0       0       0       0       0
  7459 ;;      Locals:        11       0       0       0       0       0       0
  7460 ;;      Temps:          5       0       0       0       0       0       0
  7461 ;;      Totals:        20       0       0       0       0       0       0
  7462 ;;Total ram usage:       20 bytes
  7463 ;; Hardware stack levels used: 1
  7464 ;; Hardware stack levels required when called: 3
  7465 ;; This function calls:
  7466 ;;		___lmul
  7467 ;; This function is called by:
  7468 ;;		_ProcessResp4
  7469 ;;		_SIM800xHTTPInputData
  7470 ;;		_SIM800xHTTPAction
  7471 ;;		_SIM800xHTTPRead
  7472 ;; This function uses a non-reentrant model
  7473 ;;
  7474                           
  7475                           	psect	text35
  7476  000F3E                     __ptext35:
  7477                           	callstack 0
  7478  000F3E                     _StrToInt:
  7479                           	callstack 0
  7480  000F3E  FFFF               	dw	65535	; assembler added errata NOP
  7481                           
  7482                           ;SIM800x.c: 134: uint32_t val = 0, po = 1;
  7483                           
  7484                           ;incstack = 0
  7485  000F40  0E00               	movlw	0
  7486  000F42  6E16               	movwf	StrToInt@val^0,c
  7487  000F44  0E00               	movlw	0
  7488  000F46  6E17               	movwf	(StrToInt@val+1)^0,c
  7489  000F48  0E00               	movlw	0
  7490  000F4A  6E18               	movwf	(StrToInt@val+2)^0,c
  7491  000F4C  0E00               	movlw	0
  7492  000F4E  6E19               	movwf	(StrToInt@val+3)^0,c
  7493  000F50  0E01               	movlw	1
  7494  000F52  6E1C               	movwf	StrToInt@po^0,c
  7495  000F54  0E00               	movlw	0
  7496  000F56  6E1D               	movwf	(StrToInt@po+1)^0,c
  7497  000F58  0E00               	movlw	0
  7498  000F5A  6E1E               	movwf	(StrToInt@po+2)^0,c
  7499  000F5C  0E00               	movlw	0
  7500  000F5E  6E1F               	movwf	(StrToInt@po+3)^0,c
  7501                           
  7502                           ;SIM800x.c: 135: uint8_t ctrl = 0;
  7503  000F60  0E00               	movlw	0
  7504  000F62  6E1B               	movwf	StrToInt@ctrl^0,c
  7505                           
  7506                           ;SIM800x.c: 137: for(uint8_t i = start;i < stop + 1; i++)
  7507  000F64  C00F  F020         	movff	StrToInt@start,StrToInt@i
  7508  000F68  D095               	goto	l3150
  7509  000F6A                     l3120:
  7510  000F6A  FFFF               	dw	65535	; assembler added errata NOP
  7511                           
  7512                           ;SIM800x.c: 138: {;SIM800x.c: 140: if((str[i] >= '0' && str[i] <= '9'))
  7513  000F6C  5020               	movf	StrToInt@i^0,w,c
  7514  000F6E  240D               	addwf	StrToInt@str^0,w,c
  7515  000F70  6ED9               	movwf	fsr2l,c
  7516  000F72  0E00               	movlw	0
  7517  000F74  200E               	addwfc	(StrToInt@str+1)^0,w,c
  7518  000F76  6EDA               	movwf	fsr2h,c
  7519  000F78  0E2F               	movlw	47
  7520  000F7A  64DF               	cpfsgt	indf2,c
  7521  000F7C  D072               	goto	l3138
  7522  000F7E  5020               	movf	StrToInt@i^0,w,c
  7523  000F80  240D               	addwf	StrToInt@str^0,w,c
  7524  000F82  6ED9               	movwf	fsr2l,c
  7525  000F84  0E00               	movlw	0
  7526  000F86  200E               	addwfc	(StrToInt@str+1)^0,w,c
  7527  000F88  6EDA               	movwf	fsr2h,c
  7528  000F8A  0E3A               	movlw	58
  7529  000F8C  60DF               	cpfslt	indf2,c
  7530  000F8E  D069               	goto	l3138
  7531                           
  7532                           ;SIM800x.c: 141: {;SIM800x.c: 143: ctrl = 1;
  7533  000F90  0E01               	movlw	1
  7534  000F92  6E1B               	movwf	StrToInt@ctrl^0,c
  7535                           
  7536                           ;SIM800x.c: 145: for(uint8_t j = 0;j < stop - i;j++)
  7537  000F94  0E00               	movlw	0
  7538  000F96  6E1A               	movwf	StrToInt@j^0,c
  7539  000F98  D01C               	goto	l3130
  7540  000F9A                     l3126:
  7541  000F9A  FFFF               	dw	65535	; assembler added errata NOP
  7542                           
  7543                           ;SIM800x.c: 146: po = po * 10;
  7544  000F9C  C01C  F001         	movff	StrToInt@po,___lmul@multiplier
  7545  000FA0  C01D  F002         	movff	StrToInt@po+1,___lmul@multiplier+1
  7546  000FA4  C01E  F003         	movff	StrToInt@po+2,___lmul@multiplier+2
  7547  000FA8  C01F  F004         	movff	StrToInt@po+3,___lmul@multiplier+3
  7548  000FAC  0E0A               	movlw	10
  7549  000FAE  6E05               	movwf	___lmul@multiplicand^0,c
  7550  000FB0  0E00               	movlw	0
  7551  000FB2  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  7552  000FB4  0E00               	movlw	0
  7553  000FB6  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  7554  000FB8  0E00               	movlw	0
  7555  000FBA  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  7556  000FBC  ECF4  F00C         	call	___lmul	;wreg free
  7557  000FC0  C001  F01C         	movff	?___lmul,StrToInt@po
  7558  000FC4  C002  F01D         	movff	?___lmul+1,StrToInt@po+1
  7559  000FC8  C003  F01E         	movff	?___lmul+2,StrToInt@po+2
  7560  000FCC  C004  F01F         	movff	?___lmul+3,StrToInt@po+3
  7561  000FD0  2A1A               	incf	StrToInt@j^0,f,c
  7562  000FD2                     l3130:
  7563  000FD2  FFFF               	dw	65535	; assembler added errata NOP
  7564  000FD4  5020               	movf	StrToInt@i^0,w,c
  7565  000FD6  C010  F011         	movff	StrToInt@stop,??_StrToInt
  7566  000FDA  6A12               	clrf	(??_StrToInt+1)^0,c
  7567  000FDC  5E11               	subwf	??_StrToInt^0,f,c
  7568  000FDE  0E00               	movlw	0
  7569  000FE0  5A12               	subwfb	(??_StrToInt+1)^0,f,c
  7570  000FE2  501A               	movf	StrToInt@j^0,w,c
  7571  000FE4  6E13               	movwf	(??_StrToInt+2)^0,c
  7572  000FE6  6A14               	clrf	(??_StrToInt+3)^0,c
  7573  000FE8  5011               	movf	??_StrToInt^0,w,c
  7574  000FEA  5C13               	subwf	(??_StrToInt+2)^0,w,c
  7575  000FEC  5014               	movf	(??_StrToInt+3)^0,w,c
  7576  000FEE  0A80               	xorlw	128
  7577  000FF0  6E15               	movwf	(??_StrToInt+4)^0,c
  7578  000FF2  5012               	movf	(??_StrToInt+1)^0,w,c
  7579  000FF4  0A80               	xorlw	128
  7580  000FF6  5815               	subwfb	(??_StrToInt+4)^0,w,c
  7581  000FF8  A0D8               	btfss	status,0,c
  7582  000FFA  D7CF               	goto	l3126
  7583                           
  7584                           ;SIM800x.c: 148: if(str[i] >= '0' && str[i] <= '9')
  7585  000FFC  5020               	movf	StrToInt@i^0,w,c
  7586  000FFE  240D               	addwf	StrToInt@str^0,w,c
  7587  001000  6ED9               	movwf	fsr2l,c
  7588  001002  0E00               	movlw	0
  7589  001004  200E               	addwfc	(StrToInt@str+1)^0,w,c
  7590  001006  6EDA               	movwf	fsr2h,c
  7591  001008  0E2F               	movlw	47
  7592  00100A  64DF               	cpfsgt	indf2,c
  7593  00100C  D02A               	goto	l3138
  7594  00100E  5020               	movf	StrToInt@i^0,w,c
  7595  001010  240D               	addwf	StrToInt@str^0,w,c
  7596  001012  6ED9               	movwf	fsr2l,c
  7597  001014  0E00               	movlw	0
  7598  001016  200E               	addwfc	(StrToInt@str+1)^0,w,c
  7599  001018  6EDA               	movwf	fsr2h,c
  7600  00101A  0E3A               	movlw	58
  7601  00101C  60DF               	cpfslt	indf2,c
  7602  00101E  D021               	goto	l3138
  7603                           
  7604                           ;SIM800x.c: 149: val += (uint32_t)((uint8_t)(str[i] - 48) * po);
  7605  001020  5020               	movf	StrToInt@i^0,w,c
  7606  001022  240D               	addwf	StrToInt@str^0,w,c
  7607  001024  6ED9               	movwf	fsr2l,c
  7608  001026  0E00               	movlw	0
  7609  001028  200E               	addwfc	(StrToInt@str+1)^0,w,c
  7610  00102A  6EDA               	movwf	fsr2h,c
  7611  00102C  50DF               	movf	indf2,w,c
  7612  00102E  6E11               	movwf	??_StrToInt^0,c
  7613  001030  0ED0               	movlw	208
  7614  001032  2611               	addwf	??_StrToInt^0,f,c
  7615  001034  5011               	movf	??_StrToInt^0,w,c
  7616  001036  6E01               	movwf	___lmul@multiplier^0,c
  7617  001038  6A02               	clrf	(___lmul@multiplier+1)^0,c
  7618  00103A  6A03               	clrf	(___lmul@multiplier+2)^0,c
  7619  00103C  6A04               	clrf	(___lmul@multiplier+3)^0,c
  7620  00103E  C01C  F005         	movff	StrToInt@po,___lmul@multiplicand
  7621  001042  C01D  F006         	movff	StrToInt@po+1,___lmul@multiplicand+1
  7622  001046  C01E  F007         	movff	StrToInt@po+2,___lmul@multiplicand+2
  7623  00104A  C01F  F008         	movff	StrToInt@po+3,___lmul@multiplicand+3
  7624  00104E  ECF4  F00C         	call	___lmul	;wreg free
  7625  001052  5001               	movf	?___lmul^0,w,c
  7626  001054  2616               	addwf	StrToInt@val^0,f,c
  7627  001056  5002               	movf	(?___lmul+1)^0,w,c
  7628  001058  2217               	addwfc	(StrToInt@val+1)^0,f,c
  7629  00105A  5003               	movf	(?___lmul+2)^0,w,c
  7630  00105C  2218               	addwfc	(StrToInt@val+2)^0,f,c
  7631  00105E  5004               	movf	(?___lmul+3)^0,w,c
  7632  001060  2219               	addwfc	(StrToInt@val+3)^0,f,c
  7633  001062                     l3138:
  7634  001062  FFFF               	dw	65535	; assembler added errata NOP
  7635                           
  7636                           ;SIM800x.c: 151: };SIM800x.c: 153: po = 1;
  7637  001064  0E01               	movlw	1
  7638  001066  6E1C               	movwf	StrToInt@po^0,c
  7639  001068  0E00               	movlw	0
  7640  00106A  6E1D               	movwf	(StrToInt@po+1)^0,c
  7641  00106C  0E00               	movlw	0
  7642  00106E  6E1E               	movwf	(StrToInt@po+2)^0,c
  7643  001070  0E00               	movlw	0
  7644  001072  6E1F               	movwf	(StrToInt@po+3)^0,c
  7645                           
  7646                           ;SIM800x.c: 155: if(!ctrl)
  7647  001074  501B               	movf	StrToInt@ctrl^0,w,c
  7648  001076  A4D8               	btfss	status,2,c
  7649  001078  D009               	goto	l3146
  7650                           
  7651                           ;SIM800x.c: 156: return 0;
  7652  00107A  0E00               	movlw	0
  7653  00107C  6E0D               	movwf	?_StrToInt^0,c
  7654  00107E  0E00               	movlw	0
  7655  001080  6E0E               	movwf	(?_StrToInt+1)^0,c
  7656  001082  0E00               	movlw	0
  7657  001084  6E0F               	movwf	(?_StrToInt+2)^0,c
  7658  001086  0E00               	movlw	0
  7659  001088  6E10               	movwf	(?_StrToInt+3)^0,c
  7660  00108A  D021               	goto	l358
  7661  00108C                     l3146:
  7662  00108C  FFFF               	dw	65535	; assembler added errata NOP
  7663                           
  7664                           ;SIM800x.c: 158: ctrl = 0;
  7665  00108E  0E00               	movlw	0
  7666  001090  6E1B               	movwf	StrToInt@ctrl^0,c
  7667  001092  2A20               	incf	StrToInt@i^0,f,c
  7668  001094                     l3150:
  7669  001094  FFFF               	dw	65535	; assembler added errata NOP
  7670  001096  5010               	movf	StrToInt@stop^0,w,c
  7671  001098  6E11               	movwf	??_StrToInt^0,c
  7672  00109A  6A12               	clrf	(??_StrToInt+1)^0,c
  7673  00109C  0E01               	movlw	1
  7674  00109E  2611               	addwf	??_StrToInt^0,f,c
  7675  0010A0  0E00               	movlw	0
  7676  0010A2  2212               	addwfc	(??_StrToInt+1)^0,f,c
  7677  0010A4  5020               	movf	StrToInt@i^0,w,c
  7678  0010A6  6E13               	movwf	(??_StrToInt+2)^0,c
  7679  0010A8  6A14               	clrf	(??_StrToInt+3)^0,c
  7680  0010AA  5011               	movf	??_StrToInt^0,w,c
  7681  0010AC  5C13               	subwf	(??_StrToInt+2)^0,w,c
  7682  0010AE  5014               	movf	(??_StrToInt+3)^0,w,c
  7683  0010B0  0A80               	xorlw	128
  7684  0010B2  6E15               	movwf	(??_StrToInt+4)^0,c
  7685  0010B4  5012               	movf	(??_StrToInt+1)^0,w,c
  7686  0010B6  0A80               	xorlw	128
  7687  0010B8  5815               	subwfb	(??_StrToInt+4)^0,w,c
  7688  0010BA  A0D8               	btfss	status,0,c
  7689  0010BC  D756               	goto	l3120
  7690                           
  7691                           ;SIM800x.c: 160: };SIM800x.c: 161: return val;
  7692  0010BE  C016  F00D         	movff	StrToInt@val,?_StrToInt
  7693  0010C2  C017  F00E         	movff	StrToInt@val+1,?_StrToInt+1
  7694  0010C6  C018  F00F         	movff	StrToInt@val+2,?_StrToInt+2
  7695  0010CA  C019  F010         	movff	StrToInt@val+3,?_StrToInt+3
  7696  0010CE                     l358:
  7697  0010CE  FFFF               	dw	65535	; assembler added errata NOP
  7698  0010D0  0012               	return		;funcret
  7699  0010D2  FFFF               	dw	65535	; errata NOP
  7700  0010D4                     __end_of_StrToInt:
  7701                           	callstack 0
  7702                           
  7703 ;; *************** function ___lmul *****************
  7704 ;; Defined at:
  7705 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul32.c"
  7706 ;; Parameters:    Size  Location     Type
  7707 ;;  multiplier      4    0[COMRAM] unsigned long 
  7708 ;;  multiplicand    4    4[COMRAM] unsigned long 
  7709 ;; Auto vars:     Size  Location     Type
  7710 ;;  product         4    8[COMRAM] unsigned long 
  7711 ;; Return value:  Size  Location     Type
  7712 ;;                  4    0[COMRAM] unsigned long 
  7713 ;; Registers used:
  7714 ;;		wreg, status,2, status,0
  7715 ;; Tracked objects:
  7716 ;;		On entry : 0/0
  7717 ;;		On exit  : 0/0
  7718 ;;		Unchanged: 0/0
  7719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7720 ;;      Params:         8       0       0       0       0       0       0
  7721 ;;      Locals:         4       0       0       0       0       0       0
  7722 ;;      Temps:          0       0       0       0       0       0       0
  7723 ;;      Totals:        12       0       0       0       0       0       0
  7724 ;;Total ram usage:       12 bytes
  7725 ;; Hardware stack levels used: 1
  7726 ;; Hardware stack levels required when called: 2
  7727 ;; This function calls:
  7728 ;;		Nothing
  7729 ;; This function is called by:
  7730 ;;		_StrToInt
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           	psect	text36
  7735  0019E8                     __ptext36:
  7736                           	callstack 0
  7737  0019E8                     ___lmul:
  7738                           	callstack 0
  7739  0019E8  FFFF               	dw	65535	; assembler added errata NOP
  7740                           
  7741                           ;incstack = 0
  7742  0019EA  0E00               	movlw	0
  7743  0019EC  6E09               	movwf	___lmul@product^0,c
  7744  0019EE  0E00               	movlw	0
  7745  0019F0  6E0A               	movwf	(___lmul@product+1)^0,c
  7746  0019F2  0E00               	movlw	0
  7747  0019F4  6E0B               	movwf	(___lmul@product+2)^0,c
  7748  0019F6  0E00               	movlw	0
  7749  0019F8  6E0C               	movwf	(___lmul@product+3)^0,c
  7750  0019FA                     l3108:
  7751  0019FA  FFFF               	dw	65535	; assembler added errata NOP
  7752  0019FC  A001               	btfss	___lmul@multiplier^0,0,c
  7753  0019FE  D008               	goto	l3112
  7754  001A00  5005               	movf	___lmul@multiplicand^0,w,c
  7755  001A02  2609               	addwf	___lmul@product^0,f,c
  7756  001A04  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  7757  001A06  220A               	addwfc	(___lmul@product+1)^0,f,c
  7758  001A08  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  7759  001A0A  220B               	addwfc	(___lmul@product+2)^0,f,c
  7760  001A0C  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  7761  001A0E  220C               	addwfc	(___lmul@product+3)^0,f,c
  7762  001A10                     l3112:
  7763  001A10  FFFF               	dw	65535	; assembler added errata NOP
  7764  001A12  90D8               	bcf	status,0,c
  7765  001A14  3605               	rlcf	___lmul@multiplicand^0,f,c
  7766  001A16  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  7767  001A18  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  7768  001A1A  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  7769  001A1C  90D8               	bcf	status,0,c
  7770  001A1E  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  7771  001A20  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  7772  001A22  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  7773  001A24  3201               	rrcf	___lmul@multiplier^0,f,c
  7774  001A26  5001               	movf	___lmul@multiplier^0,w,c
  7775  001A28  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  7776  001A2A  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  7777  001A2C  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  7778  001A2E  A4D8               	btfss	status,2,c
  7779  001A30  D7E4               	goto	l3108
  7780  001A32  C009  F001         	movff	___lmul@product,?___lmul
  7781  001A36  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  7782  001A3A  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  7783  001A3E  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  7784  001A42  0012               	return		;funcret
  7785  001A44  FFFF               	dw	65535	; errata NOP
  7786  001A46                     __end_of___lmul:
  7787                           	callstack 0
  7788                           
  7789 ;; *************** function _SIM800xSDMReadF1Pkt *****************
  7790 ;; Defined at:
  7791 ;;		line 228 in file "Src/SIM800x_SDM.c"
  7792 ;; Parameters:    Size  Location     Type
  7793 ;;  data            2    9[COMRAM] PTR unsigned char 
  7794 ;;		 -> SIM800x3GPPGetSubscriberNumber@str(40), SIM800x3GPPGetSignalQuality@str(20), SIM800x3GPPGetOperatorName@str(40),
      + SIM800xHTTPReadHeader@str(30), 
  7795 ;;		 -> SIM800xHTTPReadState@str(30), SIM800xHTTPRead@str(30), SIM800xHTTPAction@str(30), SIM800xHTTPInputData@str(30), 
  7796 ;;		 -> SIM800xGPRSGetNRegState@str(20), SIM800xGPRSGetAddress@str(40), SIM800xGPRSSetDataMode@str(20), SIM800xIPGetStat
      +e@str(30), 
  7797 ;;		 -> SIM800xGetIMSI@str(20), SIM800xGetSoftwareRevisionID@str(30), ProcessResp4@str(20), 
  7798 ;; Auto vars:     Size  Location     Type
  7799 ;;  time            4   18[COMRAM] unsigned long 
  7800 ;;  val             2   15[COMRAM] unsigned int 
  7801 ;;  tmp             1   22[COMRAM] unsigned char 
  7802 ;;  i               1   17[COMRAM] unsigned char 
  7803 ;; Return value:  Size  Location     Type
  7804 ;;                  2    9[COMRAM] int 
  7805 ;; Registers used:
  7806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7807 ;; Tracked objects:
  7808 ;;		On entry : 0/0
  7809 ;;		On exit  : 0/0
  7810 ;;		Unchanged: 0/0
  7811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7812 ;;      Params:         2       0       0       0       0       0       0
  7813 ;;      Locals:         8       0       0       0       0       0       0
  7814 ;;      Temps:          4       0       0       0       0       0       0
  7815 ;;      Totals:        14       0       0       0       0       0       0
  7816 ;;Total ram usage:       14 bytes
  7817 ;; Hardware stack levels used: 1
  7818 ;; Hardware stack levels required when called: 4
  7819 ;; This function calls:
  7820 ;;		_SIM800xSDMFlush
  7821 ;;		_SIM800xSDMReadByte
  7822 ;;		_SIM800xSDMRxAvailable
  7823 ;;		_Tick_ms
  7824 ;; This function is called by:
  7825 ;;		_ProcessResp2
  7826 ;;		_ProcessResp4
  7827 ;;		_SIM800xHTTPInputData
  7828 ;;		_SIM800xHTTPAction
  7829 ;;		_SIM800xHTTPRead
  7830 ;; This function uses a non-reentrant model
  7831 ;;
  7832                           
  7833                           	psect	text37
  7834  0010D4                     __ptext37:
  7835                           	callstack 0
  7836  0010D4                     _SIM800xSDMReadF1Pkt:
  7837                           	callstack 0
  7838  0010D4  FFFF               	dw	65535	; assembler added errata NOP
  7839                           
  7840                           ;SIM800x_SDM.c: 231: uint8_t i = 0, tmp = 0;
  7841                           
  7842                           ;incstack = 0
  7843  0010D6  0E00               	movlw	0
  7844  0010D8  6E12               	movwf	SIM800xSDMReadF1Pkt@i^0,c
  7845                           
  7846                           ;SIM800x_SDM.c: 232: uint16_t val = SIM800xSDMRxAvailable();
  7847  0010DA  ECBB  F00E         	call	_SIM800xSDMRxAvailable	;wreg free
  7848  0010DE  C006  F010         	movff	?_SIM800xSDMRxAvailable,SIM800xSDMReadF1Pkt@val
  7849  0010E2  C007  F011         	movff	?_SIM800xSDMRxAvailable+1,SIM800xSDMReadF1Pkt@val+1
  7850                           
  7851                           ;SIM800x_SDM.c: 234: if(val > 5)
  7852  0010E6  5011               	movf	(SIM800xSDMReadF1Pkt@val+1)^0,w,c
  7853  0010E8  E104               	bnz	u1670
  7854  0010EA  0E06               	movlw	6
  7855  0010EC  5C10               	subwf	SIM800xSDMReadF1Pkt@val^0,w,c
  7856  0010EE  A0D8               	btfss	status,0,c
  7857  0010F0  D081               	goto	u1740
  7858  0010F2                     u1670:
  7859                           
  7860                           ;SIM800x_SDM.c: 235: {;SIM800x_SDM.c: 237: tmp = SIM800xSDMReadByte();
  7861  0010F2  ECCA  F00D         	call	_SIM800xSDMReadByte	;wreg free
  7862  0010F6  6E17               	movwf	SIM800xSDMReadF1Pkt@tmp^0,c
  7863                           
  7864                           ;SIM800x_SDM.c: 243: if(tmp == 0x0D)
  7865  0010F8  0E0D               	movlw	13
  7866  0010FA  1817               	xorwf	SIM800xSDMReadF1Pkt@tmp^0,w,c
  7867  0010FC  A4D8               	btfss	status,2,c
  7868  0010FE  D07A               	goto	u1740
  7869                           
  7870                           ;SIM800x_SDM.c: 244: {;SIM800x_SDM.c: 246: tmp = SIM800xSDMReadByte();
  7871  001100  ECCA  F00D         	call	_SIM800xSDMReadByte	;wreg free
  7872  001104  6E17               	movwf	SIM800xSDMReadF1Pkt@tmp^0,c
  7873                           
  7874                           ;SIM800x_SDM.c: 248: if(tmp == 0x0A)
  7875  001106  0E0A               	movlw	10
  7876  001108  1817               	xorwf	SIM800xSDMReadF1Pkt@tmp^0,w,c
  7877  00110A  A4D8               	btfss	status,2,c
  7878  00110C  D073               	goto	u1740
  7879                           
  7880                           ;SIM800x_SDM.c: 249: {;SIM800x_SDM.c: 251: uint32_t time = Tick_ms();
  7881  00110E  EC0D  F00F         	call	_Tick_ms	;wreg free
  7882  001112  C001  F013         	movff	?_Tick_ms,SIM800xSDMReadF1Pkt@time
  7883  001116  C002  F014         	movff	?_Tick_ms+1,SIM800xSDMReadF1Pkt@time+1
  7884  00111A  C003  F015         	movff	?_Tick_ms+2,SIM800xSDMReadF1Pkt@time+2
  7885  00111E  C004  F016         	movff	?_Tick_ms+3,SIM800xSDMReadF1Pkt@time+3
  7886                           
  7887                           ;SIM800x_SDM.c: 253: while((tmp = SIM800xSDMReadByte()) != 0x0D)
  7888  001122  D035               	goto	l3196
  7889  001124                     l3178:
  7890  001124  FFFF               	dw	65535	; assembler added errata NOP
  7891                           
  7892                           ;SIM800x_SDM.c: 254: {;SIM800x_SDM.c: 256: if(tmp != 0xFF)
  7893  001126  2817               	incf	SIM800xSDMReadF1Pkt@tmp^0,w,c
  7894  001128  B4D8               	btfsc	status,2,c
  7895  00112A  D013               	goto	l3188
  7896                           
  7897                           ;SIM800x_SDM.c: 257: {;SIM800x_SDM.c: 264: *(data++) = tmp;
  7898  00112C  C00A  FFD9         	movff	SIM800xSDMReadF1Pkt@data,fsr2l
  7899  001130  C00B  FFDA         	movff	SIM800xSDMReadF1Pkt@data+1,fsr2h
  7900  001134  C017  FFDF         	movff	SIM800xSDMReadF1Pkt@tmp,indf2
  7901  001138  4A0A               	infsnz	SIM800xSDMReadF1Pkt@data^0,f,c
  7902  00113A  2A0B               	incf	(SIM800xSDMReadF1Pkt@data+1)^0,f,c
  7903                           
  7904                           ;SIM800x_SDM.c: 265: ++i;
  7905  00113C  2A12               	incf	SIM800xSDMReadF1Pkt@i^0,f,c
  7906                           
  7907                           ;SIM800x_SDM.c: 266: time = Tick_ms();
  7908  00113E  EC0D  F00F         	call	_Tick_ms	;wreg free
  7909  001142  C001  F013         	movff	?_Tick_ms,SIM800xSDMReadF1Pkt@time
  7910  001146  C002  F014         	movff	?_Tick_ms+1,SIM800xSDMReadF1Pkt@time+1
  7911  00114A  C003  F015         	movff	?_Tick_ms+2,SIM800xSDMReadF1Pkt@time+2
  7912  00114E  C004  F016         	movff	?_Tick_ms+3,SIM800xSDMReadF1Pkt@time+3
  7913  001152                     l3188:
  7914  001152  FFFF               	dw	65535	; assembler added errata NOP
  7915                           
  7916                           ;SIM800x_SDM.c: 267: };SIM800x_SDM.c: 269: if((Tick_ms() - time) > Tout)
  7917  001154  EC0D  F00F         	call	_Tick_ms	;wreg free
  7918  001158  5013               	movf	SIM800xSDMReadF1Pkt@time^0,w,c
  7919  00115A  5C01               	subwf	?_Tick_ms^0,w,c
  7920  00115C  6E0C               	movwf	??_SIM800xSDMReadF1Pkt^0,c
  7921  00115E  5014               	movf	(SIM800xSDMReadF1Pkt@time+1)^0,w,c
  7922  001160  5802               	subwfb	(?_Tick_ms+1)^0,w,c
  7923  001162  6E0D               	movwf	(??_SIM800xSDMReadF1Pkt+1)^0,c
  7924  001164  5015               	movf	(SIM800xSDMReadF1Pkt@time+2)^0,w,c
  7925  001166  5803               	subwfb	(?_Tick_ms+2)^0,w,c
  7926  001168  6E0E               	movwf	(??_SIM800xSDMReadF1Pkt+2)^0,c
  7927  00116A  5016               	movf	(SIM800xSDMReadF1Pkt@time+3)^0,w,c
  7928  00116C  5804               	subwfb	(?_Tick_ms+3)^0,w,c
  7929  00116E  6E0F               	movwf	(??_SIM800xSDMReadF1Pkt+3)^0,c
  7930  001170  500F               	movf	(??_SIM800xSDMReadF1Pkt+3)^0,w,c
  7931  001172  100E               	iorwf	(??_SIM800xSDMReadF1Pkt+2)^0,w,c
  7932  001174  E106               	bnz	u1710
  7933  001176  0ED1               	movlw	209
  7934  001178  5C0C               	subwf	??_SIM800xSDMReadF1Pkt^0,w,c
  7935  00117A  0E07               	movlw	7
  7936  00117C  580D               	subwfb	(??_SIM800xSDMReadF1Pkt+1)^0,w,c
  7937  00117E  A0D8               	btfss	status,0,c
  7938  001180  D006               	goto	l3196
  7939  001182                     u1710:
  7940  001182  FFFF               	dw	65535	; assembler added errata NOP
  7941  001184                     l3190:
  7942                           
  7943                           ;SIM800x_SDM.c: 270: {;SIM800x_SDM.c: 271: SIM800xSDMFlush();
  7944  001184  EC18  F00F         	call	_SIM800xSDMFlush	;wreg free
  7945                           
  7946                           ;SIM800x_SDM.c: 272: return -1;
  7947  001188  680A               	setf	?_SIM800xSDMReadF1Pkt^0,c
  7948  00118A  680B               	setf	(?_SIM800xSDMReadF1Pkt+1)^0,c
  7949  00118C  D037               	goto	l1064
  7950  00118E                     l3196:
  7951  00118E  FFFF               	dw	65535	; assembler added errata NOP
  7952  001190  ECCA  F00D         	call	_SIM800xSDMReadByte	;wreg free
  7953  001194  6E17               	movwf	SIM800xSDMReadF1Pkt@tmp^0,c
  7954  001196  0E0D               	movlw	13
  7955  001198  1817               	xorwf	SIM800xSDMReadF1Pkt@tmp^0,w,c
  7956  00119A  A4D8               	btfss	status,2,c
  7957  00119C  D7C3               	goto	l3178
  7958                           
  7959                           ;SIM800x_SDM.c: 273: };SIM800x_SDM.c: 275: };SIM800x_SDM.c: 277: time = Tick_ms();
  7960  00119E  EC0D  F00F         	call	_Tick_ms	;wreg free
  7961  0011A2  C001  F013         	movff	?_Tick_ms,SIM800xSDMReadF1Pkt@time
  7962  0011A6  C002  F014         	movff	?_Tick_ms+1,SIM800xSDMReadF1Pkt@time+1
  7963  0011AA  C003  F015         	movff	?_Tick_ms+2,SIM800xSDMReadF1Pkt@time+2
  7964  0011AE  C004  F016         	movff	?_Tick_ms+3,SIM800xSDMReadF1Pkt@time+3
  7965                           
  7966                           ;SIM800x_SDM.c: 279: while((tmp = SIM800xSDMReadByte()) != 0x0A)
  7967  0011B2  D018               	goto	l3208
  7968  0011B4                     l3200:
  7969  0011B4  FFFF               	dw	65535	; assembler added errata NOP
  7970                           
  7971                           ;SIM800x_SDM.c: 280: {;SIM800x_SDM.c: 282: if((Tick_ms() - time) > Tout)
  7972  0011B6  EC0D  F00F         	call	_Tick_ms	;wreg free
  7973  0011BA  5013               	movf	SIM800xSDMReadF1Pkt@time^0,w,c
  7974  0011BC  5C01               	subwf	?_Tick_ms^0,w,c
  7975  0011BE  6E0C               	movwf	??_SIM800xSDMReadF1Pkt^0,c
  7976  0011C0  5014               	movf	(SIM800xSDMReadF1Pkt@time+1)^0,w,c
  7977  0011C2  5802               	subwfb	(?_Tick_ms+1)^0,w,c
  7978  0011C4  6E0D               	movwf	(??_SIM800xSDMReadF1Pkt+1)^0,c
  7979  0011C6  5015               	movf	(SIM800xSDMReadF1Pkt@time+2)^0,w,c
  7980  0011C8  5803               	subwfb	(?_Tick_ms+2)^0,w,c
  7981  0011CA  6E0E               	movwf	(??_SIM800xSDMReadF1Pkt+2)^0,c
  7982  0011CC  5016               	movf	(SIM800xSDMReadF1Pkt@time+3)^0,w,c
  7983  0011CE  5804               	subwfb	(?_Tick_ms+3)^0,w,c
  7984  0011D0  6E0F               	movwf	(??_SIM800xSDMReadF1Pkt+3)^0,c
  7985  0011D2  500F               	movf	(??_SIM800xSDMReadF1Pkt+3)^0,w,c
  7986  0011D4  100E               	iorwf	(??_SIM800xSDMReadF1Pkt+2)^0,w,c
  7987  0011D6  E1D6               	bnz	l3190
  7988  0011D8  0ED1               	movlw	209
  7989  0011DA  5C0C               	subwf	??_SIM800xSDMReadF1Pkt^0,w,c
  7990  0011DC  0E07               	movlw	7
  7991  0011DE  580D               	subwfb	(??_SIM800xSDMReadF1Pkt+1)^0,w,c
  7992  0011E0  B0D8               	btfsc	status,0,c
  7993  0011E2  D7CF               	goto	u1710
  7994  0011E4                     l3208:
  7995  0011E4  FFFF               	dw	65535	; assembler added errata NOP
  7996  0011E6  ECCA  F00D         	call	_SIM800xSDMReadByte	;wreg free
  7997  0011EA  6E17               	movwf	SIM800xSDMReadF1Pkt@tmp^0,c
  7998  0011EC  0E0A               	movlw	10
  7999  0011EE  1817               	xorwf	SIM800xSDMReadF1Pkt@tmp^0,w,c
  8000  0011F0  A4D8               	btfss	status,2,c
  8001  0011F2  D7E0               	goto	l3200
  8002  0011F4                     u1740:
  8003  0011F4  FFFF               	dw	65535	; assembler added errata NOP
  8004                           
  8005                           ;SIM800x_SDM.c: 286: };SIM800x_SDM.c: 288: };SIM800x_SDM.c: 289: };SIM800x_SDM.c: 290: }
      +                          ;SIM800x_SDM.c: 296: };SIM800x_SDM.c: 298: return i;
  8006  0011F6  C012  F00A         	movff	SIM800xSDMReadF1Pkt@i,?_SIM800xSDMReadF1Pkt
  8007  0011FA  6A0B               	clrf	(?_SIM800xSDMReadF1Pkt+1)^0,c
  8008  0011FC                     l1064:
  8009  0011FC  FFFF               	dw	65535	; assembler added errata NOP
  8010  0011FE  0012               	return		;funcret
  8011  001200  FFFF               	dw	65535	; errata NOP
  8012  001202                     __end_of_SIM800xSDMReadF1Pkt:
  8013                           	callstack 0
  8014                           
  8015 ;; *************** function _Tick_ms *****************
  8016 ;; Defined at:
  8017 ;;		line 76 in file "Src/SystemTime.c"
  8018 ;; Parameters:    Size  Location     Type
  8019 ;;		None
  8020 ;; Auto vars:     Size  Location     Type
  8021 ;;		None
  8022 ;; Return value:  Size  Location     Type
  8023 ;;                  4    0[COMRAM] unsigned long 
  8024 ;; Registers used:
  8025 ;;		None
  8026 ;; Tracked objects:
  8027 ;;		On entry : 0/0
  8028 ;;		On exit  : 0/0
  8029 ;;		Unchanged: 0/0
  8030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8031 ;;      Params:         4       0       0       0       0       0       0
  8032 ;;      Locals:         0       0       0       0       0       0       0
  8033 ;;      Temps:          0       0       0       0       0       0       0
  8034 ;;      Totals:         4       0       0       0       0       0       0
  8035 ;;Total ram usage:        4 bytes
  8036 ;; Hardware stack levels used: 1
  8037 ;; Hardware stack levels required when called: 2
  8038 ;; This function calls:
  8039 ;;		Nothing
  8040 ;; This function is called by:
  8041 ;;		_ProcessResp1
  8042 ;;		_ProcessResp2
  8043 ;;		_ProcessResp4
  8044 ;;		_SIM800xIPGetState
  8045 ;;		_SIM800xHTTPInputData
  8046 ;;		_SIM800xHTTPAction
  8047 ;;		_SIM800xHTTPRead
  8048 ;;		_SIM800xSDMReadF1Pkt
  8049 ;; This function uses a non-reentrant model
  8050 ;;
  8051                           
  8052                           	psect	text38
  8053  001E1A                     __ptext38:
  8054                           	callstack 0
  8055  001E1A                     _Tick_ms:
  8056                           	callstack 0
  8057  001E1A  FFFF               	dw	65535	; assembler added errata NOP
  8058                           
  8059                           ;SystemTime.c: 79: return IncVar;
  8060                           
  8061                           ;incstack = 0
  8062  001E1C  C06B  F001         	movff	_IncVar,?_Tick_ms	;volatile
  8063  001E20  C06C  F002         	movff	_IncVar+1,?_Tick_ms+1	;volatile
  8064  001E24  C06D  F003         	movff	_IncVar+2,?_Tick_ms+2	;volatile
  8065  001E28  C06E  F004         	movff	_IncVar+3,?_Tick_ms+3	;volatile
  8066  001E2C  0012               	return		;funcret
  8067  001E2E  FFFF               	dw	65535	; errata NOP
  8068  001E30                     __end_of_Tick_ms:
  8069                           	callstack 0
  8070                           
  8071 ;; *************** function _SIM800xSDMRxAvailable *****************
  8072 ;; Defined at:
  8073 ;;		line 110 in file "Src/SIM800x_SDM.c"
  8074 ;; Parameters:    Size  Location     Type
  8075 ;;		None
  8076 ;; Auto vars:     Size  Location     Type
  8077 ;;		None
  8078 ;; Return value:  Size  Location     Type
  8079 ;;                  2    5[COMRAM] unsigned int 
  8080 ;; Registers used:
  8081 ;;		wreg, status,2, status,0, cstack
  8082 ;; Tracked objects:
  8083 ;;		On entry : 0/0
  8084 ;;		On exit  : 0/0
  8085 ;;		Unchanged: 0/0
  8086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8087 ;;      Params:         2       0       0       0       0       0       0
  8088 ;;      Locals:         0       0       0       0       0       0       0
  8089 ;;      Temps:          2       0       0       0       0       0       0
  8090 ;;      Totals:         4       0       0       0       0       0       0
  8091 ;;Total ram usage:        4 bytes
  8092 ;; Hardware stack levels used: 1
  8093 ;; Hardware stack levels required when called: 3
  8094 ;; This function calls:
  8095 ;;		___lwmod
  8096 ;; This function is called by:
  8097 ;;		_ProcessResp1
  8098 ;;		_ProcessResp4
  8099 ;;		_SIM800xInit
  8100 ;;		_SIM800xIPGetState
  8101 ;;		_SIM800xHTTPInputData
  8102 ;;		_SIM800xHTTPAction
  8103 ;;		_SIM800xHTTPRead
  8104 ;;		_SIM800xSDMReadF1Pkt
  8105 ;; This function uses a non-reentrant model
  8106 ;;
  8107                           
  8108                           	psect	text39
  8109  001D76                     __ptext39:
  8110                           	callstack 0
  8111  001D76                     _SIM800xSDMRxAvailable:
  8112                           	callstack 0
  8113  001D76  FFFF               	dw	65535	; assembler added errata NOP
  8114                           
  8115                           ;SIM800x_SDM.c: 113: return (uint16_t)((Rxfifocurrent + 200 - Rxfifoptr) % 200);
  8116                           
  8117                           ;incstack = 0
  8118  001D78  5071               	movf	_Rxfifoptr@SIM800x_SDM$F1155^0,w,c	;volatile
  8119  001D7A  5C6F               	subwf	_Rxfifocurrent@SIM800x_SDM$F1156^0,w,c	;volatile
  8120  001D7C  6E08               	movwf	??_SIM800xSDMRxAvailable^0,c
  8121  001D7E  5072               	movf	(_Rxfifoptr@SIM800x_SDM$F1155+1)^0,w,c	;volatile
  8122  001D80  5870               	subwfb	(_Rxfifocurrent@SIM800x_SDM$F1156+1)^0,w,c	;volatile
  8123  001D82  6E09               	movwf	(??_SIM800xSDMRxAvailable+1)^0,c
  8124  001D84  0EC8               	movlw	200
  8125  001D86  2408               	addwf	??_SIM800xSDMRxAvailable^0,w,c
  8126  001D88  6E01               	movwf	___lwmod@dividend^0,c
  8127  001D8A  0E00               	movlw	0
  8128  001D8C  2009               	addwfc	(??_SIM800xSDMRxAvailable+1)^0,w,c
  8129  001D8E  6E02               	movwf	(___lwmod@dividend+1)^0,c
  8130  001D90  0E00               	movlw	0
  8131  001D92  6E04               	movwf	(___lwmod@divisor+1)^0,c
  8132  001D94  0EC8               	movlw	200
  8133  001D96  6E03               	movwf	___lwmod@divisor^0,c
  8134  001D98  ECA2  F00D         	call	___lwmod	;wreg free
  8135  001D9C  C001  F006         	movff	?___lwmod,?_SIM800xSDMRxAvailable
  8136  001DA0  C002  F007         	movff	?___lwmod+1,?_SIM800xSDMRxAvailable+1
  8137  001DA4  0012               	return		;funcret
  8138  001DA6  FFFF               	dw	65535	; errata NOP
  8139  001DA8                     __end_of_SIM800xSDMRxAvailable:
  8140                           	callstack 0
  8141                           
  8142 ;; *************** function _SIM800xSDMReadByte *****************
  8143 ;; Defined at:
  8144 ;;		line 167 in file "Src/SIM800x_SDM.c"
  8145 ;; Parameters:    Size  Location     Type
  8146 ;;		None
  8147 ;; Auto vars:     Size  Location     Type
  8148 ;;  data            1    5[COMRAM] unsigned char 
  8149 ;; Return value:  Size  Location     Type
  8150 ;;                  1    wreg      unsigned char 
  8151 ;; Registers used:
  8152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8153 ;; Tracked objects:
  8154 ;;		On entry : 0/0
  8155 ;;		On exit  : 0/0
  8156 ;;		Unchanged: 0/0
  8157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8158 ;;      Params:         0       0       0       0       0       0       0
  8159 ;;      Locals:         1       0       0       0       0       0       0
  8160 ;;      Temps:          0       0       0       0       0       0       0
  8161 ;;      Totals:         1       0       0       0       0       0       0
  8162 ;;Total ram usage:        1 bytes
  8163 ;; Hardware stack levels used: 1
  8164 ;; Hardware stack levels required when called: 3
  8165 ;; This function calls:
  8166 ;;		___lwmod
  8167 ;; This function is called by:
  8168 ;;		_SIM800xInit
  8169 ;;		_SIM800xHTTPRead
  8170 ;;		_SIM800xSDMReadF1Pkt
  8171 ;; This function uses a non-reentrant model
  8172 ;;
  8173                           
  8174                           	psect	text40
  8175  001B94                     __ptext40:
  8176                           	callstack 0
  8177  001B94                     _SIM800xSDMReadByte:
  8178                           	callstack 0
  8179  001B94  FFFF               	dw	65535	; assembler added errata NOP
  8180                           
  8181                           ;SIM800x_SDM.c: 170: if(Rxfifocurrent == Rxfifoptr)
  8182                           
  8183                           ;incstack = 0
  8184  001B96  5071               	movf	_Rxfifoptr@SIM800x_SDM$F1155^0,w,c	;volatile
  8185  001B98  186F               	xorwf	_Rxfifocurrent@SIM800x_SDM$F1156^0,w,c	;volatile
  8186  001B9A  E106               	bnz	l3098
  8187  001B9C  5072               	movf	(_Rxfifoptr@SIM800x_SDM$F1155+1)^0,w,c	;volatile
  8188  001B9E  1870               	xorwf	(_Rxfifocurrent@SIM800x_SDM$F1156+1)^0,w,c	;volatile
  8189  001BA0  A4D8               	btfss	status,2,c
  8190  001BA2  D002               	goto	l3098
  8191                           
  8192                           ;SIM800x_SDM.c: 171: return 0xFF;
  8193  001BA4  0EFF               	movlw	255
  8194  001BA6  D01A               	goto	l1039
  8195  001BA8                     l3098:
  8196  001BA8  FFFF               	dw	65535	; assembler added errata NOP
  8197                           
  8198                           ;SIM800x_SDM.c: 173: uint8_t data = RxFIFO[Rxfifoptr];
  8199  001BAA  0E00               	movlw	low _RxFIFO@SIM800x_SDM$F1154
  8200  001BAC  2471               	addwf	_Rxfifoptr@SIM800x_SDM$F1155^0,w,c	;volatile
  8201  001BAE  6ED9               	movwf	fsr2l,c
  8202  001BB0  0E03               	movlw	high _RxFIFO@SIM800x_SDM$F1154
  8203  001BB2  2072               	addwfc	(_Rxfifoptr@SIM800x_SDM$F1155+1)^0,w,c	;volatile
  8204  001BB4  6EDA               	movwf	fsr2h,c
  8205  001BB6  50DF               	movf	indf2,w,c
  8206  001BB8  6E06               	movwf	SIM800xSDMReadByte@data^0,c
  8207                           
  8208                           ;SIM800x_SDM.c: 174: Rxfifoptr = (uint16_t)((Rxfifoptr + 1) % 200);
  8209  001BBA  0E01               	movlw	1
  8210  001BBC  2471               	addwf	_Rxfifoptr@SIM800x_SDM$F1155^0,w,c	;volatile
  8211  001BBE  6E01               	movwf	___lwmod@dividend^0,c
  8212  001BC0  0E00               	movlw	0
  8213  001BC2  2072               	addwfc	(_Rxfifoptr@SIM800x_SDM$F1155+1)^0,w,c	;volatile
  8214  001BC4  6E02               	movwf	(___lwmod@dividend+1)^0,c
  8215  001BC6  0E00               	movlw	0
  8216  001BC8  6E04               	movwf	(___lwmod@divisor+1)^0,c
  8217  001BCA  0EC8               	movlw	200
  8218  001BCC  6E03               	movwf	___lwmod@divisor^0,c
  8219  001BCE  ECA2  F00D         	call	___lwmod	;wreg free
  8220  001BD2  C001  F071         	movff	?___lwmod,_Rxfifoptr@SIM800x_SDM$F1155	;volatile
  8221  001BD6  C002  F072         	movff	?___lwmod+1,_Rxfifoptr@SIM800x_SDM$F1155+1	;volatile
  8222                           
  8223                           ;SIM800x_SDM.c: 176: return data;
  8224  001BDA  5006               	movf	SIM800xSDMReadByte@data^0,w,c
  8225  001BDC                     l1039:
  8226  001BDC  FFFF               	dw	65535	; assembler added errata NOP
  8227  001BDE  0012               	return		;funcret
  8228  001BE0  FFFF               	dw	65535	; errata NOP
  8229  001BE2                     __end_of_SIM800xSDMReadByte:
  8230                           	callstack 0
  8231                           
  8232 ;; *************** function ___lwmod *****************
  8233 ;; Defined at:
  8234 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  8235 ;; Parameters:    Size  Location     Type
  8236 ;;  dividend        2    0[COMRAM] unsigned int 
  8237 ;;  divisor         2    2[COMRAM] unsigned int 
  8238 ;; Auto vars:     Size  Location     Type
  8239 ;;  counter         1    4[COMRAM] unsigned char 
  8240 ;; Return value:  Size  Location     Type
  8241 ;;                  2    0[COMRAM] unsigned int 
  8242 ;; Registers used:
  8243 ;;		wreg, status,2, status,0
  8244 ;; Tracked objects:
  8245 ;;		On entry : 0/0
  8246 ;;		On exit  : 0/0
  8247 ;;		Unchanged: 0/0
  8248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8249 ;;      Params:         4       0       0       0       0       0       0
  8250 ;;      Locals:         1       0       0       0       0       0       0
  8251 ;;      Temps:          0       0       0       0       0       0       0
  8252 ;;      Totals:         5       0       0       0       0       0       0
  8253 ;;Total ram usage:        5 bytes
  8254 ;; Hardware stack levels used: 1
  8255 ;; Hardware stack levels required when called: 2
  8256 ;; This function calls:
  8257 ;;		Nothing
  8258 ;; This function is called by:
  8259 ;;		_SIM800xSDMRxAvailable
  8260 ;;		_SIM800xSDMReadByte
  8261 ;; This function uses a non-reentrant model
  8262 ;;
  8263                           
  8264                           	psect	text41
  8265  001B44                     __ptext41:
  8266                           	callstack 0
  8267  001B44                     ___lwmod:
  8268                           	callstack 0
  8269  001B44  FFFF               	dw	65535	; assembler added errata NOP
  8270                           
  8271                           ;incstack = 0
  8272  001B46  5003               	movf	___lwmod@divisor^0,w,c
  8273  001B48  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  8274  001B4A  B4D8               	btfsc	status,2,c
  8275  001B4C  D01C               	goto	l1724
  8276  001B4E  0E01               	movlw	1
  8277  001B50  6E05               	movwf	___lwmod@counter^0,c
  8278  001B52  D005               	goto	l3074
  8279  001B54                     l3072:
  8280  001B54  FFFF               	dw	65535	; assembler added errata NOP
  8281  001B56  90D8               	bcf	status,0,c
  8282  001B58  3603               	rlcf	___lwmod@divisor^0,f,c
  8283  001B5A  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  8284  001B5C  2A05               	incf	___lwmod@counter^0,f,c
  8285  001B5E                     l3074:
  8286  001B5E  FFFF               	dw	65535	; assembler added errata NOP
  8287  001B60  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  8288  001B62  D7F8               	goto	l3072
  8289  001B64                     u1540:
  8290  001B64  FFFF               	dw	65535	; assembler added errata NOP
  8291  001B66  5003               	movf	___lwmod@divisor^0,w,c
  8292  001B68  5C01               	subwf	___lwmod@dividend^0,w,c
  8293  001B6A  5004               	movf	(___lwmod@divisor+1)^0,w,c
  8294  001B6C  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  8295  001B6E  A0D8               	btfss	status,0,c
  8296  001B70  D004               	goto	l3080
  8297  001B72  5003               	movf	___lwmod@divisor^0,w,c
  8298  001B74  5E01               	subwf	___lwmod@dividend^0,f,c
  8299  001B76  5004               	movf	(___lwmod@divisor+1)^0,w,c
  8300  001B78  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  8301  001B7A                     l3080:
  8302  001B7A  FFFF               	dw	65535	; assembler added errata NOP
  8303  001B7C  90D8               	bcf	status,0,c
  8304  001B7E  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  8305  001B80  3203               	rrcf	___lwmod@divisor^0,f,c
  8306  001B82  2E05               	decfsz	___lwmod@counter^0,f,c
  8307  001B84  D7EF               	goto	u1540
  8308  001B86                     l1724:
  8309  001B86  FFFF               	dw	65535	; assembler added errata NOP
  8310  001B88  C001  F001         	movff	___lwmod@dividend,?___lwmod
  8311  001B8C  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  8312  001B90  0012               	return		;funcret
  8313  001B92  FFFF               	dw	65535	; errata NOP
  8314  001B94                     __end_of___lwmod:
  8315                           	callstack 0
  8316                           
  8317 ;; *************** function _SIM800xSDMFlush *****************
  8318 ;; Defined at:
  8319 ;;		line 219 in file "Src/SIM800x_SDM.c"
  8320 ;; Parameters:    Size  Location     Type
  8321 ;;		None
  8322 ;; Auto vars:     Size  Location     Type
  8323 ;;		None
  8324 ;; Return value:  Size  Location     Type
  8325 ;;                  1    wreg      void 
  8326 ;; Registers used:
  8327 ;;		wreg, status,2
  8328 ;; Tracked objects:
  8329 ;;		On entry : 0/0
  8330 ;;		On exit  : 0/0
  8331 ;;		Unchanged: 0/0
  8332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8333 ;;      Params:         0       0       0       0       0       0       0
  8334 ;;      Locals:         0       0       0       0       0       0       0
  8335 ;;      Temps:          0       0       0       0       0       0       0
  8336 ;;      Totals:         0       0       0       0       0       0       0
  8337 ;;Total ram usage:        0 bytes
  8338 ;; Hardware stack levels used: 1
  8339 ;; Hardware stack levels required when called: 2
  8340 ;; This function calls:
  8341 ;;		Nothing
  8342 ;; This function is called by:
  8343 ;;		_SIM800xInit
  8344 ;;		_SIM800xIPSetConnectionType
  8345 ;;		_SIM800xIPSetAPN
  8346 ;;		_SIM800xIPOpen
  8347 ;;		_SIM800xIPGetState
  8348 ;;		_SIM800xHTTPInit
  8349 ;;		_SIM800xHTTPSetURL
  8350 ;;		_SIM800xHTTPSetContent
  8351 ;;		_SIM800xHTTPInputData
  8352 ;;		_SIM800xHTTPAction
  8353 ;;		_SIM800xHTTPRead
  8354 ;;		_SIM800xSDMReadF1Pkt
  8355 ;; This function uses a non-reentrant model
  8356 ;;
  8357                           
  8358                           	psect	text42
  8359  001E30                     __ptext42:
  8360                           	callstack 0
  8361  001E30                     _SIM800xSDMFlush:
  8362                           	callstack 0
  8363  001E30  FFFF               	dw	65535	; assembler added errata NOP
  8364                           
  8365                           ;SIM800x_SDM.c: 222: Rxfifoptr = 0;
  8366                           
  8367                           ;incstack = 0
  8368  001E32  0E00               	movlw	0
  8369  001E34  6E72               	movwf	(_Rxfifoptr@SIM800x_SDM$F1155+1)^0,c	;volatile
  8370  001E36  0E00               	movlw	0
  8371  001E38  6E71               	movwf	_Rxfifoptr@SIM800x_SDM$F1155^0,c	;volatile
  8372                           
  8373                           ;SIM800x_SDM.c: 223: Rxfifocurrent = 0;
  8374  001E3A  0E00               	movlw	0
  8375  001E3C  6E70               	movwf	(_Rxfifocurrent@SIM800x_SDM$F1156+1)^0,c	;volatile
  8376  001E3E  0E00               	movlw	0
  8377  001E40  6E6F               	movwf	_Rxfifocurrent@SIM800x_SDM$F1156^0,c	;volatile
  8378  001E42  0012               	return		;funcret
  8379  001E44  FFFF               	dw	65535	; errata NOP
  8380  001E46                     __end_of_SIM800xSDMFlush:
  8381                           	callstack 0
  8382                           
  8383 ;; *************** function _AddEntryToJsonObject *****************
  8384 ;; Defined at:
  8385 ;;		line 54 in file "Src/JSON.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;  JsonObject      2    0[COMRAM] PTR unsigned char 
  8388 ;;		 -> txmessage(100), 
  8389 ;;  key             2    2[COMRAM] PTR const unsigned char 
  8390 ;;		 -> STR_18(15), STR_16(20), STR_14(4), STR_12(23), 
  8391 ;;  value           2    4[COMRAM] PTR const unsigned char 
  8392 ;;		 -> STR_19(3), STR_17(3), STR_15(5), STR_13(3), 
  8393 ;;  Cpos            2    6[COMRAM] PTR unsigned int 
  8394 ;;		 -> cpos(2), 
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;  offset          1   12[COMRAM] unsigned char 
  8397 ;; Return value:  Size  Location     Type
  8398 ;;                  1    wreg      unsigned char 
  8399 ;; Registers used:
  8400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8401 ;; Tracked objects:
  8402 ;;		On entry : 0/0
  8403 ;;		On exit  : 0/0
  8404 ;;		Unchanged: 0/0
  8405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8406 ;;      Params:         8       0       0       0       0       0       0
  8407 ;;      Locals:         1       0       0       0       0       0       0
  8408 ;;      Temps:          4       0       0       0       0       0       0
  8409 ;;      Totals:        13       0       0       0       0       0       0
  8410 ;;Total ram usage:       13 bytes
  8411 ;; Hardware stack levels used: 1
  8412 ;; Hardware stack levels required when called: 2
  8413 ;; This function calls:
  8414 ;;		Nothing
  8415 ;; This function is called by:
  8416 ;;		_SystemInit
  8417 ;; This function uses a non-reentrant model
  8418 ;;
  8419                           
  8420                           	psect	text43
  8421  00001A                     __ptext43:
  8422                           	callstack 0
  8423  00001A                     _AddEntryToJsonObject:
  8424                           	callstack 0
  8425  00001A  FFFF               	dw	65535	; assembler added errata NOP
  8426                           
  8427                           ;Src/JSON.c: 54: unsigned char AddEntryToJsonObject(char * JsonObject, const char * key,
      +                           const char * value, unsigned int *Cpos);Src/JSON.c: 55: {;Src/JSON.c: 57:  unsigned cha
      +                          r offset = 0;
  8428                           
  8429                           ;incstack = 0
  8430  00001C  0E00               	movlw	0
  8431  00001E  6E0D               	movwf	AddEntryToJsonObject@offset^0,c
  8432                           
  8433                           ;Src/JSON.c: 59:  if (!*Cpos)
  8434  000020  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8435  000024  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8436  000028  50DE               	movf	postinc2,w,c
  8437  00002A  10DE               	iorwf	postinc2,w,c
  8438  00002C  A4D8               	btfss	status,2,c
  8439  00002E  D009               	goto	l3776
  8440                           
  8441                           ;Src/JSON.c: 60:     {;Src/JSON.c: 61:   JsonObject[0] = '{';
  8442  000030  C001  FFD9         	movff	AddEntryToJsonObject@JsonObject,fsr2l
  8443  000034  C002  FFDA         	movff	AddEntryToJsonObject@JsonObject+1,fsr2h
  8444  000038  0E7B               	movlw	123
  8445  00003A  6EDF               	movwf	indf2,c
  8446                           
  8447                           ;Src/JSON.c: 62:   offset = 1;
  8448  00003C  0E01               	movlw	1
  8449  00003E  6E0D               	movwf	AddEntryToJsonObject@offset^0,c
  8450                           
  8451                           ;Src/JSON.c: 63:  }else
  8452  000040  D025               	goto	l108
  8453  000042                     l3776:
  8454  000042  FFFF               	dw	65535	; assembler added errata NOP
  8455                           
  8456                           ;Src/JSON.c: 64:  {;Src/JSON.c: 65:   JsonObject[*Cpos] = ',';
  8457  000044  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8458  000048  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8459  00004C  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8460  000050  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8461  000054  5009               	movf	??_AddEntryToJsonObject^0,w,c
  8462  000056  2401               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8463  000058  6ED9               	movwf	fsr2l,c
  8464  00005A  500A               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8465  00005C  2002               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8466  00005E  6EDA               	movwf	fsr2h,c
  8467  000060  0E2C               	movlw	44
  8468  000062  6EDF               	movwf	indf2,c
  8469                           
  8470                           ;Src/JSON.c: 66:   *Cpos = *Cpos + 1;
  8471  000064  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8472  000068  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8473  00006C  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8474  000070  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8475  000074  0E01               	movlw	1
  8476  000076  2609               	addwf	??_AddEntryToJsonObject^0,f,c
  8477  000078  0E00               	movlw	0
  8478  00007A  220A               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8479  00007C  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8480  000080  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8481  000084  C009  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8482  000088  C00A  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8483  00008C                     l108:
  8484  00008C  FFFF               	dw	65535	; assembler added errata NOP
  8485                           
  8486                           ;Src/JSON.c: 69:     JsonObject[*Cpos + offset] = '\"';
  8487  00008E  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8488  000092  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8489  000096  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8490  00009A  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8491  00009E  500D               	movf	AddEntryToJsonObject@offset^0,w,c
  8492  0000A0  2401               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8493  0000A2  6E0B               	movwf	(??_AddEntryToJsonObject+2)^0,c
  8494  0000A4  0E00               	movlw	0
  8495  0000A6  2002               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8496  0000A8  6E0C               	movwf	(??_AddEntryToJsonObject+3)^0,c
  8497  0000AA  5009               	movf	??_AddEntryToJsonObject^0,w,c
  8498  0000AC  240B               	addwf	(??_AddEntryToJsonObject+2)^0,w,c
  8499  0000AE  6ED9               	movwf	fsr2l,c
  8500  0000B0  500A               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8501  0000B2  200C               	addwfc	(??_AddEntryToJsonObject+3)^0,w,c
  8502  0000B4  6EDA               	movwf	fsr2h,c
  8503  0000B6  0E22               	movlw	34
  8504  0000B8  6EDF               	movwf	indf2,c
  8505  0000BA  D01F               	goto	l3782
  8506  0000BC                     l3778:
  8507  0000BC  FFFF               	dw	65535	; assembler added errata NOP
  8508                           
  8509                           ;Src/JSON.c: 73:  {;Src/JSON.c: 74:   JsonObject[*Cpos + offset] = *key;
  8510  0000BE  C003  FFF6         	movff	AddEntryToJsonObject@key,tblptrl
  8511  0000C2  C004  FFF7         	movff	AddEntryToJsonObject@key+1,tblptrh
  8512  0000C6                     	if	0	;tblptru may be non-zero
  8513  0000C6                     	endif
  8514  0000C6                     	if	0	;tblptru may be non-zero
  8515  0000C6                     	endif
  8516  0000C6  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8517  0000CA  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8518  0000CE  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8519  0000D2  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8520  0000D6  500D               	movf	AddEntryToJsonObject@offset^0,w,c
  8521  0000D8  2401               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8522  0000DA  6E0B               	movwf	(??_AddEntryToJsonObject+2)^0,c
  8523  0000DC  0E00               	movlw	0
  8524  0000DE  2002               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8525  0000E0  6E0C               	movwf	(??_AddEntryToJsonObject+3)^0,c
  8526  0000E2  5009               	movf	??_AddEntryToJsonObject^0,w,c
  8527  0000E4  240B               	addwf	(??_AddEntryToJsonObject+2)^0,w,c
  8528  0000E6  6ED9               	movwf	fsr2l,c
  8529  0000E8  500A               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8530  0000EA  200C               	addwfc	(??_AddEntryToJsonObject+3)^0,w,c
  8531  0000EC  6EDA               	movwf	fsr2h,c
  8532  0000EE  0008               	tblrd		*
  8533  0000F0  FFFF               	dw	65535	; errata NOP
  8534  0000F2  CFF5 FFDF          	movff	tablat,indf2
  8535                           
  8536                           ;Src/JSON.c: 75:   key++;
  8537  0000F6  4A03               	infsnz	AddEntryToJsonObject@key^0,f,c
  8538  0000F8  2A04               	incf	(AddEntryToJsonObject@key+1)^0,f,c
  8539  0000FA                     l3782:
  8540  0000FA  FFFF               	dw	65535	; assembler added errata NOP
  8541                           
  8542                           ;Src/JSON.c: 76:   *Cpos = *Cpos + 1;
  8543  0000FC  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8544  000100  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8545  000104  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8546  000108  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8547  00010C  0E01               	movlw	1
  8548  00010E  2609               	addwf	??_AddEntryToJsonObject^0,f,c
  8549  000110  0E00               	movlw	0
  8550  000112  220A               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8551  000114  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8552  000118  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8553  00011C  C009  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8554  000120  C00A  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8555                           
  8556                           ;Src/JSON.c: 72:  while (*key != 0)
  8557  000124  C003  FFF6         	movff	AddEntryToJsonObject@key,tblptrl
  8558  000128  C004  FFF7         	movff	AddEntryToJsonObject@key+1,tblptrh
  8559  00012C                     	if	0	;tblptru may be non-zero
  8560  00012C                     	endif
  8561  00012C                     	if	0	;tblptru may be non-zero
  8562  00012C                     	endif
  8563  00012C  0008               	tblrd		*
  8564  00012E  FFFF               	dw	65535	; errata NOP
  8565  000130  50F5               	movf	tablat,w,c
  8566  000132  0900               	iorlw	0
  8567  000134  A4D8               	btfss	status,2,c
  8568  000136  D7C2               	goto	l3778
  8569                           
  8570                           ;Src/JSON.c: 79:     JsonObject[*Cpos + offset] = '\"';
  8571  000138  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8572  00013C  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8573  000140  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8574  000144  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8575  000148  500D               	movf	AddEntryToJsonObject@offset^0,w,c
  8576  00014A  2401               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8577  00014C  6E0B               	movwf	(??_AddEntryToJsonObject+2)^0,c
  8578  00014E  0E00               	movlw	0
  8579  000150  2002               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8580  000152  6E0C               	movwf	(??_AddEntryToJsonObject+3)^0,c
  8581  000154  5009               	movf	??_AddEntryToJsonObject^0,w,c
  8582  000156  240B               	addwf	(??_AddEntryToJsonObject+2)^0,w,c
  8583  000158  6ED9               	movwf	fsr2l,c
  8584  00015A  500A               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8585  00015C  200C               	addwfc	(??_AddEntryToJsonObject+3)^0,w,c
  8586  00015E  6EDA               	movwf	fsr2h,c
  8587  000160  0E22               	movlw	34
  8588  000162  6EDF               	movwf	indf2,c
  8589                           
  8590                           ;Src/JSON.c: 80:     *Cpos = *Cpos + 1;
  8591  000164  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8592  000168  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8593  00016C  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8594  000170  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8595  000174  0E01               	movlw	1
  8596  000176  2609               	addwf	??_AddEntryToJsonObject^0,f,c
  8597  000178  0E00               	movlw	0
  8598  00017A  220A               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8599  00017C  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8600  000180  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8601  000184  C009  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8602  000188  C00A  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8603                           
  8604                           ;Src/JSON.c: 82:  if(offset)
  8605  00018C  500D               	movf	AddEntryToJsonObject@offset^0,w,c
  8606  00018E  B4D8               	btfsc	status,2,c
  8607  000190  D025               	goto	l3792
  8608                           
  8609                           ;Src/JSON.c: 83:  {;Src/JSON.c: 84:   *Cpos = *Cpos + 1;
  8610  000192  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8611  000196  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8612  00019A  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8613  00019E  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8614  0001A2  0E01               	movlw	1
  8615  0001A4  2609               	addwf	??_AddEntryToJsonObject^0,f,c
  8616  0001A6  0E00               	movlw	0
  8617  0001A8  220A               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8618  0001AA  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8619  0001AE  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8620  0001B2  C009  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8621  0001B6  C00A  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8622                           
  8623                           ;Src/JSON.c: 85:   JsonObject[*Cpos] = ':';
  8624  0001BA  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8625  0001BE  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8626  0001C2  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8627  0001C6  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8628  0001CA  5009               	movf	??_AddEntryToJsonObject^0,w,c
  8629  0001CC  2401               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8630  0001CE  6ED9               	movwf	fsr2l,c
  8631  0001D0  500A               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8632  0001D2  2002               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8633  0001D4  6EDA               	movwf	fsr2h,c
  8634  0001D6  0E3A               	movlw	58
  8635  0001D8  6EDF               	movwf	indf2,c
  8636                           
  8637                           ;Src/JSON.c: 86:  }else
  8638  0001DA  D046               	goto	l3800
  8639  0001DC                     l3792:
  8640  0001DC  FFFF               	dw	65535	; assembler added errata NOP
  8641                           
  8642                           ;Src/JSON.c: 87:  {;Src/JSON.c: 88:   JsonObject[*Cpos] = ':';
  8643  0001DE  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8644  0001E2  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8645  0001E6  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8646  0001EA  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8647  0001EE  5009               	movf	??_AddEntryToJsonObject^0,w,c
  8648  0001F0  2401               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8649  0001F2  6ED9               	movwf	fsr2l,c
  8650  0001F4  500A               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8651  0001F6  2002               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8652  0001F8  6EDA               	movwf	fsr2h,c
  8653  0001FA  0E3A               	movlw	58
  8654  0001FC  6EDF               	movwf	indf2,c
  8655  0001FE  D01F               	goto	l3798
  8656  000200                     l3794:
  8657  000200  FFFF               	dw	65535	; assembler added errata NOP
  8658                           
  8659                           ;Src/JSON.c: 93:  {;Src/JSON.c: 94:   JsonObject[*Cpos + offset] = *value;
  8660  000202  C005  FFF6         	movff	AddEntryToJsonObject@value,tblptrl
  8661  000206  C006  FFF7         	movff	AddEntryToJsonObject@value+1,tblptrh
  8662  00020A                     	if	0	;tblptru may be non-zero
  8663  00020A                     	endif
  8664  00020A                     	if	0	;tblptru may be non-zero
  8665  00020A                     	endif
  8666  00020A  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8667  00020E  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8668  000212  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8669  000216  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8670  00021A  500D               	movf	AddEntryToJsonObject@offset^0,w,c
  8671  00021C  2401               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8672  00021E  6E0B               	movwf	(??_AddEntryToJsonObject+2)^0,c
  8673  000220  0E00               	movlw	0
  8674  000222  2002               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8675  000224  6E0C               	movwf	(??_AddEntryToJsonObject+3)^0,c
  8676  000226  5009               	movf	??_AddEntryToJsonObject^0,w,c
  8677  000228  240B               	addwf	(??_AddEntryToJsonObject+2)^0,w,c
  8678  00022A  6ED9               	movwf	fsr2l,c
  8679  00022C  500A               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8680  00022E  200C               	addwfc	(??_AddEntryToJsonObject+3)^0,w,c
  8681  000230  6EDA               	movwf	fsr2h,c
  8682  000232  0008               	tblrd		*
  8683  000234  FFFF               	dw	65535	; errata NOP
  8684  000236  CFF5 FFDF          	movff	tablat,indf2
  8685                           
  8686                           ;Src/JSON.c: 95:   value++;
  8687  00023A  4A05               	infsnz	AddEntryToJsonObject@value^0,f,c
  8688  00023C  2A06               	incf	(AddEntryToJsonObject@value+1)^0,f,c
  8689  00023E                     l3798:
  8690  00023E  FFFF               	dw	65535	; assembler added errata NOP
  8691                           
  8692                           ;Src/JSON.c: 96:   *Cpos = *Cpos + 1;
  8693  000240  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8694  000244  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8695  000248  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8696  00024C  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8697  000250  0E01               	movlw	1
  8698  000252  2609               	addwf	??_AddEntryToJsonObject^0,f,c
  8699  000254  0E00               	movlw	0
  8700  000256  220A               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8701  000258  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8702  00025C  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8703  000260  C009  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8704  000264  C00A  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8705  000268                     l3800:
  8706  000268  FFFF               	dw	65535	; assembler added errata NOP
  8707                           
  8708                           ;Src/JSON.c: 92:  while (*value != 0)
  8709  00026A  C005  FFF6         	movff	AddEntryToJsonObject@value,tblptrl
  8710  00026E  C006  FFF7         	movff	AddEntryToJsonObject@value+1,tblptrh
  8711  000272                     	if	0	;tblptru may be non-zero
  8712  000272                     	endif
  8713  000272                     	if	0	;tblptru may be non-zero
  8714  000272                     	endif
  8715  000272  0008               	tblrd		*
  8716  000274  FFFF               	dw	65535	; errata NOP
  8717  000276  50F5               	movf	tablat,w,c
  8718  000278  0900               	iorlw	0
  8719  00027A  A4D8               	btfss	status,2,c
  8720  00027C  D7C1               	goto	l3794
  8721                           
  8722                           ;Src/JSON.c: 99:  if(offset != 0)
  8723  00027E  500D               	movf	AddEntryToJsonObject@offset^0,w,c
  8724  000280  B4D8               	btfsc	status,2,c
  8725  000282  D014               	goto	l117
  8726                           
  8727                           ;Src/JSON.c: 100:   *Cpos = *Cpos + 1;
  8728  000284  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8729  000288  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8730  00028C  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8731  000290  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8732  000294  0E01               	movlw	1
  8733  000296  2609               	addwf	??_AddEntryToJsonObject^0,f,c
  8734  000298  0E00               	movlw	0
  8735  00029A  220A               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8736  00029C  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8737  0002A0  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8738  0002A4  C009  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8739  0002A8  C00A  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8740  0002AC                     l117:
  8741  0002AC  FFFF               	dw	65535	; assembler added errata NOP
  8742                           
  8743                           ;Src/JSON.c: 101:  JsonObject[*Cpos] = '}';
  8744  0002AE  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8745  0002B2  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8746  0002B6  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8747  0002BA  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8748  0002BE  5009               	movf	??_AddEntryToJsonObject^0,w,c
  8749  0002C0  2401               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8750  0002C2  6ED9               	movwf	fsr2l,c
  8751  0002C4  500A               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8752  0002C6  2002               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8753  0002C8  6EDA               	movwf	fsr2h,c
  8754  0002CA  0E7D               	movlw	125
  8755  0002CC  6EDF               	movwf	indf2,c
  8756                           
  8757                           ;Src/JSON.c: 102:  JsonObject[*Cpos + 1] = 0;
  8758  0002CE  C007  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8759  0002D2  C008  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8760  0002D6  CFDE F009          	movff	postinc2,??_AddEntryToJsonObject
  8761  0002DA  CFDD F00A          	movff	postdec2,??_AddEntryToJsonObject+1
  8762  0002DE  C001  F00B         	movff	AddEntryToJsonObject@JsonObject,??_AddEntryToJsonObject+2
  8763  0002E2  C002  F00C         	movff	AddEntryToJsonObject@JsonObject+1,??_AddEntryToJsonObject+3
  8764  0002E6  5009               	movf	??_AddEntryToJsonObject^0,w,c
  8765  0002E8  260B               	addwf	(??_AddEntryToJsonObject+2)^0,f,c
  8766  0002EA  500A               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8767  0002EC  220C               	addwfc	(??_AddEntryToJsonObject+3)^0,f,c
  8768  0002EE  0E01               	movlw	1
  8769  0002F0  240B               	addwf	(??_AddEntryToJsonObject+2)^0,w,c
  8770  0002F2  6ED9               	movwf	fsr2l,c
  8771  0002F4  0E00               	movlw	0
  8772  0002F6  200C               	addwfc	(??_AddEntryToJsonObject+3)^0,w,c
  8773  0002F8  6EDA               	movwf	fsr2h,c
  8774  0002FA  0E00               	movlw	0
  8775  0002FC  6EDF               	movwf	indf2,c
  8776  0002FE  0012               	return		;funcret
  8777  000300  FFFF               	dw	65535	; errata NOP
  8778  000302                     __end_of_AddEntryToJsonObject:
  8779                           	callstack 0
  8780                           
  8781 ;; *************** function _Isr *****************
  8782 ;; Defined at:
  8783 ;;		line 65 in file "C:/EmbeddedDevOps/M8M_APIs/PIC18.X/Src/ISR.c"
  8784 ;; Parameters:    Size  Location     Type
  8785 ;;		None
  8786 ;; Auto vars:     Size  Location     Type
  8787 ;;		None
  8788 ;; Return value:  Size  Location     Type
  8789 ;;                  1    wreg      void 
  8790 ;; Registers used:
  8791 ;;		wreg, status,2, status,0, cstack
  8792 ;; Tracked objects:
  8793 ;;		On entry : 0/0
  8794 ;;		On exit  : 0/0
  8795 ;;		Unchanged: 0/0
  8796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8797 ;;      Params:         0       0       0       0       0       0       0
  8798 ;;      Locals:         0       0       0       0       0       0       0
  8799 ;;      Temps:          0       0       0       0       0       0       0
  8800 ;;      Totals:         0       0       0       0       0       0       0
  8801 ;;Total ram usage:        0 bytes
  8802 ;; Hardware stack levels used: 1
  8803 ;; Hardware stack levels required when called: 1
  8804 ;; This function calls:
  8805 ;;		_SysTimeCallBack
  8806 ;; This function is called by:
  8807 ;;		Interrupt level 2
  8808 ;; This function uses a non-reentrant model
  8809 ;;
  8810                           
  8811                           	psect	intcode
  8812  000008                     __pintcode:
  8813                           	callstack 0
  8814  000008                     _Isr:
  8815                           	callstack 0
  8816  000008  FFFF               	dw	65535	; assembler added errata NOP
  8817                           
  8818                           ;incstack = 0
  8819  00000A  827E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8820                           
  8821                           ;ISR.c: 67: SysTimeCallBack();
  8822  00000C  EC84  F00E         	call	_SysTimeCallBack	;wreg free
  8823  000010  927E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8824  000012  0011               	retfie		f
  8825  000014  FFFF               	dw	65535	; errata NOP
  8826  000016                     __end_of_Isr:
  8827                           	callstack 0
  8828                           
  8829 ;; *************** function _SysTimeCallBack *****************
  8830 ;; Defined at:
  8831 ;;		line 137 in file "Src/SystemTime.c"
  8832 ;; Parameters:    Size  Location     Type
  8833 ;;		None
  8834 ;; Auto vars:     Size  Location     Type
  8835 ;;		None
  8836 ;; Return value:  Size  Location     Type
  8837 ;;                  1    wreg      void 
  8838 ;; Registers used:
  8839 ;;		wreg, status,2, status,0
  8840 ;; Tracked objects:
  8841 ;;		On entry : 0/0
  8842 ;;		On exit  : 0/0
  8843 ;;		Unchanged: 0/0
  8844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8845 ;;      Params:         0       0       0       0       0       0       0
  8846 ;;      Locals:         0       0       0       0       0       0       0
  8847 ;;      Temps:          0       0       0       0       0       0       0
  8848 ;;      Totals:         0       0       0       0       0       0       0
  8849 ;;Total ram usage:        0 bytes
  8850 ;; Hardware stack levels used: 1
  8851 ;; This function calls:
  8852 ;;		Nothing
  8853 ;; This function is called by:
  8854 ;;		_Isr
  8855 ;; This function uses a non-reentrant model
  8856 ;;
  8857                           
  8858                           	psect	text45
  8859  001D08                     __ptext45:
  8860                           	callstack 0
  8861  001D08                     _SysTimeCallBack:
  8862                           	callstack 0
  8863  001D08  FFFF               	dw	65535	; assembler added errata NOP
  8864                           
  8865                           ;SystemTime.c: 140: if(TMR0IF)
  8866                           
  8867                           ;incstack = 0
  8868  001D0A  A4F2               	btfss	4082,2,c	;volatile
  8869  001D0C  D018               	goto	i2l307
  8870                           
  8871                           ;SystemTime.c: 141: {;SystemTime.c: 142: if(DecVar != 0)
  8872  001D0E  0100               	movlb	0	; () banked
  8873  001D10  51BC               	movf	_DecVar& (0+255),w,b	;volatile
  8874  001D12  11BD               	iorwf	(_DecVar+1)& (0+255),w,b	;volatile
  8875  001D14  11BE               	iorwf	(_DecVar+2)& (0+255),w,b	;volatile
  8876  001D16  11BF               	iorwf	(_DecVar+3)& (0+255),w,b	;volatile
  8877  001D18  B4D8               	btfsc	status,2,c
  8878  001D1A  D005               	goto	i2l306
  8879                           
  8880                           ; BSR set to: 0
  8881                           ;SystemTime.c: 143: --DecVar;
  8882  001D1C  07BC               	decf	_DecVar& (0+255),f,b	;volatile
  8883  001D1E  0E00               	movlw	0
  8884  001D20  5BBD               	subwfb	(_DecVar+1)& (0+255),f,b	;volatile
  8885  001D22  5BBE               	subwfb	(_DecVar+2)& (0+255),f,b	;volatile
  8886  001D24  5BBF               	subwfb	(_DecVar+3)& (0+255),f,b	;volatile
  8887  001D26                     i2l306:
  8888  001D26  FFFF               	dw	65535	; assembler added errata NOP
  8889                           
  8890                           ; BSR set to: 0
  8891                           ;SystemTime.c: 145: ++IncVar;
  8892  001D28  0E01               	movlw	1
  8893  001D2A  266B               	addwf	_IncVar^0,f,c	;volatile
  8894  001D2C  0E00               	movlw	0
  8895  001D2E  226C               	addwfc	(_IncVar+1)^0,f,c	;volatile
  8896  001D30  226D               	addwfc	(_IncVar+2)^0,f,c	;volatile
  8897  001D32  226E               	addwfc	(_IncVar+3)^0,f,c	;volatile
  8898                           
  8899                           ; BSR set to: 0
  8900                           ;SystemTime.c: 147: TMR0IF = 0;
  8901  001D34  94F2               	bcf	4082,2,c	;volatile
  8902                           
  8903                           ; BSR set to: 0
  8904                           ;SystemTime.c: 148: TMR0 = val;
  8905  001D36  C07C  FFD6         	movff	_val,4054	;volatile
  8906  001D3A  C07D  FFD7         	movff	_val+1,4055	;volatile
  8907  001D3E                     i2l307:
  8908  001D3E  FFFF               	dw	65535	; assembler added errata NOP
  8909  001D40  0012               	return		;funcret
  8910  001D42  FFFF               	dw	65535	; errata NOP
  8911  001D44                     __end_of_SysTimeCallBack:
  8912                           	callstack 0
  8913                           
  8914                           	psect	rparam
  8915  0000                     
  8916                           	psect	temp
  8917  00007E                     btemp:
  8918                           	callstack 0
  8919  00007E                     	ds	1
  8920  0000                     int$flags	set	btemp
  8921  0000                     wtemp8	set	btemp+1
  8922  0000                     ttemp5	set	btemp+1
  8923  0000                     ttemp6	set	btemp+4
  8924  0000                     ttemp7	set	btemp+8
  8925                           
  8926                           	psect	idloc
  8927                           
  8928                           ;Config register IDLOC0 @ 0x200000
  8929                           ;	unspecified, using default values
  8930  200000                     	org	2097152
  8931  200000  FF                 	db	255
  8932                           
  8933                           ;Config register IDLOC1 @ 0x200001
  8934                           ;	unspecified, using default values
  8935  200001                     	org	2097153
  8936  200001  FF                 	db	255
  8937                           
  8938                           ;Config register IDLOC2 @ 0x200002
  8939                           ;	unspecified, using default values
  8940  200002                     	org	2097154
  8941  200002  FF                 	db	255
  8942                           
  8943                           ;Config register IDLOC3 @ 0x200003
  8944                           ;	unspecified, using default values
  8945  200003                     	org	2097155
  8946  200003  FF                 	db	255
  8947                           
  8948                           ;Config register IDLOC4 @ 0x200004
  8949                           ;	unspecified, using default values
  8950  200004                     	org	2097156
  8951  200004  FF                 	db	255
  8952                           
  8953                           ;Config register IDLOC5 @ 0x200005
  8954                           ;	unspecified, using default values
  8955  200005                     	org	2097157
  8956  200005  FF                 	db	255
  8957                           
  8958                           ;Config register IDLOC6 @ 0x200006
  8959                           ;	unspecified, using default values
  8960  200006                     	org	2097158
  8961  200006  FF                 	db	255
  8962                           
  8963                           ;Config register IDLOC7 @ 0x200007
  8964                           ;	unspecified, using default values
  8965  200007                     	org	2097159
  8966  200007  FF                 	db	255
  8967                           
  8968                           	psect	config
  8969                           
  8970                           ; Padding undefined space
  8971  300000                     	org	3145728
  8972  300000  FF                 	db	255
  8973                           
  8974                           ;Config register CONFIG1H @ 0x300001
  8975                           ;	Oscillator Selection bits
  8976                           ;	OSC = HS, HS oscillator
  8977                           ;	Oscillator System Clock Switch Enable bit
  8978                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  8979  300001                     	org	3145729
  8980  300001  22                 	db	34
  8981                           
  8982                           ;Config register CONFIG2L @ 0x300002
  8983                           ;	Power-up Timer Enable bit
  8984                           ;	PWRT = OFF, PWRT disabled
  8985                           ;	Brown-out Reset Enable bit
  8986                           ;	BOR = ON, Brown-out Reset enabled
  8987                           ;	Brown-out Reset Voltage bits
  8988                           ;	BORV = 20, VBOR set to 2.0V
  8989  300002                     	org	3145730
  8990  300002  0F                 	db	15
  8991                           
  8992                           ;Config register CONFIG2H @ 0x300003
  8993                           ;	Watchdog Timer Enable bit
  8994                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8995                           ;	Watchdog Timer Postscale Select bits
  8996                           ;	WDTPS = 128, 1:128
  8997  300003                     	org	3145731
  8998  300003  0E                 	db	14
  8999                           
  9000                           ; Padding undefined space
  9001  300004                     	org	3145732
  9002  300004  FF                 	db	255
  9003                           
  9004                           ;Config register CONFIG3H @ 0x300005
  9005                           ;	CCP2 Mux bit
  9006                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
  9007  300005                     	org	3145733
  9008  300005  01                 	db	1
  9009                           
  9010                           ;Config register CONFIG4L @ 0x300006
  9011                           ;	Stack Full/Underflow Reset Enable bit
  9012                           ;	STVR = OFF, Stack Full/Underflow will not cause RESET
  9013                           ;	Low Voltage ICSP Enable bit
  9014                           ;	LVP = OFF, Low Voltage ICSP disabled
  9015                           ;	Background Debugger Enable bit
  9016                           ;	DEBUG = 0x1, unprogrammed default
  9017  300006                     	org	3145734
  9018  300006  80                 	db	128
  9019                           
  9020                           ; Padding undefined space
  9021  300007                     	org	3145735
  9022  300007  FF                 	db	255
  9023                           
  9024                           ;Config register CONFIG5L @ 0x300008
  9025                           ;	Code Protection bit
  9026                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  9027                           ;	Code Protection bit
  9028                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  9029                           ;	Code Protection bit
  9030                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  9031                           ;	Code Protection bit
  9032                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  9033  300008                     	org	3145736
  9034  300008  0F                 	db	15
  9035                           
  9036                           ;Config register CONFIG5H @ 0x300009
  9037                           ;	Boot Block Code Protection bit
  9038                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  9039                           ;	Data EEPROM Code Protection bit
  9040                           ;	CPD = OFF, Data EEPROM not code protected
  9041  300009                     	org	3145737
  9042  300009  C0                 	db	192
  9043                           
  9044                           ;Config register CONFIG6L @ 0x30000A
  9045                           ;	Write Protection bit
  9046                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  9047                           ;	Write Protection bit
  9048                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  9049                           ;	Write Protection bit
  9050                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  9051                           ;	Write Protection bit
  9052                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  9053  30000A                     	org	3145738
  9054  30000A  0F                 	db	15
  9055                           
  9056                           ;Config register CONFIG6H @ 0x30000B
  9057                           ;	Configuration Register Write Protection bit
  9058                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  9059                           ;	Boot Block Write Protection bit
  9060                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  9061                           ;	Data EEPROM Write Protection bit
  9062                           ;	WRTD = OFF, Data EEPROM not write protected
  9063  30000B                     	org	3145739
  9064  30000B  E0                 	db	224
  9065                           
  9066                           ;Config register CONFIG7L @ 0x30000C
  9067                           ;	Table Read Protection bit
  9068                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  9069                           ;	Table Read Protection bit
  9070                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  9071                           ;	Table Read Protection bit
  9072                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  9073                           ;	Table Read Protection bit
  9074                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  9075  30000C                     	org	3145740
  9076  30000C  0F                 	db	15
  9077                           
  9078                           ;Config register CONFIG7H @ 0x30000D
  9079                           ;	Boot Block Table Read Protection bit
  9080                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  9081  30000D                     	org	3145741
  9082  30000D  40                 	db	64
  9083                           tosu	equ	0xFFF
  9084                           tosh	equ	0xFFE
  9085                           tosl	equ	0xFFD
  9086                           stkptr	equ	0xFFC
  9087                           pclatu	equ	0xFFB
  9088                           pclath	equ	0xFFA
  9089                           pcl	equ	0xFF9
  9090                           tblptru	equ	0xFF8
  9091                           tblptrh	equ	0xFF7
  9092                           tblptrl	equ	0xFF6
  9093                           tablat	equ	0xFF5
  9094                           prodh	equ	0xFF4
  9095                           prodl	equ	0xFF3
  9096                           indf0	equ	0xFEF
  9097                           postinc0	equ	0xFEE
  9098                           postdec0	equ	0xFED
  9099                           preinc0	equ	0xFEC
  9100                           plusw0	equ	0xFEB
  9101                           fsr0h	equ	0xFEA
  9102                           fsr0l	equ	0xFE9
  9103                           wreg	equ	0xFE8
  9104                           indf1	equ	0xFE7
  9105                           postinc1	equ	0xFE6
  9106                           postdec1	equ	0xFE5
  9107                           preinc1	equ	0xFE4
  9108                           plusw1	equ	0xFE3
  9109                           fsr1h	equ	0xFE2
  9110                           fsr1l	equ	0xFE1
  9111                           bsr	equ	0xFE0
  9112                           indf2	equ	0xFDF
  9113                           postinc2	equ	0xFDE
  9114                           postdec2	equ	0xFDD
  9115                           preinc2	equ	0xFDC
  9116                           plusw2	equ	0xFDB
  9117                           fsr2h	equ	0xFDA
  9118                           fsr2l	equ	0xFD9
  9119                           status	equ	0xFD8

Data Sizes:
    Strings     1606
    Constant    41
    Data        8
    BSS         741
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    106     125
    BANK0           128     29     101
    BANK1           256      0     220
    BANK2           256      0     240
    BANK3           256      0     200
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 279
		 -> SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xIPGetParameters@str(COMRAM[30]), SIM800xIPGetState@str(COMRAM[30]), txmessage(BANK2[100]), 
		 -> STR_10(CODE[17]), STR_9(CODE[279]), STR_4(CODE[9]), STR_3(CODE[5]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 279
		 -> SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xIPGetParameters@str(COMRAM[30]), SIM800xIPGetState@str(COMRAM[30]), txmessage(BANK2[100]), 
		 -> STR_10(CODE[17]), STR_9(CODE[279]), STR_4(CODE[9]), STR_3(CODE[5]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_98(CODE[21]), STR_97(CODE[18]), STR_96(CODE[21]), STR_93(CODE[26]), 
		 -> STR_92(CODE[28]), STR_91(CODE[25]), STR_90(CODE[24]), STR_89(CODE[26]), 
		 -> STR_69(CODE[15]), STR_68(CODE[20]), STR_64(CODE[29]), STR_63(CODE[29]), 
		 -> STR_57(CODE[15]), STR_51(CODE[4]), STR_31(CODE[12]), STR_24(CODE[27]), 
		 -> STR_23(CODE[24]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 40
		 -> SIM800xHTTPRead@str(COMRAM[30]), SIM800xHTTPAction@str(COMRAM[30]), SIM800xHTTPInputData@str(COMRAM[30]), SIM800xHTTPSetTimeout@str(COMRAM[30]), 
		 -> SIM800xHTTPSetBreakEnd@str(COMRAM[30]), SIM800xHTTPSetBreak@str(COMRAM[30]), SIM800xHTTPSetRedir@str(COMRAM[25]), SIM800xHTTPSetPort@str(COMRAM[30]), 
		 -> SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xGPRSSetDataMode@str(COMRAM[20]), SIM800xGPRSSetQoSRequest@str(COMRAM[40]), SIM800xGPRSSetQoSMin@str(COMRAM[40]), 
		 -> SIM800xIPGetParameters@str(COMRAM[30]), SIM800xIPSetRate@str(COMRAM[8]), SIM800xSetBaudRate@str(COMRAM[15]), SystemTask@msg(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    SIM800xSDMReadF1Pkt@data	PTR unsigned char  size(2) Largest target is 40
		 -> SIM800x3GPPGetSubscriberNumber@str(COMRAM[40]), SIM800x3GPPGetSignalQuality@str(COMRAM[20]), SIM800x3GPPGetOperatorName@str(COMRAM[40]), SIM800xHTTPReadHeader@str(COMRAM[30]), 
		 -> SIM800xHTTPReadState@str(COMRAM[30]), SIM800xHTTPRead@str(COMRAM[30]), SIM800xHTTPAction@str(COMRAM[30]), SIM800xHTTPInputData@str(COMRAM[30]), 
		 -> SIM800xGPRSGetNRegState@str(COMRAM[20]), SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xGPRSSetDataMode@str(COMRAM[20]), SIM800xIPGetState@str(COMRAM[30]), 
		 -> SIM800xGetIMSI@str(COMRAM[20]), SIM800xGetSoftwareRevisionID@str(COMRAM[30]), ProcessResp4@str(COMRAM[20]), 

    SIM800xSDMPrint@str	PTR const unsigned char  size(2) Largest target is 279
		 -> STR_105(CODE[9]), STR_104(CODE[8]), STR_103(CODE[10]), STR_102(CODE[16]), 
		 -> STR_101(CODE[13]), STR_100(CODE[16]), STR_99(CODE[14]), SIM800xHTTPRead@str(COMRAM[30]), 
		 -> SIM800xHTTPAction@str(COMRAM[30]), SIM800xHTTPInputData@str(COMRAM[30]), STR_95(CODE[24]), STR_94(CODE[23]), 
		 -> SIM800xHTTPSetTimeout@str(COMRAM[30]), SIM800xHTTPSetBreakEnd@str(COMRAM[30]), SIM800xHTTPSetBreak@str(COMRAM[30]), SIM800xHTTPSetRedir@str(COMRAM[25]), 
		 -> SIM800xHTTPSetPort@str(COMRAM[30]), STR_88(CODE[21]), STR_87(CODE[18]), STR_86(CODE[19]), 
		 -> STR_85(CODE[19]), STR_84(CODE[13]), STR_83(CODE[13]), STR_82(CODE[10]), 
		 -> STR_81(CODE[11]), STR_80(CODE[6]), STR_79(CODE[10]), STR_78(CODE[11]), 
		 -> STR_77(CODE[11]), STR_76(CODE[12]), STR_75(CODE[12]), STR_74(CODE[2]), 
		 -> STR_73(CODE[3]), STR_72(CODE[3]), STR_71(CODE[2]), STR_70(CODE[13]), 
		 -> SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xGPRSSetDataMode@str(COMRAM[20]), STR_67(CODE[12]), STR_66(CODE[12]), 
		 -> STR_65(CODE[11]), SIM800xGPRSSetQoSRequest@str(COMRAM[40]), SIM800xGPRSSetQoSMin@str(COMRAM[40]), STR_62(CODE[7]), 
		 -> STR_61(CODE[12]), STR_60(CODE[12]), STR_59(CODE[12]), STR_58(CODE[11]), 
		 -> SIM800xIPGetParameters@str(COMRAM[30]), STR_56(CODE[12]), STR_55(CODE[12]), STR_54(CODE[12]), 
		 -> STR_53(CODE[9]), STR_52(CODE[12]), SIM800xIPSetRate@str(COMRAM[8]), STR_50(CODE[13]), 
		 -> STR_49(CODE[12]), STR_48(CODE[8]), STR_47(CODE[12]), STR_46(CODE[9]), 
		 -> STR_45(CODE[12]), STR_44(CODE[8]), STR_43(CODE[12]), STR_42(CODE[12]), 
		 -> STR_41(CODE[12]), STR_40(CODE[9]), STR_39(CODE[5]), STR_38(CODE[8]), 
		 -> STR_37(CODE[8]), STR_36(CODE[8]), STR_35(CODE[8]), STR_34(CODE[8]), 
		 -> STR_33(CODE[4]), STR_32(CODE[6]), SIM800xSetBaudRate@str(COMRAM[15]), STR_30(CODE[13]), 
		 -> STR_29(CODE[6]), STR_28(CODE[4]), STR_10(CODE[17]), STR_9(CODE[279]), 
		 -> STR_4(CODE[9]), STR_3(CODE[5]), 

    SIM800xSDMSendBytes@data	PTR unsigned char  size(2) Largest target is 100
		 -> txmessage(BANK2[100]), 

    SIM800xHTTPRead@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemTask@errcode(BANK0[2]), 

    SIM800xHTTPRead@data	PTR unsigned char  size(2) Largest target is 30
		 -> rxmessage(BANK1[30]), 

    SIM800xHTTPRead@cnt	PTR unsigned long  size(2) Largest target is 4
		 -> SystemTask@cnt(BANK0[4]), 

    SIM800xHTTPAction@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemTask@errcode(BANK0[2]), 

    SIM800xHTTPAction@cnt	PTR unsigned long  size(2) Largest target is 4
		 -> SystemTask@cnt(BANK0[4]), 

    SIM800xHTTPAction@statuscode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemTask@scode(BANK0[2]), 

    SIM800xHTTPInputData@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemTask@errcode(BANK0[2]), 

    SIM800xHTTPInputData@data	PTR unsigned char  size(2) Largest target is 100
		 -> txmessage(BANK2[100]), 

    SIM800xHTTPSetContent@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemInit@err(COMRAM[2]), 

    SIM800xHTTPSetContent@content	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_10(CODE[17]), 

    SIM800xHTTPSetURL@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemInit@err(COMRAM[2]), 

    SIM800xHTTPSetURL@url	PTR const unsigned char  size(2) Largest target is 279
		 -> STR_9(CODE[279]), 

    SIM800xHTTPInit@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemInit@err(COMRAM[2]), 

    SIM800xIPGetState@ip	PTR unsigned char  size(2) Largest target is 20
		 -> SystemInit@ip(COMRAM[20]), 

    SIM800xIPSetAPN@apn	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_4(CODE[9]), 

    SIM800xIPSetConnectionType@contype	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 0

    ProcessResp4@ec	PTR unsigned int  size(2) Largest target is 2
		 -> SystemInit@err(COMRAM[2]), 

    ProcessResp2@str	PTR unsigned char  size(2) Largest target is 40
		 -> SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xIPGetState@str(COMRAM[30]), SIM800xGetSoftwareRevisionID@str(COMRAM[30]), 

    StrToInt@str	PTR const unsigned char  size(2) Largest target is 40
		 -> SIM800x3GPPGetSubscriberNumber@str(COMRAM[40]), SIM800x3GPPGetSignalQuality@str(COMRAM[20]), SIM800x3GPPGetOperatorName@str(COMRAM[40]), SIM800xHTTPReadHeader@str(COMRAM[30]), 
		 -> SIM800xHTTPReadState@str(COMRAM[30]), SIM800xHTTPRead@str(COMRAM[30]), SIM800xHTTPAction@str(COMRAM[30]), SIM800xHTTPInputData@str(COMRAM[30]), 
		 -> SIM800xGPRSGetNRegState@str(COMRAM[20]), SIM800xGPRSSetDataMode@str(COMRAM[20]), SIM800xGetIMSI@str(COMRAM[20]), ProcessResp4@str(COMRAM[20]), 

    SoftUARTPrint@str	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_27(CODE[17]), STR_26(CODE[3]), STR_25(CODE[7]), SystemTask@msg(BANK0[20]), 
		 -> STR_22(CODE[34]), STR_21(CODE[32]), STR_20(CODE[35]), STR_11(CODE[8]), 
		 -> STR_8(CODE[32]), STR_7(CODE[3]), STR_6(CODE[31]), SystemInit@ip(COMRAM[20]), 
		 -> STR_5(CODE[8]), STR_2(CODE[30]), STR_1(CODE[21]), 

    AddEntryToJsonObject@value	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_19(CODE[3]), STR_17(CODE[3]), STR_15(CODE[5]), STR_13(CODE[3]), 

    AddEntryToJsonObject@key	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_18(CODE[15]), STR_16(CODE[20]), STR_14(CODE[4]), STR_12(CODE[23]), 

    AddEntryToJsonObject@JsonObject	PTR unsigned char  size(2) Largest target is 100
		 -> txmessage(BANK2[100]), 

    AddEntryToJsonObject@Cpos	PTR unsigned int  size(2) Largest target is 2
		 -> cpos(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_SystemTask
    _SystemTask->_SIM800xHTTPRead
    _SoftUARTRxAvailable->___awmod
    _SoftUARTReceiveByte->___awmod
    _SIM800xHTTPRead->_sprintf
    _SIM800xHTTPInputData->_sprintf
    _SIM800xHTTPAction->_sprintf
    _sprintf->___llmod
    ___llmod->___lldiv
    _SystemInit->_SIM800xIPGetState
    _SoftUARTPrint->_SoftUARTTransmitByte
    _SIM800xInit->_Wait_ms
    _SIM800xIPSetConnectionType->_ProcessResp1
    _SIM800xIPSetAPN->_ProcessResp1
    _SIM800xIPOpen->_ProcessResp1
    _ProcessResp1->_SIM800xSDMRxAvailable
    _SIM800xIPGetState->_ProcessResp2
    _ProcessResp2->_SIM800xSDMReadF1Pkt
    _SIM800xHTTPSetURL->_ProcessResp4
    _SIM800xHTTPSetContent->_ProcessResp4
    _SIM800xHTTPInit->_ProcessResp4
    _SIM800xSDMPrint->_SIM800xSDMSendByte
    _ProcessResp4->_StrToInt
    _StrToInt->___lmul
    _SIM800xSDMReadF1Pkt->_SIM800xSDMRxAvailable
    _SIM800xSDMRxAvailable->___lwmod
    _SIM800xSDMReadByte->___lwmod

Critical Paths under _Isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_SystemTask

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  157361
                         _SystemInit
                         _SystemTask
 ---------------------------------------------------------------------------------
 (1) _SystemTask                                          31    31      0   63316
                                            104 COMRAM     2     2      0
                                              0 BANK0     29    29      0
                  _SIM800xHTTPAction
               _SIM800xHTTPInputData
                    _SIM800xHTTPRead
                      _SoftUARTPrint
                _SoftUARTReceiveByte
                _SoftUARTRxAvailable
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _SoftUARTRxAvailable                                  2     2      0     726
                                              6 COMRAM     2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _SoftUARTReceiveByte                                  3     1      2     749
                                              6 COMRAM     3     1      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     726
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPRead                                     58    44     14   18797
                                             46 COMRAM    58    44     14
                    _SIM800xSDMFlush
                     _SIM800xSDMPeek
                    _SIM800xSDMPrint
                 _SIM800xSDMReadByte
                _SIM800xSDMReadF1Pkt
              _SIM800xSDMRxAvailable
                           _StrToInt
                            _Tick_ms
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPInputData                                56    44     12   19619
                                             46 COMRAM    56    44     12
                    _SIM800xSDMFlush
                     _SIM800xSDMPeek
                    _SIM800xSDMPrint
                _SIM800xSDMReadF1Pkt
              _SIM800xSDMRxAvailable
                _SIM800xSDMSendBytes
                           _StrToInt
                            _Tick_ms
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMSendBytes                                  4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPAction                                   55    45     10   17997
                                             46 COMRAM    55    45     10
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                _SIM800xSDMReadF1Pkt
              _SIM800xSDMRxAvailable
                           _StrToInt
                            _Tick_ms
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             33    21     12    3640
                                             22 COMRAM    24    12     12
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     311
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     440
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                          22    22      0   94045
                                             79 COMRAM    22    22      0
               _AddEntryToJsonObject
                    _SIM800xHTTPInit
              _SIM800xHTTPSetContent
                  _SIM800xHTTPSetURL
                  _SIM800xIPGetState
                      _SIM800xIPOpen
                    _SIM800xIPSetAPN
         _SIM800xIPSetConnectionType
                        _SIM800xInit
                       _SoftUARTInit
                      _SoftUARTPrint
                        _SystimeInit
                     _USARTAsyncInit
 ---------------------------------------------------------------------------------
 (2) _USARTAsyncInit                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SystimeInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SoftUARTPrint                                        2     0      2    1429
                                              3 COMRAM     2     0      2
               _SoftUARTTransmitByte
 ---------------------------------------------------------------------------------
 (3) _SoftUARTTransmitByte                                 3     3      0      92
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _SoftUARTInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIM800xInit                                          2     2      0    7347
                                             12 COMRAM     2     2      0
                    _SIM800xSDMFlush
                     _SIM800xSDMInit
                     _SIM800xSDMPeek
                    _SIM800xSDMPrint
                 _SIM800xSDMReadByte
              _SIM800xSDMRxAvailable
                            _Wait_ms
 ---------------------------------------------------------------------------------
 (3) _Wait_ms                                             12     8      4     360
                                              0 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIM800xIPSetConnectionType                           3     1      2    8012
                                             18 COMRAM     3     1      2
                       _ProcessResp1
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                 _SIM800xSDMSendByte
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _SIM800xIPSetAPN                                      3     1      2    8012
                                             18 COMRAM     3     1      2
                       _ProcessResp1
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                 _SIM800xSDMSendByte
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _SIM800xIPOpen                                        1     1      0    6464
                                             18 COMRAM     1     1      0
                       _ProcessResp1
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                 _SIM800xSDMSendByte
 ---------------------------------------------------------------------------------
 (3) _ProcessResp1                                         9     9      0     679
                                              9 COMRAM     9     9      0
                     _SIM800xSDMPeek
              _SIM800xSDMRxAvailable
                            _Tick_ms
 ---------------------------------------------------------------------------------
 (2) _SIM800xIPGetState                                   45    43      2   11249
                                             35 COMRAM    44    42      2
                       _ProcessResp2
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
              _SIM800xSDMRxAvailable
                 _SIM800xSDMSendByte
                            _Tick_ms
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _ProcessResp2                                        12    10      2    3066
                                             23 COMRAM    12    10      2
                     _SIM800xSDMPeek
                _SIM800xSDMReadF1Pkt
                            _Tick_ms
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMPeek                                       3     3      0      44
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPSetURL                                    4     0      4   16910
                                             64 COMRAM     4     0      4
                       _ProcessResp4
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                 _SIM800xSDMSendByte
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPSetContent                                4     0      4   16910
                                             64 COMRAM     4     0      4
                       _ProcessResp4
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                 _SIM800xSDMSendByte
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2    1428
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPInit                                      2     0      2   15340
                                             64 COMRAM     2     0      2
                       _ProcessResp4
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMPrint                                      2     0      2    5719
                                              1 COMRAM     2     0      2
                 _SIM800xSDMSendByte
 ---------------------------------------------------------------------------------
 (4) _SIM800xSDMSendByte                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ProcessResp4                                        32    30      2    9523
                                             32 COMRAM    32    30      2
                _SIM800xSDMReadF1Pkt
              _SIM800xSDMRxAvailable
                           _StrToInt
                            _Tick_ms
 ---------------------------------------------------------------------------------
 (3) _StrToInt                                            20    16      4    4775
                                             12 COMRAM    20    16      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     648
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMReadF1Pkt                                 14    12      2    2371
                                              9 COMRAM    14    12      2
                    _SIM800xSDMFlush
                 _SIM800xSDMReadByte
              _SIM800xSDMRxAvailable
                            _Tick_ms
 ---------------------------------------------------------------------------------
 (3) _Tick_ms                                              4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMRxAvailable                                4     2      2     589
                                              5 COMRAM     4     2      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) _SIM800xSDMReadByte                                   1     1      0     612
                                              5 COMRAM     1     1      0
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     589
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _SIM800xSDMFlush                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AddEntryToJsonObject                                13     5      8    2232
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Isr                                                  0     0      0       0
                    _SysTimeCallBack
 ---------------------------------------------------------------------------------
 (8) _SysTimeCallBack                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SystemInit
     _AddEntryToJsonObject
     _SIM800xHTTPInit
       _ProcessResp4
         _SIM800xSDMReadF1Pkt
           _SIM800xSDMFlush
           _SIM800xSDMReadByte
             ___lwmod
           _SIM800xSDMRxAvailable
             ___lwmod
           _Tick_ms
         _SIM800xSDMRxAvailable
         _StrToInt
           ___lmul
         _Tick_ms
       _SIM800xSDMFlush
       _SIM800xSDMPrint
         _SIM800xSDMSendByte
     _SIM800xHTTPSetContent
       _ProcessResp4
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMSendByte
       _strlen
     _SIM800xHTTPSetURL
       _ProcessResp4
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMSendByte
       _strlen
     _SIM800xIPGetState
       _ProcessResp2
         _SIM800xSDMPeek
         _SIM800xSDMReadF1Pkt
         _Tick_ms
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMRxAvailable
       _SIM800xSDMSendByte
       _Tick_ms
       _strlen
     _SIM800xIPOpen
       _ProcessResp1
         _SIM800xSDMPeek
         _SIM800xSDMRxAvailable
         _Tick_ms
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMSendByte
     _SIM800xIPSetAPN
       _ProcessResp1
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMSendByte
       _strlen
     _SIM800xIPSetConnectionType
       _ProcessResp1
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMSendByte
       _strlen
     _SIM800xInit
       _SIM800xSDMFlush
       _SIM800xSDMInit
       _SIM800xSDMPeek
       _SIM800xSDMPrint
       _SIM800xSDMReadByte
       _SIM800xSDMRxAvailable
       _Wait_ms
     _SoftUARTInit
     _SoftUARTPrint
       _SoftUARTTransmitByte
     _SystimeInit
     _USARTAsyncInit
   _SystemTask
     _SIM800xHTTPAction
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMReadF1Pkt
       _SIM800xSDMRxAvailable
       _StrToInt
       _Tick_ms
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
     _SIM800xHTTPInputData
       _SIM800xSDMFlush
       _SIM800xSDMPeek
       _SIM800xSDMPrint
       _SIM800xSDMReadF1Pkt
       _SIM800xSDMRxAvailable
       _SIM800xSDMSendBytes
       _StrToInt
       _Tick_ms
       _sprintf
       _strlen
     _SIM800xHTTPRead
       _SIM800xSDMFlush
       _SIM800xSDMPeek
       _SIM800xSDMPrint
       _SIM800xSDMReadByte
       _SIM800xSDMReadF1Pkt
       _SIM800xSDMRxAvailable
       _StrToInt
       _Tick_ms
       _sprintf
     _SoftUARTPrint
     _SoftUARTReceiveByte
       ___awmod
     _SoftUARTRxAvailable
       ___awmod
     _sprintf

 _Isr (ROOT)
   _SysTimeCallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      DC       7       85.9%
BITBANK0            80      0       0       4        0.0%
BANK0               80     1D      65       5       78.9%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     6A      7D       1       99.2%
BITBIGSFRllhhh      25      0       0      18        0.0%
BITBIGSFRlh         19      0       0      17        0.0%
BITBIGSFRh           D      0       0      16        0.0%
BITBIGSFRllhl        C      0       0      19        0.0%
BITBIGSFRlll         6      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     376      21        0.0%
DATA                 0      0     376       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon May 01 13:52:02 2023

                                     SIM800xSDMReadF1Pkt@time 0013  
                                         ?_SIM800xSDMSendByte 0001  
                                                          l54 0D92  
                                                          l58 0DA0  
                                                          _IO 000F80  
                                        ?_SIM800xSDMSendBytes 0001  
                                                         l108 008C  
                                                         l117 02AC  
                                                         l227 1A64  
                                                         l251 1C72  
                                                         l511 18B6  
                                                         l409 14AA  
                                                         l290 180A  
                                                         l371 1548  
                                                         l365 1764  
                                                         l517 1922  
                                                         l358 10CE  
                                   __end_of_SIM800xHTTPAction 09F0  
                                                         l560 1402  
                                                         l545 1CBC  
                                                         l396 12E0  
                                                         l389 1300  
                                                         l805 09EA  
                                                         l771 1B3E  
                                                         l739 1AEA  
                                                         l827 0574  
                                                         l781 0BEC  
                                                         _GIE 007F97  
                                                         _Isr 0008  
                                                         _val 007C  
                                                ___awmod@sign 0006  
                                        ??_SIM800xSDMReadByte 0006  
                                   __end_of_SIM800xHTTPSetURL 1AF0  
                                                         wreg 000FE8  
                                   __end_of_SIM800xIPGetState 1408  
                                         SIM800xHTTPRead@data 002F  
                                                StrToInt@ctrl 001B  
                                         SIM800xHTTPRead@time 0063  
                                         SIM800xHTTPRead@size 0035  
                                                StrToInt@stop 0010  
                                        ??_SIM800xSDMSendByte 0001  
                                             ?_USARTAsyncInit 0001  
                                                        ?_Isr 0001  
                                                        l1025 1D48  
                                                        l1051 1D02  
                                                        l1214 05EE  
                                                        l1039 1BDC  
                                                        l1064 11FC  
                                                        l1217 0654  
                                                        l1262 15C8  
                                                        l3200 11B4  
                                                        l3112 1A10  
                                                        l3120 0F6A  
                                                        l3130 0FD2  
                                                        l3210 1E72  
                                                        l3108 19FA  
                                                        l3220 1572  
                                                        l3300 06A4  
                                                        l4020 0476  
                                                        l3126 0F9A  
                                                        l3150 1094  
                                                        l3222 1580  
                                                        l3080 1B7A  
                                                        l3072 1B54  
                                                        l3208 11E4  
                                                        l3232 15B8  
                                                        l3240 177E  
                                                        l4032 04D8  
                                                        l3074 1B5E  
                                                        l3146 108C  
                                                        l3138 1062  
                                                        l3242 178C  
                                                        l3322 079C  
                                                        l3314 0702  
                                                        l4026 0496  
                                                        l1643 17C8  
                                                        l1724 1B86  
                                                        l3500 198C  
                                                        l3332 1BEE  
                                                        l3412 14CE  
                                                        l3316 070C  
                                                        l3260 05A2  
                                                        l4028 04A4  
                                                        l3190 1184  
                                                        l3334 1BF4  
                                                        l3158 1CE2  
                                                        l3422 1506  
                                                        l3262 05AA  
                                                        l3254 0586  
                                                        l4038 050A  
                                                        l4046 052C  
                                                        l4134 0F2A  
                                                        l4118 0DE2  
                                                        l4150 1E86  
                                                        l3504 19B8  
                                                        l3360 1A72  
                                                        l3344 1A52  
                                                        l3248 17B8  
                                                        l3264 05B0  
                                                        l3512 1D5E  
                                                        l4136 0F38  
                                                        l3098 1BA8  
                                                        l3178 1124  
                                                        l3442 1252  
                                                        l3418 14DE  
                                                        l3610 192C  
                                                        l3290 0676  
                                                        l3530 169C  
                                                        l3522 167E  
                                                        l3188 1152  
                                                        l3196 118E  
                                                        l3436 121A  
                                                        l3428 1538  
                                                        l3604 14A6  
                                                        l3276 0614  
                                                        l3268 05B6  
                                                        l3532 16A6  
                                                        l3702 1378  
                                                        l3382 1704  
                                                        l3374 17F2  
                                                        l3358 1A6E  
                                                        l3614 1958  
                                                        l3294 069E  
                                                        l3542 16CE  
                                                        l3526 168C  
                                                        l3800 0268  
                                                        l3472 12A2  
                                                        l3464 1294  
                                                        l3624 1878  
                                                        l3490 12FC  
                                                        l3714 13B4  
                                                        l3546 16DE  
                                                        l3538 16C2  
                                                        l3484 12EE  
                                                        l3388 173A  
                                                        l3718 13E0  
                                                        l3398 1760  
                                                        l3670 1C86  
                                                        l3590 1460  
                                                        l3902 07EC  
                                                        l3648 18E4  
                                                        l3592 1466  
                                                        l3912 0842  
                                                        l3816 1C3E  
                                                        l3738 1ABA  
                                                        l3834 0A58  
                                                        l3756 1B0E  
                                                        l3844 0AC0  
                                                        l3782 00FA  
                                                        l3942 090C  
                                                        l3918 087A  
                                                        l3870 0B84  
                                                        l3792 01DC  
                                                        l3776 0042  
                                                        l3936 08DA  
                                                        l3848 0AF2  
                                                        l3794 0200  
                                                        l3778 00BC  
                                                        l3698 1346  
                                                        l3866 0B52  
                                                        l3876 0B9E  
                                                        l3798 023E  
                                                        l3958 09AA  
                                                        l3982 033A  
                                                        l3992 03A2  
                                                        l3978 0336  
                                                        l3998 03DA  
                                                        STR_1 7D04  
                                                        STR_2 7B73  
                                                        STR_3 7FE0  
                                                        STR_4 7F6B  
                                                        STR_5 7FB4  
                                                        STR_6 7B54  
                                                        STR_7 7B31  
                                                        STR_8 7B34  
                                                        STR_9 79B8  
                                                        u2020 174C  
                                                        u2101 126A  
                                                        u2050 14D8  
                                                        u2310 1950  
                                                        u2080 124C  
                                                        u2320 197C  
                                                        u2090 1264  
                                                        u2170 19B0  
                                                        u2410 138A  
                                                        u2250 16AC  
                                                        u1540 1B64  
                                                        u2180 19DC  
                                                        u2317 1946  
                                                        u1710 1182  
                                                        u2350 1872  
                                                        u2327 1972  
                                                        u1800 1792  
                                                        u2177 19A6  
                                                        u3057 1A5A  
                                                        u2521 0A1A  
                                                        u2450 1B0A  
                                                        u2370 18DE  
                                                        u2187 19D2  
                                                        u3067 1A7A  
                                                        u2531 0A2C  
                                                        u1740 11F4  
                                                        u1900 07AE  
                                                        u2620 0B96  
                                                        u2540 0A40  
                                                        u3077 1A8C  
                                                        u1670 10F2  
                                                        u1910 07CA  
                                                        u2550 0A56  
                                                        _PIE1 000F9D  
                                                        u1920 1C18  
                                                        u2800 03D4  
                                                        u2561 0A60  
                                                        u1770 1586  
                                                        u2730 091E  
                                                        u2810 03EC  
                                                        u2660 07E6  
                                                        u2580 0B04  
                                                        u1927 1C0E  
                                                        u2671 07F4  
                                                        u1880 06E4  
                                                        u2680 0874  
                                                        u2690 088C  
                                                        u2780 0334  
                                                        u1990 183C  
                                                        u2791 0342  
                                                        u2880 051C  
                                                        _RCIF 007CF5  
                                        SIM800xHTTPRead@F2948 0164  
                                                        _TMR0 000FD6  
                                       ??_SIM800xSDMReadF1Pkt 000C  
                                                        _Tout 0078  
                                                        _cpos 0076  
                                                        _main 1E80  
                                       SoftUARTTransmitByte@k 0003  
                                                        fsr1h 000FE2  
                                                        fsr2h 000FDA  
                                                        indf1 000FE7  
                                                        indf2 000FDF  
                                                        fsr1l 000FE1  
                                                        fsr2l 000FD9  
                                                        btemp 007E  
                                                        prodh 000FF4  
                                                        prodl 000FF3  
                                         SIM800xIPGetState@ip 0024  
                                                        start 0016  
                                      ?_SIM800xSDMRxAvailable 0006  
                                             ProcessResp2@res 0022  
                                             ProcessResp4@res 003F  
                                             ProcessResp2@str 0018  
                                             ProcessResp4@str 0027  
                                                ___param_bank 000000  
                                               StrToInt@start 000F  
                                                       ??_Isr 0001  
                                       ??_SIM800xSDMSendBytes 0005  
                                             __end_of_Tick_ms 1E30  
                                             __end_of_Wait_ms 1850  
                                                ?_SIM800xInit 0001  
                                                       ?_main 0001  
                                                       STR_10 7D9C  
                                                       STR_11 7FB4  
                                                       STR_12 7CAE  
                                                       STR_20 7ACF  
                                                       STR_13 7FF3  
                                                       STR_21 7B14  
                                                       STR_14 7FE9  
                                                       STR_30 7E08  
                                                       STR_22 7AF2  
                                                       STR_15 7FDB  
                                                       STR_31 7E7A  
                                                       STR_23 7C7F  
                                                       STR_32 7FD0  
                                                       STR_40 7F47  
                                                       STR_16 7D2D  
                                                       STR_24 7BE7  
                                                       STR_17 7FF9  
                                                       STR_25 7FC3  
                                                       STR_41 7ECE  
                                                       STR_26 7B31  
                                                       STR_34 7F74  
                                                       STR_42 7E86  
                                                       STR_50 7E49  
                                                       STR_18 7DEB  
                                                       STR_43 7ECE  
                                                       STR_19 7FF6  
                                                       STR_35 7F84  
                                                       STR_27 7D8B  
                                                       STR_28 7FE5  
                                                       STR_44 7FAC  
                                                       STR_36 7F9C  
                                                       STR_60 7E56  
                                             __end_of___awmod 16EC  
                                                       STR_29 7FCA  
                                                       STR_37 7F7C  
                                                       STR_53 7F59  
                                                       STR_61 7EE6  
                                                       STR_62 7FBC  
                                                       STR_38 7F8C  
                                                       STR_46 7F62  
                                                       STR_54 7EAA  
                                                       STR_70 7E15  
                                                       STR_71 7FFC  
                                                       STR_39 7FD6  
                                                       STR_55 7E92  
                                                       STR_63 7B91  
                                                       STR_72 7FF0  
                                                       STR_48 7FA4  
                                                       STR_56 7EC2  
                                                       STR_64 7BAE  
                                                       STR_73 7FED  
                                                       STR_65 7F08  
                                                       STR_81 7EFD  
                                                       STR_57 7DCD  
                                                       STR_82 7F3D  
                                                       STR_58 7F13  
                                                       STR_66 7EB6  
                                                       STR_90 7C4F  
                                                       STR_75 7EDA  
                                                       STR_67 7E9E  
                                                       STR_59 7E62  
                                                       STR_83 7E3C  
                                                       STR_91 7C36  
                                                       STR_76 7E6E  
                                                       STR_84 7E2F  
                                                       STR_68 7D19  
                                                       STR_92 7BCB  
                                                       STR_77 7F1E  
                                                       STR_69 7DDC  
                                                       STR_85 7D41  
                                                       STR_93 7C1C  
                                                       STR_78 7EF2  
                                                       STR_86 7D54  
                                                       STR_94 7C97  
                                                       STR_79 7F33  
                                                       STR_87 7D79  
                                                       STR_95 7C67  
                                                       STR_88 7CEF  
                                                       STR_96 7CC5  
                                                       STR_97 7D67  
                                                       STR_89 7C02  
                                                       STR_98 7CDA  
                                                       STR_99 7DFA  
                                             __end_of___lldiv 15DE  
                                                       _T0CON 000FD5  
                                             __end_of___llmod 17DE  
                                             __end_of___lwmod 1B94  
                                                       i2l306 1D26  
                                                       i2l307 1D3E  
                                                       _RCREG 000FAE  
                                                       _RCSTA 000FAB  
                                                       _SPBRG 000FAF  
                                                       _TXREG 000FAD  
                                                       _TXSTA 000FAC  
                                         ___lmul@multiplicand 0005  
                                            __end_of_OSC_FREQ 79B8  
                                        SIM800xHTTPSetURL@url 0041  
                                             __end_of_dpowers 79B7  
                                     __end_of_SIM800xHTTPInit 1E1A  
                                     __end_of_SIM800xHTTPRead 057A  
                                     __end_of_SIM800xIPSetAPN 1928  
                                                       tablat 000FF5  
                                     __end_of_SIM800xSDMFlush 1E46  
                                     __end_of_SIM800xSDMPrint 19E8  
                                        SIM800xIPGetState@cid 004D  
                                        SIM800xIPGetState@len 004E  
                                        SIM800xIPGetState@res 004C  
                                                       ttemp5 007F  
                                                       ttemp6 0082  
                                                       ttemp7 0086  
                                        SIM800xIPGetState@str 002A  
                                                       status 000FD8  
                                                       wtemp8 007F  
                                             __end_of_sprintf 07DC  
                                            ProcessResp1@time 000E  
                                            ProcessResp2@time 001E  
                                            ProcessResp4@time 003B  
                                   SIM800xHTTPReadState@F2965 0146  
                                             __initialization 15DE  
                                                __end_of_main 1E8E  
                                                      ??_main 006B  
                                            SIM800xIPOpen@cid 0013  
                                               __activetblptr 000002  
                                       __end_of_SoftUARTPrint 1988  
                                    AddEntryToJsonObject@Cpos 0007  
                                            __end_of_StrToInt 10D4  
                                            ___llmod@dividend 000E  
                                                      STR_100 7DAD  
                                                      STR_101 7E22  
                                                      STR_102 7DBD  
                                                      STR_103 7F29  
                                                      STR_104 7F94  
                                                      STR_105 7F50  
                                                      _INT0IF 007F91  
                                                      _INTCON 000FF2  
                                                      _TMR0IE 007F95  
                                                      _TMR0IF 007F92  
                                                      _DecVar 00BC  
                                           ??_SysTimeCallBack 0001  
                                                      _IncVar 006B  
                                                      _RxFIFO 0200  
                               __end_of_SIM800xHTTPSetContent 1B44  
                                                   ??_Tick_ms 0005  
                                         _SoftUARTReceiveByte 1C2E  
                                                   ??_Wait_ms 0005  
                                                      ___lmul 19E8  
                                                   ??___awmod 0005  
                                                   ??___lldiv 0009  
                                                   ??___llmod 0016  
                                                   ??___lwmod 0005  
                                                      clear_0 1624  
                                                      clear_1 1630  
                                                      clear_2 163C  
                                                      clear_3 1648  
                                                      clear_4 1654  
                                             ___awmod@divisor 0003  
                                                      isa$std 000001  
                                             ___awmod@counter 0005  
                                     SoftUARTTransmitByte@tmp 0002  
                                                      _strlen 1BE2  
                                 SIM800xHTTPAction@statuscode 002F  
                                                __pdataCOMRAM 0078  
                                           ProcessResp4@F2649 00A8  
                                                __mediumconst 798E  
                                        ?_SoftUARTReceiveByte 0007  
                                                      tblptrh 000FF7  
                                                      tblptrl 000FF6  
                                                      tblptru 000FF8  
                                            SoftUARTPrint@str 0004  
                                                   ??_sprintf 0023  
                                         _SoftUARTRxAvailable 1DA8  
                                            ?_SIM800xHTTPInit 0041  
                                            ?_SIM800xHTTPRead 002F  
                                            ?_SIM800xIPSetAPN 0013  
                                            ?_SIM800xSDMFlush 0001  
                                               _SIM800xIPOpen 1C78  
                                                  __accesstop 0080  
                                     __end_of__initialization 165A  
                                            ?_SIM800xSDMPrint 0002  
                                               ___rparam_used 000001  
                                      SIM800xHTTPInit@errcode 0041  
                                                  StrToInt@po 001C  
                                           SIM800xHTTPRead@sz 005F  
                                              __pcstackCOMRAM 0001  
                                                __pidataBANK0 1E9E  
                                        ?_SoftUARTRxAvailable 0001  
                                      SIM800xHTTPRead@errcode 003B  
                                            ??_USARTAsyncInit 0001  
                                                  _SystemInit 0BF2  
                                       ??_SoftUARTReceiveByte 0009  
                                                  _SystemTask 0DA6  
                                           SIM800xSDMPeek@idx 0003  
                                                  __pbssBANK0 0080  
                                                  __pbssBANK1 0100  
                                                  __pbssBANK2 0200  
                                                  __pbssBANK3 0300  
                                              ?_SIM800xIPOpen 0001  
                                     ??_SIM800xSDMRxAvailable 0008  
                                                  __pnvCOMRAM 007C  
                              AddEntryToJsonObject@JsonObject 0001  
                                       ??_SoftUARTRxAvailable 0007  
                                SIM800xHTTPSetContent@content 0041  
                                                     ?___lmul 0001  
                                SIM800xHTTPSetContent@errcode 0043  
                                                   ?_StrToInt 000D  
                                               ?_SoftUARTInit 0001  
                                              ___lmul@product 0009  
                                                     ?_strlen 0001  
                                                     _INTCON2 000FF1  
                                 __end_of_SIM800xSDMReadF1Pkt 1202  
                                        SIM800xSDMReadF1Pkt@i 0012  
                                               ??_SystimeInit 0001  
                                 __end_of_SIM800xSDMSendBytes 1D76  
                                                     __Hparam 0000  
                                                     __Lparam 0000  
                                                     _Tick_ms 1E1A  
                                                     _Wait_ms 17DE  
                                               ?_ProcessResp1 0001  
                                               ?_ProcessResp2 0018  
                                               ?_ProcessResp4 0021  
                                                     ___awmod 1668  
                                              ??_SoftUARTInit 0001  
                                                     ___lldiv 154E  
                                                     ___llmod 176A  
                                                  ??_StrToInt 0011  
                                                     ___lwmod 1B44  
                                                     __pcinit 15DE  
                                                     __ramtop 0600  
                                                     __ptext0 1E80  
                                                     __ptext1 0DA6  
                                                     __ptext2 1DA8  
                                                     __ptext3 1C2E  
                                                     __ptext4 1668  
                                                     __ptext5 0302  
                                                     __ptext6 09F0  
                                                     __ptext7 1D44  
                                                     __ptext8 07DC  
                                                     __ptext9 057A  
                                                     _dpowers 798F  
                                                 ?_SystemInit 0001  
                                                 ?_SystemTask 0001  
                                            ___awmod@dividend 0001  
                                             _SysTimeCallBack 1D08  
                                    SoftUARTTransmitByte@data 0001  
                                             ??_SIM800xIPOpen 0013  
                                                     _sprintf 057A  
                                        end_of_initialization 165A  
                                               __Lmediumconst 798E  
                                             ___lldiv@divisor 0005  
                                             ___lldiv@counter 000D  
                                              ??_ProcessResp1 000A  
                                              ??_ProcessResp2 001A  
                                              ??_ProcessResp4 0023  
                                                     postdec1 000FE5  
                                                     postdec2 000FDD  
                                                     postinc0 000FEE  
                                                     postinc2 000FDE  
                                      SIM800xIPGetState@time1 0048  
                                         __end_of_SystimeInit 1DF8  
                                                     strlen@s 0001  
                                                SystemInit@ip 0050  
                                          SIM800xHTTPAction@t 005B  
                                              _SIM800xSDMInit 1E8E  
                                              _SIM800xSDMPeek 1CC2  
                                      SIM800xSDMReadF1Pkt@val 0010  
                                      SIM800xSDMReadF1Pkt@tmp 0017  
                                ??_SIM800xIPSetConnectionType 0015  
                                          SIM800xHTTPRead@cnt 0039  
                                          SIM800xHTTPRead@res 0067  
                                                 StrToInt@val 0016  
                                          SIM800xHTTPRead@str 0041  
                                                 StrToInt@str 000D  
                                                   _TXSTAbits 000FAC  
                                          SIM800xIPGetState@i 004F  
                                              ProcessResp4@ec 0021  
                             _Rxfifocurrent@SIM800x_SDM$F1156 006F  
                                       _SIM800xHTTPSetContent 1AF0  
                                    SIM800xHTTPInputData@data 002F  
                                    SIM800xHTTPInputData@time 0061  
                                              __end_of___lmul 1A46  
                                               __pidataCOMRAM 1E9A  
                                     __end_of_SysTimeCallBack 1D44  
                                      __end_of_SIM800xSDMInit 1E9A  
                                      __end_of_SIM800xSDMPeek 1D08  
                                __end_of_SoftUARTTransmitByte 1A9C  
                                              __end_of_strlen 1C2E  
                                         start_initialization 15DE  
                                    SIM800xHTTPSetURL@errcode 0043  
                                                 __end_of_Isr 0016  
                                        __end_of_SoftUARTInit 1E6E  
                                __end_of_AddEntryToJsonObject 0302  
                                              SIM800xInit@tmp 000D  
                                          SIM800xIPSetAPN@cid 0015  
                                          SIM800xIPSetAPN@apn 0013  
                                     SIM800xHTTPRead@strindex 0031  
                                     AddEntryToJsonObject@key 0003  
                                             ___llmod@divisor 0012  
                               __end_of_SIM800xSDMRxAvailable 1DA8  
                                             ___llmod@counter 0016  
                                __end_of_SIM800xHTTPInputData 0BF2  
                                                 _SystimeInit 1DD6  
                                                    ??___lmul 0009  
                                                 __pdataBANK0 00E1  
                                               ??_SIM800xInit 000D  
                                 __end_of_SoftUARTReceiveByte 1C78  
                                                    ??_strlen 0003  
                                      _Tout@SIM800x_SDM$F1157 00E1  
                                                   _Rxfifoptr 0075  
                                             ?_SIM800xSDMInit 0001  
                                             ?_SIM800xSDMPeek 0001  
                                  SIM800xHTTPReadHeader@F2985 0128  
                                                 __pbssCOMRAM 006B  
                                                   StrToInt@i 0020  
                                                   StrToInt@j 001A  
                                               _SoftUARTPrint 1928  
                                               __pcstackBANK0 00C4  
                                        __end_of_ProcessResp1 176A  
                                        __end_of_ProcessResp2 154E  
                                        __end_of_ProcessResp4 1306  
                                 _Rxfifoptr@SIM800x_SDM$F1155 0071  
                                          SIM800xSDMPrint@str 0002  
                                                 sprintf@flag 002D  
                                   SIM800xHTTPInputData@F2917 01A0  
                                                 sprintf@prec 0025  
                           SIM800xIPSetConnectionType@contype 0013  
                                 __end_of_SoftUARTRxAvailable 1DD6  
                                      SIM800xSDMReadByte@data 0006  
                                                    ?_Tick_ms 0001  
                                      ?_SIM800xHTTPSetContent 0041  
                                                    ?_Wait_ms 0001  
                                                   __pintcode 0008  
                                               __pmediumconst 798E  
                                                    ?___awmod 0001  
                                                    ?___lldiv 0001  
                                                    ?___llmod 000E  
                                                    ?___lwmod 0001  
                                            ?_SysTimeCallBack 0001  
                                  __end_of_SIM800xSDMReadByte 1BE2  
                                              ?_SoftUARTPrint 0004  
                                                ??_SystemInit 0050  
                                                ??_SystemTask 0069  
                                  __end_of_SIM800xSDMSendByte 1E80  
                            SIM800x3GPPGetSignalQuality@F3026 00C2  
                            SIM800x3GPPGetSignalQuality@F3018 0080  
                            SIM800x3GPPGetSignalQuality@F3028 00C0  
                                         __end_of_SIM800xInit 14B0  
                                 SIM800xHTTPInputData@errcode 0039  
                                                    ?_sprintf 0017  
                          __end_of_SIM800xIPSetConnectionType 18BC  
                                  _SIM800xIPSetConnectionType 1850  
                                 SIM800xHTTPInputData@timeout 0035  
                               SIM800xIPSetConnectionType@cid 0015  
                                    SIM800xHTTPAction@errcode 0037  
                                    _RxFIFO@SIM800x_SDM$F1154 0300  
                                        _SoftUARTTransmitByte 1A46  
                             SIM800x3GPPGetOperatorName@F3003 0100  
                                          __end_of_SystemInit 0DA6  
                                          __end_of_SystemTask 0F3E  
                                                    _OSC_FREQ 79B7  
                                           ??_SIM800xHTTPInit 0043  
                                           ??_SIM800xHTTPRead 003D  
                                        _AddEntryToJsonObject 001A  
                                           ??_SIM800xIPSetAPN 0015  
                                           ??_SIM800xSDMFlush 0001  
                                           ??_SIM800xSDMPrint 0004  
                                        _SIM800xHTTPInputData 09F0  
                                               ProcessResp1@c 0012  
                                                   _rxmessage 01BE  
                                     SIM800xHTTPInputData@cnt 0031  
                                     SIM800xHTTPInputData@len 005D  
                                     SIM800xHTTPInputData@res 0065  
                                     SIM800xHTTPInputData@str 003F  
                                           ___lmul@multiplier 0001  
                                                   copy_data0 15F2  
                                                   copy_data1 1612  
                                                   _txmessage 028C  
                                       __end_of_SIM800xIPOpen 1CC2  
                                                Wait_ms@value 0001  
                                       ?_SoftUARTTransmitByte 0001  
                                                    __Hrparam 0000  
                                                    Wait_ms@x 0009  
                                                    __Lrparam 0000  
                                                    _StrToInt 0F3E  
                                                _SoftUARTInit 1E5A  
                                                 _SIM800xInit 1408  
                                       ?_AddEntryToJsonObject 0001  
                                             ??_SoftUARTPrint 0006  
                                                    _Rxstatus 0073  
                                                  sprintf@val 0027  
                                       ?_SIM800xHTTPInputData 002F  
                                                    __ptext10 176A  
                                                    __ptext11 154E  
                                                    __ptext20 1E8E  
                                                    __ptext12 0BF2  
                                                    __ptext21 1850  
                                                    __ptext13 1E46  
                                                    __ptext30 1BE2  
                                                    __ptext22 18BC  
                                                    __ptext14 1DD6  
                                                    __ptext31 1DF8  
                                                    __ptext23 1C78  
                                                    __ptext15 1928  
                                                    __ptext40 1B94  
                                                    __ptext32 1988  
                                                    __ptext24 16EC  
                                                    __ptext16 1A46  
                                                    __ptext41 1B44  
                                                    __ptext33 1E6E  
                                                    __ptext25 1306  
                                                    __ptext17 1E5A  
                                                    __ptext42 1E30  
                                                    __ptext34 1202  
                                                    __ptext26 14B0  
                                                    __ptext18 1408  
                                                    __ptext43 001A  
                                                    __ptext35 0F3E  
                                                    __ptext27 1CC2  
                                                    __ptext19 17DE  
                                                    __ptext36 19E8  
                                                    __ptext28 1A9C  
                                                    __ptext45 1D08  
                                                    __ptext37 10D4  
                                                    __ptext29 1AF0  
                                                    __ptext38 1E1A  
                                                    __ptext39 1D76  
                         SIM800x3GPPGetSubscriberNumber@F3041 0264  
                                     SIM800xHTTPAction@method 005F  
                                                ?_SystimeInit 0001  
                                  AddEntryToJsonObject@offset 000D  
                                                    isa$xinst 000000  
                                                    int$flags 007E  
                                                _ProcessResp1 16EC  
                                                _ProcessResp2 14B0  
                                                _ProcessResp4 1202  
                                            ??_SIM800xSDMInit 0001  
                                            ??_SIM800xSDMPeek 0001  
                                                  _INTCONbits 000FF2  
                                      SIM800xHTTPAction@F2929 0182  
                                         SIM800xGetIMSI@F2686 0094  
                                                    intlevel2 1EA2  
                                                   sprintf@ap 002B  
                                                   sprintf@sp 0017  
                                              _USARTAsyncInit 1E46  
                                     SIM800xSDMSendBytes@data 0001  
                                            ___lwmod@dividend 0001  
                                            ___lldiv@dividend 0001  
                                      ??_SoftUARTTransmitByte 0001  
                                     ??_SIM800xHTTPSetContent 0045  
                                       _SIM800xSDMRxAvailable 1D76  
                                   AddEntryToJsonObject@value 0005  
                                     SoftUARTReceiveByte@data 0009  
                                      ??_AddEntryToJsonObject 0009  
                                      SIM800xSDMSendByte@data 0001  
                                         _SIM800xSDMReadF1Pkt 10D4  
                                      ??_SIM800xHTTPInputData 003B  
                                                    sprintf@c 002E  
                                                    sprintf@f 0019  
                                           USARTAsyncInit@bgr 0001  
                                      SIM800xSDMSendBytes@cnt 0003  
                                            ___lldiv@quotient 0009  
                                             ___lwmod@divisor 0003  
                                                    strlen@cp 0003  
                                             ___lwmod@counter 0005  
                                           _SIM800xHTTPAction 07DC  
                                       SIM800xHTTPAction@time 0060  
                                           SystemTask@errcode 00DB  
                                       SIM800xHTTPAction@tout 0033  
                                           _SIM800xHTTPSetURL 1A9C  
                                          ?_SIM800xHTTPAction 002F  
                                           _SIM800xIPGetState 1306  
                                      __end_of_USARTAsyncInit 1E5A  
                                          ?_SIM800xHTTPSetURL 0041  
                                 ?_SIM800xIPSetConnectionType 0013  
                                          ?_SIM800xIPGetState 0024  
                                         _SIM800xSDMSendBytes 1D44  
                                          _SIM800xSDMReadByte 1B94  
                                        SIM800xHTTPAction@cnt 0031  
                                        SIM800xHTTPAction@res 0064  
                                        SIM800xHTTPAction@str 003D  
                                        ?_SIM800xSDMReadF1Pkt 000A  
                                               SystemInit@err 0064  
                                               _Rxfifocurrent 0074  
                                         ??_SIM800xHTTPAction 0039  
                                          _SIM800xSDMSendByte 1E6E  
                                             _SIM800xHTTPInit 1DF8  
                                             _SIM800xHTTPRead 0302  
                                             SystemTask@scode 00D9  
                                         ??_SIM800xHTTPSetURL 0045  
                                         ??_SIM800xIPGetState 0026  
                                             _SIM800xIPSetAPN 18BC  
                                         ?_SIM800xSDMReadByte 0001  
                                               SystemTask@cmd 00D8  
                                             _SIM800xSDMFlush 1E30  
                                               SystemTask@cnt 00DD  
                                               SystemTask@msg 00C4  
                                     SIM800xSDMReadF1Pkt@data 000A  
                                             _SIM800xSDMPrint 1988  
