

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Apr 02 12:53:13 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=6
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=4
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=4
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=4
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=4
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=4
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=5
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=6
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=4
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=6
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=4
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=4
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=4
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=4
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=4
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=4
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=4
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=4
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=4
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=4
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=7
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=4
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=4
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=4
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=4
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=4
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=6
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=4
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=4
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=4
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=6
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=4
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=4
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=4
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75  0000                     
    76                           ; Version 2.36
    77                           ; Generated 28/01/2022 GMT
    78                           ; 
    79                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution. Publication is not required when
    93                           ;        this file is used in an embedded application.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F452 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     
   112                           	psect	idataCOMRAM
   113  0021BA                     __pidataCOMRAM:
   114                           	callstack 0
   115                           
   116                           ;initializer for _Tout
   117  0021BA  0FA0               	dw	4000
   118  0021BC  0000               	dw	0
   119                           
   120                           	psect	idataBANK0
   121  0021BE                     __pidataBANK0:
   122                           	callstack 0
   123                           
   124                           ;initializer for _Tout@SIM800x_SDM$F1169
   125  0021BE  07D0               	dw	2000
   126  0021C0  0000               	dw	0
   127                           
   128                           	psect	mediumconst
   129  00798E                     __pmediumconst:
   130                           	callstack 0
   131  00798E  00                 	db	0
   132  00798F                     _dpowers:
   133                           	callstack 0
   134  00798F  0001               	dw	1
   135  007991  0000               	dw	0
   136  007993  000A               	dw	10
   137  007995  0000               	dw	0
   138  007997  0064               	dw	100
   139  007999  0000               	dw	0
   140  00799B  03E8               	dw	1000
   141  00799D  0000               	dw	0
   142  00799F  2710               	dw	10000
   143  0079A1  0000               	dw	0
   144  0079A3  86A0               	dw	34464
   145  0079A5  0001               	dw	1
   146  0079A7  4240               	dw	16960
   147  0079A9  000F               	dw	15
   148  0079AB  9680               	dw	38528
   149  0079AD  0098               	dw	152
   150  0079AF  E100               	dw	57600
   151  0079B1  05F5               	dw	1525
   152  0079B3  CA00               	dw	51712
   153  0079B5  3B9A               	dw	15258
   154  0079B7                     __end_of_dpowers:
   155                           	callstack 0
   156  0079B7  10                 	db	16
   157  0079B8                     __end_of_OSC_FREQ:
   158                           	callstack 0
   159  0000                     _RCREG	set	4014
   160  0000                     _SPBRG	set	4015
   161  0000                     _TXREG	set	4013
   162  0000                     _TXSTA	set	4012
   163  0000                     _INTCONbits	set	4082
   164  0000                     _CREN	set	32092
   165  0000                     _OERR	set	32089
   166  0000                     _TMR0IE	set	32661
   167  0000                     _TMR0IF	set	32658
   168  0000                     _GIE	set	32663
   169  0000                     _INT0IE	set	32660
   170  0000                     _INT0IF	set	32657
   171  0000                     _PIE1	set	3997
   172  0000                     _T0CON	set	4053
   173  0000                     _INTCON2	set	4081
   174  0000                     _INTCON	set	4082
   175  0000                     _TMR0	set	4054
   176  0000                     _RCSTA	set	4011
   177  0000                     _TXSTAbits	set	4012
   178  0000                     _RCIF	set	31989
   179  0079B8                     STR_9:
   180  0079B8  68                 	db	104	;'h'
   181  0079B9  74                 	db	116	;'t'
   182  0079BA  74                 	db	116	;'t'
   183  0079BB  70                 	db	112	;'p'
   184  0079BC  3A                 	db	58	;':'
   185  0079BD  2F                 	db	47
   186  0079BE  2F                 	db	47
   187  0079BF  62                 	db	98	;'b'
   188  0079C0  61                 	db	97	;'a'
   189  0079C1  63                 	db	99	;'c'
   190  0079C2  6B                 	db	107	;'k'
   191  0079C3  65                 	db	101	;'e'
   192  0079C4  6E                 	db	110	;'n'
   193  0079C5  64                 	db	100	;'d'
   194  0079C6  2E                 	db	46
   195  0079C7  74                 	db	116	;'t'
   196  0079C8  68                 	db	104	;'h'
   197  0079C9  69                 	db	105	;'i'
   198  0079CA  6E                 	db	110	;'n'
   199  0079CB  67                 	db	103	;'g'
   200  0079CC  65                 	db	101	;'e'
   201  0079CD  72                 	db	114	;'r'
   202  0079CE  2E                 	db	46
   203  0079CF  69                 	db	105	;'i'
   204  0079D0  6F                 	db	111	;'o'
   205  0079D1  2F                 	db	47
   206  0079D2  76                 	db	118	;'v'
   207  0079D3  33                 	db	51	;'3'
   208  0079D4  2F                 	db	47
   209  0079D5  75                 	db	117	;'u'
   210  0079D6  73                 	db	115	;'s'
   211  0079D7  65                 	db	101	;'e'
   212  0079D8  72                 	db	114	;'r'
   213  0079D9  73                 	db	115	;'s'
   214  0079DA  2F                 	db	47
   215  0079DB  46                 	db	70	;'F'
   216  0079DC  69                 	db	105	;'i'
   217  0079DD  72                 	db	114	;'r'
   218  0079DE  6D                 	db	109	;'m'
   219  0079DF  77                 	db	119	;'w'
   220  0079E0  61                 	db	97	;'a'
   221  0079E1  72                 	db	114	;'r'
   222  0079E2  65                 	db	101	;'e'
   223  0079E3  45                 	db	69	;'E'
   224  0079E4  6E                 	db	110	;'n'
   225  0079E5  67                 	db	103	;'g'
   226  0079E6  69                 	db	105	;'i'
   227  0079E7  6E                 	db	110	;'n'
   228  0079E8  65                 	db	101	;'e'
   229  0079E9  65                 	db	101	;'e'
   230  0079EA  72                 	db	114	;'r'
   231  0079EB  73                 	db	115	;'s'
   232  0079EC  2F                 	db	47
   233  0079ED  64                 	db	100	;'d'
   234  0079EE  65                 	db	101	;'e'
   235  0079EF  76                 	db	118	;'v'
   236  0079F0  69                 	db	105	;'i'
   237  0079F1  63                 	db	99	;'c'
   238  0079F2  65                 	db	101	;'e'
   239  0079F3  73                 	db	115	;'s'
   240  0079F4  2F                 	db	47
   241  0079F5  53                 	db	83	;'S'
   242  0079F6  49                 	db	73	;'I'
   243  0079F7  4D                 	db	77	;'M'
   244  0079F8  38                 	db	56	;'8'
   245  0079F9  30                 	db	48	;'0'
   246  0079FA  30                 	db	48	;'0'
   247  0079FB  4C                 	db	76	;'L'
   248  0079FC  2F                 	db	47
   249  0079FD  63                 	db	99	;'c'
   250  0079FE  61                 	db	97	;'a'
   251  0079FF  6C                 	db	108	;'l'
   252  007A00  6C                 	db	108	;'l'
   253  007A01  62                 	db	98	;'b'
   254  007A02  61                 	db	97	;'a'
   255  007A03  63                 	db	99	;'c'
   256  007A04  6B                 	db	107	;'k'
   257  007A05  2F                 	db	47
   258  007A06  64                 	db	100	;'d'
   259  007A07  61                 	db	97	;'a'
   260  007A08  74                 	db	116	;'t'
   261  007A09  61                 	db	97	;'a'
   262  007A0A  3F                 	db	63	;'?'
   263  007A0B  61                 	db	97	;'a'
   264  007A0C  75                 	db	117	;'u'
   265  007A0D  74                 	db	116	;'t'
   266  007A0E  68                 	db	104	;'h'
   267  007A0F  6F                 	db	111	;'o'
   268  007A10  72                 	db	114	;'r'
   269  007A11  69                 	db	105	;'i'
   270  007A12  7A                 	db	122	;'z'
   271  007A13  61                 	db	97	;'a'
   272  007A14  74                 	db	116	;'t'
   273  007A15  69                 	db	105	;'i'
   274  007A16  6F                 	db	111	;'o'
   275  007A17  6E                 	db	110	;'n'
   276  007A18  3D                 	db	61	;'='
   277  007A19  65                 	db	101	;'e'
   278  007A1A  79                 	db	121	;'y'
   279  007A1B  4A                 	db	74	;'J'
   280  007A1C  68                 	db	104	;'h'
   281  007A1D  62                 	db	98	;'b'
   282  007A1E  47                 	db	71	;'G'
   283  007A1F  63                 	db	99	;'c'
   284  007A20  69                 	db	105	;'i'
   285  007A21  4F                 	db	79	;'O'
   286  007A22  69                 	db	105	;'i'
   287  007A23  4A                 	db	74	;'J'
   288  007A24  49                 	db	73	;'I'
   289  007A25  55                 	db	85	;'U'
   290  007A26  7A                 	db	122	;'z'
   291  007A27  49                 	db	73	;'I'
   292  007A28  31                 	db	49	;'1'
   293  007A29  4E                 	db	78	;'N'
   294  007A2A  69                 	db	105	;'i'
   295  007A2B  49                 	db	73	;'I'
   296  007A2C  73                 	db	115	;'s'
   297  007A2D  49                 	db	73	;'I'
   298  007A2E  6E                 	db	110	;'n'
   299  007A2F  52                 	db	82	;'R'
   300  007A30  35                 	db	53	;'5'
   301  007A31  63                 	db	99	;'c'
   302  007A32  43                 	db	67	;'C'
   303  007A33  49                 	db	73	;'I'
   304  007A34  36                 	db	54	;'6'
   305  007A35  49                 	db	73	;'I'
   306  007A36  6B                 	db	107	;'k'
   307  007A37  70                 	db	112	;'p'
   308  007A38  58                 	db	88	;'X'
   309  007A39  56                 	db	86	;'V'
   310  007A3A  43                 	db	67	;'C'
   311  007A3B  4A                 	db	74	;'J'
   312  007A3C  39                 	db	57	;'9'
   313  007A3D  2E                 	db	46
   314  007A3E  65                 	db	101	;'e'
   315  007A3F  79                 	db	121	;'y'
   316  007A40  4A                 	db	74	;'J'
   317  007A41  6C                 	db	108	;'l'
   318  007A42  65                 	db	101	;'e'
   319  007A43  48                 	db	72	;'H'
   320  007A44  41                 	db	65	;'A'
   321  007A45  69                 	db	105	;'i'
   322  007A46  4F                 	db	79	;'O'
   323  007A47  6A                 	db	106	;'j'
   324  007A48  45                 	db	69	;'E'
   325  007A49  32                 	db	50	;'2'
   326  007A4A  4F                 	db	79	;'O'
   327  007A4B  44                 	db	68	;'D'
   328  007A4C  41                 	db	65	;'A'
   329  007A4D  7A                 	db	122	;'z'
   330  007A4E  4E                 	db	78	;'N'
   331  007A4F  6A                 	db	106	;'j'
   332  007A50  41                 	db	65	;'A'
   333  007A51  30                 	db	48	;'0'
   334  007A52  4E                 	db	78	;'N'
   335  007A53  7A                 	db	122	;'z'
   336  007A54  41                 	db	65	;'A'
   337  007A55  73                 	db	115	;'s'
   338  007A56  49                 	db	73	;'I'
   339  007A57  6D                 	db	109	;'m'
   340  007A58  6C                 	db	108	;'l'
   341  007A59  68                 	db	104	;'h'
   342  007A5A  64                 	db	100	;'d'
   343  007A5B  43                 	db	67	;'C'
   344  007A5C  49                 	db	73	;'I'
   345  007A5D  36                 	db	54	;'6'
   346  007A5E  4D                 	db	77	;'M'
   347  007A5F  54                 	db	84	;'T'
   348  007A60  59                 	db	89	;'Y'
   349  007A61  34                 	db	52	;'4'
   350  007A62  4D                 	db	77	;'M'
   351  007A63  44                 	db	68	;'D'
   352  007A64  4D                 	db	77	;'M'
   353  007A65  31                 	db	49	;'1'
   354  007A66  4D                 	db	77	;'M'
   355  007A67  7A                 	db	122	;'z'
   356  007A68  49                 	db	73	;'I'
   357  007A69  33                 	db	51	;'3'
   358  007A6A  4D                 	db	77	;'M'
   359  007A6B  43                 	db	67	;'C'
   360  007A6C  77                 	db	119	;'w'
   361  007A6D  69                 	db	105	;'i'
   362  007A6E  63                 	db	99	;'c'
   363  007A6F  6D                 	db	109	;'m'
   364  007A70  39                 	db	57	;'9'
   365  007A71  73                 	db	115	;'s'
   366  007A72  5A                 	db	90	;'Z'
   367  007A73  53                 	db	83	;'S'
   368  007A74  49                 	db	73	;'I'
   369  007A75  36                 	db	54	;'6'
   370  007A76  49                 	db	73	;'I'
   371  007A77  6E                 	db	110	;'n'
   372  007A78  56                 	db	86	;'V'
   373  007A79  7A                 	db	122	;'z'
   374  007A7A  5A                 	db	90	;'Z'
   375  007A7B  58                 	db	88	;'X'
   376  007A7C  49                 	db	73	;'I'
   377  007A7D  69                 	db	105	;'i'
   378  007A7E  4C                 	db	76	;'L'
   379  007A7F  43                 	db	67	;'C'
   380  007A80  4A                 	db	74	;'J'
   381  007A81  31                 	db	49	;'1'
   382  007A82  63                 	db	99	;'c'
   383  007A83  33                 	db	51	;'3'
   384  007A84  49                 	db	73	;'I'
   385  007A85  69                 	db	105	;'i'
   386  007A86  4F                 	db	79	;'O'
   387  007A87  69                 	db	105	;'i'
   388  007A88  4A                 	db	74	;'J'
   389  007A89  47                 	db	71	;'G'
   390  007A8A  61                 	db	97	;'a'
   391  007A8B  58                 	db	88	;'X'
   392  007A8C  4A                 	db	74	;'J'
   393  007A8D  74                 	db	116	;'t'
   394  007A8E  64                 	db	100	;'d'
   395  007A8F  32                 	db	50	;'2'
   396  007A90  46                 	db	70	;'F'
   397  007A91  79                 	db	121	;'y'
   398  007A92  5A                 	db	90	;'Z'
   399  007A93  55                 	db	85	;'U'
   400  007A94  56                 	db	86	;'V'
   401  007A95  75                 	db	117	;'u'
   402  007A96  5A                 	db	90	;'Z'
   403  007A97  32                 	db	50	;'2'
   404  007A98  6C                 	db	108	;'l'
   405  007A99  75                 	db	117	;'u'
   406  007A9A  5A                 	db	90	;'Z'
   407  007A9B  57                 	db	87	;'W'
   408  007A9C  56                 	db	86	;'V'
   409  007A9D  79                 	db	121	;'y'
   410  007A9E  63                 	db	99	;'c'
   411  007A9F  79                 	db	121	;'y'
   412  007AA0  4A                 	db	74	;'J'
   413  007AA1  39                 	db	57	;'9'
   414  007AA2  2E                 	db	46
   415  007AA3  35                 	db	53	;'5'
   416  007AA4  4D                 	db	77	;'M'
   417  007AA5  59                 	db	89	;'Y'
   418  007AA6  72                 	db	114	;'r'
   419  007AA7  50                 	db	80	;'P'
   420  007AA8  56                 	db	86	;'V'
   421  007AA9  53                 	db	83	;'S'
   422  007AAA  34                 	db	52	;'4'
   423  007AAB  6E                 	db	110	;'n'
   424  007AAC  46                 	db	70	;'F'
   425  007AAD  61                 	db	97	;'a'
   426  007AAE  32                 	db	50	;'2'
   427  007AAF  6B                 	db	107	;'k'
   428  007AB0  6F                 	db	111	;'o'
   429  007AB1  75                 	db	117	;'u'
   430  007AB2  33                 	db	51	;'3'
   431  007AB3  64                 	db	100	;'d'
   432  007AB4  56                 	db	86	;'V'
   433  007AB5  32                 	db	50	;'2'
   434  007AB6  79                 	db	121	;'y'
   435  007AB7  5A                 	db	90	;'Z'
   436  007AB8  50                 	db	80	;'P'
   437  007AB9  34                 	db	52	;'4'
   438  007ABA  53                 	db	83	;'S'
   439  007ABB  76                 	db	118	;'v'
   440  007ABC  6F                 	db	111	;'o'
   441  007ABD  33                 	db	51	;'3'
   442  007ABE  4A                 	db	74	;'J'
   443  007ABF  56                 	db	86	;'V'
   444  007AC0  31                 	db	49	;'1'
   445  007AC1  5A                 	db	90	;'Z'
   446  007AC2  6A                 	db	106	;'j'
   447  007AC3  36                 	db	54	;'6'
   448  007AC4  67                 	db	103	;'g'
   449  007AC5  41                 	db	65	;'A'
   450  007AC6  49                 	db	73	;'I'
   451  007AC7  47                 	db	71	;'G'
   452  007AC8  54                 	db	84	;'T'
   453  007AC9  56                 	db	86	;'V'
   454  007ACA  75                 	db	117	;'u'
   455  007ACB  69                 	db	105	;'i'
   456  007ACC  39                 	db	57	;'9'
   457  007ACD  34                 	db	52	;'4'
   458  007ACE  00                 	db	0
   459  007ACF                     STR_20:
   460  007ACF  53                 	db	83	;'S'
   461  007AD0  79                 	db	121	;'y'
   462  007AD1  73                 	db	115	;'s'
   463  007AD2  74                 	db	116	;'t'
   464  007AD3  65                 	db	101	;'e'
   465  007AD4  6D                 	db	109	;'m'
   466  007AD5  20                 	db	32
   467  007AD6  49                 	db	73	;'I'
   468  007AD7  6E                 	db	110	;'n'
   469  007AD8  69                 	db	105	;'i'
   470  007AD9  74                 	db	116	;'t'
   471  007ADA  69                 	db	105	;'i'
   472  007ADB  61                 	db	97	;'a'
   473  007ADC  6C                 	db	108	;'l'
   474  007ADD  69                 	db	105	;'i'
   475  007ADE  7A                 	db	122	;'z'
   476  007ADF  61                 	db	97	;'a'
   477  007AE0  74                 	db	116	;'t'
   478  007AE1  69                 	db	105	;'i'
   479  007AE2  6F                 	db	111	;'o'
   480  007AE3  6E                 	db	110	;'n'
   481  007AE4  20                 	db	32
   482  007AE5  63                 	db	99	;'c'
   483  007AE6  6F                 	db	111	;'o'
   484  007AE7  6D                 	db	109	;'m'
   485  007AE8  70                 	db	112	;'p'
   486  007AE9  6C                 	db	108	;'l'
   487  007AEA  65                 	db	101	;'e'
   488  007AEB  74                 	db	116	;'t'
   489  007AEC  65                 	db	101	;'e'
   490  007AED  64                 	db	100	;'d'
   491  007AEE  2E                 	db	46
   492  007AEF  0D                 	db	13
   493  007AF0  0D                 	db	13
   494  007AF1  00                 	db	0
   495  007AF2                     STR_22:
   496  007AF2  53                 	db	83	;'S'
   497  007AF3  65                 	db	101	;'e'
   498  007AF4  6E                 	db	110	;'n'
   499  007AF5  64                 	db	100	;'d'
   500  007AF6  69                 	db	105	;'i'
   501  007AF7  6E                 	db	110	;'n'
   502  007AF8  67                 	db	103	;'g'
   503  007AF9  20                 	db	32
   504  007AFA  6D                 	db	109	;'m'
   505  007AFB  65                 	db	101	;'e'
   506  007AFC  73                 	db	115	;'s'
   507  007AFD  73                 	db	115	;'s'
   508  007AFE  61                 	db	97	;'a'
   509  007AFF  67                 	db	103	;'g'
   510  007B00  65                 	db	101	;'e'
   511  007B01  20                 	db	32
   512  007B02  74                 	db	116	;'t'
   513  007B03  6F                 	db	111	;'o'
   514  007B04  20                 	db	32
   515  007B05  74                 	db	116	;'t'
   516  007B06  68                 	db	104	;'h'
   517  007B07  69                 	db	105	;'i'
   518  007B08  6E                 	db	110	;'n'
   519  007B09  67                 	db	103	;'g'
   520  007B0A  65                 	db	101	;'e'
   521  007B0B  72                 	db	114	;'r'
   522  007B0C  2E                 	db	46
   523  007B0D  69                 	db	105	;'i'
   524  007B0E  6F                 	db	111	;'o'
   525  007B0F  2E                 	db	46
   526  007B10  2E                 	db	46
   527  007B11  2E                 	db	46
   528  007B12  0D                 	db	13
   529  007B13  00                 	db	0
   530  007B14                     STR_21:
   531  007B14  53                 	db	83	;'S'
   532  007B15  79                 	db	121	;'y'
   533  007B16  73                 	db	115	;'s'
   534  007B17  74                 	db	116	;'t'
   535  007B18  65                 	db	101	;'e'
   536  007B19  6D                 	db	109	;'m'
   537  007B1A  20                 	db	32
   538  007B1B  49                 	db	73	;'I'
   539  007B1C  6E                 	db	110	;'n'
   540  007B1D  69                 	db	105	;'i'
   541  007B1E  74                 	db	116	;'t'
   542  007B1F  69                 	db	105	;'i'
   543  007B20  61                 	db	97	;'a'
   544  007B21  6C                 	db	108	;'l'
   545  007B22  69                 	db	105	;'i'
   546  007B23  7A                 	db	122	;'z'
   547  007B24  61                 	db	97	;'a'
   548  007B25  74                 	db	116	;'t'
   549  007B26  69                 	db	105	;'i'
   550  007B27  6F                 	db	111	;'o'
   551  007B28  6E                 	db	110	;'n'
   552  007B29  20                 	db	32
   553  007B2A  66                 	db	102	;'f'
   554  007B2B  61                 	db	97	;'a'
   555  007B2C  69                 	db	105	;'i'
   556  007B2D  6C                 	db	108	;'l'
   557  007B2E  65                 	db	101	;'e'
   558  007B2F  64                 	db	100	;'d'
   559  007B30  2E                 	db	46
   560  007B31  0D                 	db	13
   561  007B32  0D                 	db	13
   562  007B33  00                 	db	0
   563  007B34                     STR_8:
   564  007B34  53                 	db	83	;'S'
   565  007B35  65                 	db	101	;'e'
   566  007B36  74                 	db	116	;'t'
   567  007B37  74                 	db	116	;'t'
   568  007B38  69                 	db	105	;'i'
   569  007B39  6E                 	db	110	;'n'
   570  007B3A  67                 	db	103	;'g'
   571  007B3B  20                 	db	32
   572  007B3C  48                 	db	72	;'H'
   573  007B3D  54                 	db	84	;'T'
   574  007B3E  54                 	db	84	;'T'
   575  007B3F  50                 	db	80	;'P'
   576  007B40  20                 	db	32
   577  007B41  63                 	db	99	;'c'
   578  007B42  6F                 	db	111	;'o'
   579  007B43  6E                 	db	110	;'n'
   580  007B44  66                 	db	102	;'f'
   581  007B45  69                 	db	105	;'i'
   582  007B46  67                 	db	103	;'g'
   583  007B47  75                 	db	117	;'u'
   584  007B48  72                 	db	114	;'r'
   585  007B49  61                 	db	97	;'a'
   586  007B4A  74                 	db	116	;'t'
   587  007B4B  69                 	db	105	;'i'
   588  007B4C  6F                 	db	111	;'o'
   589  007B4D  6E                 	db	110	;'n'
   590  007B4E  73                 	db	115	;'s'
   591  007B4F  2E                 	db	46
   592  007B50  2E                 	db	46
   593  007B51  2E                 	db	46
   594  007B52  0D                 	db	13
   595  007B53  00                 	db	0
   596  007B54                     STR_6:
   597  007B54  42                 	db	66	;'B'
   598  007B55  65                 	db	101	;'e'
   599  007B56  61                 	db	97	;'a'
   600  007B57  72                 	db	114	;'r'
   601  007B58  65                 	db	101	;'e'
   602  007B59  72                 	db	114	;'r'
   603  007B5A  20                 	db	32
   604  007B5B  70                 	db	112	;'p'
   605  007B5C  72                 	db	114	;'r'
   606  007B5D  6F                 	db	111	;'o'
   607  007B5E  66                 	db	102	;'f'
   608  007B5F  69                 	db	105	;'i'
   609  007B60  6C                 	db	108	;'l'
   610  007B61  65                 	db	101	;'e'
   611  007B62  20                 	db	32
   612  007B63  41                 	db	65	;'A'
   613  007B64  63                 	db	99	;'c'
   614  007B65  74                 	db	116	;'t'
   615  007B66  69                 	db	105	;'i'
   616  007B67  76                 	db	118	;'v'
   617  007B68  61                 	db	97	;'a'
   618  007B69  74                 	db	116	;'t'
   619  007B6A  65                 	db	101	;'e'
   620  007B6B  64                 	db	100	;'d'
   621  007B6C  2C                 	db	44
   622  007B6D  20                 	db	32
   623  007B6E  49                 	db	73	;'I'
   624  007B6F  50                 	db	80	;'P'
   625  007B70  3A                 	db	58	;':'
   626  007B71  20                 	db	32
   627  007B72  00                 	db	0
   628  007B73                     STR_2:
   629  007B73  53                 	db	83	;'S'
   630  007B74  65                 	db	101	;'e'
   631  007B75  74                 	db	116	;'t'
   632  007B76  74                 	db	116	;'t'
   633  007B77  69                 	db	105	;'i'
   634  007B78  6E                 	db	110	;'n'
   635  007B79  67                 	db	103	;'g'
   636  007B7A  20                 	db	32
   637  007B7B  49                 	db	73	;'I'
   638  007B7C  50                 	db	80	;'P'
   639  007B7D  20                 	db	32
   640  007B7E  63                 	db	99	;'c'
   641  007B7F  6F                 	db	111	;'o'
   642  007B80  6E                 	db	110	;'n'
   643  007B81  66                 	db	102	;'f'
   644  007B82  69                 	db	105	;'i'
   645  007B83  67                 	db	103	;'g'
   646  007B84  75                 	db	117	;'u'
   647  007B85  72                 	db	114	;'r'
   648  007B86  61                 	db	97	;'a'
   649  007B87  74                 	db	116	;'t'
   650  007B88  69                 	db	105	;'i'
   651  007B89  6F                 	db	111	;'o'
   652  007B8A  6E                 	db	110	;'n'
   653  007B8B  73                 	db	115	;'s'
   654  007B8C  2E                 	db	46
   655  007B8D  2E                 	db	46
   656  007B8E  2E                 	db	46
   657  007B8F  0D                 	db	13
   658  007B90  00                 	db	0
   659  007B91  41                 	db	65	;'A'
   660  007B92  54                 	db	84	;'T'
   661  007B93  2B                 	db	43
   662  007B94  43                 	db	67	;'C'
   663  007B95  47                 	db	71	;'G'
   664  007B96  51                 	db	81	;'Q'
   665  007B97  4D                 	db	77	;'M'
   666  007B98  49                 	db	73	;'I'
   667  007B99  4E                 	db	78	;'N'
   668  007B9A  3D                 	db	61	;'='
   669  007B9B  25                 	db	37
   670  007B9C  75                 	db	117	;'u'
   671  007B9D  2C                 	db	44
   672  007B9E  25                 	db	37
   673  007B9F  75                 	db	117	;'u'
   674  007BA0  2C                 	db	44
   675  007BA1  25                 	db	37
   676  007BA2  75                 	db	117	;'u'
   677  007BA3  2C                 	db	44
   678  007BA4  25                 	db	37
   679  007BA5  75                 	db	117	;'u'
   680  007BA6  2C                 	db	44
   681  007BA7  25                 	db	37
   682  007BA8  75                 	db	117	;'u'
   683  007BA9  2C                 	db	44
   684  007BAA  25                 	db	37
   685  007BAB  75                 	db	117	;'u'
   686  007BAC  0D                 	db	13
   687  007BAD  00                 	db	0
   688  007BAE  41                 	db	65	;'A'
   689  007BAF  54                 	db	84	;'T'
   690  007BB0  2B                 	db	43
   691  007BB1  43                 	db	67	;'C'
   692  007BB2  47                 	db	71	;'G'
   693  007BB3  51                 	db	81	;'Q'
   694  007BB4  52                 	db	82	;'R'
   695  007BB5  45                 	db	69	;'E'
   696  007BB6  51                 	db	81	;'Q'
   697  007BB7  3D                 	db	61	;'='
   698  007BB8  25                 	db	37
   699  007BB9  75                 	db	117	;'u'
   700  007BBA  2C                 	db	44
   701  007BBB  25                 	db	37
   702  007BBC  75                 	db	117	;'u'
   703  007BBD  2C                 	db	44
   704  007BBE  25                 	db	37
   705  007BBF  75                 	db	117	;'u'
   706  007BC0  2C                 	db	44
   707  007BC1  25                 	db	37
   708  007BC2  75                 	db	117	;'u'
   709  007BC3  2C                 	db	44
   710  007BC4  25                 	db	37
   711  007BC5  75                 	db	117	;'u'
   712  007BC6  2C                 	db	44
   713  007BC7  25                 	db	37
   714  007BC8  75                 	db	117	;'u'
   715  007BC9  0D                 	db	13
   716  007BCA  00                 	db	0
   717  007BCB  41                 	db	65	;'A'
   718  007BCC  54                 	db	84	;'T'
   719  007BCD  2B                 	db	43
   720  007BCE  48                 	db	72	;'H'
   721  007BCF  54                 	db	84	;'T'
   722  007BD0  54                 	db	84	;'T'
   723  007BD1  50                 	db	80	;'P'
   724  007BD2  50                 	db	80	;'P'
   725  007BD3  41                 	db	65	;'A'
   726  007BD4  52                 	db	82	;'R'
   727  007BD5  41                 	db	65	;'A'
   728  007BD6  3D                 	db	61	;'='
   729  007BD7  22                 	db	34
   730  007BD8  42                 	db	66	;'B'
   731  007BD9  52                 	db	82	;'R'
   732  007BDA  45                 	db	69	;'E'
   733  007BDB  41                 	db	65	;'A'
   734  007BDC  4B                 	db	75	;'K'
   735  007BDD  45                 	db	69	;'E'
   736  007BDE  4E                 	db	78	;'N'
   737  007BDF  44                 	db	68	;'D'
   738  007BE0  22                 	db	34
   739  007BE1  2C                 	db	44
   740  007BE2  25                 	db	37
   741  007BE3  6C                 	db	108	;'l'
   742  007BE4  64                 	db	100	;'d'
   743  007BE5  0D                 	db	13
   744  007BE6  00                 	db	0
   745  007BE7                     STR_24:
   746  007BE7  52                 	db	82	;'R'
   747  007BE8  65                 	db	101	;'e'
   748  007BE9  63                 	db	99	;'c'
   749  007BEA  65                 	db	101	;'e'
   750  007BEB  69                 	db	105	;'i'
   751  007BEC  76                 	db	118	;'v'
   752  007BED  65                 	db	101	;'e'
   753  007BEE  64                 	db	100	;'d'
   754  007BEF  20                 	db	32
   755  007BF0  64                 	db	100	;'d'
   756  007BF1  61                 	db	97	;'a'
   757  007BF2  74                 	db	116	;'t'
   758  007BF3  61                 	db	97	;'a'
   759  007BF4  20                 	db	32
   760  007BF5  6C                 	db	108	;'l'
   761  007BF6  65                 	db	101	;'e'
   762  007BF7  6E                 	db	110	;'n'
   763  007BF8  67                 	db	103	;'g'
   764  007BF9  74                 	db	116	;'t'
   765  007BFA  68                 	db	104	;'h'
   766  007BFB  3A                 	db	58	;':'
   767  007BFC  20                 	db	32
   768  007BFD  25                 	db	37
   769  007BFE  6C                 	db	108	;'l'
   770  007BFF  64                 	db	100	;'d'
   771  007C00  0D                 	db	13
   772  007C01  00                 	db	0
   773  007C02  41                 	db	65	;'A'
   774  007C03  54                 	db	84	;'T'
   775  007C04  2B                 	db	43
   776  007C05  48                 	db	72	;'H'
   777  007C06  54                 	db	84	;'T'
   778  007C07  54                 	db	84	;'T'
   779  007C08  50                 	db	80	;'P'
   780  007C09  50                 	db	80	;'P'
   781  007C0A  41                 	db	65	;'A'
   782  007C0B  52                 	db	82	;'R'
   783  007C0C  41                 	db	65	;'A'
   784  007C0D  3D                 	db	61	;'='
   785  007C0E  22                 	db	34
   786  007C0F  50                 	db	80	;'P'
   787  007C10  52                 	db	82	;'R'
   788  007C11  4F                 	db	79	;'O'
   789  007C12  50                 	db	80	;'P'
   790  007C13  4F                 	db	79	;'O'
   791  007C14  52                 	db	82	;'R'
   792  007C15  54                 	db	84	;'T'
   793  007C16  22                 	db	34
   794  007C17  2C                 	db	44
   795  007C18  25                 	db	37
   796  007C19  75                 	db	117	;'u'
   797  007C1A  0D                 	db	13
   798  007C1B  00                 	db	0
   799  007C1C  41                 	db	65	;'A'
   800  007C1D  54                 	db	84	;'T'
   801  007C1E  2B                 	db	43
   802  007C1F  48                 	db	72	;'H'
   803  007C20  54                 	db	84	;'T'
   804  007C21  54                 	db	84	;'T'
   805  007C22  50                 	db	80	;'P'
   806  007C23  50                 	db	80	;'P'
   807  007C24  41                 	db	65	;'A'
   808  007C25  52                 	db	82	;'R'
   809  007C26  41                 	db	65	;'A'
   810  007C27  3D                 	db	61	;'='
   811  007C28  22                 	db	34
   812  007C29  54                 	db	84	;'T'
   813  007C2A  49                 	db	73	;'I'
   814  007C2B  4D                 	db	77	;'M'
   815  007C2C  45                 	db	69	;'E'
   816  007C2D  4F                 	db	79	;'O'
   817  007C2E  55                 	db	85	;'U'
   818  007C2F  54                 	db	84	;'T'
   819  007C30  22                 	db	34
   820  007C31  2C                 	db	44
   821  007C32  25                 	db	37
   822  007C33  75                 	db	117	;'u'
   823  007C34  0D                 	db	13
   824  007C35  00                 	db	0
   825  007C36  41                 	db	65	;'A'
   826  007C37  54                 	db	84	;'T'
   827  007C38  2B                 	db	43
   828  007C39  48                 	db	72	;'H'
   829  007C3A  54                 	db	84	;'T'
   830  007C3B  54                 	db	84	;'T'
   831  007C3C  50                 	db	80	;'P'
   832  007C3D  50                 	db	80	;'P'
   833  007C3E  41                 	db	65	;'A'
   834  007C3F  52                 	db	82	;'R'
   835  007C40  41                 	db	65	;'A'
   836  007C41  3D                 	db	61	;'='
   837  007C42  22                 	db	34
   838  007C43  42                 	db	66	;'B'
   839  007C44  52                 	db	82	;'R'
   840  007C45  45                 	db	69	;'E'
   841  007C46  41                 	db	65	;'A'
   842  007C47  4B                 	db	75	;'K'
   843  007C48  22                 	db	34
   844  007C49  2C                 	db	44
   845  007C4A  25                 	db	37
   846  007C4B  6C                 	db	108	;'l'
   847  007C4C  64                 	db	100	;'d'
   848  007C4D  0D                 	db	13
   849  007C4E  00                 	db	0
   850  007C4F  41                 	db	65	;'A'
   851  007C50  54                 	db	84	;'T'
   852  007C51  2B                 	db	43
   853  007C52  48                 	db	72	;'H'
   854  007C53  54                 	db	84	;'T'
   855  007C54  54                 	db	84	;'T'
   856  007C55  50                 	db	80	;'P'
   857  007C56  50                 	db	80	;'P'
   858  007C57  41                 	db	65	;'A'
   859  007C58  52                 	db	82	;'R'
   860  007C59  41                 	db	65	;'A'
   861  007C5A  3D                 	db	61	;'='
   862  007C5B  22                 	db	34
   863  007C5C  52                 	db	82	;'R'
   864  007C5D  45                 	db	69	;'E'
   865  007C5E  44                 	db	68	;'D'
   866  007C5F  49                 	db	73	;'I'
   867  007C60  52                 	db	82	;'R'
   868  007C61  22                 	db	34
   869  007C62  2C                 	db	44
   870  007C63  25                 	db	37
   871  007C64  75                 	db	117	;'u'
   872  007C65  0D                 	db	13
   873  007C66  00                 	db	0
   874  007C67  41                 	db	65	;'A'
   875  007C68  54                 	db	84	;'T'
   876  007C69  2B                 	db	43
   877  007C6A  48                 	db	72	;'H'
   878  007C6B  54                 	db	84	;'T'
   879  007C6C  54                 	db	84	;'T'
   880  007C6D  50                 	db	80	;'P'
   881  007C6E  50                 	db	80	;'P'
   882  007C6F  41                 	db	65	;'A'
   883  007C70  52                 	db	82	;'R'
   884  007C71  41                 	db	65	;'A'
   885  007C72  3D                 	db	61	;'='
   886  007C73  22                 	db	34
   887  007C74  55                 	db	85	;'U'
   888  007C75  53                 	db	83	;'S'
   889  007C76  45                 	db	69	;'E'
   890  007C77  52                 	db	82	;'R'
   891  007C78  44                 	db	68	;'D'
   892  007C79  41                 	db	65	;'A'
   893  007C7A  54                 	db	84	;'T'
   894  007C7B  41                 	db	65	;'A'
   895  007C7C  22                 	db	34
   896  007C7D  2C                 	db	44
   897  007C7E  00                 	db	0
   898  007C7F                     STR_23:
   899  007C7F  48                 	db	72	;'H'
   900  007C80  54                 	db	84	;'T'
   901  007C81  54                 	db	84	;'T'
   902  007C82  50                 	db	80	;'P'
   903  007C83  20                 	db	32
   904  007C84  72                 	db	114	;'r'
   905  007C85  65                 	db	101	;'e'
   906  007C86  73                 	db	115	;'s'
   907  007C87  70                 	db	112	;'p'
   908  007C88  6F                 	db	111	;'o'
   909  007C89  6E                 	db	110	;'n'
   910  007C8A  73                 	db	115	;'s'
   911  007C8B  65                 	db	101	;'e'
   912  007C8C  20                 	db	32
   913  007C8D  63                 	db	99	;'c'
   914  007C8E  6F                 	db	111	;'o'
   915  007C8F  64                 	db	100	;'d'
   916  007C90  65                 	db	101	;'e'
   917  007C91  3A                 	db	58	;':'
   918  007C92  20                 	db	32
   919  007C93  25                 	db	37
   920  007C94  75                 	db	117	;'u'
   921  007C95  0D                 	db	13
   922  007C96  00                 	db	0
   923  007C97                     STR_96:
   924  007C97  41                 	db	65	;'A'
   925  007C98  54                 	db	84	;'T'
   926  007C99  2B                 	db	43
   927  007C9A  48                 	db	72	;'H'
   928  007C9B  54                 	db	84	;'T'
   929  007C9C  54                 	db	84	;'T'
   930  007C9D  50                 	db	80	;'P'
   931  007C9E  50                 	db	80	;'P'
   932  007C9F  41                 	db	65	;'A'
   933  007CA0  52                 	db	82	;'R'
   934  007CA1  41                 	db	65	;'A'
   935  007CA2  3D                 	db	61	;'='
   936  007CA3  22                 	db	34
   937  007CA4  43                 	db	67	;'C'
   938  007CA5  4F                 	db	79	;'O'
   939  007CA6  4E                 	db	78	;'N'
   940  007CA7  54                 	db	84	;'T'
   941  007CA8  45                 	db	69	;'E'
   942  007CA9  4E                 	db	78	;'N'
   943  007CAA  54                 	db	84	;'T'
   944  007CAB  22                 	db	34
   945  007CAC  2C                 	db	44
   946  007CAD  00                 	db	0
   947  007CAE                     STR_12:
   948  007CAE  45                 	db	69	;'E'
   949  007CAF  6E                 	db	110	;'n'
   950  007CB0  67                 	db	103	;'g'
   951  007CB1  69                 	db	105	;'i'
   952  007CB2  6E                 	db	110	;'n'
   953  007CB3  65                 	db	101	;'e'
   954  007CB4  20                 	db	32
   955  007CB5  54                 	db	84	;'T'
   956  007CB6  65                 	db	101	;'e'
   957  007CB7  6D                 	db	109	;'m'
   958  007CB8  70                 	db	112	;'p'
   959  007CB9  65                 	db	101	;'e'
   960  007CBA  72                 	db	114	;'r'
   961  007CBB  61                 	db	97	;'a'
   962  007CBC  74                 	db	116	;'t'
   963  007CBD  75                 	db	117	;'u'
   964  007CBE  72                 	db	114	;'r'
   965  007CBF  65                 	db	101	;'e'
   966  007CC0  20                 	db	32
   967  007CC1  28                 	db	40
   968  007CC2  43                 	db	67	;'C'
   969  007CC3  29                 	db	41
   970  007CC4  00                 	db	0
   971  007CC5                     STR_98:
   972  007CC5  41                 	db	65	;'A'
   973  007CC6  54                 	db	84	;'T'
   974  007CC7  2B                 	db	43
   975  007CC8  48                 	db	72	;'H'
   976  007CC9  54                 	db	84	;'T'
   977  007CCA  54                 	db	84	;'T'
   978  007CCB  50                 	db	80	;'P'
   979  007CCC  44                 	db	68	;'D'
   980  007CCD  41                 	db	65	;'A'
   981  007CCE  54                 	db	84	;'T'
   982  007CCF  41                 	db	65	;'A'
   983  007CD0  3D                 	db	61	;'='
   984  007CD1  25                 	db	37
   985  007CD2  6C                 	db	108	;'l'
   986  007CD3  64                 	db	100	;'d'
   987  007CD4  2C                 	db	44
   988  007CD5  25                 	db	37
   989  007CD6  6C                 	db	108	;'l'
   990  007CD7  64                 	db	100	;'d'
   991  007CD8  0D                 	db	13
   992  007CD9  00                 	db	0
   993  007CDA                     STR_100:
   994  007CDA  41                 	db	65	;'A'
   995  007CDB  54                 	db	84	;'T'
   996  007CDC  2B                 	db	43
   997  007CDD  48                 	db	72	;'H'
   998  007CDE  54                 	db	84	;'T'
   999  007CDF  54                 	db	84	;'T'
  1000  007CE0  50                 	db	80	;'P'
  1001  007CE1  52                 	db	82	;'R'
  1002  007CE2  45                 	db	69	;'E'
  1003  007CE3  41                 	db	65	;'A'
  1004  007CE4  44                 	db	68	;'D'
  1005  007CE5  3D                 	db	61	;'='
  1006  007CE6  25                 	db	37
  1007  007CE7  6C                 	db	108	;'l'
  1008  007CE8  64                 	db	100	;'d'
  1009  007CE9  2C                 	db	44
  1010  007CEA  25                 	db	37
  1011  007CEB  6C                 	db	108	;'l'
  1012  007CEC  64                 	db	100	;'d'
  1013  007CED  0D                 	db	13
  1014  007CEE  00                 	db	0
  1015  007CEF  41                 	db	65	;'A'
  1016  007CF0  54                 	db	84	;'T'
  1017  007CF1  2B                 	db	43
  1018  007CF2  48                 	db	72	;'H'
  1019  007CF3  54                 	db	84	;'T'
  1020  007CF4  54                 	db	84	;'T'
  1021  007CF5  50                 	db	80	;'P'
  1022  007CF6  50                 	db	80	;'P'
  1023  007CF7  41                 	db	65	;'A'
  1024  007CF8  52                 	db	82	;'R'
  1025  007CF9  41                 	db	65	;'A'
  1026  007CFA  3D                 	db	61	;'='
  1027  007CFB  22                 	db	34
  1028  007CFC  50                 	db	80	;'P'
  1029  007CFD  52                 	db	82	;'R'
  1030  007CFE  4F                 	db	79	;'O'
  1031  007CFF  49                 	db	73	;'I'
  1032  007D00  50                 	db	80	;'P'
  1033  007D01  22                 	db	34
  1034  007D02  2C                 	db	44
  1035  007D03  00                 	db	0
  1036  007D04                     STR_1:
  1037  007D04  4D                 	db	77	;'M'
  1038  007D05  6F                 	db	111	;'o'
  1039  007D06  64                 	db	100	;'d'
  1040  007D07  65                 	db	101	;'e'
  1041  007D08  6D                 	db	109	;'m'
  1042  007D09  20                 	db	32
  1043  007D0A  49                 	db	73	;'I'
  1044  007D0B  6E                 	db	110	;'n'
  1045  007D0C  69                 	db	105	;'i'
  1046  007D0D  74                 	db	116	;'t'
  1047  007D0E  69                 	db	105	;'i'
  1048  007D0F  61                 	db	97	;'a'
  1049  007D10  6C                 	db	108	;'l'
  1050  007D11  69                 	db	105	;'i'
  1051  007D12  7A                 	db	122	;'z'
  1052  007D13  65                 	db	101	;'e'
  1053  007D14  64                 	db	100	;'d'
  1054  007D15  2E                 	db	46
  1055  007D16  0D                 	db	13
  1056  007D17  0D                 	db	13
  1057  007D18  00                 	db	0
  1058  007D19  41                 	db	65	;'A'
  1059  007D1A  54                 	db	84	;'T'
  1060  007D1B  2B                 	db	43
  1061  007D1C  43                 	db	67	;'C'
  1062  007D1D  47                 	db	71	;'G'
  1063  007D1E  44                 	db	68	;'D'
  1064  007D1F  41                 	db	65	;'A'
  1065  007D20  54                 	db	84	;'T'
  1066  007D21  41                 	db	65	;'A'
  1067  007D22  3D                 	db	61	;'='
  1068  007D23  22                 	db	34
  1069  007D24  50                 	db	80	;'P'
  1070  007D25  50                 	db	80	;'P'
  1071  007D26  50                 	db	80	;'P'
  1072  007D27  22                 	db	34
  1073  007D28  2C                 	db	44
  1074  007D29  25                 	db	37
  1075  007D2A  75                 	db	117	;'u'
  1076  007D2B  0D                 	db	13
  1077  007D2C  00                 	db	0
  1078  007D2D                     STR_16:
  1079  007D2D  56                 	db	86	;'V'
  1080  007D2E  65                 	db	101	;'e'
  1081  007D2F  68                 	db	104	;'h'
  1082  007D30  69                 	db	105	;'i'
  1083  007D31  63                 	db	99	;'c'
  1084  007D32  6C                 	db	108	;'l'
  1085  007D33  65                 	db	101	;'e'
  1086  007D34  20                 	db	32
  1087  007D35  53                 	db	83	;'S'
  1088  007D36  70                 	db	112	;'p'
  1089  007D37  65                 	db	101	;'e'
  1090  007D38  65                 	db	101	;'e'
  1091  007D39  64                 	db	100	;'d'
  1092  007D3A  20                 	db	32
  1093  007D3B  28                 	db	40
  1094  007D3C  4D                 	db	77	;'M'
  1095  007D3D  50                 	db	80	;'P'
  1096  007D3E  48                 	db	72	;'H'
  1097  007D3F  29                 	db	41
  1098  007D40  00                 	db	0
  1099  007D41  41                 	db	65	;'A'
  1100  007D42  54                 	db	84	;'T'
  1101  007D43  2B                 	db	43
  1102  007D44  48                 	db	72	;'H'
  1103  007D45  54                 	db	84	;'T'
  1104  007D46  54                 	db	84	;'T'
  1105  007D47  50                 	db	80	;'P'
  1106  007D48  50                 	db	80	;'P'
  1107  007D49  41                 	db	65	;'A'
  1108  007D4A  52                 	db	82	;'R'
  1109  007D4B  41                 	db	65	;'A'
  1110  007D4C  3D                 	db	61	;'='
  1111  007D4D  22                 	db	34
  1112  007D4E  43                 	db	67	;'C'
  1113  007D4F  49                 	db	73	;'I'
  1114  007D50  44                 	db	68	;'D'
  1115  007D51  22                 	db	34
  1116  007D52  2C                 	db	44
  1117  007D53  00                 	db	0
  1118  007D54                     STR_88:
  1119  007D54  41                 	db	65	;'A'
  1120  007D55  54                 	db	84	;'T'
  1121  007D56  2B                 	db	43
  1122  007D57  48                 	db	72	;'H'
  1123  007D58  54                 	db	84	;'T'
  1124  007D59  54                 	db	84	;'T'
  1125  007D5A  50                 	db	80	;'P'
  1126  007D5B  50                 	db	80	;'P'
  1127  007D5C  41                 	db	65	;'A'
  1128  007D5D  52                 	db	82	;'R'
  1129  007D5E  41                 	db	65	;'A'
  1130  007D5F  3D                 	db	61	;'='
  1131  007D60  22                 	db	34
  1132  007D61  55                 	db	85	;'U'
  1133  007D62  52                 	db	82	;'R'
  1134  007D63  4C                 	db	76	;'L'
  1135  007D64  22                 	db	34
  1136  007D65  2C                 	db	44
  1137  007D66  00                 	db	0
  1138  007D67                     STR_99:
  1139  007D67  41                 	db	65	;'A'
  1140  007D68  54                 	db	84	;'T'
  1141  007D69  2B                 	db	43
  1142  007D6A  48                 	db	72	;'H'
  1143  007D6B  54                 	db	84	;'T'
  1144  007D6C  54                 	db	84	;'T'
  1145  007D6D  50                 	db	80	;'P'
  1146  007D6E  41                 	db	65	;'A'
  1147  007D6F  43                 	db	67	;'C'
  1148  007D70  54                 	db	84	;'T'
  1149  007D71  49                 	db	73	;'I'
  1150  007D72  4F                 	db	79	;'O'
  1151  007D73  4E                 	db	78	;'N'
  1152  007D74  3D                 	db	61	;'='
  1153  007D75  25                 	db	37
  1154  007D76  75                 	db	117	;'u'
  1155  007D77  0D                 	db	13
  1156  007D78  00                 	db	0
  1157  007D79  41                 	db	65	;'A'
  1158  007D7A  54                 	db	84	;'T'
  1159  007D7B  2B                 	db	43
  1160  007D7C  48                 	db	72	;'H'
  1161  007D7D  54                 	db	84	;'T'
  1162  007D7E  54                 	db	84	;'T'
  1163  007D7F  50                 	db	80	;'P'
  1164  007D80  50                 	db	80	;'P'
  1165  007D81  41                 	db	65	;'A'
  1166  007D82  52                 	db	82	;'R'
  1167  007D83  41                 	db	65	;'A'
  1168  007D84  3D                 	db	61	;'='
  1169  007D85  22                 	db	34
  1170  007D86  55                 	db	85	;'U'
  1171  007D87  41                 	db	65	;'A'
  1172  007D88  22                 	db	34
  1173  007D89  2C                 	db	44
  1174  007D8A  00                 	db	0
  1175  007D8B                     STR_27:
  1176  007D8B  53                 	db	83	;'S'
  1177  007D8C  65                 	db	101	;'e'
  1178  007D8D  6E                 	db	110	;'n'
  1179  007D8E  64                 	db	100	;'d'
  1180  007D8F  69                 	db	105	;'i'
  1181  007D90  6E                 	db	110	;'n'
  1182  007D91  67                 	db	103	;'g'
  1183  007D92  20                 	db	32
  1184  007D93  66                 	db	102	;'f'
  1185  007D94  61                 	db	97	;'a'
  1186  007D95  69                 	db	105	;'i'
  1187  007D96  6C                 	db	108	;'l'
  1188  007D97  65                 	db	101	;'e'
  1189  007D98  64                 	db	100	;'d'
  1190  007D99  2E                 	db	46
  1191  007D9A  0D                 	db	13
  1192  007D9B  00                 	db	0
  1193  007D9C                     STR_10:
  1194  007D9C  61                 	db	97	;'a'
  1195  007D9D  70                 	db	112	;'p'
  1196  007D9E  70                 	db	112	;'p'
  1197  007D9F  6C                 	db	108	;'l'
  1198  007DA0  69                 	db	105	;'i'
  1199  007DA1  63                 	db	99	;'c'
  1200  007DA2  61                 	db	97	;'a'
  1201  007DA3  74                 	db	116	;'t'
  1202  007DA4  69                 	db	105	;'i'
  1203  007DA5  6F                 	db	111	;'o'
  1204  007DA6  6E                 	db	110	;'n'
  1205  007DA7  2F                 	db	47
  1206  007DA8  6A                 	db	106	;'j'
  1207  007DA9  73                 	db	115	;'s'
  1208  007DAA  6F                 	db	111	;'o'
  1209  007DAB  6E                 	db	110	;'n'
  1210  007DAC  00                 	db	0
  1211  007DAD  41                 	db	65	;'A'
  1212  007DAE  54                 	db	84	;'T'
  1213  007DAF  2B                 	db	43
  1214  007DB0  48                 	db	72	;'H'
  1215  007DB1  54                 	db	84	;'T'
  1216  007DB2  54                 	db	84	;'T'
  1217  007DB3  50                 	db	80	;'P'
  1218  007DB4  53                 	db	83	;'S'
  1219  007DB5  54                 	db	84	;'T'
  1220  007DB6  41                 	db	65	;'A'
  1221  007DB7  54                 	db	84	;'T'
  1222  007DB8  55                 	db	85	;'U'
  1223  007DB9  53                 	db	83	;'S'
  1224  007DBA  3F                 	db	63	;'?'
  1225  007DBB  0D                 	db	13
  1226  007DBC  00                 	db	0
  1227  007DBD  41                 	db	65	;'A'
  1228  007DBE  54                 	db	84	;'T'
  1229  007DBF  2B                 	db	43
  1230  007DC0  48                 	db	72	;'H'
  1231  007DC1  54                 	db	84	;'T'
  1232  007DC2  54                 	db	84	;'T'
  1233  007DC3  50                 	db	80	;'P'
  1234  007DC4  47                 	db	71	;'G'
  1235  007DC5  45                 	db	69	;'E'
  1236  007DC6  54                 	db	84	;'T'
  1237  007DC7  48                 	db	72	;'H'
  1238  007DC8  45                 	db	69	;'E'
  1239  007DC9  41                 	db	65	;'A'
  1240  007DCA  44                 	db	68	;'D'
  1241  007DCB  3D                 	db	61	;'='
  1242  007DCC  00                 	db	0
  1243  007DCD  41                 	db	65	;'A'
  1244  007DCE  54                 	db	84	;'T'
  1245  007DCF  2B                 	db	43
  1246  007DD0  53                 	db	83	;'S'
  1247  007DD1  41                 	db	65	;'A'
  1248  007DD2  50                 	db	80	;'P'
  1249  007DD3  42                 	db	66	;'B'
  1250  007DD4  52                 	db	82	;'R'
  1251  007DD5  3D                 	db	61	;'='
  1252  007DD6  34                 	db	52	;'4'
  1253  007DD7  2C                 	db	44
  1254  007DD8  25                 	db	37
  1255  007DD9  75                 	db	117	;'u'
  1256  007DDA  0D                 	db	13
  1257  007DDB  00                 	db	0
  1258  007DDC  41                 	db	65	;'A'
  1259  007DDD  54                 	db	84	;'T'
  1260  007DDE  2B                 	db	43
  1261  007DDF  43                 	db	67	;'C'
  1262  007DE0  47                 	db	71	;'G'
  1263  007DE1  50                 	db	80	;'P'
  1264  007DE2  41                 	db	65	;'A'
  1265  007DE3  44                 	db	68	;'D'
  1266  007DE4  44                 	db	68	;'D'
  1267  007DE5  52                 	db	82	;'R'
  1268  007DE6  3D                 	db	61	;'='
  1269  007DE7  25                 	db	37
  1270  007DE8  75                 	db	117	;'u'
  1271  007DE9  0D                 	db	13
  1272  007DEA  00                 	db	0
  1273  007DEB                     STR_18:
  1274  007DEB  46                 	db	70	;'F'
  1275  007DEC  75                 	db	117	;'u'
  1276  007DED  65                 	db	101	;'e'
  1277  007DEE  6C                 	db	108	;'l'
  1278  007DEF  20                 	db	32
  1279  007DF0  4C                 	db	76	;'L'
  1280  007DF1  65                 	db	101	;'e'
  1281  007DF2  76                 	db	118	;'v'
  1282  007DF3  65                 	db	101	;'e'
  1283  007DF4  6C                 	db	108	;'l'
  1284  007DF5  20                 	db	32
  1285  007DF6  28                 	db	40
  1286  007DF7  25                 	db	37
  1287  007DF8  29                 	db	41
  1288  007DF9  00                 	db	0
  1289  007DFA  41                 	db	65	;'A'
  1290  007DFB  54                 	db	84	;'T'
  1291  007DFC  2B                 	db	43
  1292  007DFD  48                 	db	72	;'H'
  1293  007DFE  54                 	db	84	;'T'
  1294  007DFF  54                 	db	84	;'T'
  1295  007E00  50                 	db	80	;'P'
  1296  007E01  53                 	db	83	;'S'
  1297  007E02  43                 	db	67	;'C'
  1298  007E03  4F                 	db	79	;'O'
  1299  007E04  4E                 	db	78	;'N'
  1300  007E05  54                 	db	84	;'T'
  1301  007E06  0D                 	db	13
  1302  007E07  00                 	db	0
  1303  007E08  41                 	db	65	;'A'
  1304  007E09  54                 	db	84	;'T'
  1305  007E0A  2B                 	db	43
  1306  007E0B  43                 	db	67	;'C'
  1307  007E0C  46                 	db	70	;'F'
  1308  007E0D  55                 	db	85	;'U'
  1309  007E0E  4E                 	db	78	;'N'
  1310  007E0F  3D                 	db	61	;'='
  1311  007E10  31                 	db	49	;'1'
  1312  007E11  2C                 	db	44
  1313  007E12  31                 	db	49	;'1'
  1314  007E13  0D                 	db	13
  1315  007E14  00                 	db	0
  1316  007E15  41                 	db	65	;'A'
  1317  007E16  54                 	db	84	;'T'
  1318  007E17  2B                 	db	43
  1319  007E18  43                 	db	67	;'C'
  1320  007E19  47                 	db	71	;'G'
  1321  007E1A  43                 	db	67	;'C'
  1322  007E1B  4C                 	db	76	;'L'
  1323  007E1C  41                 	db	65	;'A'
  1324  007E1D  53                 	db	83	;'S'
  1325  007E1E  53                 	db	83	;'S'
  1326  007E1F  3F                 	db	63	;'?'
  1327  007E20  0D                 	db	13
  1328  007E21  00                 	db	0
  1329  007E22  41                 	db	65	;'A'
  1330  007E23  54                 	db	84	;'T'
  1331  007E24  2B                 	db	43
  1332  007E25  48                 	db	72	;'H'
  1333  007E26  54                 	db	84	;'T'
  1334  007E27  54                 	db	84	;'T'
  1335  007E28  50                 	db	80	;'P'
  1336  007E29  48                 	db	72	;'H'
  1337  007E2A  45                 	db	69	;'E'
  1338  007E2B  41                 	db	65	;'A'
  1339  007E2C  44                 	db	68	;'D'
  1340  007E2D  0D                 	db	13
  1341  007E2E  00                 	db	0
  1342  007E2F  41                 	db	65	;'A'
  1343  007E30  54                 	db	84	;'T'
  1344  007E31  2B                 	db	43
  1345  007E32  48                 	db	72	;'H'
  1346  007E33  54                 	db	84	;'T'
  1347  007E34  54                 	db	84	;'T'
  1348  007E35  50                 	db	80	;'P'
  1349  007E36  54                 	db	84	;'T'
  1350  007E37  45                 	db	69	;'E'
  1351  007E38  52                 	db	82	;'R'
  1352  007E39  4D                 	db	77	;'M'
  1353  007E3A  0D                 	db	13
  1354  007E3B  00                 	db	0
  1355  007E3C                     STR_85:
  1356  007E3C  41                 	db	65	;'A'
  1357  007E3D  54                 	db	84	;'T'
  1358  007E3E  2B                 	db	43
  1359  007E3F  48                 	db	72	;'H'
  1360  007E40  54                 	db	84	;'T'
  1361  007E41  54                 	db	84	;'T'
  1362  007E42  50                 	db	80	;'P'
  1363  007E43  49                 	db	73	;'I'
  1364  007E44  4E                 	db	78	;'N'
  1365  007E45  49                 	db	73	;'I'
  1366  007E46  54                 	db	84	;'T'
  1367  007E47  0D                 	db	13
  1368  007E48  00                 	db	0
  1369  007E49  2C                 	db	44
  1370  007E4A  22                 	db	34
  1371  007E4B  50                 	db	80	;'P'
  1372  007E4C  48                 	db	72	;'H'
  1373  007E4D  4F                 	db	79	;'O'
  1374  007E4E  4E                 	db	78	;'N'
  1375  007E4F  45                 	db	69	;'E'
  1376  007E50  4E                 	db	78	;'N'
  1377  007E51  55                 	db	85	;'U'
  1378  007E52  4D                 	db	77	;'M'
  1379  007E53  22                 	db	34
  1380  007E54  2C                 	db	44
  1381  007E55  00                 	db	0
  1382  007E56  41                 	db	65	;'A'
  1383  007E57  54                 	db	84	;'T'
  1384  007E58  2B                 	db	43
  1385  007E59  43                 	db	67	;'C'
  1386  007E5A  47                 	db	71	;'G'
  1387  007E5B  41                 	db	65	;'A'
  1388  007E5C  54                 	db	84	;'T'
  1389  007E5D  54                 	db	84	;'T'
  1390  007E5E  3D                 	db	61	;'='
  1391  007E5F  30                 	db	48	;'0'
  1392  007E60  0D                 	db	13
  1393  007E61  00                 	db	0
  1394  007E62  41                 	db	65	;'A'
  1395  007E63  54                 	db	84	;'T'
  1396  007E64  2B                 	db	43
  1397  007E65  43                 	db	67	;'C'
  1398  007E66  47                 	db	71	;'G'
  1399  007E67  41                 	db	65	;'A'
  1400  007E68  54                 	db	84	;'T'
  1401  007E69  54                 	db	84	;'T'
  1402  007E6A  3D                 	db	61	;'='
  1403  007E6B  31                 	db	49	;'1'
  1404  007E6C  0D                 	db	13
  1405  007E6D  00                 	db	0
  1406  007E6E  41                 	db	65	;'A'
  1407  007E6F  54                 	db	84	;'T'
  1408  007E70  2B                 	db	43
  1409  007E71  43                 	db	67	;'C'
  1410  007E72  47                 	db	71	;'G'
  1411  007E73  45                 	db	69	;'E'
  1412  007E74  52                 	db	82	;'R'
  1413  007E75  45                 	db	69	;'E'
  1414  007E76  50                 	db	80	;'P'
  1415  007E77  3F                 	db	63	;'?'
  1416  007E78  0D                 	db	13
  1417  007E79  00                 	db	0
  1418  007E7A                     STR_30:
  1419  007E7A  41                 	db	65	;'A'
  1420  007E7B  54                 	db	84	;'T'
  1421  007E7C  2B                 	db	43
  1422  007E7D  49                 	db	73	;'I'
  1423  007E7E  50                 	db	80	;'P'
  1424  007E7F  52                 	db	82	;'R'
  1425  007E80  3D                 	db	61	;'='
  1426  007E81  25                 	db	37
  1427  007E82  6C                 	db	108	;'l'
  1428  007E83  64                 	db	100	;'d'
  1429  007E84  0D                 	db	13
  1430  007E85  00                 	db	0
  1431  007E86                     STR_44:
  1432  007E86  2C                 	db	44
  1433  007E87  22                 	db	34
  1434  007E88  43                 	db	67	;'C'
  1435  007E89  4F                 	db	79	;'O'
  1436  007E8A  4E                 	db	78	;'N'
  1437  007E8B  54                 	db	84	;'T'
  1438  007E8C  59                 	db	89	;'Y'
  1439  007E8D  50                 	db	80	;'P'
  1440  007E8E  45                 	db	69	;'E'
  1441  007E8F  22                 	db	34
  1442  007E90  2C                 	db	44
  1443  007E91  00                 	db	0
  1444  007E92  41                 	db	65	;'A'
  1445  007E93  54                 	db	84	;'T'
  1446  007E94  2B                 	db	43
  1447  007E95  53                 	db	83	;'S'
  1448  007E96  41                 	db	65	;'A'
  1449  007E97  50                 	db	80	;'P'
  1450  007E98  42                 	db	66	;'B'
  1451  007E99  52                 	db	82	;'R'
  1452  007E9A  3D                 	db	61	;'='
  1453  007E9B  30                 	db	48	;'0'
  1454  007E9C  2C                 	db	44
  1455  007E9D  00                 	db	0
  1456  007E9E  41                 	db	65	;'A'
  1457  007E9F  54                 	db	84	;'T'
  1458  007EA0  2B                 	db	43
  1459  007EA1  43                 	db	67	;'C'
  1460  007EA2  47                 	db	71	;'G'
  1461  007EA3  41                 	db	65	;'A'
  1462  007EA4  43                 	db	67	;'C'
  1463  007EA5  54                 	db	84	;'T'
  1464  007EA6  3D                 	db	61	;'='
  1465  007EA7  30                 	db	48	;'0'
  1466  007EA8  2C                 	db	44
  1467  007EA9  00                 	db	0
  1468  007EAA                     STR_56:
  1469  007EAA  41                 	db	65	;'A'
  1470  007EAB  54                 	db	84	;'T'
  1471  007EAC  2B                 	db	43
  1472  007EAD  53                 	db	83	;'S'
  1473  007EAE  41                 	db	65	;'A'
  1474  007EAF  50                 	db	80	;'P'
  1475  007EB0  42                 	db	66	;'B'
  1476  007EB1  52                 	db	82	;'R'
  1477  007EB2  3D                 	db	61	;'='
  1478  007EB3  31                 	db	49	;'1'
  1479  007EB4  2C                 	db	44
  1480  007EB5  00                 	db	0
  1481  007EB6  41                 	db	65	;'A'
  1482  007EB7  54                 	db	84	;'T'
  1483  007EB8  2B                 	db	43
  1484  007EB9  43                 	db	67	;'C'
  1485  007EBA  47                 	db	71	;'G'
  1486  007EBB  41                 	db	65	;'A'
  1487  007EBC  43                 	db	67	;'C'
  1488  007EBD  54                 	db	84	;'T'
  1489  007EBE  3D                 	db	61	;'='
  1490  007EBF  31                 	db	49	;'1'
  1491  007EC0  2C                 	db	44
  1492  007EC1  00                 	db	0
  1493  007EC2                     STR_58:
  1494  007EC2  41                 	db	65	;'A'
  1495  007EC3  54                 	db	84	;'T'
  1496  007EC4  2B                 	db	43
  1497  007EC5  53                 	db	83	;'S'
  1498  007EC6  41                 	db	65	;'A'
  1499  007EC7  50                 	db	80	;'P'
  1500  007EC8  42                 	db	66	;'B'
  1501  007EC9  52                 	db	82	;'R'
  1502  007ECA  3D                 	db	61	;'='
  1503  007ECB  32                 	db	50	;'2'
  1504  007ECC  2C                 	db	44
  1505  007ECD  00                 	db	0
  1506  007ECE                     STR_43:
  1507  007ECE  41                 	db	65	;'A'
  1508  007ECF  54                 	db	84	;'T'
  1509  007ED0  2B                 	db	43
  1510  007ED1  53                 	db	83	;'S'
  1511  007ED2  41                 	db	65	;'A'
  1512  007ED3  50                 	db	80	;'P'
  1513  007ED4  42                 	db	66	;'B'
  1514  007ED5  52                 	db	82	;'R'
  1515  007ED6  3D                 	db	61	;'='
  1516  007ED7  33                 	db	51	;'3'
  1517  007ED8  2C                 	db	44
  1518  007ED9  00                 	db	0
  1519  007EDA  41                 	db	65	;'A'
  1520  007EDB  54                 	db	84	;'T'
  1521  007EDC  2B                 	db	43
  1522  007EDD  43                 	db	67	;'C'
  1523  007EDE  47                 	db	71	;'G'
  1524  007EDF  43                 	db	67	;'C'
  1525  007EE0  4C                 	db	76	;'L'
  1526  007EE1  41                 	db	65	;'A'
  1527  007EE2  53                 	db	83	;'S'
  1528  007EE3  53                 	db	83	;'S'
  1529  007EE4  3D                 	db	61	;'='
  1530  007EE5  00                 	db	0
  1531  007EE6  41                 	db	65	;'A'
  1532  007EE7  54                 	db	84	;'T'
  1533  007EE8  2B                 	db	43
  1534  007EE9  43                 	db	67	;'C'
  1535  007EEA  47                 	db	71	;'G'
  1536  007EEB  44                 	db	68	;'D'
  1537  007EEC  43                 	db	67	;'C'
  1538  007EED  4F                 	db	79	;'O'
  1539  007EEE  4E                 	db	78	;'N'
  1540  007EEF  54                 	db	84	;'T'
  1541  007EF0  3D                 	db	61	;'='
  1542  007EF1  00                 	db	0
  1543  007EF2  41                 	db	65	;'A'
  1544  007EF3  54                 	db	84	;'T'
  1545  007EF4  2B                 	db	43
  1546  007EF5  43                 	db	67	;'C'
  1547  007EF6  47                 	db	71	;'G'
  1548  007EF7  52                 	db	82	;'R'
  1549  007EF8  45                 	db	69	;'E'
  1550  007EF9  47                 	db	71	;'G'
  1551  007EFA  3F                 	db	63	;'?'
  1552  007EFB  0D                 	db	13
  1553  007EFC  00                 	db	0
  1554  007EFD  41                 	db	65	;'A'
  1555  007EFE  54                 	db	84	;'T'
  1556  007EFF  2B                 	db	43
  1557  007F00  43                 	db	67	;'C'
  1558  007F01  47                 	db	71	;'G'
  1559  007F02  53                 	db	83	;'S'
  1560  007F03  4D                 	db	77	;'M'
  1561  007F04  53                 	db	83	;'S'
  1562  007F05  3F                 	db	63	;'?'
  1563  007F06  0D                 	db	13
  1564  007F07  00                 	db	0
  1565  007F08  41                 	db	65	;'A'
  1566  007F09  54                 	db	84	;'T'
  1567  007F0A  2B                 	db	43
  1568  007F0B  43                 	db	67	;'C'
  1569  007F0C  47                 	db	71	;'G'
  1570  007F0D  41                 	db	65	;'A'
  1571  007F0E  43                 	db	67	;'C'
  1572  007F0F  54                 	db	84	;'T'
  1573  007F10  3F                 	db	63	;'?'
  1574  007F11  0D                 	db	13
  1575  007F12  00                 	db	0
  1576  007F13  41                 	db	65	;'A'
  1577  007F14  54                 	db	84	;'T'
  1578  007F15  2B                 	db	43
  1579  007F16  43                 	db	67	;'C'
  1580  007F17  47                 	db	71	;'G'
  1581  007F18  41                 	db	65	;'A'
  1582  007F19  54                 	db	84	;'T'
  1583  007F1A  54                 	db	84	;'T'
  1584  007F1B  3F                 	db	63	;'?'
  1585  007F1C  0D                 	db	13
  1586  007F1D  00                 	db	0
  1587  007F1E  41                 	db	65	;'A'
  1588  007F1F  54                 	db	84	;'T'
  1589  007F20  2B                 	db	43
  1590  007F21  43                 	db	67	;'C'
  1591  007F22  47                 	db	71	;'G'
  1592  007F23  45                 	db	69	;'E'
  1593  007F24  52                 	db	82	;'R'
  1594  007F25  45                 	db	69	;'E'
  1595  007F26  50                 	db	80	;'P'
  1596  007F27  3D                 	db	61	;'='
  1597  007F28  00                 	db	0
  1598  007F29  41                 	db	65	;'A'
  1599  007F2A  54                 	db	84	;'T'
  1600  007F2B  2B                 	db	43
  1601  007F2C  43                 	db	67	;'C'
  1602  007F2D  4F                 	db	79	;'O'
  1603  007F2E  50                 	db	80	;'P'
  1604  007F2F  53                 	db	83	;'S'
  1605  007F30  3F                 	db	63	;'?'
  1606  007F31  0D                 	db	13
  1607  007F32  00                 	db	0
  1608  007F33  41                 	db	65	;'A'
  1609  007F34  54                 	db	84	;'T'
  1610  007F35  2B                 	db	43
  1611  007F36  43                 	db	67	;'C'
  1612  007F37  47                 	db	71	;'G'
  1613  007F38  52                 	db	82	;'R'
  1614  007F39  45                 	db	69	;'E'
  1615  007F3A  47                 	db	71	;'G'
  1616  007F3B  3D                 	db	61	;'='
  1617  007F3C  00                 	db	0
  1618  007F3D  41                 	db	65	;'A'
  1619  007F3E  54                 	db	84	;'T'
  1620  007F3F  2B                 	db	43
  1621  007F40  43                 	db	67	;'C'
  1622  007F41  47                 	db	71	;'G'
  1623  007F42  53                 	db	83	;'S'
  1624  007F43  4D                 	db	77	;'M'
  1625  007F44  53                 	db	83	;'S'
  1626  007F45  3D                 	db	61	;'='
  1627  007F46  00                 	db	0
  1628  007F47  41                 	db	65	;'A'
  1629  007F48  54                 	db	84	;'T'
  1630  007F49  2B                 	db	43
  1631  007F4A  43                 	db	67	;'C'
  1632  007F4B  49                 	db	73	;'I'
  1633  007F4C  4D                 	db	77	;'M'
  1634  007F4D  49                 	db	73	;'I'
  1635  007F4E  0D                 	db	13
  1636  007F4F  00                 	db	0
  1637  007F50  41                 	db	65	;'A'
  1638  007F51  54                 	db	84	;'T'
  1639  007F52  2B                 	db	43
  1640  007F53  43                 	db	67	;'C'
  1641  007F54  4E                 	db	78	;'N'
  1642  007F55  55                 	db	85	;'U'
  1643  007F56  4D                 	db	77	;'M'
  1644  007F57  0D                 	db	13
  1645  007F58  00                 	db	0
  1646  007F59  2C                 	db	44
  1647  007F5A  22                 	db	34
  1648  007F5B  52                 	db	82	;'R'
  1649  007F5C  41                 	db	65	;'A'
  1650  007F5D  54                 	db	84	;'T'
  1651  007F5E  45                 	db	69	;'E'
  1652  007F5F  22                 	db	34
  1653  007F60  2C                 	db	44
  1654  007F61  00                 	db	0
  1655  007F62  2C                 	db	44
  1656  007F63  22                 	db	34
  1657  007F64  55                 	db	85	;'U'
  1658  007F65  53                 	db	83	;'S'
  1659  007F66  45                 	db	69	;'E'
  1660  007F67  52                 	db	82	;'R'
  1661  007F68  22                 	db	34
  1662  007F69  2C                 	db	44
  1663  007F6A  00                 	db	0
  1664  007F6B                     STR_4:
  1665  007F6B  49                 	db	73	;'I'
  1666  007F6C  6E                 	db	110	;'n'
  1667  007F6D  74                 	db	116	;'t'
  1668  007F6E  65                 	db	101	;'e'
  1669  007F6F  72                 	db	114	;'r'
  1670  007F70  6E                 	db	110	;'n'
  1671  007F71  65                 	db	101	;'e'
  1672  007F72  74                 	db	116	;'t'
  1673  007F73  00                 	db	0
  1674  007F74  41                 	db	65	;'A'
  1675  007F75  54                 	db	84	;'T'
  1676  007F76  2B                 	db	43
  1677  007F77  47                 	db	71	;'G'
  1678  007F78  4D                 	db	77	;'M'
  1679  007F79  49                 	db	73	;'I'
  1680  007F7A  0D                 	db	13
  1681  007F7B  00                 	db	0
  1682  007F7C  41                 	db	65	;'A'
  1683  007F7D  54                 	db	84	;'T'
  1684  007F7E  2B                 	db	43
  1685  007F7F  47                 	db	71	;'G'
  1686  007F80  4F                 	db	79	;'O'
  1687  007F81  49                 	db	73	;'I'
  1688  007F82  0D                 	db	13
  1689  007F83  00                 	db	0
  1690  007F84  41                 	db	65	;'A'
  1691  007F85  54                 	db	84	;'T'
  1692  007F86  2B                 	db	43
  1693  007F87  47                 	db	71	;'G'
  1694  007F88  4D                 	db	77	;'M'
  1695  007F89  4D                 	db	77	;'M'
  1696  007F8A  0D                 	db	13
  1697  007F8B  00                 	db	0
  1698  007F8C  41                 	db	65	;'A'
  1699  007F8D  54                 	db	84	;'T'
  1700  007F8E  2B                 	db	43
  1701  007F8F  47                 	db	71	;'G'
  1702  007F90  53                 	db	83	;'S'
  1703  007F91  4E                 	db	78	;'N'
  1704  007F92  0D                 	db	13
  1705  007F93  00                 	db	0
  1706  007F94  41                 	db	65	;'A'
  1707  007F95  54                 	db	84	;'T'
  1708  007F96  2B                 	db	43
  1709  007F97  43                 	db	67	;'C'
  1710  007F98  53                 	db	83	;'S'
  1711  007F99  51                 	db	81	;'Q'
  1712  007F9A  0D                 	db	13
  1713  007F9B  00                 	db	0
  1714  007F9C  41                 	db	65	;'A'
  1715  007F9D  54                 	db	84	;'T'
  1716  007F9E  2B                 	db	43
  1717  007F9F  47                 	db	71	;'G'
  1718  007FA0  4D                 	db	77	;'M'
  1719  007FA1  52                 	db	82	;'R'
  1720  007FA2  0D                 	db	13
  1721  007FA3  00                 	db	0
  1722  007FA4  2C                 	db	44
  1723  007FA5  22                 	db	34
  1724  007FA6  50                 	db	80	;'P'
  1725  007FA7  57                 	db	87	;'W'
  1726  007FA8  44                 	db	68	;'D'
  1727  007FA9  22                 	db	34
  1728  007FAA  2C                 	db	44
  1729  007FAB  00                 	db	0
  1730  007FAC                     STR_46:
  1731  007FAC  2C                 	db	44
  1732  007FAD  22                 	db	34
  1733  007FAE  41                 	db	65	;'A'
  1734  007FAF  50                 	db	80	;'P'
  1735  007FB0  4E                 	db	78	;'N'
  1736  007FB1  22                 	db	34
  1737  007FB2  2C                 	db	44
  1738  007FB3  00                 	db	0
  1739  007FB4                     STR_5:
  1740  007FB4  44                 	db	68	;'D'
  1741  007FB5  6F                 	db	111	;'o'
  1742  007FB6  6E                 	db	110	;'n'
  1743  007FB7  65                 	db	101	;'e'
  1744  007FB8  2E                 	db	46
  1745  007FB9  0D                 	db	13
  1746  007FBA  0D                 	db	13
  1747  007FBB  00                 	db	0
  1748  007FBC  2C                 	db	44
  1749  007FBD  22                 	db	34
  1750  007FBE  49                 	db	73	;'I'
  1751  007FBF  50                 	db	80	;'P'
  1752  007FC0  22                 	db	34
  1753  007FC1  2C                 	db	44
  1754  007FC2  00                 	db	0
  1755  007FC3                     STR_25:
  1756  007FC3  44                 	db	68	;'D'
  1757  007FC4  61                 	db	97	;'a'
  1758  007FC5  74                 	db	116	;'t'
  1759  007FC6  61                 	db	97	;'a'
  1760  007FC7  3A                 	db	58	;':'
  1761  007FC8  20                 	db	32
  1762  007FC9  00                 	db	0
  1763  007FCA                     STR_29:
  1764  007FCA  41                 	db	65	;'A'
  1765  007FCB  54                 	db	84	;'T'
  1766  007FCC  45                 	db	69	;'E'
  1767  007FCD  30                 	db	48	;'0'
  1768  007FCE  0D                 	db	13
  1769  007FCF  00                 	db	0
  1770  007FD0                     STR_31:
  1771  007FD0  41                 	db	65	;'A'
  1772  007FD1  54                 	db	84	;'T'
  1773  007FD2  26                 	db	38
  1774  007FD3  57                 	db	87	;'W'
  1775  007FD4  0D                 	db	13
  1776  007FD5  00                 	db	0
  1777  007FD6  41                 	db	65	;'A'
  1778  007FD7  54                 	db	84	;'T'
  1779  007FD8  49                 	db	73	;'I'
  1780  007FD9  0D                 	db	13
  1781  007FDA  00                 	db	0
  1782  007FDB                     STR_15:
  1783  007FDB  33                 	db	51	;'3'
  1784  007FDC  35                 	db	53	;'5'
  1785  007FDD  30                 	db	48	;'0'
  1786  007FDE  30                 	db	48	;'0'
  1787  007FDF  00                 	db	0
  1788  007FE0                     STR_3:
  1789  007FE0  47                 	db	71	;'G'
  1790  007FE1  50                 	db	80	;'P'
  1791  007FE2  52                 	db	82	;'R'
  1792  007FE3  53                 	db	83	;'S'
  1793  007FE4  00                 	db	0
  1794  007FE5                     STR_28:
  1795  007FE5  41                 	db	65	;'A'
  1796  007FE6  54                 	db	84	;'T'
  1797  007FE7  0D                 	db	13
  1798  007FE8  00                 	db	0
  1799  007FE9                     STR_14:
  1800  007FE9  52                 	db	82	;'R'
  1801  007FEA  50                 	db	80	;'P'
  1802  007FEB  4D                 	db	77	;'M'
  1803  007FEC  00                 	db	0
  1804  007FED  43                 	db	67	;'C'
  1805  007FEE  43                 	db	67	;'C'
  1806  007FEF  00                 	db	0
  1807  007FF0  43                 	db	67	;'C'
  1808  007FF1  47                 	db	71	;'G'
  1809  007FF2  00                 	db	0
  1810  007FF3                     STR_13:
  1811  007FF3  33                 	db	51	;'3'
  1812  007FF4  30                 	db	48	;'0'
  1813  007FF5  00                 	db	0
  1814  007FF6                     STR_19:
  1815  007FF6  35                 	db	53	;'5'
  1816  007FF7  30                 	db	48	;'0'
  1817  007FF8  00                 	db	0
  1818  007FF9                     STR_17:
  1819  007FF9  33                 	db	51	;'3'
  1820  007FFA  35                 	db	53	;'5'
  1821  007FFB  00                 	db	0
  1822  007FFC                     STR_73:
  1823  007FFC  42                 	db	66	;'B'
  1824  007FFD  00                 	db	0
  1825  007FFE  00                 	db	0	; dummy byte at the end
  1826  0000                     
  1827                           ; #config settings
  1828                           
  1829                           	psect	cinit
  1830  001752                     __pcinit:
  1831                           	callstack 0
  1832  001752                     start_initialization:
  1833                           	callstack 0
  1834  001752                     __initialization:
  1835                           	callstack 0
  1836                           
  1837                           ; Initialize objects allocated to BANK0 (4 bytes)
  1838                           ; load TBLPTR registers with __pidataBANK0
  1839  001752  0EBE               	movlw	low __pidataBANK0
  1840  001754  6EF6               	movwf	tblptrl,c
  1841  001756  0E21               	movlw	high __pidataBANK0
  1842  001758  6EF7               	movwf	tblptrh,c
  1843  00175A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1844  00175C  6EF8               	movwf	tblptru,c
  1845  00175E  EE00  F0EF         	lfsr	0,__pdataBANK0
  1846  001762  EE10 F004          	lfsr	1,4
  1847  001766                     copy_data0:
  1848  001766  0009               	tblrd		*+
  1849  001768  CFF5 FFEE          	movff	tablat,postinc0
  1850  00176C  50E5               	movf	postdec1,w,c
  1851  00176E  50E1               	movf	fsr1l,w,c
  1852  001770  E1FA               	bnz	copy_data0
  1853                           
  1854                           ; Initialize objects allocated to COMRAM (4 bytes)
  1855                           ; load TBLPTR registers with __pidataCOMRAM
  1856  001772  0EBA               	movlw	low __pidataCOMRAM
  1857  001774  6EF6               	movwf	tblptrl,c
  1858  001776  0E21               	movlw	high __pidataCOMRAM
  1859  001778  6EF7               	movwf	tblptrh,c
  1860  00177A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1861  00177C  6EF8               	movwf	tblptru,c
  1862  00177E  EE00  F06A         	lfsr	0,__pdataCOMRAM
  1863  001782  EE10 F004          	lfsr	1,4
  1864  001786                     copy_data1:
  1865  001786  0009               	tblrd		*+
  1866  001788  CFF5 FFEE          	movff	tablat,postinc0
  1867  00178C  50E5               	movf	postdec1,w,c
  1868  00178E  50E1               	movf	fsr1l,w,c
  1869  001790  E1FA               	bnz	copy_data1
  1870                           
  1871                           ; Clear objects allocated to BANK3 (200 bytes)
  1872  001792  EE03  F000         	lfsr	0,__pbssBANK3
  1873  001796  0EC8               	movlw	200
  1874  001798                     clear_0:
  1875  001798  6AEE               	clrf	postinc0,c
  1876  00179A  06E8               	decf	wreg,f,c
  1877  00179C  E1FD               	bnz	clear_0
  1878                           
  1879                           ; Clear objects allocated to BANK2 (240 bytes)
  1880  00179E  EE02  F000         	lfsr	0,__pbssBANK2
  1881  0017A2  0EF0               	movlw	240
  1882  0017A4                     clear_1:
  1883  0017A4  6AEE               	clrf	postinc0,c
  1884  0017A6  06E8               	decf	wreg,f,c
  1885  0017A8  E1FD               	bnz	clear_1
  1886                           
  1887                           ; Clear objects allocated to BANK1 (220 bytes)
  1888  0017AA  EE01  F000         	lfsr	0,__pbssBANK1
  1889  0017AE  0EDC               	movlw	220
  1890  0017B0                     clear_2:
  1891  0017B0  6AEE               	clrf	postinc0,c
  1892  0017B2  06E8               	decf	wreg,f,c
  1893  0017B4  E1FD               	bnz	clear_2
  1894                           
  1895                           ; Clear objects allocated to BANK0 (70 bytes)
  1896  0017B6  EE00  F080         	lfsr	0,__pbssBANK0
  1897  0017BA  0E46               	movlw	70
  1898  0017BC                     clear_3:
  1899  0017BC  6AEE               	clrf	postinc0,c
  1900  0017BE  06E8               	decf	wreg,f,c
  1901  0017C0  E1FD               	bnz	clear_3
  1902                           
  1903                           ; Clear objects allocated to COMRAM (13 bytes)
  1904  0017C2  EE00  F05D         	lfsr	0,__pbssCOMRAM
  1905  0017C6  0E0D               	movlw	13
  1906  0017C8                     clear_4:
  1907  0017C8  6AEE               	clrf	postinc0,c
  1908  0017CA  06E8               	decf	wreg,f,c
  1909  0017CC  E1FD               	bnz	clear_4
  1910  0017CE                     end_of_initialization:
  1911                           	callstack 0
  1912  0017CE                     __end_of__initialization:
  1913                           	callstack 0
  1914  0017CE  906E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1915  0017D0  926E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1916  0017D2  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1917  0017D4  6EF8               	movwf	tblptru,c
  1918  0017D6  0100               	movlb	0
  1919  0017D8  EFD6  F010         	goto	_main	;jump to C main() function
  1920                           
  1921                           	psect	bssCOMRAM
  1922  00005D                     __pbssCOMRAM:
  1923                           	callstack 0
  1924  00005D                     _IncVar:
  1925                           	callstack 0
  1926  00005D                     	ds	4
  1927  000061                     _Rxfifocurrent@SIM800x_SDM$F1168:
  1928                           	callstack 0
  1929  000061                     	ds	2
  1930  000063                     _Rxfifoptr@SIM800x_SDM$F1167:
  1931                           	callstack 0
  1932  000063                     	ds	2
  1933  000065                     _val:
  1934                           	callstack 0
  1935  000065                     	ds	2
  1936  000067                     _Rxstatus:
  1937                           	callstack 0
  1938  000067                     	ds	1
  1939  000068                     _Rxfifocurrent:
  1940                           	callstack 0
  1941  000068                     	ds	1
  1942  000069                     _Rxfifoptr:
  1943                           	callstack 0
  1944  000069                     	ds	1
  1945                           
  1946                           	psect	dataCOMRAM
  1947  00006A                     __pdataCOMRAM:
  1948                           	callstack 0
  1949  00006A                     _Tout:
  1950                           	callstack 0
  1951  00006A                     	ds	4
  1952                           
  1953                           	psect	bssBANK0
  1954  000080                     __pbssBANK0:
  1955                           	callstack 0
  1956  000080                     	ds	20
  1957  000094                     	ds	20
  1958  0000A8                     	ds	20
  1959  0000BC                     _DecVar:
  1960                           	callstack 0
  1961  0000BC                     	ds	4
  1962  0000C0                     	ds	2
  1963  0000C2                     	ds	2
  1964  0000C4                     _cpos:
  1965                           	callstack 0
  1966  0000C4                     	ds	2
  1967                           
  1968                           	psect	dataBANK0
  1969  0000EF                     __pdataBANK0:
  1970                           	callstack 0
  1971  0000EF                     	ds	4
  1972                           
  1973                           	psect	bssBANK1
  1974  000100                     __pbssBANK1:
  1975                           	callstack 0
  1976  000100                     	ds	40
  1977  000128                     	ds	30
  1978  000146                     	ds	30
  1979  000164                     	ds	30
  1980  000182                     	ds	30
  1981  0001A0                     	ds	30
  1982  0001BE                     _rxmessage:
  1983                           	callstack 0
  1984  0001BE                     	ds	30
  1985                           
  1986                           	psect	bssBANK2
  1987  000200                     __pbssBANK2:
  1988                           	callstack 0
  1989  000200                     _RxFIFO:
  1990                           	callstack 0
  1991  000200                     	ds	100
  1992  000264                     	ds	40
  1993  00028C                     _txmessage:
  1994                           	callstack 0
  1995  00028C                     	ds	100
  1996                           
  1997                           	psect	bssBANK3
  1998  000300                     __pbssBANK3:
  1999                           	callstack 0
  2000  000300                     _RxFIFO@SIM800x_SDM$F1166:
  2001                           	callstack 0
  2002  000300                     	ds	200
  2003                           
  2004                           	psect	cstackBANK1
  2005  0001DC                     __pcstackBANK1:
  2006                           	callstack 0
  2007  0001DC                     SystemTask@msg:
  2008                           	callstack 0
  2009                           
  2010                           ; 20 bytes @ 0x0
  2011  0001DC                     	ds	20
  2012  0001F0                     SystemTask@cmd:
  2013                           	callstack 0
  2014                           
  2015                           ; 1 bytes @ 0x14
  2016  0001F0                     	ds	1
  2017  0001F1                     SystemTask@scode:
  2018                           	callstack 0
  2019                           
  2020                           ; 2 bytes @ 0x15
  2021  0001F1                     	ds	2
  2022  0001F3                     SystemTask@errcode:
  2023                           	callstack 0
  2024                           
  2025                           ; 2 bytes @ 0x17
  2026  0001F3                     	ds	2
  2027  0001F5                     SystemTask@cnt:
  2028                           	callstack 0
  2029                           
  2030                           ; 4 bytes @ 0x19
  2031  0001F5                     	ds	4
  2032                           
  2033                           	psect	cstackBANK0
  2034  0000C6                     __pcstackBANK0:
  2035                           	callstack 0
  2036  0000C6                     SystemInit@ip:
  2037                           	callstack 0
  2038  0000C6                     SIM800xHTTPInputData@str:
  2039                           	callstack 0
  2040  0000C6                     SIM800xHTTPAction@str:
  2041                           	callstack 0
  2042  0000C6                     SIM800xHTTPRead@str:
  2043                           	callstack 0
  2044                           
  2045                           ; 30 bytes @ 0x0
  2046  0000C6                     	ds	20
  2047  0000DA                     SystemInit@err:
  2048                           	callstack 0
  2049                           
  2050                           ; 2 bytes @ 0x14
  2051  0000DA                     	ds	10
  2052  0000E4                     SIM800xHTTPInputData@len:
  2053                           	callstack 0
  2054  0000E4                     SIM800xHTTPAction@t:
  2055                           	callstack 0
  2056  0000E4                     SIM800xHTTPRead@sz:
  2057                           	callstack 0
  2058                           
  2059                           ; 4 bytes @ 0x1E
  2060  0000E4                     	ds	4
  2061  0000E8                     SIM800xHTTPAction@method:
  2062                           	callstack 0
  2063  0000E8                     SIM800xHTTPInputData@time:
  2064                           	callstack 0
  2065  0000E8                     SIM800xHTTPRead@time:
  2066                           	callstack 0
  2067                           
  2068                           ; 4 bytes @ 0x22
  2069  0000E8                     	ds	1
  2070  0000E9                     SIM800xHTTPAction@time:
  2071                           	callstack 0
  2072                           
  2073                           ; 4 bytes @ 0x23
  2074  0000E9                     	ds	3
  2075  0000EC                     SIM800xHTTPInputData@res:
  2076                           	callstack 0
  2077  0000EC                     SIM800xHTTPRead@res:
  2078                           	callstack 0
  2079                           
  2080                           ; 2 bytes @ 0x26
  2081  0000EC                     	ds	1
  2082  0000ED                     SIM800xHTTPAction@res:
  2083                           	callstack 0
  2084                           
  2085                           ; 2 bytes @ 0x27
  2086  0000ED                     	ds	2
  2087                           
  2088                           	psect	cstackCOMRAM
  2089  000001                     __pcstackCOMRAM:
  2090                           	callstack 0
  2091  000001                     ?i2___awmod:
  2092                           	callstack 0
  2093  000001                     ?i2___lwmod:
  2094                           	callstack 0
  2095  000001                     USARTReceiveByte@data:
  2096                           	callstack 0
  2097  000001                     i2___awmod@dividend:
  2098                           	callstack 0
  2099  000001                     i2___lwmod@dividend:
  2100                           	callstack 0
  2101                           
  2102                           ; 2 bytes @ 0x0
  2103  000001                     	ds	2
  2104  000003                     i2___awmod@divisor:
  2105                           	callstack 0
  2106  000003                     i2___lwmod@divisor:
  2107                           	callstack 0
  2108                           
  2109                           ; 2 bytes @ 0x2
  2110  000003                     	ds	2
  2111  000005                     i2___awmod@counter:
  2112                           	callstack 0
  2113  000005                     i2___lwmod@counter:
  2114                           	callstack 0
  2115                           
  2116                           ; 1 bytes @ 0x4
  2117  000005                     	ds	1
  2118  000006                     SIM800xSDMCallBack@tmp:
  2119                           	callstack 0
  2120  000006                     i2___awmod@sign:
  2121                           	callstack 0
  2122                           
  2123                           ; 1 bytes @ 0x5
  2124  000006                     	ds	1
  2125  000007                     ??_SoftUARTCallBack:
  2126  000007                     SIM800xSDMCallBack@next:
  2127                           	callstack 0
  2128                           
  2129                           ; 2 bytes @ 0x6
  2130  000007                     	ds	2
  2131  000009                     SoftUARTCallBack@rxtmp:
  2132                           	callstack 0
  2133                           
  2134                           ; 1 bytes @ 0x8
  2135  000009                     	ds	1
  2136  00000A                     SoftUARTCallBack@next:
  2137                           	callstack 0
  2138                           
  2139                           ; 1 bytes @ 0x9
  2140  00000A                     	ds	1
  2141  00000B                     SoftUARTCallBack@k:
  2142                           	callstack 0
  2143                           
  2144                           ; 1 bytes @ 0xA
  2145  00000B                     	ds	1
  2146  00000C                     ??_Isr:
  2147                           
  2148                           ; 1 bytes @ 0xB
  2149  00000C                     	ds	2
  2150  00000E                     ??_SIM800xSDMPeek:
  2151  00000E                     ?_strlen:
  2152                           	callstack 0
  2153  00000E                     ?___awmod:
  2154                           	callstack 0
  2155  00000E                     ?___lwmod:
  2156                           	callstack 0
  2157  00000E                     ?_Tick_ms:
  2158                           	callstack 0
  2159  00000E                     ?___lmul:
  2160                           	callstack 0
  2161  00000E                     ?___lldiv:
  2162                           	callstack 0
  2163  00000E                     SoftUARTTransmitByte@data:
  2164                           	callstack 0
  2165  00000E                     SIM800xSDMSendByte@data:
  2166                           	callstack 0
  2167  00000E                     USARTAsyncInit@bgr:
  2168                           	callstack 0
  2169  00000E                     AddEntryToJsonObject@JsonObject:
  2170                           	callstack 0
  2171  00000E                     SIM800xSDMSendBytes@data:
  2172                           	callstack 0
  2173  00000E                     ___awmod@dividend:
  2174                           	callstack 0
  2175  00000E                     ___lwmod@dividend:
  2176                           	callstack 0
  2177  00000E                     strlen@s:
  2178                           	callstack 0
  2179  00000E                     Wait_ms@value:
  2180                           	callstack 0
  2181  00000E                     ___lmul@multiplier:
  2182                           	callstack 0
  2183  00000E                     ___lldiv@dividend:
  2184                           	callstack 0
  2185                           
  2186                           ; 4 bytes @ 0xD
  2187  00000E                     	ds	1
  2188  00000F                     SoftUARTTransmitByte@tmp:
  2189                           	callstack 0
  2190  00000F                     SIM800xSDMPrint@str:
  2191                           	callstack 0
  2192                           
  2193                           ; 2 bytes @ 0xE
  2194  00000F                     	ds	1
  2195  000010                     SoftUARTTransmitByte@k:
  2196                           	callstack 0
  2197  000010                     SIM800xSDMPeek@idx:
  2198                           	callstack 0
  2199  000010                     AddEntryToJsonObject@key:
  2200                           	callstack 0
  2201  000010                     SIM800xSDMSendBytes@cnt:
  2202                           	callstack 0
  2203  000010                     ___awmod@divisor:
  2204                           	callstack 0
  2205  000010                     ___lwmod@divisor:
  2206                           	callstack 0
  2207  000010                     strlen@cp:
  2208                           	callstack 0
  2209                           
  2210                           ; 2 bytes @ 0xF
  2211  000010                     	ds	1
  2212  000011                     SoftUARTPrint@str:
  2213                           	callstack 0
  2214                           
  2215                           ; 2 bytes @ 0x10
  2216  000011                     	ds	1
  2217  000012                     ??_Wait_ms:
  2218  000012                     ___awmod@counter:
  2219                           	callstack 0
  2220  000012                     ___lwmod@counter:
  2221                           	callstack 0
  2222  000012                     AddEntryToJsonObject@value:
  2223                           	callstack 0
  2224  000012                     ___lmul@multiplicand:
  2225                           	callstack 0
  2226  000012                     ___lldiv@divisor:
  2227                           	callstack 0
  2228                           
  2229                           ; 4 bytes @ 0x11
  2230  000012                     	ds	1
  2231  000013                     ?_SIM800xSDMRxAvailable:
  2232                           	callstack 0
  2233  000013                     SIM800xSDMReadByte@data:
  2234                           	callstack 0
  2235  000013                     ___awmod@sign:
  2236                           	callstack 0
  2237                           
  2238                           ; 1 bytes @ 0x12
  2239  000013                     	ds	1
  2240  000014                     ??_SoftUARTRxAvailable:
  2241  000014                     ?_SoftUARTReceiveByte:
  2242                           	callstack 0
  2243  000014                     AddEntryToJsonObject@Cpos:
  2244                           	callstack 0
  2245                           
  2246                           ; 2 bytes @ 0x13
  2247  000014                     	ds	1
  2248  000015                     ??_SIM800xSDMRxAvailable:
  2249                           
  2250                           ; 1 bytes @ 0x14
  2251  000015                     	ds	1
  2252  000016                     ??_AddEntryToJsonObject:
  2253  000016                     SoftUARTReceiveByte@data:
  2254                           	callstack 0
  2255  000016                     Wait_ms@x:
  2256                           	callstack 0
  2257  000016                     ___lmul@product:
  2258                           	callstack 0
  2259  000016                     ___lldiv@quotient:
  2260                           	callstack 0
  2261                           
  2262                           ; 4 bytes @ 0x15
  2263  000016                     	ds	1
  2264  000017                     ??_ProcessResp1:
  2265  000017                     ?_SIM800xSDMReadF1Pkt:
  2266                           	callstack 0
  2267  000017                     SIM800xSDMReadF1Pkt@data:
  2268                           	callstack 0
  2269                           
  2270                           ; 2 bytes @ 0x16
  2271  000017                     	ds	2
  2272  000019                     ??_SIM800xSDMReadF1Pkt:
  2273                           
  2274                           ; 1 bytes @ 0x18
  2275  000019                     	ds	1
  2276  00001A                     ?_StrToInt:
  2277                           	callstack 0
  2278  00001A                     AddEntryToJsonObject@offset:
  2279                           	callstack 0
  2280  00001A                     ___lldiv@counter:
  2281                           	callstack 0
  2282  00001A                     StrToInt@str:
  2283                           	callstack 0
  2284                           
  2285                           ; 2 bytes @ 0x19
  2286  00001A                     	ds	1
  2287  00001B                     ?___llmod:
  2288                           	callstack 0
  2289  00001B                     ProcessResp1@time:
  2290                           	callstack 0
  2291  00001B                     SIM800xSDMInit@br:
  2292                           	callstack 0
  2293  00001B                     ___llmod@dividend:
  2294                           	callstack 0
  2295                           
  2296                           ; 4 bytes @ 0x1A
  2297  00001B                     	ds	1
  2298  00001C                     StrToInt@start:
  2299                           	callstack 0
  2300                           
  2301                           ; 1 bytes @ 0x1B
  2302  00001C                     	ds	1
  2303  00001D                     StrToInt@stop:
  2304                           	callstack 0
  2305  00001D                     SIM800xSDMReadF1Pkt@val:
  2306                           	callstack 0
  2307                           
  2308                           ; 2 bytes @ 0x1C
  2309  00001D                     	ds	1
  2310  00001E                     ??_StrToInt:
  2311                           
  2312                           ; 1 bytes @ 0x1D
  2313  00001E                     	ds	1
  2314  00001F                     ??_SIM800xSDMInit:
  2315  00001F                     ProcessResp1@c:
  2316                           	callstack 0
  2317  00001F                     SIM800xSDMReadF1Pkt@i:
  2318                           	callstack 0
  2319  00001F                     ___llmod@divisor:
  2320                           	callstack 0
  2321                           
  2322                           ; 4 bytes @ 0x1E
  2323  00001F                     	ds	1
  2324  000020                     SIM800xIPOpen@cid:
  2325                           	callstack 0
  2326  000020                     SIM800xIPSetConnectionType@contype:
  2327                           	callstack 0
  2328  000020                     SIM800xIPSetAPN@apn:
  2329                           	callstack 0
  2330  000020                     SIM800xSDMReadF1Pkt@time:
  2331                           	callstack 0
  2332                           
  2333                           ; 4 bytes @ 0x1F
  2334  000020                     	ds	2
  2335  000022                     SIM800xIPSetConnectionType@cid:
  2336                           	callstack 0
  2337  000022                     SIM800xIPSetAPN@cid:
  2338                           	callstack 0
  2339                           
  2340                           ; 1 bytes @ 0x21
  2341  000022                     	ds	1
  2342  000023                     ___llmod@counter:
  2343                           	callstack 0
  2344  000023                     StrToInt@val:
  2345                           	callstack 0
  2346  000023                     SIM800xSDMInit@val:
  2347                           	callstack 0
  2348                           
  2349                           ; 4 bytes @ 0x22
  2350  000023                     	ds	1
  2351  000024                     ?_sprintf:
  2352                           	callstack 0
  2353  000024                     SIM800xSDMReadF1Pkt@tmp:
  2354                           	callstack 0
  2355  000024                     sprintf@sp:
  2356                           	callstack 0
  2357                           
  2358                           ; 2 bytes @ 0x23
  2359  000024                     	ds	1
  2360  000025                     ProcessResp2@str:
  2361                           	callstack 0
  2362                           
  2363                           ; 2 bytes @ 0x24
  2364  000025                     	ds	1
  2365  000026                     sprintf@f:
  2366                           	callstack 0
  2367                           
  2368                           ; 2 bytes @ 0x25
  2369  000026                     	ds	1
  2370  000027                     ??_ProcessResp2:
  2371  000027                     StrToInt@j:
  2372                           	callstack 0
  2373                           
  2374                           ; 1 bytes @ 0x26
  2375  000027                     	ds	1
  2376  000028                     StrToInt@ctrl:
  2377                           	callstack 0
  2378                           
  2379                           ; 1 bytes @ 0x27
  2380  000028                     	ds	1
  2381  000029                     StrToInt@po:
  2382                           	callstack 0
  2383                           
  2384                           ; 4 bytes @ 0x28
  2385  000029                     	ds	2
  2386  00002B                     ProcessResp2@time:
  2387                           	callstack 0
  2388                           
  2389                           ; 4 bytes @ 0x2A
  2390  00002B                     	ds	2
  2391  00002D                     StrToInt@i:
  2392                           	callstack 0
  2393                           
  2394                           ; 1 bytes @ 0x2C
  2395  00002D                     	ds	1
  2396  00002E                     ProcessResp4@ec:
  2397                           	callstack 0
  2398                           
  2399                           ; 2 bytes @ 0x2D
  2400  00002E                     	ds	1
  2401  00002F                     ProcessResp2@res:
  2402                           	callstack 0
  2403                           
  2404                           ; 2 bytes @ 0x2E
  2405  00002F                     	ds	1
  2406  000030                     ??_sprintf:
  2407  000030                     ??_ProcessResp4:
  2408                           
  2409                           ; 1 bytes @ 0x2F
  2410  000030                     	ds	1
  2411  000031                     SIM800xIPGetState@ip:
  2412                           	callstack 0
  2413                           
  2414                           ; 2 bytes @ 0x30
  2415  000031                     	ds	1
  2416  000032                     sprintf@prec:
  2417                           	callstack 0
  2418                           
  2419                           ; 2 bytes @ 0x31
  2420  000032                     	ds	1
  2421  000033                     ??_SIM800xIPGetState:
  2422                           
  2423                           ; 1 bytes @ 0x32
  2424  000033                     	ds	1
  2425  000034                     sprintf@val:
  2426                           	callstack 0
  2427  000034                     ProcessResp4@str:
  2428                           	callstack 0
  2429                           
  2430                           ; 20 bytes @ 0x33
  2431  000034                     	ds	3
  2432  000037                     SIM800xIPGetState@str:
  2433                           	callstack 0
  2434                           
  2435                           ; 30 bytes @ 0x36
  2436  000037                     	ds	1
  2437  000038                     sprintf@flag:
  2438                           	callstack 0
  2439                           
  2440                           ; 1 bytes @ 0x37
  2441  000038                     	ds	1
  2442  000039                     sprintf@ap:
  2443                           	callstack 0
  2444                           
  2445                           ; 2 bytes @ 0x38
  2446  000039                     	ds	2
  2447  00003B                     sprintf@c:
  2448                           	callstack 0
  2449                           
  2450                           ; 1 bytes @ 0x3A
  2451  00003B                     	ds	1
  2452  00003C                     SIM800xHTTPInputData@data:
  2453                           	callstack 0
  2454  00003C                     SIM800xHTTPAction@statuscode:
  2455                           	callstack 0
  2456  00003C                     SIM800xHTTPRead@data:
  2457                           	callstack 0
  2458  00003C                     SIM800xInit@br:
  2459                           	callstack 0
  2460                           
  2461                           ; 4 bytes @ 0x3B
  2462  00003C                     	ds	2
  2463  00003E                     SIM800xHTTPAction@cnt:
  2464                           	callstack 0
  2465  00003E                     SIM800xHTTPInputData@cnt:
  2466                           	callstack 0
  2467  00003E                     SIM800xHTTPRead@strindex:
  2468                           	callstack 0
  2469                           
  2470                           ; 4 bytes @ 0x3D
  2471  00003E                     	ds	2
  2472  000040                     SIM800xHTTPAction@tout:
  2473                           	callstack 0
  2474  000040                     SIM800xInit@str:
  2475                           	callstack 0
  2476                           
  2477                           ; 15 bytes @ 0x3F
  2478  000040                     	ds	2
  2479  000042                     SIM800xHTTPInputData@timeout:
  2480                           	callstack 0
  2481  000042                     SIM800xHTTPRead@size:
  2482                           	callstack 0
  2483                           
  2484                           ; 4 bytes @ 0x41
  2485  000042                     	ds	2
  2486  000044                     SIM800xHTTPAction@errcode:
  2487                           	callstack 0
  2488                           
  2489                           ; 2 bytes @ 0x43
  2490  000044                     	ds	2
  2491  000046                     ??_SIM800xHTTPAction:
  2492  000046                     SIM800xHTTPInputData@errcode:
  2493                           	callstack 0
  2494  000046                     SIM800xHTTPRead@cnt:
  2495                           	callstack 0
  2496                           
  2497                           ; 2 bytes @ 0x45
  2498  000046                     	ds	2
  2499  000048                     ??_SIM800xHTTPInputData:
  2500  000048                     SIM800xHTTPRead@errcode:
  2501                           	callstack 0
  2502  000048                     ProcessResp4@time:
  2503                           	callstack 0
  2504                           
  2505                           ; 4 bytes @ 0x47
  2506  000048                     	ds	2
  2507  00004A                     ??_SIM800xHTTPRead:
  2508                           
  2509                           ; 1 bytes @ 0x49
  2510  00004A                     	ds	2
  2511  00004C                     ProcessResp4@res:
  2512                           	callstack 0
  2513                           
  2514                           ; 2 bytes @ 0x4B
  2515  00004C                     	ds	2
  2516  00004E                     ??_SystemTask:
  2517  00004E                     SIM800xHTTPInit@errcode:
  2518                           	callstack 0
  2519  00004E                     SIM800xHTTPSetURL@url:
  2520                           	callstack 0
  2521  00004E                     SIM800xHTTPSetContent@content:
  2522                           	callstack 0
  2523                           
  2524                           ; 2 bytes @ 0x4D
  2525  00004E                     	ds	1
  2526  00004F                     SIM800xInit@tmp:
  2527                           	callstack 0
  2528                           
  2529                           ; 2 bytes @ 0x4E
  2530  00004F                     	ds	1
  2531  000050                     SIM800xHTTPSetURL@errcode:
  2532                           	callstack 0
  2533  000050                     SIM800xHTTPSetContent@errcode:
  2534                           	callstack 0
  2535                           
  2536                           ; 2 bytes @ 0x4F
  2537  000050                     	ds	1
  2538  000051                     SIM800xInit@c:
  2539                           	callstack 0
  2540                           
  2541                           ; 1 bytes @ 0x50
  2542  000051                     	ds	1
  2543  000052                     
  2544                           ; 1 bytes @ 0x51
  2545  000052                     	ds	3
  2546  000055                     SIM800xIPGetState@time1:
  2547                           	callstack 0
  2548                           
  2549                           ; 4 bytes @ 0x54
  2550  000055                     	ds	4
  2551  000059                     SIM800xIPGetState@res:
  2552                           	callstack 0
  2553                           
  2554                           ; 1 bytes @ 0x58
  2555  000059                     	ds	1
  2556  00005A                     SIM800xIPGetState@cid:
  2557                           	callstack 0
  2558                           
  2559                           ; 1 bytes @ 0x59
  2560  00005A                     	ds	1
  2561  00005B                     SIM800xIPGetState@len:
  2562                           	callstack 0
  2563                           
  2564                           ; 1 bytes @ 0x5A
  2565  00005B                     	ds	1
  2566  00005C                     SIM800xIPGetState@i:
  2567                           	callstack 0
  2568                           
  2569                           ; 1 bytes @ 0x5B
  2570  00005C                     	ds	1
  2571  00005D                     
  2572                           ; 1 bytes @ 0x5C
  2573 ;;
  2574 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2575 ;;
  2576 ;; *************** function _main *****************
  2577 ;; Defined at:
  2578 ;;		line 12 in file "Src/main.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;		None
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;		None
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  1    wreg      void 
  2585 ;; Registers used:
  2586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2592 ;;      Params:         0       0       0       0       0       0       0
  2593 ;;      Locals:         0       0       0       0       0       0       0
  2594 ;;      Temps:          0       0       0       0       0       0       0
  2595 ;;      Totals:         0       0       0       0       0       0       0
  2596 ;;Total ram usage:        0 bytes
  2597 ;; Hardware stack levels required when called: 9
  2598 ;; This function calls:
  2599 ;;		_SystemInit
  2600 ;;		_SystemTask
  2601 ;; This function is called by:
  2602 ;;		Startup code after reset
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           	psect	text0
  2607  0021AC                     __ptext0:
  2608                           	callstack 0
  2609  0021AC                     _main:
  2610                           	callstack 0
  2611  0021AC  FFFF               	dw	65535	; assembler added errata NOP
  2612                           
  2613                           ;main.c: 15: SystemInit();
  2614                           
  2615                           ;incstack = 0
  2616  0021AE  EC14  F006         	call	_SystemInit	;wreg free
  2617  0021B2                     l75:
  2618  0021B2  FFFF               	dw	65535	; assembler added errata NOP
  2619                           
  2620                           ;main.c: 18: {;main.c: 19: SystemTask();
  2621  0021B4  ECF1  F006         	call	_SystemTask	;wreg free
  2622  0021B8  D7FC               	goto	l75
  2623  0021BA                     __end_of_main:
  2624                           	callstack 0
  2625                           
  2626 ;; *************** function _SystemTask *****************
  2627 ;; Defined at:
  2628 ;;		line 96 in file "Src/ApplicationExample.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;		None
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;  msg            20    0[BANK1 ] unsigned char [20]
  2633 ;;  cnt             4   25[BANK1 ] unsigned long 
  2634 ;;  errcode         2   23[BANK1 ] unsigned int 
  2635 ;;  scode           2   21[BANK1 ] unsigned int 
  2636 ;;  cmd             1   20[BANK1 ] unsigned char 
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  1    wreg      void 
  2639 ;; Registers used:
  2640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2646 ;;      Params:         0       0       0       0       0       0       0
  2647 ;;      Locals:         0       0      29       0       0       0       0
  2648 ;;      Temps:          2       0       0       0       0       0       0
  2649 ;;      Totals:         2       0      29       0       0       0       0
  2650 ;;Total ram usage:       31 bytes
  2651 ;; Hardware stack levels used: 1
  2652 ;; Hardware stack levels required when called: 7
  2653 ;; This function calls:
  2654 ;;		_SIM800xHTTPAction
  2655 ;;		_SIM800xHTTPInputData
  2656 ;;		_SIM800xHTTPRead
  2657 ;;		_SoftUARTPrint
  2658 ;;		_SoftUARTReceiveByte
  2659 ;;		_SoftUARTRxAvailable
  2660 ;;		_sprintf
  2661 ;; This function is called by:
  2662 ;;		_main
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           	psect	text1
  2667  000DE2                     __ptext1:
  2668                           	callstack 0
  2669  000DE2                     _SystemTask:
  2670                           	callstack 0
  2671  000DE2  FFFF               	dw	65535	; assembler added errata NOP
  2672                           
  2673                           ;ApplicationExample.c: 98: uint8_t cmd = 0;
  2674                           
  2675                           ;incstack = 0
  2676  000DE4  0E00               	movlw	0
  2677  000DE6  0101               	movlb	1	; () banked
  2678  000DE8  6FF0               	movwf	SystemTask@cmd& (0+255),b
  2679                           
  2680                           ;ApplicationExample.c: 99: uint16_t scode = 0, errcode = 0;
  2681  000DEA  0E00               	movlw	0
  2682  000DEC  6FF2               	movwf	(SystemTask@scode+1)& (0+255),b
  2683  000DEE  0E00               	movlw	0
  2684  000DF0  6FF1               	movwf	SystemTask@scode& (0+255),b
  2685  000DF2  0E00               	movlw	0
  2686  000DF4  6FF4               	movwf	(SystemTask@errcode+1)& (0+255),b
  2687  000DF6  0E00               	movlw	0
  2688  000DF8  6FF3               	movwf	SystemTask@errcode& (0+255),b
  2689                           
  2690                           ;ApplicationExample.c: 100: uint32_t cnt = 0;
  2691  000DFA  0E00               	movlw	0
  2692  000DFC  6FF5               	movwf	SystemTask@cnt& (0+255),b
  2693  000DFE  0E00               	movlw	0
  2694  000E00  6FF6               	movwf	(SystemTask@cnt+1)& (0+255),b
  2695  000E02  0E00               	movlw	0
  2696  000E04  6FF7               	movwf	(SystemTask@cnt+2)& (0+255),b
  2697  000E06  0E00               	movlw	0
  2698  000E08  6FF8               	movwf	(SystemTask@cnt+3)& (0+255),b
  2699                           
  2700                           ; BSR set to: 1
  2701                           ;ApplicationExample.c: 101: if(SoftUARTRxAvailable())
  2702  000E0A  EC5E  F010         	call	_SoftUARTRxAvailable	;wreg free
  2703  000E0E  0900               	iorlw	0
  2704  000E10  B4D8               	btfsc	status,2,c
  2705  000E12  D005               	goto	l5454
  2706                           
  2707                           ;ApplicationExample.c: 102: cmd = (uint8_t)SoftUARTReceiveByte();
  2708  000E14  ECA1  F00F         	call	_SoftUARTReceiveByte	;wreg free
  2709  000E18  5014               	movf	?_SoftUARTReceiveByte^0,w,c
  2710  000E1A  0101               	movlb	1	; () banked
  2711  000E1C  6FF0               	movwf	SystemTask@cmd& (0+255),b
  2712  000E1E                     l5454:
  2713  000E1E  FFFF               	dw	65535	; assembler added errata NOP
  2714                           
  2715                           ;ApplicationExample.c: 103: if(cmd == '1')
  2716  000E20  0E31               	movlw	49
  2717  000E22  0101               	movlb	1	; () banked
  2718  000E24  19F0               	xorwf	SystemTask@cmd& (0+255),w,b
  2719  000E26  A4D8               	btfss	status,2,c
  2720  000E28  D0A6               	goto	l5472
  2721                           
  2722                           ; BSR set to: 1
  2723                           ;ApplicationExample.c: 104: {;ApplicationExample.c: 106: SoftUARTPrint("Sending message 
      +                          to thinger.io...\r");
  2724  000E2A  0EF2               	movlw	low STR_22
  2725  000E2C  6E11               	movwf	SoftUARTPrint@str^0,c
  2726  000E2E  0E7A               	movlw	high STR_22
  2727  000E30  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  2728  000E32  ECCA  F00D         	call	_SoftUARTPrint	;wreg free
  2729                           
  2730                           ;ApplicationExample.c: 108: SIM800xHTTPInputData(txmessage, (uint32_t)(cpos + 1), 5000, 
      +                          &errcode);
  2731  000E36  0E8C               	movlw	low _txmessage
  2732  000E38  6E3C               	movwf	SIM800xHTTPInputData@data^0,c
  2733  000E3A  0E02               	movlw	high _txmessage
  2734  000E3C  6E3D               	movwf	(SIM800xHTTPInputData@data+1)^0,c
  2735  000E3E  0E01               	movlw	1
  2736  000E40  0100               	movlb	0	; () banked
  2737  000E42  25C4               	addwf	_cpos& (0+255),w,b
  2738  000E44  6E4E               	movwf	??_SystemTask^0,c
  2739  000E46  0E00               	movlw	0
  2740  000E48  21C5               	addwfc	(_cpos+1)& (0+255),w,b
  2741  000E4A  6E4F               	movwf	(??_SystemTask+1)^0,c
  2742  000E4C  C04E  F03E         	movff	??_SystemTask,SIM800xHTTPInputData@cnt
  2743  000E50  C04F  F03F         	movff	??_SystemTask+1,SIM800xHTTPInputData@cnt+1
  2744  000E54  6A40               	clrf	(SIM800xHTTPInputData@cnt+2)^0,c
  2745  000E56  6A41               	clrf	(SIM800xHTTPInputData@cnt+3)^0,c
  2746  000E58  0E88               	movlw	136
  2747  000E5A  6E42               	movwf	SIM800xHTTPInputData@timeout^0,c
  2748  000E5C  0E13               	movlw	19
  2749  000E5E  6E43               	movwf	(SIM800xHTTPInputData@timeout+1)^0,c
  2750  000E60  0E00               	movlw	0
  2751  000E62  6E44               	movwf	(SIM800xHTTPInputData@timeout+2)^0,c
  2752  000E64  0E00               	movlw	0
  2753  000E66  6E45               	movwf	(SIM800xHTTPInputData@timeout+3)^0,c
  2754  000E68  0EF3               	movlw	low SystemTask@errcode
  2755  000E6A  6E46               	movwf	SIM800xHTTPInputData@errcode^0,c
  2756  000E6C  0E01               	movlw	high SystemTask@errcode
  2757  000E6E  6E47               	movwf	(SIM800xHTTPInputData@errcode+1)^0,c
  2758  000E70  EC0F  F005         	call	_SIM800xHTTPInputData	;wreg free
  2759                           
  2760                           ;ApplicationExample.c: 110: if(SIM800xHTTPAction(1, &scode, &cnt, 10000, &errcode) == SI
      +                          M800X_OK)
  2761  000E74  0EF1               	movlw	low SystemTask@scode
  2762  000E76  6E3C               	movwf	SIM800xHTTPAction@statuscode^0,c
  2763  000E78  0E01               	movlw	high SystemTask@scode
  2764  000E7A  6E3D               	movwf	(SIM800xHTTPAction@statuscode+1)^0,c
  2765  000E7C  0EF5               	movlw	low SystemTask@cnt
  2766  000E7E  6E3E               	movwf	SIM800xHTTPAction@cnt^0,c
  2767  000E80  0E01               	movlw	high SystemTask@cnt
  2768  000E82  6E3F               	movwf	(SIM800xHTTPAction@cnt+1)^0,c
  2769  000E84  0E10               	movlw	16
  2770  000E86  6E40               	movwf	SIM800xHTTPAction@tout^0,c
  2771  000E88  0E27               	movlw	39
  2772  000E8A  6E41               	movwf	(SIM800xHTTPAction@tout+1)^0,c
  2773  000E8C  0E00               	movlw	0
  2774  000E8E  6E42               	movwf	(SIM800xHTTPAction@tout+2)^0,c
  2775  000E90  0E00               	movlw	0
  2776  000E92  6E43               	movwf	(SIM800xHTTPAction@tout+3)^0,c
  2777  000E94  0EF3               	movlw	low SystemTask@errcode
  2778  000E96  6E44               	movwf	SIM800xHTTPAction@errcode^0,c
  2779  000E98  0E01               	movlw	high SystemTask@errcode
  2780  000E9A  6E45               	movwf	(SIM800xHTTPAction@errcode+1)^0,c
  2781  000E9C  0E01               	movlw	1
  2782  000E9E  ECFE  F003         	call	_SIM800xHTTPAction
  2783  000EA2  0900               	iorlw	0
  2784  000EA4  A4D8               	btfss	status,2,c
  2785  000EA6  D060               	goto	l5470
  2786                           
  2787                           ;ApplicationExample.c: 111: {;ApplicationExample.c: 112: if(SIM800xHTTPRead(rxmessage, 0
      +                          , cnt, &cnt, &errcode) == SIM800X_OK)
  2788  000EA8  0EBE               	movlw	low _rxmessage
  2789  000EAA  6E3C               	movwf	SIM800xHTTPRead@data^0,c
  2790  000EAC  0E01               	movlw	high _rxmessage
  2791  000EAE  6E3D               	movwf	(SIM800xHTTPRead@data+1)^0,c
  2792  000EB0  0E00               	movlw	0
  2793  000EB2  6E3E               	movwf	SIM800xHTTPRead@strindex^0,c
  2794  000EB4  0E00               	movlw	0
  2795  000EB6  6E3F               	movwf	(SIM800xHTTPRead@strindex+1)^0,c
  2796  000EB8  0E00               	movlw	0
  2797  000EBA  6E40               	movwf	(SIM800xHTTPRead@strindex+2)^0,c
  2798  000EBC  0E00               	movlw	0
  2799  000EBE  6E41               	movwf	(SIM800xHTTPRead@strindex+3)^0,c
  2800  000EC0  C1F5  F042         	movff	SystemTask@cnt,SIM800xHTTPRead@size
  2801  000EC4  C1F6  F043         	movff	SystemTask@cnt+1,SIM800xHTTPRead@size+1
  2802  000EC8  C1F7  F044         	movff	SystemTask@cnt+2,SIM800xHTTPRead@size+2
  2803  000ECC  C1F8  F045         	movff	SystemTask@cnt+3,SIM800xHTTPRead@size+3
  2804  000ED0  0EF5               	movlw	low SystemTask@cnt
  2805  000ED2  6E46               	movwf	SIM800xHTTPRead@cnt^0,c
  2806  000ED4  0E01               	movlw	high SystemTask@cnt
  2807  000ED6  6E47               	movwf	(SIM800xHTTPRead@cnt+1)^0,c
  2808  000ED8  0EF3               	movlw	low SystemTask@errcode
  2809  000EDA  6E48               	movwf	SIM800xHTTPRead@errcode^0,c
  2810  000EDC  0E01               	movlw	high SystemTask@errcode
  2811  000EDE  6E49               	movwf	(SIM800xHTTPRead@errcode+1)^0,c
  2812  000EE0  EC8D  F001         	call	_SIM800xHTTPRead	;wreg free
  2813  000EE4  0900               	iorlw	0
  2814  000EE6  A4D8               	btfss	status,2,c
  2815  000EE8  D046               	goto	l5472
  2816                           
  2817                           ;ApplicationExample.c: 113: {;ApplicationExample.c: 114: char msg[20];;ApplicationExampl
      +                          e.c: 115: sprintf(msg, "HTTP response code: %u\r", scode);
  2818  000EEA  0EDC               	movlw	low SystemTask@msg
  2819  000EEC  6E24               	movwf	sprintf@sp^0,c
  2820  000EEE  0E01               	movlw	high SystemTask@msg
  2821  000EF0  6E25               	movwf	(sprintf@sp+1)^0,c
  2822  000EF2  0E7F               	movlw	low STR_23
  2823  000EF4  6E26               	movwf	sprintf@f^0,c
  2824  000EF6  0E7C               	movlw	high STR_23
  2825  000EF8  6E27               	movwf	(sprintf@f+1)^0,c
  2826  000EFA  C1F1  F028         	movff	SystemTask@scode,?_sprintf+4
  2827  000EFE  C1F2  F029         	movff	SystemTask@scode+1,?_sprintf+5
  2828  000F02  ECCD  F002         	call	_sprintf	;wreg free
  2829                           
  2830                           ;ApplicationExample.c: 116: SoftUARTPrint(msg);
  2831  000F06  0EDC               	movlw	low SystemTask@msg
  2832  000F08  6E11               	movwf	SoftUARTPrint@str^0,c
  2833  000F0A  0E01               	movlw	high SystemTask@msg
  2834  000F0C  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  2835  000F0E  ECCA  F00D         	call	_SoftUARTPrint	;wreg free
  2836                           
  2837                           ;ApplicationExample.c: 117: sprintf(msg, "Received data length: %ld\r", cnt);
  2838  000F12  0EDC               	movlw	low SystemTask@msg
  2839  000F14  6E24               	movwf	sprintf@sp^0,c
  2840  000F16  0E01               	movlw	high SystemTask@msg
  2841  000F18  6E25               	movwf	(sprintf@sp+1)^0,c
  2842  000F1A  0EE7               	movlw	low STR_24
  2843  000F1C  6E26               	movwf	sprintf@f^0,c
  2844  000F1E  0E7B               	movlw	high STR_24
  2845  000F20  6E27               	movwf	(sprintf@f+1)^0,c
  2846  000F22  C1F5  F028         	movff	SystemTask@cnt,?_sprintf+4
  2847  000F26  C1F6  F029         	movff	SystemTask@cnt+1,?_sprintf+5
  2848  000F2A  C1F7  F02A         	movff	SystemTask@cnt+2,?_sprintf+6
  2849  000F2E  C1F8  F02B         	movff	SystemTask@cnt+3,?_sprintf+7
  2850  000F32  ECCD  F002         	call	_sprintf	;wreg free
  2851                           
  2852                           ;ApplicationExample.c: 118: SoftUARTPrint(msg);
  2853  000F36  0EDC               	movlw	low SystemTask@msg
  2854  000F38  6E11               	movwf	SoftUARTPrint@str^0,c
  2855  000F3A  0E01               	movlw	high SystemTask@msg
  2856  000F3C  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  2857  000F3E  ECCA  F00D         	call	_SoftUARTPrint	;wreg free
  2858                           
  2859                           ;ApplicationExample.c: 119: SoftUARTPrint("Data: ");
  2860  000F42  0EC3               	movlw	low STR_25
  2861  000F44  6E11               	movwf	SoftUARTPrint@str^0,c
  2862  000F46  0E7F               	movlw	high STR_25
  2863  000F48  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  2864  000F4A  ECCA  F00D         	call	_SoftUARTPrint	;wreg free
  2865                           
  2866                           ;ApplicationExample.c: 120: SoftUARTPrint(msg);
  2867  000F4E  0EDC               	movlw	low SystemTask@msg
  2868  000F50  6E11               	movwf	SoftUARTPrint@str^0,c
  2869  000F52  0E01               	movlw	high SystemTask@msg
  2870  000F54  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  2871  000F56  ECCA  F00D         	call	_SoftUARTPrint	;wreg free
  2872                           
  2873                           ;ApplicationExample.c: 121: SoftUARTPrint("\r\r");
  2874  000F5A  0E31               	movlw	low (STR_21+29)
  2875  000F5C  6E11               	movwf	SoftUARTPrint@str^0,c
  2876  000F5E  0E7B               	movlw	high (STR_21+29)
  2877  000F60  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  2878  000F62  ECCA  F00D         	call	_SoftUARTPrint	;wreg free
  2879  000F66  D007               	goto	l5472
  2880  000F68                     l5470:
  2881  000F68  FFFF               	dw	65535	; assembler added errata NOP
  2882                           
  2883                           ;ApplicationExample.c: 124: {;ApplicationExample.c: 125: SoftUARTPrint("Sending failed.\
      +                          r");
  2884  000F6A  0E8B               	movlw	low STR_27
  2885  000F6C  6E11               	movwf	SoftUARTPrint@str^0,c
  2886  000F6E  0E7D               	movlw	high STR_27
  2887  000F70  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  2888  000F72  ECCA  F00D         	call	_SoftUARTPrint	;wreg free
  2889  000F76                     l5472:
  2890  000F76  FFFF               	dw	65535	; assembler added errata NOP
  2891  000F78  0012               	return		;funcret
  2892  000F7A  FFFF               	dw	65535	; errata NOP
  2893  000F7C                     __end_of_SystemTask:
  2894                           	callstack 0
  2895                           
  2896 ;; *************** function _SoftUARTRxAvailable *****************
  2897 ;; Defined at:
  2898 ;;		line 352 in file "Src/SoftwareUART.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;		None
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  1    wreg      unsigned char 
  2905 ;; Registers used:
  2906 ;;		wreg, status,2, status,0, cstack
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2912 ;;      Params:         0       0       0       0       0       0       0
  2913 ;;      Locals:         0       0       0       0       0       0       0
  2914 ;;      Temps:          2       0       0       0       0       0       0
  2915 ;;      Totals:         2       0       0       0       0       0       0
  2916 ;;Total ram usage:        2 bytes
  2917 ;; Hardware stack levels used: 1
  2918 ;; Hardware stack levels required when called: 4
  2919 ;; This function calls:
  2920 ;;		___awmod
  2921 ;; This function is called by:
  2922 ;;		_SystemTask
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text2
  2927  0020BC                     __ptext2:
  2928                           	callstack 0
  2929  0020BC                     _SoftUARTRxAvailable:
  2930                           	callstack 0
  2931  0020BC  FFFF               	dw	65535	; assembler added errata NOP
  2932                           
  2933                           ;SoftwareUART.c: 355: return (uint8_t)((Rxfifocurrent + 100 - Rxfifoptr) % 100);
  2934                           
  2935                           ;incstack = 0
  2936  0020BE  5069               	movf	_Rxfifoptr^0,w,c	;volatile
  2937  0020C0  C068  F014         	movff	_Rxfifocurrent,??_SoftUARTRxAvailable	;volatile
  2938  0020C4  6A15               	clrf	(??_SoftUARTRxAvailable+1)^0,c
  2939  0020C6  5E14               	subwf	??_SoftUARTRxAvailable^0,f,c
  2940  0020C8  0E00               	movlw	0
  2941  0020CA  5A15               	subwfb	(??_SoftUARTRxAvailable+1)^0,f,c
  2942  0020CC  0E64               	movlw	100
  2943  0020CE  2414               	addwf	??_SoftUARTRxAvailable^0,w,c
  2944  0020D0  6E0E               	movwf	___awmod@dividend^0,c
  2945  0020D2  0E00               	movlw	0
  2946  0020D4  2015               	addwfc	(??_SoftUARTRxAvailable+1)^0,w,c
  2947  0020D6  6E0F               	movwf	(___awmod@dividend+1)^0,c
  2948  0020D8  0E00               	movlw	0
  2949  0020DA  6E11               	movwf	(___awmod@divisor+1)^0,c
  2950  0020DC  0E64               	movlw	100
  2951  0020DE  6E10               	movwf	___awmod@divisor^0,c
  2952  0020E0  ECEE  F00B         	call	___awmod	;wreg free
  2953  0020E4  500E               	movf	?___awmod^0,w,c
  2954  0020E6  0012               	return		;funcret
  2955  0020E8  FFFF               	dw	65535	; errata NOP
  2956  0020EA                     __end_of_SoftUARTRxAvailable:
  2957                           	callstack 0
  2958                           
  2959 ;; *************** function _SoftUARTReceiveByte *****************
  2960 ;; Defined at:
  2961 ;;		line 360 in file "Src/SoftwareUART.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;		None
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;  data            1   21[COMRAM] unsigned char 
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  2   19[COMRAM] int 
  2968 ;; Registers used:
  2969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2975 ;;      Params:         2       0       0       0       0       0       0
  2976 ;;      Locals:         1       0       0       0       0       0       0
  2977 ;;      Temps:          0       0       0       0       0       0       0
  2978 ;;      Totals:         3       0       0       0       0       0       0
  2979 ;;Total ram usage:        3 bytes
  2980 ;; Hardware stack levels used: 1
  2981 ;; Hardware stack levels required when called: 4
  2982 ;; This function calls:
  2983 ;;		___awmod
  2984 ;; This function is called by:
  2985 ;;		_SystemTask
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           	psect	text3
  2990  001F42                     __ptext3:
  2991                           	callstack 0
  2992  001F42                     _SoftUARTReceiveByte:
  2993                           	callstack 0
  2994  001F42  FFFF               	dw	65535	; assembler added errata NOP
  2995                           
  2996                           ;SoftwareUART.c: 363: if(Rxfifocurrent == Rxfifoptr)
  2997                           
  2998                           ;incstack = 0
  2999  001F44  5069               	movf	_Rxfifoptr^0,w,c	;volatile
  3000  001F46  1868               	xorwf	_Rxfifocurrent^0,w,c	;volatile
  3001  001F48  A4D8               	btfss	status,2,c
  3002  001F4A  D003               	goto	l5156
  3003                           
  3004                           ;SoftwareUART.c: 364: return -1;
  3005  001F4C  6814               	setf	?_SoftUARTReceiveByte^0,c
  3006  001F4E  6815               	setf	(?_SoftUARTReceiveByte+1)^0,c
  3007  001F50  D01A               	goto	l251
  3008  001F52                     l5156:
  3009  001F52  FFFF               	dw	65535	; assembler added errata NOP
  3010                           
  3011                           ;SoftwareUART.c: 366: uint8_t data = RxFIFO[Rxfifoptr];
  3012  001F54  0E00               	movlw	low _RxFIFO
  3013  001F56  2469               	addwf	_Rxfifoptr^0,w,c	;volatile
  3014  001F58  6ED9               	movwf	fsr2l,c
  3015  001F5A  6ADA               	clrf	fsr2h,c
  3016  001F5C  0E02               	movlw	high _RxFIFO
  3017  001F5E  22DA               	addwfc	fsr2h,f,c
  3018  001F60  50DF               	movf	indf2,w,c
  3019  001F62  6E16               	movwf	SoftUARTReceiveByte@data^0,c
  3020                           
  3021                           ;SoftwareUART.c: 367: Rxfifoptr = (uint8_t)((Rxfifoptr + 1) % 100);
  3022  001F64  0E01               	movlw	1
  3023  001F66  2469               	addwf	_Rxfifoptr^0,w,c	;volatile
  3024  001F68  6E0E               	movwf	___awmod@dividend^0,c
  3025  001F6A  6A0F               	clrf	(___awmod@dividend+1)^0,c
  3026  001F6C  0E00               	movlw	0
  3027  001F6E  220F               	addwfc	(___awmod@dividend+1)^0,f,c
  3028  001F70  0E00               	movlw	0
  3029  001F72  6E11               	movwf	(___awmod@divisor+1)^0,c
  3030  001F74  0E64               	movlw	100
  3031  001F76  6E10               	movwf	___awmod@divisor^0,c
  3032  001F78  ECEE  F00B         	call	___awmod	;wreg free
  3033  001F7C  500E               	movf	?___awmod^0,w,c
  3034  001F7E  6E69               	movwf	_Rxfifoptr^0,c	;volatile
  3035                           
  3036                           ;SoftwareUART.c: 369: return data;
  3037  001F80  C016  F014         	movff	SoftUARTReceiveByte@data,?_SoftUARTReceiveByte
  3038  001F84  6A15               	clrf	(?_SoftUARTReceiveByte+1)^0,c
  3039  001F86                     l251:
  3040  001F86  FFFF               	dw	65535	; assembler added errata NOP
  3041  001F88  0012               	return		;funcret
  3042  001F8A  FFFF               	dw	65535	; errata NOP
  3043  001F8C                     __end_of_SoftUARTReceiveByte:
  3044                           	callstack 0
  3045                           
  3046 ;; *************** function ___awmod *****************
  3047 ;; Defined at:
  3048 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;  dividend        2   13[COMRAM] int 
  3051 ;;  divisor         2   15[COMRAM] int 
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;  sign            1   18[COMRAM] unsigned char 
  3054 ;;  counter         1   17[COMRAM] unsigned char 
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  2   13[COMRAM] int 
  3057 ;; Registers used:
  3058 ;;		wreg, status,2, status,0
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3064 ;;      Params:         4       0       0       0       0       0       0
  3065 ;;      Locals:         2       0       0       0       0       0       0
  3066 ;;      Temps:          0       0       0       0       0       0       0
  3067 ;;      Totals:         6       0       0       0       0       0       0
  3068 ;;Total ram usage:        6 bytes
  3069 ;; Hardware stack levels used: 1
  3070 ;; Hardware stack levels required when called: 3
  3071 ;; This function calls:
  3072 ;;		Nothing
  3073 ;; This function is called by:
  3074 ;;		_SoftUARTRxAvailable
  3075 ;;		_SoftUARTReceiveByte
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           	psect	text4
  3080  0017DC                     __ptext4:
  3081                           	callstack 0
  3082  0017DC                     ___awmod:
  3083                           	callstack 0
  3084  0017DC  FFFF               	dw	65535	; assembler added errata NOP
  3085                           
  3086                           ;incstack = 0
  3087  0017DE  0E00               	movlw	0
  3088  0017E0  6E13               	movwf	___awmod@sign^0,c
  3089  0017E2  AE0F               	btfss	(___awmod@dividend+1)^0,7,c
  3090  0017E4  D006               	goto	l4902
  3091  0017E6  6C0E               	negf	___awmod@dividend^0,c
  3092  0017E8  1E0F               	comf	(___awmod@dividend+1)^0,f,c
  3093  0017EA  B0D8               	btfsc	status,0,c
  3094  0017EC  2A0F               	incf	(___awmod@dividend+1)^0,f,c
  3095  0017EE  0E01               	movlw	1
  3096  0017F0  6E13               	movwf	___awmod@sign^0,c
  3097  0017F2                     l4902:
  3098  0017F2  FFFF               	dw	65535	; assembler added errata NOP
  3099  0017F4  AE11               	btfss	(___awmod@divisor+1)^0,7,c
  3100  0017F6  D004               	goto	l4906
  3101  0017F8  6C10               	negf	___awmod@divisor^0,c
  3102  0017FA  1E11               	comf	(___awmod@divisor+1)^0,f,c
  3103  0017FC  B0D8               	btfsc	status,0,c
  3104  0017FE  2A11               	incf	(___awmod@divisor+1)^0,f,c
  3105  001800                     l4906:
  3106  001800  FFFF               	dw	65535	; assembler added errata NOP
  3107  001802  5010               	movf	___awmod@divisor^0,w,c
  3108  001804  1011               	iorwf	(___awmod@divisor+1)^0,w,c
  3109  001806  B4D8               	btfsc	status,2,c
  3110  001808  D01C               	goto	l4922
  3111  00180A  0E01               	movlw	1
  3112  00180C  6E12               	movwf	___awmod@counter^0,c
  3113  00180E  D005               	goto	l4912
  3114  001810                     l4910:
  3115  001810  FFFF               	dw	65535	; assembler added errata NOP
  3116  001812  90D8               	bcf	status,0,c
  3117  001814  3610               	rlcf	___awmod@divisor^0,f,c
  3118  001816  3611               	rlcf	(___awmod@divisor+1)^0,f,c
  3119  001818  2A12               	incf	___awmod@counter^0,f,c
  3120  00181A                     l4912:
  3121  00181A  FFFF               	dw	65535	; assembler added errata NOP
  3122  00181C  AE11               	btfss	(___awmod@divisor+1)^0,7,c
  3123  00181E  D7F8               	goto	l4910
  3124  001820                     u4190:
  3125  001820  FFFF               	dw	65535	; assembler added errata NOP
  3126  001822  5010               	movf	___awmod@divisor^0,w,c
  3127  001824  5C0E               	subwf	___awmod@dividend^0,w,c
  3128  001826  5011               	movf	(___awmod@divisor+1)^0,w,c
  3129  001828  580F               	subwfb	(___awmod@dividend+1)^0,w,c
  3130  00182A  A0D8               	btfss	status,0,c
  3131  00182C  D004               	goto	l4918
  3132  00182E  5010               	movf	___awmod@divisor^0,w,c
  3133  001830  5E0E               	subwf	___awmod@dividend^0,f,c
  3134  001832  5011               	movf	(___awmod@divisor+1)^0,w,c
  3135  001834  5A0F               	subwfb	(___awmod@dividend+1)^0,f,c
  3136  001836                     l4918:
  3137  001836  FFFF               	dw	65535	; assembler added errata NOP
  3138  001838  90D8               	bcf	status,0,c
  3139  00183A  3211               	rrcf	(___awmod@divisor+1)^0,f,c
  3140  00183C  3210               	rrcf	___awmod@divisor^0,f,c
  3141  00183E  2E12               	decfsz	___awmod@counter^0,f,c
  3142  001840  D7EF               	goto	u4190
  3143  001842                     l4922:
  3144  001842  FFFF               	dw	65535	; assembler added errata NOP
  3145  001844  5013               	movf	___awmod@sign^0,w,c
  3146  001846  B4D8               	btfsc	status,2,c
  3147  001848  D004               	goto	l4926
  3148  00184A  6C0E               	negf	___awmod@dividend^0,c
  3149  00184C  1E0F               	comf	(___awmod@dividend+1)^0,f,c
  3150  00184E  B0D8               	btfsc	status,0,c
  3151  001850  2A0F               	incf	(___awmod@dividend+1)^0,f,c
  3152  001852                     l4926:
  3153  001852  FFFF               	dw	65535	; assembler added errata NOP
  3154  001854  C00E  F00E         	movff	___awmod@dividend,?___awmod
  3155  001858  C00F  F00F         	movff	___awmod@dividend+1,?___awmod+1
  3156  00185C  0012               	return		;funcret
  3157  00185E  FFFF               	dw	65535	; errata NOP
  3158  001860                     __end_of___awmod:
  3159                           	callstack 0
  3160                           
  3161 ;; *************** function _SIM800xHTTPRead *****************
  3162 ;; Defined at:
  3163 ;;		line 1693 in file "Src/SIM800x.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;  data            2   59[COMRAM] PTR unsigned char 
  3166 ;;		 -> rxmessage(30), 
  3167 ;;  strindex        4   61[COMRAM] unsigned long 
  3168 ;;  size            4   65[COMRAM] unsigned long 
  3169 ;;  cnt             2   69[COMRAM] PTR unsigned long 
  3170 ;;		 -> SystemTask@cnt(4), 
  3171 ;;  errcode         2   71[COMRAM] PTR unsigned int 
  3172 ;;		 -> SystemTask@errcode(2), 
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;  sz              4   30[BANK0 ] unsigned long 
  3175 ;;  str            30    0[BANK0 ] unsigned char [30]
  3176 ;;  time            4   34[BANK0 ] unsigned long 
  3177 ;;  res             2   38[BANK0 ] int 
  3178 ;; Return value:  Size  Location     Type
  3179 ;;                  1    wreg      enum E2115
  3180 ;; Registers used:
  3181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3182 ;; Tracked objects:
  3183 ;;		On entry : 0/0
  3184 ;;		On exit  : 0/0
  3185 ;;		Unchanged: 0/0
  3186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3187 ;;      Params:        14       0       0       0       0       0       0
  3188 ;;      Locals:         0      40       0       0       0       0       0
  3189 ;;      Temps:          4       0       0       0       0       0       0
  3190 ;;      Totals:        18      40       0       0       0       0       0
  3191 ;;Total ram usage:       58 bytes
  3192 ;; Hardware stack levels used: 1
  3193 ;; Hardware stack levels required when called: 6
  3194 ;; This function calls:
  3195 ;;		_SIM800xSDMFlush
  3196 ;;		_SIM800xSDMPeek
  3197 ;;		_SIM800xSDMPrint
  3198 ;;		_SIM800xSDMReadByte
  3199 ;;		_SIM800xSDMReadF1Pkt
  3200 ;;		_SIM800xSDMRxAvailable
  3201 ;;		_StrToInt
  3202 ;;		_Tick_ms
  3203 ;;		_sprintf
  3204 ;; This function is called by:
  3205 ;;		_SystemTask
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           	psect	text5
  3210  00031A                     __ptext5:
  3211                           	callstack 0
  3212  00031A                     _SIM800xHTTPRead:
  3213                           	callstack 0
  3214  00031A  FFFF               	dw	65535	; assembler added errata NOP
  3215                           
  3216                           ;SIM800x.c: 1696: if((strindex > 0x4E000) || (size > 0x4E000) || (size < 1))
  3217                           
  3218                           ;incstack = 0
  3219  00031C  5041               	movf	(SIM800xHTTPRead@strindex+3)^0,w,c
  3220  00031E  E117               	bnz	l5318
  3221  000320  043E               	decf	SIM800xHTTPRead@strindex^0,w,c
  3222  000322  0EE0               	movlw	224
  3223  000324  583F               	subwfb	(SIM800xHTTPRead@strindex+1)^0,w,c
  3224  000326  0E04               	movlw	4
  3225  000328  5840               	subwfb	(SIM800xHTTPRead@strindex+2)^0,w,c
  3226  00032A  B0D8               	btfsc	status,0,c
  3227  00032C  D00F               	goto	u4690
  3228  00032E  5045               	movf	(SIM800xHTTPRead@size+3)^0,w,c
  3229  000330  E10E               	bnz	l5318
  3230  000332  0442               	decf	SIM800xHTTPRead@size^0,w,c
  3231  000334  0EE0               	movlw	224
  3232  000336  5843               	subwfb	(SIM800xHTTPRead@size+1)^0,w,c
  3233  000338  0E04               	movlw	4
  3234  00033A  5844               	subwfb	(SIM800xHTTPRead@size+2)^0,w,c
  3235  00033C  B0D8               	btfsc	status,0,c
  3236  00033E  D006               	goto	u4690
  3237  000340  5042               	movf	SIM800xHTTPRead@size^0,w,c
  3238  000342  1043               	iorwf	(SIM800xHTTPRead@size+1)^0,w,c
  3239  000344  1044               	iorwf	(SIM800xHTTPRead@size+2)^0,w,c
  3240  000346  1045               	iorwf	(SIM800xHTTPRead@size+3)^0,w,c
  3241  000348  A4D8               	btfss	status,2,c
  3242  00034A  D003               	goto	l5322
  3243  00034C                     u4690:
  3244  00034C  FFFF               	dw	65535	; assembler added errata NOP
  3245  00034E                     l5318:
  3246                           
  3247                           ;SIM800x.c: 1697: return SIM800X_ERROR;
  3248  00034E  0E01               	movlw	1
  3249  000350  D121               	goto	l829
  3250  000352                     l5322:
  3251  000352  FFFF               	dw	65535	; assembler added errata NOP
  3252                           
  3253                           ;SIM800x.c: 1699: char str[30] = {0, 0, 0, 0};
  3254  000354  EE20  F0C6         	lfsr	2,SIM800xHTTPRead@str
  3255  000358  0E1D               	movlw	29
  3256  00035A                     u4701:
  3257  00035A  6ADE               	clrf	postinc2,c
  3258  00035C  06E8               	decf	wreg,f,c
  3259  00035E  E2FD               	bc	u4701
  3260                           
  3261                           ;SIM800x.c: 1701: sprintf(str, "AT+HTTPREAD=%ld,%ld\r", strindex, size);
  3262  000360  0EC6               	movlw	low SIM800xHTTPRead@str
  3263  000362  6E24               	movwf	sprintf@sp^0,c
  3264  000364  0E00               	movlw	high SIM800xHTTPRead@str
  3265  000366  6E25               	movwf	(sprintf@sp+1)^0,c
  3266  000368  0EDA               	movlw	low STR_100
  3267  00036A  6E26               	movwf	sprintf@f^0,c
  3268  00036C  0E7C               	movlw	high STR_100
  3269  00036E  6E27               	movwf	(sprintf@f+1)^0,c
  3270  000370  C03E  F028         	movff	SIM800xHTTPRead@strindex,?_sprintf+4
  3271  000374  C03F  F029         	movff	SIM800xHTTPRead@strindex+1,?_sprintf+5
  3272  000378  C040  F02A         	movff	SIM800xHTTPRead@strindex+2,?_sprintf+6
  3273  00037C  C041  F02B         	movff	SIM800xHTTPRead@strindex+3,?_sprintf+7
  3274  000380  C042  F02C         	movff	SIM800xHTTPRead@size,?_sprintf+8
  3275  000384  C043  F02D         	movff	SIM800xHTTPRead@size+1,?_sprintf+9
  3276  000388  C044  F02E         	movff	SIM800xHTTPRead@size+2,?_sprintf+10
  3277  00038C  C045  F02F         	movff	SIM800xHTTPRead@size+3,?_sprintf+11
  3278  000390  ECCD  F002         	call	_sprintf	;wreg free
  3279                           
  3280                           ;SIM800x.c: 1702: SIM800xSDMFlush();
  3281  000394  ECAE  F010         	call	_SIM800xSDMFlush	;wreg free
  3282                           
  3283                           ;SIM800x.c: 1703: SIM800xSDMPrint(str);
  3284  000398  0EC6               	movlw	low SIM800xHTTPRead@str
  3285  00039A  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  3286  00039C  0E00               	movlw	high SIM800xHTTPRead@str
  3287  00039E  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  3288  0003A0  ECFA  F00D         	call	_SIM800xSDMPrint	;wreg free
  3289                           
  3290                           ;SIM800x.c: 1705: uint32_t time = Tick_ms();
  3291  0003A4  ECA3  F010         	call	_Tick_ms	;wreg free
  3292  0003A8  C00E  F0E8         	movff	?_Tick_ms,SIM800xHTTPRead@time
  3293  0003AC  C00F  F0E9         	movff	?_Tick_ms+1,SIM800xHTTPRead@time+1
  3294  0003B0  C010  F0EA         	movff	?_Tick_ms+2,SIM800xHTTPRead@time+2
  3295  0003B4  C011  F0EB         	movff	?_Tick_ms+3,SIM800xHTTPRead@time+3
  3296                           
  3297                           ;SIM800x.c: 1706: while(SIM800xSDMRxAvailable() < 16)
  3298  0003B8  D01D               	goto	l5338
  3299  0003BA                     l5332:
  3300  0003BA  FFFF               	dw	65535	; assembler added errata NOP
  3301                           
  3302                           ;SIM800x.c: 1707: {;SIM800x.c: 1708: if((Tick_ms() - time) > Tout)
  3303  0003BC  ECA3  F010         	call	_Tick_ms	;wreg free
  3304  0003C0  0100               	movlb	0	; () banked
  3305  0003C2  51E8               	movf	SIM800xHTTPRead@time& (0+255),w,b
  3306  0003C4  5C0E               	subwf	?_Tick_ms^0,w,c
  3307  0003C6  6E4A               	movwf	??_SIM800xHTTPRead^0,c
  3308  0003C8  51E9               	movf	(SIM800xHTTPRead@time+1)& (0+255),w,b
  3309  0003CA  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  3310  0003CC  6E4B               	movwf	(??_SIM800xHTTPRead+1)^0,c
  3311  0003CE  51EA               	movf	(SIM800xHTTPRead@time+2)& (0+255),w,b
  3312  0003D0  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  3313  0003D2  6E4C               	movwf	(??_SIM800xHTTPRead+2)^0,c
  3314  0003D4  51EB               	movf	(SIM800xHTTPRead@time+3)& (0+255),w,b
  3315  0003D6  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  3316  0003D8  6E4D               	movwf	(??_SIM800xHTTPRead+3)^0,c
  3317  0003DA  504A               	movf	??_SIM800xHTTPRead^0,w,c
  3318  0003DC  5C6A               	subwf	_Tout^0,w,c
  3319  0003DE  504B               	movf	(??_SIM800xHTTPRead+1)^0,w,c
  3320  0003E0  586B               	subwfb	(_Tout+1)^0,w,c
  3321  0003E2  504C               	movf	(??_SIM800xHTTPRead+2)^0,w,c
  3322  0003E4  586C               	subwfb	(_Tout+2)^0,w,c
  3323  0003E6  504D               	movf	(??_SIM800xHTTPRead+3)^0,w,c
  3324  0003E8  586D               	subwfb	(_Tout+3)^0,w,c
  3325  0003EA  B0D8               	btfsc	status,0,c
  3326  0003EC  D003               	goto	l5338
  3327  0003EE                     u4710:
  3328  0003EE  FFFF               	dw	65535	; assembler added errata NOP
  3329                           
  3330                           ; BSR set to: 0
  3331                           ;SIM800x.c: 1709: {;SIM800x.c: 1710: return SIM800X_TIME_OUT;
  3332  0003F0  0E05               	movlw	5
  3333  0003F2  D0D0               	goto	l829
  3334  0003F4                     l5338:
  3335  0003F4  FFFF               	dw	65535	; assembler added errata NOP
  3336  0003F6  EC45  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  3337  0003FA  5014               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  3338  0003FC  E104               	bnz	u4720
  3339  0003FE  0E10               	movlw	16
  3340  000400  5C13               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  3341  000402  A0D8               	btfss	status,0,c
  3342  000404  D7DA               	goto	l5332
  3343  000406                     u4720:
  3344                           
  3345                           ;SIM800x.c: 1711: };SIM800x.c: 1712: };SIM800x.c: 1714: int res = SIM800xSDMReadF1Pkt(st
      +                          r);
  3346  000406  0EC6               	movlw	low SIM800xHTTPRead@str
  3347  000408  6E17               	movwf	SIM800xSDMReadF1Pkt@data^0,c
  3348  00040A  0E00               	movlw	high SIM800xHTTPRead@str
  3349  00040C  6E18               	movwf	(SIM800xSDMReadF1Pkt@data+1)^0,c
  3350  00040E  EC28  F009         	call	_SIM800xSDMReadF1Pkt	;wreg free
  3351  000412  C017  F0EC         	movff	?_SIM800xSDMReadF1Pkt,SIM800xHTTPRead@res
  3352  000416  C018  F0ED         	movff	?_SIM800xSDMReadF1Pkt+1,SIM800xHTTPRead@res+1
  3353                           
  3354                           ;SIM800x.c: 1715: if(res < 0)
  3355  00041A  0100               	movlb	0	; () banked
  3356  00041C  BFED               	btfsc	(SIM800xHTTPRead@res+1)& (0+255),7,b
  3357  00041E  D7E7               	goto	u4710
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;SIM800x.c: 1719: else if((str[0] == '+') && (str[1] == 'H'))
  3361  000420  0E2B               	movlw	43
  3362  000422  19C6               	xorwf	SIM800xHTTPRead@str& (0+255),w,b
  3363  000424  A4D8               	btfss	status,2,c
  3364  000426  D092               	goto	l5386
  3365                           
  3366                           ; BSR set to: 0
  3367  000428  0E48               	movlw	72
  3368  00042A  19C7               	xorwf	(SIM800xHTTPRead@str+1)& (0+255),w,b
  3369  00042C  A4D8               	btfss	status,2,c
  3370  00042E  D08E               	goto	l5386
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;SIM800x.c: 1720: {;SIM800x.c: 1722: str[(uint8_t)res] = '\0';
  3374  000430  0EC6               	movlw	low SIM800xHTTPRead@str
  3375  000432  25EC               	addwf	SIM800xHTTPRead@res& (0+255),w,b
  3376  000434  6ED9               	movwf	fsr2l,c
  3377  000436  6ADA               	clrf	fsr2h,c
  3378  000438  0E00               	movlw	high SIM800xHTTPRead@str
  3379  00043A  22DA               	addwfc	fsr2h,f,c
  3380  00043C  0E00               	movlw	0
  3381  00043E  6EDF               	movwf	indf2,c
  3382                           
  3383                           ; BSR set to: 0
  3384                           ;SIM800x.c: 1723: *cnt = (uint16_t)StrToInt(str, 11, (uint16_t)(res - 1));
  3385  000440  0EC6               	movlw	low SIM800xHTTPRead@str
  3386  000442  6E1A               	movwf	StrToInt@str^0,c
  3387  000444  0E00               	movlw	high SIM800xHTTPRead@str
  3388  000446  6E1B               	movwf	(StrToInt@str+1)^0,c
  3389  000448  0E0B               	movlw	11
  3390  00044A  6E1C               	movwf	StrToInt@start^0,c
  3391  00044C  05EC               	decf	SIM800xHTTPRead@res& (0+255),w,b
  3392  00044E  6E1D               	movwf	StrToInt@stop^0,c
  3393  000450  ECBE  F007         	call	_StrToInt	;wreg free
  3394  000454  501A               	movf	?_StrToInt^0,w,c
  3395  000456  6E4A               	movwf	??_SIM800xHTTPRead^0,c
  3396  000458  501B               	movf	(?_StrToInt+1)^0,w,c
  3397  00045A  6E4B               	movwf	(??_SIM800xHTTPRead+1)^0,c
  3398  00045C  6A4C               	clrf	(??_SIM800xHTTPRead+2)^0,c
  3399  00045E  6A4D               	clrf	(??_SIM800xHTTPRead+3)^0,c
  3400  000460  C046  FFD9         	movff	SIM800xHTTPRead@cnt,fsr2l
  3401  000464  C047  FFDA         	movff	SIM800xHTTPRead@cnt+1,fsr2h
  3402  000468  C04A  FFDE         	movff	??_SIM800xHTTPRead,postinc2
  3403  00046C  C04B  FFDE         	movff	??_SIM800xHTTPRead+1,postinc2
  3404  000470  C04C  FFDE         	movff	??_SIM800xHTTPRead+2,postinc2
  3405  000474  C04D  FFDE         	movff	??_SIM800xHTTPRead+3,postinc2
  3406                           
  3407                           ;SIM800x.c: 1725: uint32_t sz = *cnt;
  3408  000478  C046  FFD9         	movff	SIM800xHTTPRead@cnt,fsr2l
  3409  00047C  C047  FFDA         	movff	SIM800xHTTPRead@cnt+1,fsr2h
  3410  000480  CFDE F0E4          	movff	postinc2,SIM800xHTTPRead@sz
  3411  000484  CFDE F0E5          	movff	postinc2,SIM800xHTTPRead@sz+1
  3412  000488  CFDE F0E6          	movff	postinc2,SIM800xHTTPRead@sz+2
  3413  00048C  CFDE F0E7          	movff	postinc2,SIM800xHTTPRead@sz+3
  3414                           
  3415                           ;SIM800x.c: 1726: while((sz--) != 0)
  3416  000490  D017               	goto	l5368
  3417  000492                     l5360:
  3418  000492  FFFF               	dw	65535	; assembler added errata NOP
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;SIM800x.c: 1727: {;SIM800x.c: 1728: if(SIM800xSDMRxAvailable())
  3422  000494  EC45  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  3423  000498  5013               	movf	?_SIM800xSDMRxAvailable^0,w,c
  3424  00049A  1014               	iorwf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  3425  00049C  B4D8               	btfsc	status,2,c
  3426  00049E  D009               	goto	l5366
  3427                           
  3428                           ;SIM800x.c: 1729: {;SIM800x.c: 1730: *(data++) = SIM800xSDMReadByte();
  3429  0004A0  EC54  F00F         	call	_SIM800xSDMReadByte	;wreg free
  3430  0004A4  C03C  FFD9         	movff	SIM800xHTTPRead@data,fsr2l
  3431  0004A8  C03D  FFDA         	movff	SIM800xHTTPRead@data+1,fsr2h
  3432  0004AC  6EDF               	movwf	indf2,c
  3433  0004AE  4A3C               	infsnz	SIM800xHTTPRead@data^0,f,c
  3434  0004B0  2A3D               	incf	(SIM800xHTTPRead@data+1)^0,f,c
  3435  0004B2                     l5366:
  3436  0004B2  FFFF               	dw	65535	; assembler added errata NOP
  3437                           
  3438                           ;SIM800x.c: 1731: };SIM800x.c: 1732: *data = '\0';
  3439  0004B4  C03C  FFD9         	movff	SIM800xHTTPRead@data,fsr2l
  3440  0004B8  C03D  FFDA         	movff	SIM800xHTTPRead@data+1,fsr2h
  3441  0004BC  0E00               	movlw	0
  3442  0004BE  6EDF               	movwf	indf2,c
  3443  0004C0                     l5368:
  3444  0004C0  FFFF               	dw	65535	; assembler added errata NOP
  3445  0004C2  0100               	movlb	0	; () banked
  3446  0004C4  07E4               	decf	SIM800xHTTPRead@sz& (0+255),f,b
  3447  0004C6  0E00               	movlw	0
  3448  0004C8  5BE5               	subwfb	(SIM800xHTTPRead@sz+1)& (0+255),f,b
  3449  0004CA  5BE6               	subwfb	(SIM800xHTTPRead@sz+2)& (0+255),f,b
  3450  0004CC  5BE7               	subwfb	(SIM800xHTTPRead@sz+3)& (0+255),f,b
  3451  0004CE  29E4               	incf	SIM800xHTTPRead@sz& (0+255),w,b
  3452  0004D0  E1E0               	bnz	l5360
  3453  0004D2  29E5               	incf	(SIM800xHTTPRead@sz+1)& (0+255),w,b
  3454  0004D4  E1DE               	bnz	l5360
  3455  0004D6  29E6               	incf	(SIM800xHTTPRead@sz+2)& (0+255),w,b
  3456  0004D8  E1DC               	bnz	l5360
  3457  0004DA  29E7               	incf	(SIM800xHTTPRead@sz+3)& (0+255),w,b
  3458  0004DC  A4D8               	btfss	status,2,c
  3459  0004DE  D7D9               	goto	l5360
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;SIM800x.c: 1733: };SIM800x.c: 1735: time = Tick_ms();
  3463  0004E0  ECA3  F010         	call	_Tick_ms	;wreg free
  3464  0004E4  C00E  F0E8         	movff	?_Tick_ms,SIM800xHTTPRead@time
  3465  0004E8  C00F  F0E9         	movff	?_Tick_ms+1,SIM800xHTTPRead@time+1
  3466  0004EC  C010  F0EA         	movff	?_Tick_ms+2,SIM800xHTTPRead@time+2
  3467  0004F0  C011  F0EB         	movff	?_Tick_ms+3,SIM800xHTTPRead@time+3
  3468                           
  3469                           ;SIM800x.c: 1736: while(SIM800xSDMRxAvailable() < 6)
  3470  0004F4  D01A               	goto	l5378
  3471  0004F6                     l5372:
  3472  0004F6  FFFF               	dw	65535	; assembler added errata NOP
  3473                           
  3474                           ;SIM800x.c: 1737: {;SIM800x.c: 1738: if((Tick_ms() - time) > Tout)
  3475  0004F8  ECA3  F010         	call	_Tick_ms	;wreg free
  3476  0004FC  0100               	movlb	0	; () banked
  3477  0004FE  51E8               	movf	SIM800xHTTPRead@time& (0+255),w,b
  3478  000500  5C0E               	subwf	?_Tick_ms^0,w,c
  3479  000502  6E4A               	movwf	??_SIM800xHTTPRead^0,c
  3480  000504  51E9               	movf	(SIM800xHTTPRead@time+1)& (0+255),w,b
  3481  000506  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  3482  000508  6E4B               	movwf	(??_SIM800xHTTPRead+1)^0,c
  3483  00050A  51EA               	movf	(SIM800xHTTPRead@time+2)& (0+255),w,b
  3484  00050C  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  3485  00050E  6E4C               	movwf	(??_SIM800xHTTPRead+2)^0,c
  3486  000510  51EB               	movf	(SIM800xHTTPRead@time+3)& (0+255),w,b
  3487  000512  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  3488  000514  6E4D               	movwf	(??_SIM800xHTTPRead+3)^0,c
  3489  000516  504A               	movf	??_SIM800xHTTPRead^0,w,c
  3490  000518  5C6A               	subwf	_Tout^0,w,c
  3491  00051A  504B               	movf	(??_SIM800xHTTPRead+1)^0,w,c
  3492  00051C  586B               	subwfb	(_Tout+1)^0,w,c
  3493  00051E  504C               	movf	(??_SIM800xHTTPRead+2)^0,w,c
  3494  000520  586C               	subwfb	(_Tout+2)^0,w,c
  3495  000522  504D               	movf	(??_SIM800xHTTPRead+3)^0,w,c
  3496  000524  586D               	subwfb	(_Tout+3)^0,w,c
  3497  000526  A0D8               	btfss	status,0,c
  3498  000528  D762               	goto	u4710
  3499  00052A                     l5378:
  3500  00052A  FFFF               	dw	65535	; assembler added errata NOP
  3501  00052C  EC45  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  3502  000530  5014               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  3503  000532  E104               	bnz	u4790
  3504  000534  0E06               	movlw	6
  3505  000536  5C13               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  3506  000538  A0D8               	btfss	status,0,c
  3507  00053A  D7DD               	goto	l5372
  3508  00053C                     u4790:
  3509                           
  3510                           ;SIM800x.c: 1741: };SIM800x.c: 1742: };SIM800x.c: 1744: if(SIM800xSDMPeek(2) == 'O')
  3511  00053C  0E02               	movlw	2
  3512  00053E  ECEB  F00F         	call	_SIM800xSDMPeek
  3513  000542  0A4F               	xorlw	79
  3514  000544  A4D8               	btfss	status,2,c
  3515  000546  D702               	goto	u4690
  3516                           
  3517                           ;SIM800x.c: 1745: {;SIM800x.c: 1746: return SIM800X_OK;
  3518  000548  0E00               	movlw	0
  3519  00054A  D024               	goto	l829
  3520  00054C                     l5386:
  3521  00054C  FFFF               	dw	65535	; assembler added errata NOP
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;SIM800x.c: 1750: else if((str[0] == '+') && (str[3] == 'E'))
  3525  00054E  0E2B               	movlw	43
  3526  000550  19C6               	xorwf	SIM800xHTTPRead@str& (0+255),w,b
  3527  000552  A4D8               	btfss	status,2,c
  3528  000554  D6FB               	goto	u4690
  3529                           
  3530                           ; BSR set to: 0
  3531  000556  0E45               	movlw	69
  3532  000558  19C9               	xorwf	(SIM800xHTTPRead@str+3)& (0+255),w,b
  3533  00055A  A4D8               	btfss	status,2,c
  3534  00055C  D6F7               	goto	u4690
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;SIM800x.c: 1751: {;SIM800x.c: 1752: str[(uint8_t)res] = '\0';
  3538  00055E  0EC6               	movlw	low SIM800xHTTPRead@str
  3539  000560  25EC               	addwf	SIM800xHTTPRead@res& (0+255),w,b
  3540  000562  6ED9               	movwf	fsr2l,c
  3541  000564  6ADA               	clrf	fsr2h,c
  3542  000566  0E00               	movlw	high SIM800xHTTPRead@str
  3543  000568  22DA               	addwfc	fsr2h,f,c
  3544  00056A  0E00               	movlw	0
  3545  00056C  6EDF               	movwf	indf2,c
  3546                           
  3547                           ; BSR set to: 0
  3548                           ;SIM800x.c: 1753: *errcode = (uint16_t)StrToInt(str, 12, (uint16_t)(res - 1));
  3549  00056E  0EC6               	movlw	low SIM800xHTTPRead@str
  3550  000570  6E1A               	movwf	StrToInt@str^0,c
  3551  000572  0E00               	movlw	high SIM800xHTTPRead@str
  3552  000574  6E1B               	movwf	(StrToInt@str+1)^0,c
  3553  000576  0E0C               	movlw	12
  3554  000578  6E1C               	movwf	StrToInt@start^0,c
  3555  00057A  05EC               	decf	SIM800xHTTPRead@res& (0+255),w,b
  3556  00057C  6E1D               	movwf	StrToInt@stop^0,c
  3557  00057E  ECBE  F007         	call	_StrToInt	;wreg free
  3558  000582  C048  FFD9         	movff	SIM800xHTTPRead@errcode,fsr2l
  3559  000586  C049  FFDA         	movff	SIM800xHTTPRead@errcode+1,fsr2h
  3560  00058A  C01A  FFDE         	movff	?_StrToInt,postinc2
  3561  00058E  C01B  FFDD         	movff	?_StrToInt+1,postdec2
  3562                           
  3563                           ;SIM800x.c: 1754: return SIM800X_CME_ERROR;
  3564  000592  0E02               	movlw	2
  3565  000594                     l829:
  3566  000594  FFFF               	dw	65535	; assembler added errata NOP
  3567  000596  0012               	return		;funcret
  3568  000598  FFFF               	dw	65535	; errata NOP
  3569  00059A                     __end_of_SIM800xHTTPRead:
  3570                           	callstack 0
  3571                           
  3572 ;; *************** function _SIM800xHTTPInputData *****************
  3573 ;; Defined at:
  3574 ;;		line 1570 in file "Src/SIM800x.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;  data            2   59[COMRAM] PTR unsigned char 
  3577 ;;		 -> txmessage(100), 
  3578 ;;  cnt             4   61[COMRAM] unsigned long 
  3579 ;;  timeout         4   65[COMRAM] unsigned long 
  3580 ;;  errcode         2   69[COMRAM] PTR unsigned int 
  3581 ;;		 -> SystemTask@errcode(2), 
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;  str            30    0[BANK0 ] unsigned char [30]
  3584 ;;  time            4   34[BANK0 ] unsigned long 
  3585 ;;  len             4   30[BANK0 ] unsigned long 
  3586 ;;  res             2   38[BANK0 ] int 
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  1    wreg      enum E2115
  3589 ;; Registers used:
  3590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3596 ;;      Params:        12       0       0       0       0       0       0
  3597 ;;      Locals:         0      40       0       0       0       0       0
  3598 ;;      Temps:          4       0       0       0       0       0       0
  3599 ;;      Totals:        16      40       0       0       0       0       0
  3600 ;;Total ram usage:       56 bytes
  3601 ;; Hardware stack levels used: 1
  3602 ;; Hardware stack levels required when called: 6
  3603 ;; This function calls:
  3604 ;;		_SIM800xSDMFlush
  3605 ;;		_SIM800xSDMPeek
  3606 ;;		_SIM800xSDMPrint
  3607 ;;		_SIM800xSDMReadF1Pkt
  3608 ;;		_SIM800xSDMRxAvailable
  3609 ;;		_SIM800xSDMSendBytes
  3610 ;;		_StrToInt
  3611 ;;		_Tick_ms
  3612 ;;		_sprintf
  3613 ;;		_strlen
  3614 ;; This function is called by:
  3615 ;;		_SystemTask
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           
  3619                           	psect	text6
  3620  000A1E                     __ptext6:
  3621                           	callstack 0
  3622  000A1E                     _SIM800xHTTPInputData:
  3623                           	callstack 0
  3624  000A1E  FFFF               	dw	65535	; assembler added errata NOP
  3625                           
  3626                           ;SIM800x.c: 1572: uint32_t len = strlen(data);
  3627                           
  3628                           ;incstack = 0
  3629  000A20  C03C  F00E         	movff	SIM800xHTTPInputData@data,strlen@s
  3630  000A24  C03D  F00F         	movff	SIM800xHTTPInputData@data+1,strlen@s+1
  3631  000A28  EC7B  F00F         	call	_strlen	;wreg free
  3632  000A2C  C00E  F0E4         	movff	?_strlen,SIM800xHTTPInputData@len
  3633  000A30  C00F  F0E5         	movff	?_strlen+1,SIM800xHTTPInputData@len+1
  3634  000A34  0100               	movlb	0	; () banked
  3635  000A36  6BE6               	clrf	(SIM800xHTTPInputData@len+2)& (0+255),b
  3636  000A38  6BE7               	clrf	(SIM800xHTTPInputData@len+3)& (0+255),b
  3637                           
  3638                           ; BSR set to: 0
  3639                           ;SIM800x.c: 1574: if((cnt > 0x4E000) || (len > 0x4E000) || (timeout < 1000) || (timeout 
      +                          > 120000))
  3640  000A3A  5041               	movf	(SIM800xHTTPInputData@cnt+3)^0,w,c
  3641  000A3C  E106               	bnz	u4431
  3642  000A3E  043E               	decf	SIM800xHTTPInputData@cnt^0,w,c
  3643  000A40  0EE0               	movlw	224
  3644  000A42  583F               	subwfb	(SIM800xHTTPInputData@cnt+1)^0,w,c
  3645  000A44  0E04               	movlw	4
  3646  000A46  5840               	subwfb	(SIM800xHTTPInputData@cnt+2)^0,w,c
  3647  000A48  B0D8               	btfsc	status,0,c
  3648  000A4A                     u4431:
  3649  000A4A  D0EB               	goto	l783
  3650                           
  3651                           ; BSR set to: 0
  3652  000A4C  51E7               	movf	(SIM800xHTTPInputData@len+3)& (0+255),w,b
  3653  000A4E  E106               	bnz	u4441
  3654  000A50  05E4               	decf	SIM800xHTTPInputData@len& (0+255),w,b
  3655  000A52  0EE0               	movlw	224
  3656  000A54  59E5               	subwfb	(SIM800xHTTPInputData@len+1)& (0+255),w,b
  3657  000A56  0E04               	movlw	4
  3658  000A58  59E6               	subwfb	(SIM800xHTTPInputData@len+2)& (0+255),w,b
  3659  000A5A  B0D8               	btfsc	status,0,c
  3660  000A5C                     u4441:
  3661  000A5C  D0E2               	goto	l783
  3662                           
  3663                           ; BSR set to: 0
  3664  000A5E  5045               	movf	(SIM800xHTTPInputData@timeout+3)^0,w,c
  3665  000A60  1044               	iorwf	(SIM800xHTTPInputData@timeout+2)^0,w,c
  3666  000A62  E106               	bnz	u4450
  3667  000A64  0EE8               	movlw	232
  3668  000A66  5C42               	subwf	SIM800xHTTPInputData@timeout^0,w,c
  3669  000A68  0E03               	movlw	3
  3670  000A6A  5843               	subwfb	(SIM800xHTTPInputData@timeout+1)^0,w,c
  3671  000A6C  A0D8               	btfss	status,0,c
  3672  000A6E  D0D9               	goto	l783
  3673  000A70                     u4450:
  3674                           
  3675                           ; BSR set to: 0
  3676  000A70  5045               	movf	(SIM800xHTTPInputData@timeout+3)^0,w,c
  3677  000A72  E109               	bnz	u4460
  3678  000A74  0EC1               	movlw	193
  3679  000A76  5C42               	subwf	SIM800xHTTPInputData@timeout^0,w,c
  3680  000A78  0ED4               	movlw	212
  3681  000A7A  5843               	subwfb	(SIM800xHTTPInputData@timeout+1)^0,w,c
  3682  000A7C  0E01               	movlw	1
  3683  000A7E  5844               	subwfb	(SIM800xHTTPInputData@timeout+2)^0,w,c
  3684  000A80  B0D8               	btfsc	status,0,c
  3685  000A82  D0CF               	goto	l783
  3686  000A84  D001               	goto	l5174
  3687  000A86                     u4460:
  3688  000A86  D0CD               	goto	l783
  3689  000A88                     l5174:
  3690  000A88  FFFF               	dw	65535	; assembler added errata NOP
  3691                           
  3692                           ; BSR set to: 0
  3693                           ;SIM800x.c: 1577: char str[30] = {0, 0, 0, 0};
  3694  000A8A  EE20  F0C6         	lfsr	2,SIM800xHTTPInputData@str
  3695  000A8E  0E1D               	movlw	29
  3696  000A90                     u4471:
  3697  000A90  6ADE               	clrf	postinc2,c
  3698  000A92  06E8               	decf	wreg,f,c
  3699  000A94  E2FD               	bc	u4471
  3700                           
  3701                           ; BSR set to: 0
  3702                           ;SIM800x.c: 1579: sprintf(str, "AT+HTTPDATA=%ld,%ld\r", cnt, timeout);
  3703  000A96  0EC6               	movlw	low SIM800xHTTPInputData@str
  3704  000A98  6E24               	movwf	sprintf@sp^0,c
  3705  000A9A  0E00               	movlw	high SIM800xHTTPInputData@str
  3706  000A9C  6E25               	movwf	(sprintf@sp+1)^0,c
  3707  000A9E  0EC5               	movlw	low STR_98
  3708  000AA0  6E26               	movwf	sprintf@f^0,c
  3709  000AA2  0E7C               	movlw	high STR_98
  3710  000AA4  6E27               	movwf	(sprintf@f+1)^0,c
  3711  000AA6  C03E  F028         	movff	SIM800xHTTPInputData@cnt,?_sprintf+4
  3712  000AAA  C03F  F029         	movff	SIM800xHTTPInputData@cnt+1,?_sprintf+5
  3713  000AAE  C040  F02A         	movff	SIM800xHTTPInputData@cnt+2,?_sprintf+6
  3714  000AB2  C041  F02B         	movff	SIM800xHTTPInputData@cnt+3,?_sprintf+7
  3715  000AB6  C042  F02C         	movff	SIM800xHTTPInputData@timeout,?_sprintf+8
  3716  000ABA  C043  F02D         	movff	SIM800xHTTPInputData@timeout+1,?_sprintf+9
  3717  000ABE  C044  F02E         	movff	SIM800xHTTPInputData@timeout+2,?_sprintf+10
  3718  000AC2  C045  F02F         	movff	SIM800xHTTPInputData@timeout+3,?_sprintf+11
  3719  000AC6  ECCD  F002         	call	_sprintf	;wreg free
  3720                           
  3721                           ;SIM800x.c: 1580: SIM800xSDMFlush();
  3722  000ACA  ECAE  F010         	call	_SIM800xSDMFlush	;wreg free
  3723                           
  3724                           ;SIM800x.c: 1581: SIM800xSDMPrint(str);
  3725  000ACE  0EC6               	movlw	low SIM800xHTTPInputData@str
  3726  000AD0  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  3727  000AD2  0E00               	movlw	high SIM800xHTTPInputData@str
  3728  000AD4  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  3729  000AD6  ECFA  F00D         	call	_SIM800xSDMPrint	;wreg free
  3730                           
  3731                           ;SIM800x.c: 1583: uint32_t time = Tick_ms();
  3732  000ADA  ECA3  F010         	call	_Tick_ms	;wreg free
  3733  000ADE  C00E  F0E8         	movff	?_Tick_ms,SIM800xHTTPInputData@time
  3734  000AE2  C00F  F0E9         	movff	?_Tick_ms+1,SIM800xHTTPInputData@time+1
  3735  000AE6  C010  F0EA         	movff	?_Tick_ms+2,SIM800xHTTPInputData@time+2
  3736  000AEA  C011  F0EB         	movff	?_Tick_ms+3,SIM800xHTTPInputData@time+3
  3737                           
  3738                           ;SIM800x.c: 1584: while(SIM800xSDMRxAvailable() < 6)
  3739  000AEE  D01A               	goto	l5188
  3740  000AF0                     l5184:
  3741  000AF0  FFFF               	dw	65535	; assembler added errata NOP
  3742                           
  3743                           ;SIM800x.c: 1585: {;SIM800x.c: 1586: if((Tick_ms() - time) > Tout)
  3744  000AF2  ECA3  F010         	call	_Tick_ms	;wreg free
  3745  000AF6  0100               	movlb	0	; () banked
  3746  000AF8  51E8               	movf	SIM800xHTTPInputData@time& (0+255),w,b
  3747  000AFA  5C0E               	subwf	?_Tick_ms^0,w,c
  3748  000AFC  6E48               	movwf	??_SIM800xHTTPInputData^0,c
  3749  000AFE  51E9               	movf	(SIM800xHTTPInputData@time+1)& (0+255),w,b
  3750  000B00  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  3751  000B02  6E49               	movwf	(??_SIM800xHTTPInputData+1)^0,c
  3752  000B04  51EA               	movf	(SIM800xHTTPInputData@time+2)& (0+255),w,b
  3753  000B06  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  3754  000B08  6E4A               	movwf	(??_SIM800xHTTPInputData+2)^0,c
  3755  000B0A  51EB               	movf	(SIM800xHTTPInputData@time+3)& (0+255),w,b
  3756  000B0C  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  3757  000B0E  6E4B               	movwf	(??_SIM800xHTTPInputData+3)^0,c
  3758  000B10  5048               	movf	??_SIM800xHTTPInputData^0,w,c
  3759  000B12  5C6A               	subwf	_Tout^0,w,c
  3760  000B14  5049               	movf	(??_SIM800xHTTPInputData+1)^0,w,c
  3761  000B16  586B               	subwfb	(_Tout+1)^0,w,c
  3762  000B18  504A               	movf	(??_SIM800xHTTPInputData+2)^0,w,c
  3763  000B1A  586C               	subwfb	(_Tout+2)^0,w,c
  3764  000B1C  504B               	movf	(??_SIM800xHTTPInputData+3)^0,w,c
  3765  000B1E  586D               	subwfb	(_Tout+3)^0,w,c
  3766  000B20  A0D8               	btfss	status,0,c
  3767  000B22  D07F               	goto	l783
  3768  000B24                     l5188:
  3769  000B24  FFFF               	dw	65535	; assembler added errata NOP
  3770  000B26  EC45  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  3771  000B2A  5014               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  3772  000B2C  E104               	bnz	u4490
  3773  000B2E  0E06               	movlw	6
  3774  000B30  5C13               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  3775  000B32  A0D8               	btfss	status,0,c
  3776  000B34  D7DD               	goto	l5184
  3777  000B36                     u4490:
  3778                           
  3779                           ;SIM800x.c: 1589: };SIM800x.c: 1590: };SIM800x.c: 1592: int res = SIM800xSDMReadF1Pkt(st
      +                          r);
  3780  000B36  0EC6               	movlw	low SIM800xHTTPInputData@str
  3781  000B38  6E17               	movwf	SIM800xSDMReadF1Pkt@data^0,c
  3782  000B3A  0E00               	movlw	high SIM800xHTTPInputData@str
  3783  000B3C  6E18               	movwf	(SIM800xSDMReadF1Pkt@data+1)^0,c
  3784  000B3E  EC28  F009         	call	_SIM800xSDMReadF1Pkt	;wreg free
  3785  000B42  C017  F0EC         	movff	?_SIM800xSDMReadF1Pkt,SIM800xHTTPInputData@res
  3786  000B46  C018  F0ED         	movff	?_SIM800xSDMReadF1Pkt+1,SIM800xHTTPInputData@res+1
  3787                           
  3788                           ;SIM800x.c: 1593: if(res < 0)
  3789  000B4A  0100               	movlb	0	; () banked
  3790  000B4C  BFED               	btfsc	(SIM800xHTTPInputData@res+1)& (0+255),7,b
  3791  000B4E  D069               	goto	l783
  3792                           
  3793                           ; BSR set to: 0
  3794                           ;SIM800x.c: 1597: else if(str[0] == 'D')
  3795  000B50  0E44               	movlw	68
  3796  000B52  19C6               	xorwf	SIM800xHTTPInputData@str& (0+255),w,b
  3797  000B54  A4D8               	btfss	status,2,c
  3798  000B56  D03E               	goto	l5216
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;SIM800x.c: 1598: {;SIM800x.c: 1599: SIM800xSDMFlush();
  3802  000B58  ECAE  F010         	call	_SIM800xSDMFlush	;wreg free
  3803                           
  3804                           ;SIM800x.c: 1601: SIM800xSDMSendBytes(data, cnt);
  3805  000B5C  C03C  F00E         	movff	SIM800xHTTPInputData@data,SIM800xSDMSendBytes@data
  3806  000B60  C03D  F00F         	movff	SIM800xHTTPInputData@data+1,SIM800xSDMSendBytes@data+1
  3807  000B64  C03E  F010         	movff	SIM800xHTTPInputData@cnt,SIM800xSDMSendBytes@cnt
  3808  000B68  C03F  F011         	movff	SIM800xHTTPInputData@cnt+1,SIM800xSDMSendBytes@cnt+1
  3809  000B6C  EC2C  F010         	call	_SIM800xSDMSendBytes	;wreg free
  3810                           
  3811                           ;SIM800x.c: 1603: time = Tick_ms();
  3812  000B70  ECA3  F010         	call	_Tick_ms	;wreg free
  3813  000B74  C00E  F0E8         	movff	?_Tick_ms,SIM800xHTTPInputData@time
  3814  000B78  C00F  F0E9         	movff	?_Tick_ms+1,SIM800xHTTPInputData@time+1
  3815  000B7C  C010  F0EA         	movff	?_Tick_ms+2,SIM800xHTTPInputData@time+2
  3816  000B80  C011  F0EB         	movff	?_Tick_ms+3,SIM800xHTTPInputData@time+3
  3817                           
  3818                           ;SIM800x.c: 1604: while(SIM800xSDMRxAvailable() < 6)
  3819  000B84  D01A               	goto	l5210
  3820  000B86                     l5206:
  3821  000B86  FFFF               	dw	65535	; assembler added errata NOP
  3822                           
  3823                           ;SIM800x.c: 1605: {;SIM800x.c: 1606: if((Tick_ms() - time) > Tout)
  3824  000B88  ECA3  F010         	call	_Tick_ms	;wreg free
  3825  000B8C  0100               	movlb	0	; () banked
  3826  000B8E  51E8               	movf	SIM800xHTTPInputData@time& (0+255),w,b
  3827  000B90  5C0E               	subwf	?_Tick_ms^0,w,c
  3828  000B92  6E48               	movwf	??_SIM800xHTTPInputData^0,c
  3829  000B94  51E9               	movf	(SIM800xHTTPInputData@time+1)& (0+255),w,b
  3830  000B96  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  3831  000B98  6E49               	movwf	(??_SIM800xHTTPInputData+1)^0,c
  3832  000B9A  51EA               	movf	(SIM800xHTTPInputData@time+2)& (0+255),w,b
  3833  000B9C  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  3834  000B9E  6E4A               	movwf	(??_SIM800xHTTPInputData+2)^0,c
  3835  000BA0  51EB               	movf	(SIM800xHTTPInputData@time+3)& (0+255),w,b
  3836  000BA2  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  3837  000BA4  6E4B               	movwf	(??_SIM800xHTTPInputData+3)^0,c
  3838  000BA6  5048               	movf	??_SIM800xHTTPInputData^0,w,c
  3839  000BA8  5C6A               	subwf	_Tout^0,w,c
  3840  000BAA  5049               	movf	(??_SIM800xHTTPInputData+1)^0,w,c
  3841  000BAC  586B               	subwfb	(_Tout+1)^0,w,c
  3842  000BAE  504A               	movf	(??_SIM800xHTTPInputData+2)^0,w,c
  3843  000BB0  586C               	subwfb	(_Tout+2)^0,w,c
  3844  000BB2  504B               	movf	(??_SIM800xHTTPInputData+3)^0,w,c
  3845  000BB4  586D               	subwfb	(_Tout+3)^0,w,c
  3846  000BB6  A0D8               	btfss	status,0,c
  3847  000BB8  D034               	goto	l783
  3848  000BBA                     l5210:
  3849  000BBA  FFFF               	dw	65535	; assembler added errata NOP
  3850  000BBC  EC45  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  3851  000BC0  5014               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  3852  000BC2  E104               	bnz	u4530
  3853  000BC4  0E06               	movlw	6
  3854  000BC6  5C13               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  3855  000BC8  A0D8               	btfss	status,0,c
  3856  000BCA  D7DD               	goto	l5206
  3857  000BCC                     u4530:
  3858                           
  3859                           ;SIM800x.c: 1609: };SIM800x.c: 1610: };SIM800x.c: 1612: if(SIM800xSDMPeek(2) == 'O')
  3860  000BCC  0E02               	movlw	2
  3861  000BCE  ECEB  F00F         	call	_SIM800xSDMPeek
  3862  000BD2  D027               	goto	l783
  3863  000BD4                     l5216:
  3864  000BD4  FFFF               	dw	65535	; assembler added errata NOP
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;SIM800x.c: 1615: else if(str[0] == 'O')
  3868  000BD6  0E4F               	movlw	79
  3869  000BD8  19C6               	xorwf	SIM800xHTTPInputData@str& (0+255),w,b
  3870  000BDA  B4D8               	btfsc	status,2,c
  3871  000BDC  D022               	goto	l783
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;SIM800x.c: 1619: else if(str[0] == 'E')
  3875  000BDE  0E45               	movlw	69
  3876  000BE0  19C6               	xorwf	SIM800xHTTPInputData@str& (0+255),w,b
  3877  000BE2  B4D8               	btfsc	status,2,c
  3878  000BE4  D01E               	goto	l783
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;SIM800x.c: 1623: else if(str[0] == '+')
  3882  000BE6  0E2B               	movlw	43
  3883  000BE8  19C6               	xorwf	SIM800xHTTPInputData@str& (0+255),w,b
  3884  000BEA  A4D8               	btfss	status,2,c
  3885  000BEC  D01A               	goto	l783
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;SIM800x.c: 1624: {;SIM800x.c: 1625: str[(uint8_t)res] = '\0';
  3889  000BEE  0EC6               	movlw	low SIM800xHTTPInputData@str
  3890  000BF0  25EC               	addwf	SIM800xHTTPInputData@res& (0+255),w,b
  3891  000BF2  6ED9               	movwf	fsr2l,c
  3892  000BF4  6ADA               	clrf	fsr2h,c
  3893  000BF6  0E00               	movlw	high SIM800xHTTPInputData@str
  3894  000BF8  22DA               	addwfc	fsr2h,f,c
  3895  000BFA  0E00               	movlw	0
  3896  000BFC  6EDF               	movwf	indf2,c
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;SIM800x.c: 1626: *errcode = (uint16_t)StrToInt(str, 12, (uint16_t)(res - 1));
  3900  000BFE  0EC6               	movlw	low SIM800xHTTPInputData@str
  3901  000C00  6E1A               	movwf	StrToInt@str^0,c
  3902  000C02  0E00               	movlw	high SIM800xHTTPInputData@str
  3903  000C04  6E1B               	movwf	(StrToInt@str+1)^0,c
  3904  000C06  0E0C               	movlw	12
  3905  000C08  6E1C               	movwf	StrToInt@start^0,c
  3906  000C0A  05EC               	decf	SIM800xHTTPInputData@res& (0+255),w,b
  3907  000C0C  6E1D               	movwf	StrToInt@stop^0,c
  3908  000C0E  ECBE  F007         	call	_StrToInt	;wreg free
  3909  000C12  C046  FFD9         	movff	SIM800xHTTPInputData@errcode,fsr2l
  3910  000C16  C047  FFDA         	movff	SIM800xHTTPInputData@errcode+1,fsr2h
  3911  000C1A  C01A  FFDE         	movff	?_StrToInt,postinc2
  3912  000C1E  C01B  FFDD         	movff	?_StrToInt+1,postdec2
  3913  000C22                     l783:
  3914  000C22  FFFF               	dw	65535	; assembler added errata NOP
  3915  000C24  0012               	return		;funcret
  3916  000C26  FFFF               	dw	65535	; errata NOP
  3917  000C28                     __end_of_SIM800xHTTPInputData:
  3918                           	callstack 0
  3919                           
  3920 ;; *************** function _SIM800xSDMSendBytes *****************
  3921 ;; Defined at:
  3922 ;;		line 143 in file "Src/SIM800x_SDM.c"
  3923 ;; Parameters:    Size  Location     Type
  3924 ;;  data            2   13[COMRAM] PTR unsigned char 
  3925 ;;		 -> txmessage(100), 
  3926 ;;  cnt             2   15[COMRAM] unsigned int 
  3927 ;; Auto vars:     Size  Location     Type
  3928 ;;		None
  3929 ;; Return value:  Size  Location     Type
  3930 ;;                  1    wreg      void 
  3931 ;; Registers used:
  3932 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3938 ;;      Params:         4       0       0       0       0       0       0
  3939 ;;      Locals:         0       0       0       0       0       0       0
  3940 ;;      Temps:          0       0       0       0       0       0       0
  3941 ;;      Totals:         4       0       0       0       0       0       0
  3942 ;;Total ram usage:        4 bytes
  3943 ;; Hardware stack levels used: 1
  3944 ;; Hardware stack levels required when called: 3
  3945 ;; This function calls:
  3946 ;;		Nothing
  3947 ;; This function is called by:
  3948 ;;		_SIM800xHTTPInputData
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           	psect	text7
  3953  002058                     __ptext7:
  3954                           	callstack 0
  3955  002058                     _SIM800xSDMSendBytes:
  3956                           	callstack 0
  3957  002058  FFFF               	dw	65535	; assembler added errata NOP
  3958                           
  3959                           ;SIM800x_SDM.c: 146: while((cnt--) != 0)
  3960                           
  3961                           ;incstack = 0
  3962  00205A  D00B               	goto	l4892
  3963  00205C                     l1031:
  3964  00205C  FFFF               	dw	65535	; assembler added errata NOP
  3965  00205E  A2AC               	btfss	172,1,c	;volatile
  3966  002060  D7FD               	goto	l1031
  3967  002062  C00E  FFD9         	movff	SIM800xSDMSendBytes@data,fsr2l
  3968  002066  C00F  FFDA         	movff	SIM800xSDMSendBytes@data+1,fsr2h
  3969  00206A  50DF               	movf	indf2,w,c
  3970  00206C  6EAD               	movwf	173,c	;volatile
  3971  00206E  4A0E               	infsnz	SIM800xSDMSendBytes@data^0,f,c
  3972  002070  2A0F               	incf	(SIM800xSDMSendBytes@data+1)^0,f,c
  3973  002072                     l4892:
  3974  002072  FFFF               	dw	65535	; assembler added errata NOP
  3975  002074  0610               	decf	SIM800xSDMSendBytes@cnt^0,f,c
  3976  002076  A0D8               	btfss	status,0,c
  3977  002078  0611               	decf	(SIM800xSDMSendBytes@cnt+1)^0,f,c
  3978  00207A  2810               	incf	SIM800xSDMSendBytes@cnt^0,w,c
  3979  00207C  E1EF               	bnz	l1031
  3980  00207E  2811               	incf	(SIM800xSDMSendBytes@cnt+1)^0,w,c
  3981  002080  B4D8               	btfsc	status,2,c
  3982  002082  0012               	return		;funcret
  3983  002084  FFFF               	dw	65535	; assembler added errata NOP
  3984  002086  D7EA               	goto	l1031
  3985  002088  FFFF               	dw	65535	; errata NOP
  3986  00208A                     __end_of_SIM800xSDMSendBytes:
  3987                           	callstack 0
  3988                           
  3989 ;; *************** function _SIM800xHTTPAction *****************
  3990 ;; Defined at:
  3991 ;;		line 1634 in file "Src/SIM800x.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;  method          1    wreg     unsigned char 
  3994 ;;  statuscode      2   59[COMRAM] PTR unsigned int 
  3995 ;;		 -> SystemTask@scode(2), 
  3996 ;;  cnt             2   61[COMRAM] PTR unsigned long 
  3997 ;;		 -> SystemTask@cnt(4), 
  3998 ;;  tout            4   63[COMRAM] unsigned long 
  3999 ;;  errcode         2   67[COMRAM] PTR unsigned int 
  4000 ;;		 -> SystemTask@errcode(2), 
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;  method          1   34[BANK0 ] unsigned char 
  4003 ;;  t               4   30[BANK0 ] unsigned long 
  4004 ;;  str            30    0[BANK0 ] unsigned char [30]
  4005 ;;  time            4   35[BANK0 ] unsigned long 
  4006 ;;  res             2   39[BANK0 ] int 
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  1    wreg      enum E2115
  4009 ;; Registers used:
  4010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4016 ;;      Params:        10       0       0       0       0       0       0
  4017 ;;      Locals:         0      41       0       0       0       0       0
  4018 ;;      Temps:          4       0       0       0       0       0       0
  4019 ;;      Totals:        14      41       0       0       0       0       0
  4020 ;;Total ram usage:       55 bytes
  4021 ;; Hardware stack levels used: 1
  4022 ;; Hardware stack levels required when called: 6
  4023 ;; This function calls:
  4024 ;;		_SIM800xSDMFlush
  4025 ;;		_SIM800xSDMPrint
  4026 ;;		_SIM800xSDMReadF1Pkt
  4027 ;;		_SIM800xSDMRxAvailable
  4028 ;;		_StrToInt
  4029 ;;		_Tick_ms
  4030 ;;		_sprintf
  4031 ;; This function is called by:
  4032 ;;		_SystemTask
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           	psect	text8
  4037  0007FC                     __ptext8:
  4038                           	callstack 0
  4039  0007FC                     _SIM800xHTTPAction:
  4040                           	callstack 0
  4041  0007FC  FFFF               	dw	65535	; assembler added errata NOP
  4042                           
  4043                           ;incstack = 0
  4044                           ;SIM800xHTTPAction@method stored from wreg
  4045  0007FE  0100               	movlb	0	; () banked
  4046  000800  6FE8               	movwf	SIM800xHTTPAction@method& (0+255),b
  4047                           
  4048                           ;SIM800x.c: 1637: if(method > 3)
  4049  000802  0E03               	movlw	3
  4050  000804  0100               	movlb	0	; () banked
  4051  000806  65E8               	cpfsgt	SIM800xHTTPAction@method& (0+255),b
  4052  000808  D003               	goto	l5242
  4053  00080A                     u4570:
  4054  00080A  FFFF               	dw	65535	; assembler added errata NOP
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;SIM800x.c: 1638: return SIM800X_ERROR;
  4058  00080C  0E01               	movlw	1
  4059  00080E  D104               	goto	l807
  4060  000810                     l5242:
  4061  000810  FFFF               	dw	65535	; assembler added errata NOP
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;SIM800x.c: 1640: char str[30] = {0, 0, 0, 0};
  4065  000812  EE20  F0C6         	lfsr	2,SIM800xHTTPAction@str
  4066  000816  0E1D               	movlw	29
  4067  000818                     u4581:
  4068  000818  6ADE               	clrf	postinc2,c
  4069  00081A  06E8               	decf	wreg,f,c
  4070  00081C  E2FD               	bc	u4581
  4071                           
  4072                           ; BSR set to: 0
  4073                           ;SIM800x.c: 1642: sprintf(str, "AT+HTTPACTION=%u\r", (uint8_t)(method & 0x03));
  4074  00081E  0EC6               	movlw	low SIM800xHTTPAction@str
  4075  000820  6E24               	movwf	sprintf@sp^0,c
  4076  000822  0E00               	movlw	high SIM800xHTTPAction@str
  4077  000824  6E25               	movwf	(sprintf@sp+1)^0,c
  4078  000826  0E67               	movlw	low STR_99
  4079  000828  6E26               	movwf	sprintf@f^0,c
  4080  00082A  0E7D               	movlw	high STR_99
  4081  00082C  6E27               	movwf	(sprintf@f+1)^0,c
  4082  00082E  C0E8  F046         	movff	SIM800xHTTPAction@method,??_SIM800xHTTPAction
  4083  000832  0E03               	movlw	3
  4084  000834  1646               	andwf	??_SIM800xHTTPAction^0,f,c
  4085  000836  5046               	movf	??_SIM800xHTTPAction^0,w,c
  4086  000838  6E28               	movwf	(?_sprintf+4)^0,c
  4087  00083A  6A29               	clrf	(?_sprintf+5)^0,c
  4088  00083C  ECCD  F002         	call	_sprintf	;wreg free
  4089                           
  4090                           ;SIM800x.c: 1643: SIM800xSDMFlush();
  4091  000840  ECAE  F010         	call	_SIM800xSDMFlush	;wreg free
  4092                           
  4093                           ;SIM800x.c: 1644: SIM800xSDMPrint(str);
  4094  000844  0EC6               	movlw	low SIM800xHTTPAction@str
  4095  000846  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  4096  000848  0E00               	movlw	high SIM800xHTTPAction@str
  4097  00084A  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  4098  00084C  ECFA  F00D         	call	_SIM800xSDMPrint	;wreg free
  4099                           
  4100                           ;SIM800x.c: 1646: uint32_t time = Tick_ms();
  4101  000850  ECA3  F010         	call	_Tick_ms	;wreg free
  4102  000854  C00E  F0E9         	movff	?_Tick_ms,SIM800xHTTPAction@time
  4103  000858  C00F  F0EA         	movff	?_Tick_ms+1,SIM800xHTTPAction@time+1
  4104  00085C  C010  F0EB         	movff	?_Tick_ms+2,SIM800xHTTPAction@time+2
  4105  000860  C011  F0EC         	movff	?_Tick_ms+3,SIM800xHTTPAction@time+3
  4106                           
  4107                           ;SIM800x.c: 1647: while(SIM800xSDMRxAvailable() < 6)
  4108  000864  D01D               	goto	l5258
  4109  000866                     l5252:
  4110  000866  FFFF               	dw	65535	; assembler added errata NOP
  4111                           
  4112                           ;SIM800x.c: 1648: {;SIM800x.c: 1649: if((Tick_ms() - time) > Tout)
  4113  000868  ECA3  F010         	call	_Tick_ms	;wreg free
  4114  00086C  0100               	movlb	0	; () banked
  4115  00086E  51E9               	movf	SIM800xHTTPAction@time& (0+255),w,b
  4116  000870  5C0E               	subwf	?_Tick_ms^0,w,c
  4117  000872  6E46               	movwf	??_SIM800xHTTPAction^0,c
  4118  000874  51EA               	movf	(SIM800xHTTPAction@time+1)& (0+255),w,b
  4119  000876  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  4120  000878  6E47               	movwf	(??_SIM800xHTTPAction+1)^0,c
  4121  00087A  51EB               	movf	(SIM800xHTTPAction@time+2)& (0+255),w,b
  4122  00087C  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  4123  00087E  6E48               	movwf	(??_SIM800xHTTPAction+2)^0,c
  4124  000880  51EC               	movf	(SIM800xHTTPAction@time+3)& (0+255),w,b
  4125  000882  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  4126  000884  6E49               	movwf	(??_SIM800xHTTPAction+3)^0,c
  4127  000886  5046               	movf	??_SIM800xHTTPAction^0,w,c
  4128  000888  5C6A               	subwf	_Tout^0,w,c
  4129  00088A  5047               	movf	(??_SIM800xHTTPAction+1)^0,w,c
  4130  00088C  586B               	subwfb	(_Tout+1)^0,w,c
  4131  00088E  5048               	movf	(??_SIM800xHTTPAction+2)^0,w,c
  4132  000890  586C               	subwfb	(_Tout+2)^0,w,c
  4133  000892  5049               	movf	(??_SIM800xHTTPAction+3)^0,w,c
  4134  000894  586D               	subwfb	(_Tout+3)^0,w,c
  4135  000896  B0D8               	btfsc	status,0,c
  4136  000898  D003               	goto	l5258
  4137  00089A                     u4590:
  4138  00089A  FFFF               	dw	65535	; assembler added errata NOP
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;SIM800x.c: 1650: {;SIM800x.c: 1651: return SIM800X_TIME_OUT;
  4142  00089C  0E05               	movlw	5
  4143  00089E  D0BC               	goto	l807
  4144  0008A0                     l5258:
  4145  0008A0  FFFF               	dw	65535	; assembler added errata NOP
  4146  0008A2  EC45  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  4147  0008A6  5014               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  4148  0008A8  E104               	bnz	u4600
  4149  0008AA  0E06               	movlw	6
  4150  0008AC  5C13               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  4151  0008AE  A0D8               	btfss	status,0,c
  4152  0008B0  D7DA               	goto	l5252
  4153  0008B2                     u4600:
  4154                           
  4155                           ;SIM800x.c: 1652: };SIM800x.c: 1653: };SIM800x.c: 1655: int res = SIM800xSDMReadF1Pkt(st
      +                          r);
  4156  0008B2  0EC6               	movlw	low SIM800xHTTPAction@str
  4157  0008B4  6E17               	movwf	SIM800xSDMReadF1Pkt@data^0,c
  4158  0008B6  0E00               	movlw	high SIM800xHTTPAction@str
  4159  0008B8  6E18               	movwf	(SIM800xSDMReadF1Pkt@data+1)^0,c
  4160  0008BA  EC28  F009         	call	_SIM800xSDMReadF1Pkt	;wreg free
  4161  0008BE  C017  F0ED         	movff	?_SIM800xSDMReadF1Pkt,SIM800xHTTPAction@res
  4162  0008C2  C018  F0EE         	movff	?_SIM800xSDMReadF1Pkt+1,SIM800xHTTPAction@res+1
  4163                           
  4164                           ;SIM800x.c: 1656: if(res < 0)
  4165  0008C6  0100               	movlb	0	; () banked
  4166  0008C8  BFEE               	btfsc	(SIM800xHTTPAction@res+1)& (0+255),7,b
  4167  0008CA  D7E7               	goto	u4590
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;SIM800x.c: 1660: else if(str[0] == 'O')
  4171  0008CC  0E4F               	movlw	79
  4172  0008CE  19C6               	xorwf	SIM800xHTTPAction@str& (0+255),w,b
  4173  0008D0  A4D8               	btfss	status,2,c
  4174  0008D2  D082               	goto	l5298
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;SIM800x.c: 1661: {;SIM800x.c: 1663: uint32_t t = (uint32_t)(tout + 5000);
  4178  0008D4  0E88               	movlw	136
  4179  0008D6  2440               	addwf	SIM800xHTTPAction@tout^0,w,c
  4180  0008D8  6FE4               	movwf	SIM800xHTTPAction@t& (0+255),b
  4181  0008DA  0E13               	movlw	19
  4182  0008DC  2041               	addwfc	(SIM800xHTTPAction@tout+1)^0,w,c
  4183  0008DE  6FE5               	movwf	(SIM800xHTTPAction@t+1)& (0+255),b
  4184  0008E0  0E00               	movlw	0
  4185  0008E2  2042               	addwfc	(SIM800xHTTPAction@tout+2)^0,w,c
  4186  0008E4  6FE6               	movwf	(SIM800xHTTPAction@t+2)& (0+255),b
  4187  0008E6  0E00               	movlw	0
  4188  0008E8  2043               	addwfc	(SIM800xHTTPAction@tout+3)^0,w,c
  4189  0008EA  6FE7               	movwf	(SIM800xHTTPAction@t+3)& (0+255),b
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;SIM800x.c: 1664: time = Tick_ms();
  4193  0008EC  ECA3  F010         	call	_Tick_ms	;wreg free
  4194  0008F0  C00E  F0E9         	movff	?_Tick_ms,SIM800xHTTPAction@time
  4195  0008F4  C00F  F0EA         	movff	?_Tick_ms+1,SIM800xHTTPAction@time+1
  4196  0008F8  C010  F0EB         	movff	?_Tick_ms+2,SIM800xHTTPAction@time+2
  4197  0008FC  C011  F0EC         	movff	?_Tick_ms+3,SIM800xHTTPAction@time+3
  4198                           
  4199                           ;SIM800x.c: 1665: while(SIM800xSDMRxAvailable() < 24)
  4200  000900  D01A               	goto	l5282
  4201  000902                     l5276:
  4202  000902  FFFF               	dw	65535	; assembler added errata NOP
  4203                           
  4204                           ;SIM800x.c: 1666: {;SIM800x.c: 1667: if((Tick_ms() - time) > t)
  4205  000904  ECA3  F010         	call	_Tick_ms	;wreg free
  4206  000908  0100               	movlb	0	; () banked
  4207  00090A  51E9               	movf	SIM800xHTTPAction@time& (0+255),w,b
  4208  00090C  5C0E               	subwf	?_Tick_ms^0,w,c
  4209  00090E  6E46               	movwf	??_SIM800xHTTPAction^0,c
  4210  000910  51EA               	movf	(SIM800xHTTPAction@time+1)& (0+255),w,b
  4211  000912  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  4212  000914  6E47               	movwf	(??_SIM800xHTTPAction+1)^0,c
  4213  000916  51EB               	movf	(SIM800xHTTPAction@time+2)& (0+255),w,b
  4214  000918  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  4215  00091A  6E48               	movwf	(??_SIM800xHTTPAction+2)^0,c
  4216  00091C  51EC               	movf	(SIM800xHTTPAction@time+3)& (0+255),w,b
  4217  00091E  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  4218  000920  6E49               	movwf	(??_SIM800xHTTPAction+3)^0,c
  4219  000922  5046               	movf	??_SIM800xHTTPAction^0,w,c
  4220  000924  5DE4               	subwf	SIM800xHTTPAction@t& (0+255),w,b
  4221  000926  5047               	movf	(??_SIM800xHTTPAction+1)^0,w,c
  4222  000928  59E5               	subwfb	(SIM800xHTTPAction@t+1)& (0+255),w,b
  4223  00092A  5048               	movf	(??_SIM800xHTTPAction+2)^0,w,c
  4224  00092C  59E6               	subwfb	(SIM800xHTTPAction@t+2)& (0+255),w,b
  4225  00092E  5049               	movf	(??_SIM800xHTTPAction+3)^0,w,c
  4226  000930  59E7               	subwfb	(SIM800xHTTPAction@t+3)& (0+255),w,b
  4227  000932  A0D8               	btfss	status,0,c
  4228  000934  D7B2               	goto	u4590
  4229  000936                     l5282:
  4230  000936  FFFF               	dw	65535	; assembler added errata NOP
  4231  000938  EC45  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  4232  00093C  5014               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  4233  00093E  E104               	bnz	u4640
  4234  000940  0E18               	movlw	24
  4235  000942  5C13               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  4236  000944  A0D8               	btfss	status,0,c
  4237  000946  D7DD               	goto	l5276
  4238  000948                     u4640:
  4239                           
  4240                           ;SIM800x.c: 1670: };SIM800x.c: 1671: };SIM800x.c: 1673: res = SIM800xSDMReadF1Pkt(str);
  4241  000948  0EC6               	movlw	low SIM800xHTTPAction@str
  4242  00094A  6E17               	movwf	SIM800xSDMReadF1Pkt@data^0,c
  4243  00094C  0E00               	movlw	high SIM800xHTTPAction@str
  4244  00094E  6E18               	movwf	(SIM800xSDMReadF1Pkt@data+1)^0,c
  4245  000950  EC28  F009         	call	_SIM800xSDMReadF1Pkt	;wreg free
  4246  000954  C017  F0ED         	movff	?_SIM800xSDMReadF1Pkt,SIM800xHTTPAction@res
  4247  000958  C018  F0EE         	movff	?_SIM800xSDMReadF1Pkt+1,SIM800xHTTPAction@res+1
  4248                           
  4249                           ;SIM800x.c: 1674: if(str[0] == '+')
  4250  00095C  0E2B               	movlw	43
  4251  00095E  0100               	movlb	0	; () banked
  4252  000960  19C6               	xorwf	SIM800xHTTPAction@str& (0+255),w,b
  4253  000962  A4D8               	btfss	status,2,c
  4254  000964  D752               	goto	u4570
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;SIM800x.c: 1675: {;SIM800x.c: 1676: str[(uint8_t)res] = '\0';
  4258  000966  0EC6               	movlw	low SIM800xHTTPAction@str
  4259  000968  25ED               	addwf	SIM800xHTTPAction@res& (0+255),w,b
  4260  00096A  6ED9               	movwf	fsr2l,c
  4261  00096C  6ADA               	clrf	fsr2h,c
  4262  00096E  0E00               	movlw	high SIM800xHTTPAction@str
  4263  000970  22DA               	addwfc	fsr2h,f,c
  4264  000972  0E00               	movlw	0
  4265  000974  6EDF               	movwf	indf2,c
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;SIM800x.c: 1677: *statuscode = (uint16_t)StrToInt(str, 15, 17);
  4269  000976  0EC6               	movlw	low SIM800xHTTPAction@str
  4270  000978  6E1A               	movwf	StrToInt@str^0,c
  4271  00097A  0E00               	movlw	high SIM800xHTTPAction@str
  4272  00097C  6E1B               	movwf	(StrToInt@str+1)^0,c
  4273  00097E  0E0F               	movlw	15
  4274  000980  6E1C               	movwf	StrToInt@start^0,c
  4275  000982  0E11               	movlw	17
  4276  000984  6E1D               	movwf	StrToInt@stop^0,c
  4277  000986  ECBE  F007         	call	_StrToInt	;wreg free
  4278  00098A  C03C  FFD9         	movff	SIM800xHTTPAction@statuscode,fsr2l
  4279  00098E  C03D  FFDA         	movff	SIM800xHTTPAction@statuscode+1,fsr2h
  4280  000992  C01A  FFDE         	movff	?_StrToInt,postinc2
  4281  000996  C01B  FFDD         	movff	?_StrToInt+1,postdec2
  4282                           
  4283                           ;SIM800x.c: 1678: *cnt = (uint16_t)StrToInt(str, 19, (uint16_t)(res - 1));
  4284  00099A  0EC6               	movlw	low SIM800xHTTPAction@str
  4285  00099C  6E1A               	movwf	StrToInt@str^0,c
  4286  00099E  0E00               	movlw	high SIM800xHTTPAction@str
  4287  0009A0  6E1B               	movwf	(StrToInt@str+1)^0,c
  4288  0009A2  0E13               	movlw	19
  4289  0009A4  6E1C               	movwf	StrToInt@start^0,c
  4290  0009A6  0100               	movlb	0	; () banked
  4291  0009A8  05ED               	decf	SIM800xHTTPAction@res& (0+255),w,b
  4292  0009AA  6E1D               	movwf	StrToInt@stop^0,c
  4293  0009AC  ECBE  F007         	call	_StrToInt	;wreg free
  4294  0009B0  501A               	movf	?_StrToInt^0,w,c
  4295  0009B2  6E46               	movwf	??_SIM800xHTTPAction^0,c
  4296  0009B4  501B               	movf	(?_StrToInt+1)^0,w,c
  4297  0009B6  6E47               	movwf	(??_SIM800xHTTPAction+1)^0,c
  4298  0009B8  6A48               	clrf	(??_SIM800xHTTPAction+2)^0,c
  4299  0009BA  6A49               	clrf	(??_SIM800xHTTPAction+3)^0,c
  4300  0009BC  C03E  FFD9         	movff	SIM800xHTTPAction@cnt,fsr2l
  4301  0009C0  C03F  FFDA         	movff	SIM800xHTTPAction@cnt+1,fsr2h
  4302  0009C4  C046  FFDE         	movff	??_SIM800xHTTPAction,postinc2
  4303  0009C8  C047  FFDE         	movff	??_SIM800xHTTPAction+1,postinc2
  4304  0009CC  C048  FFDE         	movff	??_SIM800xHTTPAction+2,postinc2
  4305  0009D0  C049  FFDE         	movff	??_SIM800xHTTPAction+3,postinc2
  4306                           
  4307                           ;SIM800x.c: 1679: return SIM800X_OK;
  4308  0009D4  0E00               	movlw	0
  4309  0009D6  D020               	goto	l807
  4310  0009D8                     l5298:
  4311  0009D8  FFFF               	dw	65535	; assembler added errata NOP
  4312                           
  4313                           ; BSR set to: 0
  4314                           ;SIM800x.c: 1682: else if(str[0] == '+')
  4315  0009DA  0E2B               	movlw	43
  4316  0009DC  19C6               	xorwf	SIM800xHTTPAction@str& (0+255),w,b
  4317  0009DE  A4D8               	btfss	status,2,c
  4318  0009E0  D714               	goto	u4570
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;SIM800x.c: 1683: {;SIM800x.c: 1684: str[(uint8_t)res] = '\0';
  4322  0009E2  0EC6               	movlw	low SIM800xHTTPAction@str
  4323  0009E4  25ED               	addwf	SIM800xHTTPAction@res& (0+255),w,b
  4324  0009E6  6ED9               	movwf	fsr2l,c
  4325  0009E8  6ADA               	clrf	fsr2h,c
  4326  0009EA  0E00               	movlw	high SIM800xHTTPAction@str
  4327  0009EC  22DA               	addwfc	fsr2h,f,c
  4328  0009EE  0E00               	movlw	0
  4329  0009F0  6EDF               	movwf	indf2,c
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;SIM800x.c: 1685: *errcode = (uint16_t)StrToInt(str, 12, (uint16_t)(res - 1));
  4333  0009F2  0EC6               	movlw	low SIM800xHTTPAction@str
  4334  0009F4  6E1A               	movwf	StrToInt@str^0,c
  4335  0009F6  0E00               	movlw	high SIM800xHTTPAction@str
  4336  0009F8  6E1B               	movwf	(StrToInt@str+1)^0,c
  4337  0009FA  0E0C               	movlw	12
  4338  0009FC  6E1C               	movwf	StrToInt@start^0,c
  4339  0009FE  05ED               	decf	SIM800xHTTPAction@res& (0+255),w,b
  4340  000A00  6E1D               	movwf	StrToInt@stop^0,c
  4341  000A02  ECBE  F007         	call	_StrToInt	;wreg free
  4342  000A06  C044  FFD9         	movff	SIM800xHTTPAction@errcode,fsr2l
  4343  000A0A  C045  FFDA         	movff	SIM800xHTTPAction@errcode+1,fsr2h
  4344  000A0E  C01A  FFDE         	movff	?_StrToInt,postinc2
  4345  000A12  C01B  FFDD         	movff	?_StrToInt+1,postdec2
  4346                           
  4347                           ;SIM800x.c: 1686: return SIM800X_CME_ERROR;
  4348  000A16  0E02               	movlw	2
  4349  000A18                     l807:
  4350  000A18  FFFF               	dw	65535	; assembler added errata NOP
  4351  000A1A  0012               	return		;funcret
  4352  000A1C  FFFF               	dw	65535	; errata NOP
  4353  000A1E                     __end_of_SIM800xHTTPAction:
  4354                           	callstack 0
  4355                           
  4356 ;; *************** function _SystemInit *****************
  4357 ;; Defined at:
  4358 ;;		line 34 in file "Src/ApplicationExample.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;		None
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;  ip             20    0[BANK0 ] unsigned char [20]
  4363 ;;  err             2   20[BANK0 ] unsigned int 
  4364 ;; Return value:  Size  Location     Type
  4365 ;;                  1    wreg      unsigned char 
  4366 ;; Registers used:
  4367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4368 ;; Tracked objects:
  4369 ;;		On entry : 0/0
  4370 ;;		On exit  : 0/0
  4371 ;;		Unchanged: 0/0
  4372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4373 ;;      Params:         0       0       0       0       0       0       0
  4374 ;;      Locals:         0      22       0       0       0       0       0
  4375 ;;      Temps:          0       0       0       0       0       0       0
  4376 ;;      Totals:         0      22       0       0       0       0       0
  4377 ;;Total ram usage:       22 bytes
  4378 ;; Hardware stack levels used: 1
  4379 ;; Hardware stack levels required when called: 8
  4380 ;; This function calls:
  4381 ;;		_AddEntryToJsonObject
  4382 ;;		_SIM800xHTTPInit
  4383 ;;		_SIM800xHTTPSetContent
  4384 ;;		_SIM800xHTTPSetURL
  4385 ;;		_SIM800xIPGetState
  4386 ;;		_SIM800xIPOpen
  4387 ;;		_SIM800xIPSetAPN
  4388 ;;		_SIM800xIPSetConnectionType
  4389 ;;		_SIM800xInit
  4390 ;;		_SoftUARTInit
  4391 ;;		_SoftUARTPrint
  4392 ;; This function is called by:
  4393 ;;		_main
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text9
  4398  000C28                     __ptext9:
  4399                           	callstack 0
  4400  000C28                     _SystemInit:
  4401                           	callstack 0
  4402  000C28  FFFF               	dw	65535	; assembler added errata NOP
  4403                           
  4404                           ;ApplicationExample.c: 36: SoftUARTInit();
  4405                           
  4406                           ;incstack = 0
  4407  000C2A  ECB9  F010         	call	_SoftUARTInit	;wreg free
  4408                           
  4409                           ;ApplicationExample.c: 38: if(SIM800xInit(9600) == SIM800X_OK)
  4410  000C2E  0E80               	movlw	128
  4411  000C30  6E3C               	movwf	SIM800xInit@br^0,c
  4412  000C32  0E25               	movlw	37
  4413  000C34  6E3D               	movwf	(SIM800xInit@br+1)^0,c
  4414  000C36  0E00               	movlw	0
  4415  000C38  6E3E               	movwf	(SIM800xInit@br+2)^0,c
  4416  000C3A  0E00               	movlw	0
  4417  000C3C  6E3F               	movwf	(SIM800xInit@br+3)^0,c
  4418  000C3E  EC89  F008         	call	_SIM800xInit	;wreg free
  4419  000C42  0900               	iorlw	0
  4420  000C44  A4D8               	btfss	status,2,c
  4421  000C46  D0C3               	goto	l50
  4422                           
  4423                           ;ApplicationExample.c: 39: {;ApplicationExample.c: 40: SoftUARTPrint("Modem Initialized.
      +                          \r\r");
  4424  000C48  0E04               	movlw	low STR_1
  4425  000C4A  6E11               	movwf	SoftUARTPrint@str^0,c
  4426  000C4C  0E7D               	movlw	high STR_1
  4427  000C4E  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4428  000C50  ECCA  F00D         	call	_SoftUARTPrint	;wreg free
  4429                           
  4430                           ;ApplicationExample.c: 44: SoftUARTPrint("Setting IP configurations...\r");
  4431  000C54  0E73               	movlw	low STR_2
  4432  000C56  6E11               	movwf	SoftUARTPrint@str^0,c
  4433  000C58  0E7B               	movlw	high STR_2
  4434  000C5A  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4435  000C5C  ECCA  F00D         	call	_SoftUARTPrint	;wreg free
  4436                           
  4437                           ;ApplicationExample.c: 45: if(SIM800xIPSetConnectionType(1, "GPRS") == SIM800X_OK)
  4438  000C60  0EE0               	movlw	low STR_3
  4439  000C62  6E20               	movwf	SIM800xIPSetConnectionType@contype^0,c
  4440  000C64  0E7F               	movlw	high STR_3
  4441  000C66  6E21               	movwf	(SIM800xIPSetConnectionType@contype+1)^0,c
  4442  000C68  0E01               	movlw	1
  4443  000C6A  EC5E  F00D         	call	_SIM800xIPSetConnectionType
  4444  000C6E  0900               	iorlw	0
  4445  000C70  A4D8               	btfss	status,2,c
  4446  000C72  D0AD               	goto	l50
  4447                           
  4448                           ;ApplicationExample.c: 46: {;ApplicationExample.c: 47: if(SIM800xIPSetAPN(1, "Internet")
      +                           == SIM800X_OK)
  4449  000C74  0E6B               	movlw	low STR_4
  4450  000C76  6E20               	movwf	SIM800xIPSetAPN@apn^0,c
  4451  000C78  0E7F               	movlw	high STR_4
  4452  000C7A  6E21               	movwf	(SIM800xIPSetAPN@apn+1)^0,c
  4453  000C7C  0E01               	movlw	1
  4454  000C7E  EC94  F00D         	call	_SIM800xIPSetAPN
  4455  000C82  0900               	iorlw	0
  4456  000C84  A4D8               	btfss	status,2,c
  4457  000C86  D0A3               	goto	l50
  4458                           
  4459                           ;ApplicationExample.c: 48: {;ApplicationExample.c: 49: if(SIM800xIPOpen(1) == SIM800X_OK
      +                          )
  4460  000C88  0E01               	movlw	1
  4461  000C8A  ECC6  F00F         	call	_SIM800xIPOpen
  4462  000C8E  0900               	iorlw	0
  4463  000C90  A4D8               	btfss	status,2,c
  4464  000C92  D09D               	goto	l50
  4465                           
  4466                           ;ApplicationExample.c: 50: {;ApplicationExample.c: 51: char ip[20];;ApplicationExample.c
      +                          : 52: SoftUARTPrint("Done.\r\r");
  4467  000C94  0EB4               	movlw	low STR_5
  4468  000C96  6E11               	movwf	SoftUARTPrint@str^0,c
  4469  000C98  0E7F               	movlw	high STR_5
  4470  000C9A  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4471  000C9C  ECCA  F00D         	call	_SoftUARTPrint	;wreg free
  4472                           
  4473                           ;ApplicationExample.c: 53: SIM800xIPGetState(1, ip);
  4474  000CA0  0EC6               	movlw	low SystemInit@ip
  4475  000CA2  6E31               	movwf	SIM800xIPGetState@ip^0,c
  4476  000CA4  0E00               	movlw	high SystemInit@ip
  4477  000CA6  6E32               	movwf	(SIM800xIPGetState@ip+1)^0,c
  4478  000CA8  0E01               	movlw	1
  4479  000CAA  EC41  F00A         	call	_SIM800xIPGetState
  4480                           
  4481                           ;ApplicationExample.c: 54: SoftUARTPrint("Bearer profile Activated, IP: ");
  4482  000CAE  0E54               	movlw	low STR_6
  4483  000CB0  6E11               	movwf	SoftUARTPrint@str^0,c
  4484  000CB2  0E7B               	movlw	high STR_6
  4485  000CB4  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4486  000CB6  ECCA  F00D         	call	_SoftUARTPrint	;wreg free
  4487                           
  4488                           ;ApplicationExample.c: 55: SoftUARTPrint(ip);
  4489  000CBA  0EC6               	movlw	low SystemInit@ip
  4490  000CBC  6E11               	movwf	SoftUARTPrint@str^0,c
  4491  000CBE  0E00               	movlw	high SystemInit@ip
  4492  000CC0  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4493  000CC2  ECCA  F00D         	call	_SoftUARTPrint	;wreg free
  4494                           
  4495                           ;ApplicationExample.c: 56: SoftUARTPrint("\r\r");
  4496  000CC6  0E31               	movlw	low (STR_21+29)
  4497  000CC8  6E11               	movwf	SoftUARTPrint@str^0,c
  4498  000CCA  0E7B               	movlw	high (STR_21+29)
  4499  000CCC  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4500  000CCE  ECCA  F00D         	call	_SoftUARTPrint	;wreg free
  4501                           
  4502                           ;ApplicationExample.c: 57: uint16_t err;;ApplicationExample.c: 61: SoftUARTPrint("Settin
      +                          g HTTP configurations...\r");
  4503  000CD2  0E34               	movlw	low STR_8
  4504  000CD4  6E11               	movwf	SoftUARTPrint@str^0,c
  4505  000CD6  0E7B               	movlw	high STR_8
  4506  000CD8  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4507  000CDA  ECCA  F00D         	call	_SoftUARTPrint	;wreg free
  4508                           
  4509                           ;ApplicationExample.c: 62: if(SIM800xHTTPInit(&err) == SIM800X_OK)
  4510  000CDE  0EDA               	movlw	low SystemInit@err
  4511  000CE0  6E4E               	movwf	SIM800xHTTPInit@errcode^0,c
  4512  000CE2  0E00               	movlw	high SystemInit@err
  4513  000CE4  6E4F               	movwf	(SIM800xHTTPInit@errcode+1)^0,c
  4514  000CE6  EC86  F010         	call	_SIM800xHTTPInit	;wreg free
  4515  000CEA  0900               	iorlw	0
  4516  000CEC  A4D8               	btfss	status,2,c
  4517  000CEE  D06F               	goto	l50
  4518                           
  4519                           ;ApplicationExample.c: 63: {;ApplicationExample.c: 64: if(SIM800xHTTPSetURL("http://back
      +                          end.thinger.io/v3/users/FirmwareEngineers/devices/SIM800L/callback/data?authorization=ey
      +                          JhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODAzNjA0NzAsImlhdCI6MTY4MDM1MzI3MCwicm9sZ
      +                          SI6InVzZXIiLCJ1c3IiOiJGaXJtd2FyZUVuZ2luZW
  4520  000CF0  0EB8               	movlw	low STR_9
  4521  000CF2  6E4E               	movwf	SIM800xHTTPSetURL@url^0,c
  4522  000CF4  0E79               	movlw	high STR_9
  4523  000CF6  6E4F               	movwf	(SIM800xHTTPSetURL@url+1)^0,c
  4524  000CF8  0EDA               	movlw	low SystemInit@err
  4525  000CFA  6E50               	movwf	SIM800xHTTPSetURL@errcode^0,c
  4526  000CFC  0E00               	movlw	high SystemInit@err
  4527  000CFE  6E51               	movwf	(SIM800xHTTPSetURL@errcode+1)^0,c
  4528  000D00  ECB0  F00E         	call	_SIM800xHTTPSetURL	;wreg free
  4529  000D04  0900               	iorlw	0
  4530  000D06  A4D8               	btfss	status,2,c
  4531  000D08  D062               	goto	l50
  4532                           
  4533                           ;ApplicationExample.c: 65: {;ApplicationExample.c: 66: if(SIM800xHTTPSetContent("applica
      +                          tion/json", &err) == SIM800X_OK)
  4534  000D0A  0E9C               	movlw	low STR_10
  4535  000D0C  6E4E               	movwf	SIM800xHTTPSetContent@content^0,c
  4536  000D0E  0E7D               	movlw	high STR_10
  4537  000D10  6E4F               	movwf	(SIM800xHTTPSetContent@content+1)^0,c
  4538  000D12  0EDA               	movlw	low SystemInit@err
  4539  000D14  6E50               	movwf	SIM800xHTTPSetContent@errcode^0,c
  4540  000D16  0E00               	movlw	high SystemInit@err
  4541  000D18  6E51               	movwf	(SIM800xHTTPSetContent@errcode+1)^0,c
  4542  000D1A  ECDA  F00E         	call	_SIM800xHTTPSetContent	;wreg free
  4543  000D1E  0900               	iorlw	0
  4544  000D20  A4D8               	btfss	status,2,c
  4545  000D22  D055               	goto	l50
  4546                           
  4547                           ;ApplicationExample.c: 67: {;ApplicationExample.c: 68: SoftUARTPrint("Done.\r\r");
  4548  000D24  0EB4               	movlw	low STR_5
  4549  000D26  6E11               	movwf	SoftUARTPrint@str^0,c
  4550  000D28  0E7F               	movlw	high STR_5
  4551  000D2A  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4552  000D2C  ECCA  F00D         	call	_SoftUARTPrint	;wreg free
  4553                           
  4554                           ;ApplicationExample.c: 73: AddEntryToJsonObject(txmessage, "Engine Temperature (C)", "30
      +                          ", &cpos);
  4555  000D30  0E8C               	movlw	low _txmessage
  4556  000D32  6E0E               	movwf	AddEntryToJsonObject@JsonObject^0,c
  4557  000D34  0E02               	movlw	high _txmessage
  4558  000D36  6E0F               	movwf	(AddEntryToJsonObject@JsonObject+1)^0,c
  4559  000D38  0EAE               	movlw	low STR_12
  4560  000D3A  6E10               	movwf	AddEntryToJsonObject@key^0,c
  4561  000D3C  0E7C               	movlw	high STR_12
  4562  000D3E  6E11               	movwf	(AddEntryToJsonObject@key+1)^0,c
  4563  000D40  0EF3               	movlw	low STR_13
  4564  000D42  6E12               	movwf	AddEntryToJsonObject@value^0,c
  4565  000D44  0E7F               	movlw	high STR_13
  4566  000D46  6E13               	movwf	(AddEntryToJsonObject@value+1)^0,c
  4567  000D48  0EC4               	movlw	low _cpos
  4568  000D4A  6E14               	movwf	AddEntryToJsonObject@Cpos^0,c
  4569  000D4C  0E00               	movlw	high _cpos
  4570  000D4E  6E15               	movwf	(AddEntryToJsonObject@Cpos+1)^0,c
  4571  000D50  EC19  F000         	call	_AddEntryToJsonObject	;wreg free
  4572                           
  4573                           ;ApplicationExample.c: 74: AddEntryToJsonObject(txmessage, "RPM", "3500", &cpos);
  4574  000D54  0E8C               	movlw	low _txmessage
  4575  000D56  6E0E               	movwf	AddEntryToJsonObject@JsonObject^0,c
  4576  000D58  0E02               	movlw	high _txmessage
  4577  000D5A  6E0F               	movwf	(AddEntryToJsonObject@JsonObject+1)^0,c
  4578  000D5C  0EE9               	movlw	low STR_14
  4579  000D5E  6E10               	movwf	AddEntryToJsonObject@key^0,c
  4580  000D60  0E7F               	movlw	high STR_14
  4581  000D62  6E11               	movwf	(AddEntryToJsonObject@key+1)^0,c
  4582  000D64  0EDB               	movlw	low STR_15
  4583  000D66  6E12               	movwf	AddEntryToJsonObject@value^0,c
  4584  000D68  0E7F               	movlw	high STR_15
  4585  000D6A  6E13               	movwf	(AddEntryToJsonObject@value+1)^0,c
  4586  000D6C  0EC4               	movlw	low _cpos
  4587  000D6E  6E14               	movwf	AddEntryToJsonObject@Cpos^0,c
  4588  000D70  0E00               	movlw	high _cpos
  4589  000D72  6E15               	movwf	(AddEntryToJsonObject@Cpos+1)^0,c
  4590  000D74  EC19  F000         	call	_AddEntryToJsonObject	;wreg free
  4591                           
  4592                           ;ApplicationExample.c: 75: AddEntryToJsonObject(txmessage, "Vehicle Speed (MPH)", "35", 
      +                          &cpos);
  4593  000D78  0E8C               	movlw	low _txmessage
  4594  000D7A  6E0E               	movwf	AddEntryToJsonObject@JsonObject^0,c
  4595  000D7C  0E02               	movlw	high _txmessage
  4596  000D7E  6E0F               	movwf	(AddEntryToJsonObject@JsonObject+1)^0,c
  4597  000D80  0E2D               	movlw	low STR_16
  4598  000D82  6E10               	movwf	AddEntryToJsonObject@key^0,c
  4599  000D84  0E7D               	movlw	high STR_16
  4600  000D86  6E11               	movwf	(AddEntryToJsonObject@key+1)^0,c
  4601  000D88  0EF9               	movlw	low STR_17
  4602  000D8A  6E12               	movwf	AddEntryToJsonObject@value^0,c
  4603  000D8C  0E7F               	movlw	high STR_17
  4604  000D8E  6E13               	movwf	(AddEntryToJsonObject@value+1)^0,c
  4605  000D90  0EC4               	movlw	low _cpos
  4606  000D92  6E14               	movwf	AddEntryToJsonObject@Cpos^0,c
  4607  000D94  0E00               	movlw	high _cpos
  4608  000D96  6E15               	movwf	(AddEntryToJsonObject@Cpos+1)^0,c
  4609  000D98  EC19  F000         	call	_AddEntryToJsonObject	;wreg free
  4610                           
  4611                           ;ApplicationExample.c: 76: AddEntryToJsonObject(txmessage, "Fuel Level (%)", "50", &cpos
      +                          );
  4612  000D9C  0E8C               	movlw	low _txmessage
  4613  000D9E  6E0E               	movwf	AddEntryToJsonObject@JsonObject^0,c
  4614  000DA0  0E02               	movlw	high _txmessage
  4615  000DA2  6E0F               	movwf	(AddEntryToJsonObject@JsonObject+1)^0,c
  4616  000DA4  0EEB               	movlw	low STR_18
  4617  000DA6  6E10               	movwf	AddEntryToJsonObject@key^0,c
  4618  000DA8  0E7D               	movlw	high STR_18
  4619  000DAA  6E11               	movwf	(AddEntryToJsonObject@key+1)^0,c
  4620  000DAC  0EF6               	movlw	low STR_19
  4621  000DAE  6E12               	movwf	AddEntryToJsonObject@value^0,c
  4622  000DB0  0E7F               	movlw	high STR_19
  4623  000DB2  6E13               	movwf	(AddEntryToJsonObject@value+1)^0,c
  4624  000DB4  0EC4               	movlw	low _cpos
  4625  000DB6  6E14               	movwf	AddEntryToJsonObject@Cpos^0,c
  4626  000DB8  0E00               	movlw	high _cpos
  4627  000DBA  6E15               	movwf	(AddEntryToJsonObject@Cpos+1)^0,c
  4628  000DBC  EC19  F000         	call	_AddEntryToJsonObject	;wreg free
  4629                           
  4630                           ;ApplicationExample.c: 81: SoftUARTPrint("System Initialization completed.\r\r");
  4631  000DC0  0ECF               	movlw	low STR_20
  4632  000DC2  6E11               	movwf	SoftUARTPrint@str^0,c
  4633  000DC4  0E7A               	movlw	high STR_20
  4634  000DC6  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4635  000DC8  ECCA  F00D         	call	_SoftUARTPrint	;wreg free
  4636  000DCC  D007               	goto	l54
  4637  000DCE                     l50:
  4638  000DCE  FFFF               	dw	65535	; assembler added errata NOP
  4639                           
  4640                           ;ApplicationExample.c: 83: };ApplicationExample.c: 84: };ApplicationExample.c: 85: };App
      +                          licationExample.c: 86: };ApplicationExample.c: 87: };ApplicationExample.c: 88: };Applica
      +                          tionExample.c: 89: };ApplicationExample.c: 90: SoftUARTPrint("System Initialization fail
      +                          ed.\r\r");
  4641  000DD0  0E14               	movlw	low STR_21
  4642  000DD2  6E11               	movwf	SoftUARTPrint@str^0,c
  4643  000DD4  0E7B               	movlw	high STR_21
  4644  000DD6  6E12               	movwf	(SoftUARTPrint@str+1)^0,c
  4645  000DD8  ECCA  F00D         	call	_SoftUARTPrint	;wreg free
  4646  000DDC                     l54:
  4647  000DDC  FFFF               	dw	65535	; assembler added errata NOP
  4648  000DDE  0012               	return		;funcret
  4649  000DE0  FFFF               	dw	65535	; errata NOP
  4650  000DE2                     __end_of_SystemInit:
  4651                           	callstack 0
  4652                           
  4653 ;; *************** function _SoftUARTPrint *****************
  4654 ;; Defined at:
  4655 ;;		line 344 in file "Src/SoftwareUART.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;  str             2   16[COMRAM] PTR const unsigned char 
  4658 ;;		 -> STR_27(17), STR_26(3), STR_25(7), SystemTask@msg(20), 
  4659 ;;		 -> STR_22(34), STR_21(32), STR_20(35), STR_11(8), 
  4660 ;;		 -> STR_8(32), STR_7(3), STR_6(31), SystemInit@ip(20), 
  4661 ;;		 -> STR_5(8), STR_2(30), STR_1(21), 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;		None
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  1    wreg      void 
  4666 ;; Registers used:
  4667 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4673 ;;      Params:         2       0       0       0       0       0       0
  4674 ;;      Locals:         0       0       0       0       0       0       0
  4675 ;;      Temps:          0       0       0       0       0       0       0
  4676 ;;      Totals:         2       0       0       0       0       0       0
  4677 ;;Total ram usage:        2 bytes
  4678 ;; Hardware stack levels used: 1
  4679 ;; Hardware stack levels required when called: 4
  4680 ;; This function calls:
  4681 ;;		_SoftUARTTransmitByte
  4682 ;; This function is called by:
  4683 ;;		_SystemInit
  4684 ;;		_SystemTask
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687                           
  4688                           	psect	text10
  4689  001B94                     __ptext10:
  4690                           	callstack 0
  4691  001B94                     _SoftUARTPrint:
  4692                           	callstack 0
  4693  001B94  FFFF               	dw	65535	; assembler added errata NOP
  4694                           
  4695                           ;SoftwareUART.c: 346: while(*str!='\0'){
  4696                           
  4697                           ;incstack = 0
  4698  001B96  D016               	goto	l4994
  4699  001B98                     l4990:
  4700  001B98  FFFF               	dw	65535	; assembler added errata NOP
  4701                           
  4702                           ;SoftwareUART.c: 347: SoftUARTTransmitByte(*(str++));
  4703  001B9A  C011  FFF6         	movff	SoftUARTPrint@str,tblptrl
  4704  001B9E  C012  FFF7         	movff	SoftUARTPrint@str+1,tblptrh
  4705  001BA2  6AF8               	clrf	tblptru,c
  4706  001BA4  0E05               	movlw	(high __ramtop+-1)
  4707  001BA6  64F7               	cpfsgt	tblptrh,c
  4708  001BA8  D004               	bra	u4277
  4709  001BAA  0008               	tblrd		*
  4710  001BAC  FFFF               	dw	65535	; errata NOP
  4711  001BAE  50F5               	movf	tablat,w,c
  4712  001BB0  D005               	bra	u4270
  4713  001BB2                     u4277:
  4714  001BB2  CFF6 FFE1          	movff	tblptrl,fsr1l
  4715  001BB6  CFF7 FFE2          	movff	tblptrh,fsr1h
  4716  001BBA  50E7               	movf	indf1,w,c
  4717  001BBC                     u4270:
  4718  001BBC  EC85  F00E         	call	_SoftUARTTransmitByte
  4719  001BC0  4A11               	infsnz	SoftUARTPrint@str^0,f,c
  4720  001BC2  2A12               	incf	(SoftUARTPrint@str+1)^0,f,c
  4721  001BC4                     l4994:
  4722  001BC4  FFFF               	dw	65535	; assembler added errata NOP
  4723  001BC6  C011  FFF6         	movff	SoftUARTPrint@str,tblptrl
  4724  001BCA  C012  FFF7         	movff	SoftUARTPrint@str+1,tblptrh
  4725  001BCE  6AF8               	clrf	tblptru,c
  4726  001BD0  0E05               	movlw	(high __ramtop+-1)
  4727  001BD2  64F7               	cpfsgt	tblptrh,c
  4728  001BD4  D004               	bra	u4287
  4729  001BD6  0008               	tblrd		*
  4730  001BD8  FFFF               	dw	65535	; errata NOP
  4731  001BDA  50F5               	movf	tablat,w,c
  4732  001BDC  D005               	bra	u4280
  4733  001BDE                     u4287:
  4734  001BDE  CFF6 FFE1          	movff	tblptrl,fsr1l
  4735  001BE2  CFF7 FFE2          	movff	tblptrh,fsr1h
  4736  001BE6  50E7               	movf	indf1,w,c
  4737  001BE8                     u4280:
  4738  001BE8  0900               	iorlw	0
  4739  001BEA  B4D8               	btfsc	status,2,c
  4740  001BEC  0012               	return		;funcret
  4741  001BEE  FFFF               	dw	65535	; assembler added errata NOP
  4742  001BF0  D7D3               	goto	l4990
  4743  001BF2  FFFF               	dw	65535	; errata NOP
  4744  001BF4                     __end_of_SoftUARTPrint:
  4745                           	callstack 0
  4746                           
  4747 ;; *************** function _SoftUARTTransmitByte *****************
  4748 ;; Defined at:
  4749 ;;		line 301 in file "Src/SoftwareUART.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;  data            1    wreg     unsigned char 
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;  data            1   13[COMRAM] unsigned char 
  4754 ;;  k               1   15[COMRAM] unsigned char 
  4755 ;;  tmp             1   14[COMRAM] unsigned char 
  4756 ;; Return value:  Size  Location     Type
  4757 ;;                  1    wreg      void 
  4758 ;; Registers used:
  4759 ;;		wreg, status,2, status,0
  4760 ;; Tracked objects:
  4761 ;;		On entry : 0/0
  4762 ;;		On exit  : 0/0
  4763 ;;		Unchanged: 0/0
  4764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4765 ;;      Params:         0       0       0       0       0       0       0
  4766 ;;      Locals:         3       0       0       0       0       0       0
  4767 ;;      Temps:          0       0       0       0       0       0       0
  4768 ;;      Totals:         3       0       0       0       0       0       0
  4769 ;;Total ram usage:        3 bytes
  4770 ;; Hardware stack levels used: 1
  4771 ;; Hardware stack levels required when called: 3
  4772 ;; This function calls:
  4773 ;;		Nothing
  4774 ;; This function is called by:
  4775 ;;		_SoftUARTPrint
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779                           	psect	text11
  4780  001D0A                     __ptext11:
  4781                           	callstack 0
  4782  001D0A                     _SoftUARTTransmitByte:
  4783                           	callstack 0
  4784  001D0A  FFFF               	dw	65535	; assembler added errata NOP
  4785                           
  4786                           ;incstack = 0
  4787                           ;SoftUARTTransmitByte@data stored from wreg
  4788  001D0C  6E0E               	movwf	SoftUARTTransmitByte@data^0,c
  4789                           
  4790                           ;SoftwareUART.c: 304: uint8_t tmp;;SoftwareUART.c: 305: if(GIE)
  4791  001D0E  AEF2               	btfss	4082,7,c	;volatile
  4792  001D10  D002               	goto	l4726
  4793                           
  4794                           ;SoftwareUART.c: 306: tmp = 1;
  4795  001D12  0E01               	movlw	1
  4796  001D14  6E0F               	movwf	SoftUARTTransmitByte@tmp^0,c
  4797  001D16                     l4726:
  4798  001D16  FFFF               	dw	65535	; assembler added errata NOP
  4799                           
  4800                           ;SoftwareUART.c: 307: (INTCONbits.GIE = 0);
  4801  001D18  9EF2               	bcf	242,7,c	;volatile
  4802                           
  4803                           ;SoftwareUART.c: 309: IO.Bytes[0x01 + 9] &= (~(1 << 0x3));
  4804  001D1A  968A               	bcf	138,3,c	;volatile
  4805                           
  4806                           ;SoftwareUART.c: 310: _delay((unsigned long)(((1000000/9600))*((16 * 1000000)/4000000.0)
      +                          ));
  4807  001D1C  0E68               	movlw	104
  4808  001D1E                     u4947:
  4809  001D1E  FFFF               	dw	65535	; errata NOP
  4810  001D20  2EE8               	decfsz	wreg,f,c
  4811  001D22  D7FD               	bra	u4947
  4812                           
  4813                           ;SoftwareUART.c: 312: for(uint8_t k = 0;k < 8;k++){
  4814  001D24  0E00               	movlw	0
  4815  001D26  6E10               	movwf	SoftUARTTransmitByte@k^0,c
  4816  001D28                     l227:
  4817  001D28  FFFF               	dw	65535	; assembler added errata NOP
  4818                           
  4819                           ;SoftwareUART.c: 314: if(data & 0x01)
  4820  001D2A  A00E               	btfss	SoftUARTTransmitByte@data^0,0,c
  4821  001D2C  D002               	goto	l4740
  4822                           
  4823                           ;SoftwareUART.c: 315: IO.Bytes[0x01 + 9] |= (1 << 0x3);
  4824  001D2E  868A               	bsf	138,3,c	;volatile
  4825  001D30  D002               	goto	l4742
  4826  001D32                     l4740:
  4827  001D32  FFFF               	dw	65535	; assembler added errata NOP
  4828                           
  4829                           ;SoftwareUART.c: 316: else;SoftwareUART.c: 317: IO.Bytes[0x01 + 9] &= (~(1 << 0x3));
  4830  001D34  968A               	bcf	138,3,c	;volatile
  4831  001D36                     l4742:
  4832  001D36  FFFF               	dw	65535	; assembler added errata NOP
  4833                           
  4834                           ;SoftwareUART.c: 318: data >>= 1;
  4835  001D38  90D8               	bcf	status,0,c
  4836  001D3A  320E               	rrcf	SoftUARTTransmitByte@data^0,f,c
  4837                           
  4838                           ;SoftwareUART.c: 319: _delay((unsigned long)(((1000000/9600))*((16 * 1000000)/4000000.0)
      +                          ));
  4839  001D3C  0E68               	movlw	104
  4840  001D3E                     u4957:
  4841  001D3E  FFFF               	dw	65535	; errata NOP
  4842  001D40  2EE8               	decfsz	wreg,f,c
  4843  001D42  D7FD               	bra	u4957
  4844  001D44  2A10               	incf	SoftUARTTransmitByte@k^0,f,c
  4845  001D46  0E07               	movlw	7
  4846  001D48  6410               	cpfsgt	SoftUARTTransmitByte@k^0,c
  4847  001D4A  D7EE               	goto	l227
  4848                           
  4849                           ;SoftwareUART.c: 321: };SoftwareUART.c: 323: IO.Bytes[0x01 + 9] |= (1 << 0x3);
  4850  001D4C  868A               	bsf	138,3,c	;volatile
  4851                           
  4852                           ;SoftwareUART.c: 324: _delay((unsigned long)(((1000000/9600))*((16 * 1000000)/4000000.0)
      +                          ));
  4853  001D4E  0E68               	movlw	104
  4854  001D50                     u4967:
  4855  001D50  FFFF               	dw	65535	; errata NOP
  4856  001D52  2EE8               	decfsz	wreg,f,c
  4857  001D54  D7FD               	bra	u4967
  4858                           
  4859                           ;SoftwareUART.c: 325: if(tmp)
  4860  001D56  500F               	movf	SoftUARTTransmitByte@tmp^0,w,c
  4861  001D58  A4D8               	btfss	status,2,c
  4862                           
  4863                           ;SoftwareUART.c: 326: (INTCONbits.GIE = 1);
  4864  001D5A  8EF2               	bsf	242,7,c	;volatile
  4865  001D5C  0012               	return		;funcret
  4866  001D5E  FFFF               	dw	65535	; errata NOP
  4867  001D60                     __end_of_SoftUARTTransmitByte:
  4868                           	callstack 0
  4869                           
  4870 ;; *************** function _SoftUARTInit *****************
  4871 ;; Defined at:
  4872 ;;		line 275 in file "Src/SoftwareUART.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;		None
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;		None
  4877 ;; Return value:  Size  Location     Type
  4878 ;;                  1    wreg      void 
  4879 ;; Registers used:
  4880 ;;		wreg, status,2, status,0
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4886 ;;      Params:         0       0       0       0       0       0       0
  4887 ;;      Locals:         0       0       0       0       0       0       0
  4888 ;;      Temps:          0       0       0       0       0       0       0
  4889 ;;      Totals:         0       0       0       0       0       0       0
  4890 ;;Total ram usage:        0 bytes
  4891 ;; Hardware stack levels used: 1
  4892 ;; Hardware stack levels required when called: 3
  4893 ;; This function calls:
  4894 ;;		Nothing
  4895 ;; This function is called by:
  4896 ;;		_SystemInit
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           	psect	text12
  4901  002172                     __ptext12:
  4902                           	callstack 0
  4903  002172                     _SoftUARTInit:
  4904                           	callstack 0
  4905  002172  FFFF               	dw	65535	; assembler added errata NOP
  4906                           
  4907                           ;SoftwareUART.c: 277: IO.Bytes[0x01 + 9] |= (1 << 0x3);
  4908                           
  4909                           ;incstack = 0
  4910  002174  868A               	bsf	138,3,c	;volatile
  4911                           
  4912                           ;SoftwareUART.c: 278: IO.Bytes[(uint8_t)0x01 + 18] &= ~(1 << 0x3);
  4913  002176  9693               	bcf	147,3,c	;volatile
  4914                           
  4915                           ;SoftwareUART.c: 281: INTCON2 &= 0xBF;
  4916  002178  9CF1               	bcf	241,6,c	;volatile
  4917                           
  4918                           ;SoftwareUART.c: 282: INTCON |= 0xD0;
  4919  00217A  0ED0               	movlw	208
  4920  00217C  12F2               	iorwf	242,f,c	;volatile
  4921                           
  4922                           ;SoftwareUART.c: 283: (INTCONbits.GIE = 1);
  4923  00217E  8EF2               	bsf	242,7,c	;volatile
  4924                           
  4925                           ;SoftwareUART.c: 284: INT0IF = 0;
  4926  002180  92F2               	bcf	4082,1,c	;volatile
  4927  002182  0012               	return		;funcret
  4928  002184  FFFF               	dw	65535	; errata NOP
  4929  002186                     __end_of_SoftUARTInit:
  4930                           	callstack 0
  4931                           
  4932 ;; *************** function _SIM800xInit *****************
  4933 ;; Defined at:
  4934 ;;		line 269 in file "Src/SIM800x.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;  br              4   59[COMRAM] unsigned long 
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;  str            15   63[COMRAM] unsigned char [15]
  4939 ;;  c               1   80[COMRAM] unsigned char 
  4940 ;;  tmp             2   78[COMRAM] unsigned int 
  4941 ;; Return value:  Size  Location     Type
  4942 ;;                  1    wreg      enum E2115
  4943 ;; Registers used:
  4944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/0
  4947 ;;		On exit  : 0/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4950 ;;      Params:         4       0       0       0       0       0       0
  4951 ;;      Locals:        18       0       0       0       0       0       0
  4952 ;;      Temps:          0       0       0       0       0       0       0
  4953 ;;      Totals:        22       0       0       0       0       0       0
  4954 ;;Total ram usage:       22 bytes
  4955 ;; Hardware stack levels used: 1
  4956 ;; Hardware stack levels required when called: 5
  4957 ;; This function calls:
  4958 ;;		_SIM800xSDMFlush
  4959 ;;		_SIM800xSDMInit
  4960 ;;		_SIM800xSDMPeek
  4961 ;;		_SIM800xSDMPrint
  4962 ;;		_SIM800xSDMReadByte
  4963 ;;		_SIM800xSDMRxAvailable
  4964 ;;		_Wait_ms
  4965 ;;		_sprintf
  4966 ;; This function is called by:
  4967 ;;		_SystemInit
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970                           
  4971                           	psect	text13
  4972  001112                     __ptext13:
  4973                           	callstack 0
  4974  001112                     _SIM800xInit:
  4975                           	callstack 0
  4976  001112  FFFF               	dw	65535	; assembler added errata NOP
  4977                           
  4978                           ;SIM800x.c: 272: SIM800xSDMInit(br);
  4979                           
  4980                           ;incstack = 0
  4981  001114  C03C  F01B         	movff	SIM800xInit@br,SIM800xSDMInit@br
  4982  001118  C03D  F01C         	movff	SIM800xInit@br+1,SIM800xSDMInit@br+1
  4983  00111C  C03E  F01D         	movff	SIM800xInit@br+2,SIM800xSDMInit@br+2
  4984  001120  C03F  F01E         	movff	SIM800xInit@br+3,SIM800xSDMInit@br+3
  4985  001124  ECEB  F00C         	call	_SIM800xSDMInit	;wreg free
  4986                           
  4987                           ;SIM800x.c: 318: Wait_ms(5000);
  4988  001128  0E88               	movlw	136
  4989  00112A  6E0E               	movwf	Wait_ms@value^0,c
  4990  00112C  0E13               	movlw	19
  4991  00112E  6E0F               	movwf	(Wait_ms@value+1)^0,c
  4992  001130  0E00               	movlw	0
  4993  001132  6E10               	movwf	(Wait_ms@value+2)^0,c
  4994  001134  0E00               	movlw	0
  4995  001136  6E11               	movwf	(Wait_ms@value+3)^0,c
  4996  001138  EC25  F00D         	call	_Wait_ms	;wreg free
  4997                           
  4998                           ;SIM800x.c: 321: SIM800xSDMFlush();
  4999  00113C  ECAE  F010         	call	_SIM800xSDMFlush	;wreg free
  5000                           
  5001                           ;SIM800x.c: 322: SIM800xSDMPrint("AT\r");
  5002  001140  0EE5               	movlw	low STR_28
  5003  001142  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  5004  001144  0E7F               	movlw	high STR_28
  5005  001146  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  5006  001148  ECFA  F00D         	call	_SIM800xSDMPrint	;wreg free
  5007                           
  5008                           ;SIM800x.c: 323: Wait_ms(500);
  5009  00114C  0EF4               	movlw	244
  5010  00114E  6E0E               	movwf	Wait_ms@value^0,c
  5011  001150  0E01               	movlw	1
  5012  001152  6E0F               	movwf	(Wait_ms@value+1)^0,c
  5013  001154  0E00               	movlw	0
  5014  001156  6E10               	movwf	(Wait_ms@value+2)^0,c
  5015  001158  0E00               	movlw	0
  5016  00115A  6E11               	movwf	(Wait_ms@value+3)^0,c
  5017  00115C  EC25  F00D         	call	_Wait_ms	;wreg free
  5018                           
  5019                           ;SIM800x.c: 324: uint16_t tmp = SIM800xSDMRxAvailable();
  5020  001160  EC45  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  5021  001164  C013  F04F         	movff	?_SIM800xSDMRxAvailable,SIM800xInit@tmp
  5022  001168  C014  F050         	movff	?_SIM800xSDMRxAvailable+1,SIM800xInit@tmp+1
  5023                           
  5024                           ;SIM800x.c: 325: if(tmp > 5)
  5025  00116C  5050               	movf	(SIM800xInit@tmp+1)^0,w,c
  5026  00116E  E108               	bnz	l4946
  5027  001170  0E06               	movlw	6
  5028  001172  5C4F               	subwf	SIM800xInit@tmp^0,w,c
  5029  001174  B0D8               	btfsc	status,0,c
  5030  001176  D004               	goto	l4946
  5031  001178  D066               	goto	l4980
  5032  00117A                     l4944:
  5033  00117A  FFFF               	dw	65535	; assembler added errata NOP
  5034                           
  5035                           ;SIM800x.c: 328: {;SIM800x.c: 329: SIM800xSDMReadByte();
  5036  00117C  EC54  F00F         	call	_SIM800xSDMReadByte	;wreg free
  5037  001180                     l4946:
  5038  001180  FFFF               	dw	65535	; assembler added errata NOP
  5039  001182  EC45  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  5040  001186  0E06               	movlw	6
  5041  001188  1813               	xorwf	?_SIM800xSDMRxAvailable^0,w,c
  5042  00118A  1014               	iorwf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  5043  00118C  A4D8               	btfss	status,2,c
  5044  00118E  D7F5               	goto	l4944
  5045                           
  5046                           ;SIM800x.c: 330: };SIM800x.c: 333: if(SIM800xSDMPeek(2) == 'O')
  5047  001190  0E02               	movlw	2
  5048  001192  ECEB  F00F         	call	_SIM800xSDMPeek
  5049  001196  0A4F               	xorlw	79
  5050  001198  A4D8               	btfss	status,2,c
  5051  00119A  D055               	goto	l4980
  5052                           
  5053                           ;SIM800x.c: 334: {;SIM800x.c: 335: SIM800xSDMPrint("ATE0\r");
  5054  00119C  0ECA               	movlw	low STR_29
  5055  00119E  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  5056  0011A0  0E7F               	movlw	high STR_29
  5057  0011A2  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  5058  0011A4  ECFA  F00D         	call	_SIM800xSDMPrint	;wreg free
  5059                           
  5060                           ;SIM800x.c: 336: Wait_ms(500);
  5061  0011A8  0EF4               	movlw	244
  5062  0011AA  6E0E               	movwf	Wait_ms@value^0,c
  5063  0011AC  0E01               	movlw	1
  5064  0011AE  6E0F               	movwf	(Wait_ms@value+1)^0,c
  5065  0011B0  0E00               	movlw	0
  5066  0011B2  6E10               	movwf	(Wait_ms@value+2)^0,c
  5067  0011B4  0E00               	movlw	0
  5068  0011B6  6E11               	movwf	(Wait_ms@value+3)^0,c
  5069  0011B8  EC25  F00D         	call	_Wait_ms	;wreg free
  5070                           
  5071                           ;SIM800x.c: 338: char str[15];;SIM800x.c: 339: sprintf(str, "AT+IPR=%ld\r", br);
  5072  0011BC  0E40               	movlw	low SIM800xInit@str
  5073  0011BE  6E24               	movwf	sprintf@sp^0,c
  5074  0011C0  0E00               	movlw	high SIM800xInit@str
  5075  0011C2  6E25               	movwf	(sprintf@sp+1)^0,c
  5076  0011C4  0E7A               	movlw	low STR_30
  5077  0011C6  6E26               	movwf	sprintf@f^0,c
  5078  0011C8  0E7E               	movlw	high STR_30
  5079  0011CA  6E27               	movwf	(sprintf@f+1)^0,c
  5080  0011CC  C03C  F028         	movff	SIM800xInit@br,?_sprintf+4
  5081  0011D0  C03D  F029         	movff	SIM800xInit@br+1,?_sprintf+5
  5082  0011D4  C03E  F02A         	movff	SIM800xInit@br+2,?_sprintf+6
  5083  0011D8  C03F  F02B         	movff	SIM800xInit@br+3,?_sprintf+7
  5084  0011DC  ECCD  F002         	call	_sprintf	;wreg free
  5085                           
  5086                           ;SIM800x.c: 340: SIM800xSDMFlush();
  5087  0011E0  ECAE  F010         	call	_SIM800xSDMFlush	;wreg free
  5088                           
  5089                           ;SIM800x.c: 341: SIM800xSDMPrint(str);
  5090  0011E4  0E40               	movlw	low SIM800xInit@str
  5091  0011E6  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  5092  0011E8  0E00               	movlw	high SIM800xInit@str
  5093  0011EA  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  5094  0011EC  ECFA  F00D         	call	_SIM800xSDMPrint	;wreg free
  5095                           
  5096                           ;SIM800x.c: 342: Wait_ms(500);
  5097  0011F0  0EF4               	movlw	244
  5098  0011F2  6E0E               	movwf	Wait_ms@value^0,c
  5099  0011F4  0E01               	movlw	1
  5100  0011F6  6E0F               	movwf	(Wait_ms@value+1)^0,c
  5101  0011F8  0E00               	movlw	0
  5102  0011FA  6E10               	movwf	(Wait_ms@value+2)^0,c
  5103  0011FC  0E00               	movlw	0
  5104  0011FE  6E11               	movwf	(Wait_ms@value+3)^0,c
  5105  001200  EC25  F00D         	call	_Wait_ms	;wreg free
  5106                           
  5107                           ;SIM800x.c: 343: char c = SIM800xSDMPeek(2);
  5108  001204  0E02               	movlw	2
  5109  001206  ECEB  F00F         	call	_SIM800xSDMPeek
  5110  00120A  6E51               	movwf	SIM800xInit@c^0,c
  5111                           
  5112                           ;SIM800x.c: 344: if(c == 'O')
  5113  00120C  0E4F               	movlw	79
  5114  00120E  1851               	xorwf	SIM800xInit@c^0,w,c
  5115  001210  A4D8               	btfss	status,2,c
  5116  001212  D012               	goto	l4974
  5117                           
  5118                           ;SIM800x.c: 345: {;SIM800x.c: 346: SIM800xSDMPrint("AT&W\r");
  5119  001214  0ED0               	movlw	low STR_31
  5120  001216  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  5121  001218  0E7F               	movlw	high STR_31
  5122  00121A  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  5123  00121C  ECFA  F00D         	call	_SIM800xSDMPrint	;wreg free
  5124                           
  5125                           ;SIM800x.c: 347: Wait_ms(100);
  5126  001220  0E64               	movlw	100
  5127  001222  6E0E               	movwf	Wait_ms@value^0,c
  5128  001224  0E00               	movlw	0
  5129  001226  6E0F               	movwf	(Wait_ms@value+1)^0,c
  5130  001228  0E00               	movlw	0
  5131  00122A  6E10               	movwf	(Wait_ms@value+2)^0,c
  5132  00122C  0E00               	movlw	0
  5133  00122E  6E11               	movwf	(Wait_ms@value+3)^0,c
  5134  001230  EC25  F00D         	call	_Wait_ms	;wreg free
  5135                           
  5136                           ;SIM800x.c: 348: return SIM800X_OK;
  5137  001234  0E00               	movlw	0
  5138  001236  D009               	goto	l410
  5139  001238                     l4974:
  5140  001238  FFFF               	dw	65535	; assembler added errata NOP
  5141                           
  5142                           ;SIM800x.c: 349: };SIM800x.c: 351: if(c == 'E')
  5143  00123A  0E45               	movlw	69
  5144  00123C  1851               	xorwf	SIM800xInit@c^0,w,c
  5145  00123E  A4D8               	btfss	status,2,c
  5146  001240  D002               	goto	l4980
  5147                           
  5148                           ;SIM800x.c: 352: return SIM800X_BR_ERROR;
  5149  001242  0E04               	movlw	4
  5150  001244  D002               	goto	l410
  5151  001246                     l4980:
  5152  001246  FFFF               	dw	65535	; assembler added errata NOP
  5153                           
  5154                           ;SIM800x.c: 354: return SIM800X_TIME_OUT;
  5155  001248  0E05               	movlw	5
  5156  00124A                     l410:
  5157  00124A  FFFF               	dw	65535	; assembler added errata NOP
  5158  00124C  0012               	return		;funcret
  5159  00124E  FFFF               	dw	65535	; errata NOP
  5160  001250                     __end_of_SIM800xInit:
  5161                           	callstack 0
  5162                           
  5163 ;; *************** function _sprintf *****************
  5164 ;; Defined at:
  5165 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;  sp              2   35[COMRAM] PTR unsigned char 
  5168 ;;		 -> SIM800xHTTPRead@str(30), SIM800xHTTPAction@str(30), SIM800xHTTPInputData@str(30), SIM800xHTTPSetTimeout@str(30),
      + 
  5169 ;;		 -> SIM800xHTTPSetBreakEnd@str(30), SIM800xHTTPSetBreak@str(30), SIM800xHTTPSetRedir@str(25), SIM800xHTTPSetPort@str
      +(30), 
  5170 ;;		 -> SIM800xGPRSGetAddress@str(40), SIM800xGPRSSetDataMode@str(20), SIM800xGPRSSetQoSRequest@str(40), SIM800xGPRSSetQ
      +oSMin@str(40), 
  5171 ;;		 -> SIM800xIPGetParameters@str(30), SIM800xIPSetRate@str(8), SIM800xSetBaudRate@str(15), SIM800xInit@str(15), 
  5172 ;;		 -> SystemTask@msg(20), 
  5173 ;;  f               2   37[COMRAM] PTR const unsigned char 
  5174 ;;		 -> STR_100(21), STR_99(18), STR_98(21), STR_95(26), 
  5175 ;;		 -> STR_94(28), STR_93(25), STR_92(24), STR_91(26), 
  5176 ;;		 -> STR_71(15), STR_70(20), STR_66(29), STR_65(29), 
  5177 ;;		 -> STR_59(15), STR_53(4), STR_33(12), STR_30(12), 
  5178 ;;		 -> STR_24(27), STR_23(24), 
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;  val             4   51[COMRAM] unsigned long 
  5181 ;;  tmpval          4    0        struct .
  5182 ;;  cp              3    0        PTR const unsigned char 
  5183 ;;  ap              2   56[COMRAM] PTR void [1]
  5184 ;;		 -> ?_sprintf(2), 
  5185 ;;  prec            2   49[COMRAM] int 
  5186 ;;  len             2    0        unsigned int 
  5187 ;;  c               1   58[COMRAM] unsigned char 
  5188 ;;  flag            1   55[COMRAM] unsigned char 
  5189 ;; Return value:  Size  Location     Type
  5190 ;;                  2   35[COMRAM] int 
  5191 ;; Registers used:
  5192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5193 ;; Tracked objects:
  5194 ;;		On entry : 0/0
  5195 ;;		On exit  : 0/0
  5196 ;;		Unchanged: 0/0
  5197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5198 ;;      Params:        12       0       0       0       0       0       0
  5199 ;;      Locals:        10       0       0       0       0       0       0
  5200 ;;      Temps:          2       0       0       0       0       0       0
  5201 ;;      Totals:        24       0       0       0       0       0       0
  5202 ;;Total ram usage:       24 bytes
  5203 ;; Hardware stack levels used: 1
  5204 ;; Hardware stack levels required when called: 4
  5205 ;; This function calls:
  5206 ;;		___lldiv
  5207 ;;		___llmod
  5208 ;; This function is called by:
  5209 ;;		_SystemTask
  5210 ;;		_SIM800xInit
  5211 ;;		_SIM800xHTTPInputData
  5212 ;;		_SIM800xHTTPAction
  5213 ;;		_SIM800xHTTPRead
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           	psect	text14
  5218  00059A                     __ptext14:
  5219                           	callstack 0
  5220  00059A                     _sprintf:
  5221                           	callstack 0
  5222  00059A  FFFF               	dw	65535	; assembler added errata NOP
  5223                           
  5224                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 517: int prec;;doprnt.c: 52
      +                          5: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;doprnt.c:
      +                           542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long val;;doprnt.c:
      +                           546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_start();
  5225                           
  5226                           ;incstack = 0
  5227  00059C  0E28               	movlw	low (?_sprintf+4)
  5228  00059E  6E39               	movwf	sprintf@ap^0,c
  5229  0005A0  0E00               	movlw	high (?_sprintf+4)
  5230  0005A2  6E3A               	movwf	(sprintf@ap+1)^0,c
  5231                           
  5232                           ;doprnt.c: 553: while((c = *f++)) {
  5233  0005A4  D114               	goto	u3860
  5234  0005A6                     l4636:
  5235  0005A6  FFFF               	dw	65535	; assembler added errata NOP
  5236                           
  5237                           ;doprnt.c: 555: if(c != '%')
  5238  0005A8  0E25               	movlw	37
  5239  0005AA  183B               	xorwf	sprintf@c^0,w,c
  5240  0005AC  B4D8               	btfsc	status,2,c
  5241  0005AE  D009               	goto	l4642
  5242                           
  5243                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  5244  0005B0  C024  FFD9         	movff	sprintf@sp,fsr2l
  5245  0005B4  C025  FFDA         	movff	sprintf@sp+1,fsr2h
  5246  0005B8  C03B  FFDF         	movff	sprintf@c,indf2
  5247  0005BC  4A24               	infsnz	sprintf@sp^0,f,c
  5248  0005BE  2A25               	incf	(sprintf@sp+1)^0,f,c
  5249                           
  5250                           ;doprnt.c: 559: continue;
  5251  0005C0  D106               	goto	u3860
  5252  0005C2                     l4642:
  5253  0005C2  FFFF               	dw	65535	; assembler added errata NOP
  5254                           
  5255                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  5256  0005C4  0E00               	movlw	0
  5257  0005C6  6E38               	movwf	sprintf@flag^0,c
  5258  0005C8  D006               	goto	l4650
  5259  0005CA                     l4644:
  5260  0005CA  FFFF               	dw	65535	; assembler added errata NOP
  5261                           
  5262                           ;doprnt.c: 669: flag |= 0x10;
  5263  0005CC  8838               	bsf	sprintf@flag^0,4,c
  5264                           
  5265                           ;doprnt.c: 670: goto loop;
  5266  0005CE  D003               	goto	l4650
  5267  0005D0                     l4646:
  5268  0005D0  FFFF               	dw	65535	; assembler added errata NOP
  5269                           
  5270                           ;doprnt.c: 844: flag |= 0x40;
  5271  0005D2  8C38               	bsf	sprintf@flag^0,6,c
  5272                           
  5273                           ;doprnt.c: 845: break;
  5274  0005D4  D01C               	goto	l1220
  5275  0005D6                     l4650:
  5276  0005D6  FFFF               	dw	65535	; assembler added errata NOP
  5277  0005D8  C026  FFF6         	movff	sprintf@f,tblptrl
  5278  0005DC  C027  FFF7         	movff	sprintf@f+1,tblptrh
  5279  0005E0  4A26               	infsnz	sprintf@f^0,f,c
  5280  0005E2  2A27               	incf	(sprintf@f+1)^0,f,c
  5281  0005E4                     	if	0	;tblptru may be non-zero
  5282  0005E4                     	endif
  5283  0005E4                     	if	0	;tblptru may be non-zero
  5284  0005E4                     	endif
  5285  0005E4  0008               	tblrd		*
  5286  0005E6  FFFF               	dw	65535	; errata NOP
  5287  0005E8  CFF5 F03B          	movff	tablat,sprintf@c
  5288  0005EC  503B               	movf	sprintf@c^0,w,c
  5289                           
  5290                           ; Switch size 1, requested type "simple"
  5291                           ; Number of cases is 5, Range of values is 0 to 117
  5292                           ; switch strategies available:
  5293                           ; Name         Instructions Cycles
  5294                           ; simple_byte           16     9 (average)
  5295                           ;	Chosen strategy is simple_byte
  5296  0005EE  0A00               	xorlw	0	; case 0
  5297  0005F0  B4D8               	btfsc	status,2,c
  5298  0005F2  D0FB               	goto	u3870
  5299  0005F4  0A64               	xorlw	100	; case 100
  5300  0005F6  B4D8               	btfsc	status,2,c
  5301  0005F8  D00A               	goto	l1220
  5302  0005FA  0A0D               	xorlw	13	; case 105
  5303  0005FC  B4D8               	btfsc	status,2,c
  5304  0005FE  D007               	goto	l1220
  5305  000600  0A05               	xorlw	5	; case 108
  5306  000602  B4D8               	btfsc	status,2,c
  5307  000604  D7E2               	goto	l4644
  5308  000606  0A19               	xorlw	25	; case 117
  5309  000608  B4D8               	btfsc	status,2,c
  5310  00060A  D7E2               	goto	l4646
  5311  00060C  D0E0               	goto	u3860
  5312  00060E                     l1220:
  5313  00060E  FFFF               	dw	65535	; assembler added errata NOP
  5314                           
  5315                           ;doprnt.c: 1277: if((flag & 0x40) == 0x00)
  5316  000610  BC38               	btfsc	sprintf@flag^0,6,c
  5317  000612  D030               	goto	l1223
  5318                           
  5319                           ;doprnt.c: 1279: {;doprnt.c: 1281: if(flag & 0x10)
  5320  000614  A838               	btfss	sprintf@flag^0,4,c
  5321  000616  D00E               	goto	l4658
  5322                           
  5323                           ;doprnt.c: 1282: val = (unsigned long)(*(long *)__va_arg((*(long **)ap), (long)0));
  5324  000618  C039  FFD9         	movff	sprintf@ap,fsr2l
  5325  00061C  C03A  FFDA         	movff	sprintf@ap+1,fsr2h
  5326  000620  CFDE F034          	movff	postinc2,sprintf@val
  5327  000624  CFDE F035          	movff	postinc2,sprintf@val+1
  5328  000628  CFDE F036          	movff	postinc2,sprintf@val+2
  5329  00062C  CFDE F037          	movff	postinc2,sprintf@val+3
  5330  000630  0E04               	movlw	4
  5331  000632  D00F               	goto	L1
  5332  000634                     l4658:
  5333  000634  FFFF               	dw	65535	; assembler added errata NOP
  5334                           
  5335                           ;doprnt.c: 1283: else;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)a
      +                          p), (int)0));
  5336  000636  C039  FFD9         	movff	sprintf@ap,fsr2l
  5337  00063A  C03A  FFDA         	movff	sprintf@ap+1,fsr2h
  5338  00063E  CFDE F034          	movff	postinc2,sprintf@val
  5339  000642  CFDD F035          	movff	postdec2,sprintf@val+1
  5340  000646  0E00               	movlw	0
  5341  000648  BE35               	btfsc	(sprintf@val+1)^0,7,c
  5342  00064A  0EFF               	movlw	-1
  5343  00064C  6E36               	movwf	(sprintf@val+2)^0,c
  5344  00064E  6E37               	movwf	(sprintf@val+3)^0,c
  5345  000650  0E02               	movlw	2
  5346  000652                     L1:
  5347  000652  FFFF               	dw	65535	; assembler added errata NOP
  5348  000654  2639               	addwf	sprintf@ap^0,f,c
  5349  000656  0E00               	movlw	0
  5350  000658  223A               	addwfc	(sprintf@ap+1)^0,f,c
  5351                           
  5352                           ;doprnt.c: 1287: if((long)val < 0) {
  5353  00065A  AE37               	btfss	(sprintf@val+3)^0,7,c
  5354  00065C  D030               	goto	l4676
  5355                           
  5356                           ;doprnt.c: 1288: flag |= 0x03;
  5357  00065E  0E03               	movlw	3
  5358  000660  1238               	iorwf	sprintf@flag^0,f,c
  5359                           
  5360                           ;doprnt.c: 1289: val = -val;
  5361  000662  1E37               	comf	(sprintf@val+3)^0,f,c
  5362  000664  1E36               	comf	(sprintf@val+2)^0,f,c
  5363  000666  1E35               	comf	(sprintf@val+1)^0,f,c
  5364  000668  6C34               	negf	sprintf@val^0,c
  5365  00066A  0E00               	movlw	0
  5366  00066C  2235               	addwfc	(sprintf@val+1)^0,f,c
  5367  00066E  2236               	addwfc	(sprintf@val+2)^0,f,c
  5368  000670  2237               	addwfc	(sprintf@val+3)^0,f,c
  5369  000672  D025               	goto	l4676
  5370  000674                     l1223:
  5371  000674  FFFF               	dw	65535	; assembler added errata NOP
  5372                           
  5373                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
  5374  000676  A838               	btfss	sprintf@flag^0,4,c
  5375  000678  D00E               	goto	l4672
  5376                           
  5377                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  5378  00067A  C039  FFD9         	movff	sprintf@ap,fsr2l
  5379  00067E  C03A  FFDA         	movff	sprintf@ap+1,fsr2h
  5380  000682  CFDE F034          	movff	postinc2,sprintf@val
  5381  000686  CFDE F035          	movff	postinc2,sprintf@val+1
  5382  00068A  CFDE F036          	movff	postinc2,sprintf@val+2
  5383  00068E  CFDE F037          	movff	postinc2,sprintf@val+3
  5384  000692  0E04               	movlw	4
  5385  000694  D010               	goto	L2
  5386  000696                     l4672:
  5387  000696  FFFF               	dw	65535	; assembler added errata NOP
  5388                           
  5389                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  5390  000698  C039  FFD9         	movff	sprintf@ap,fsr2l
  5391  00069C  C03A  FFDA         	movff	sprintf@ap+1,fsr2h
  5392  0006A0  CFDE F030          	movff	postinc2,??_sprintf
  5393  0006A4  CFDD F031          	movff	postdec2,??_sprintf+1
  5394  0006A8  C030  F034         	movff	??_sprintf,sprintf@val
  5395  0006AC  C031  F035         	movff	??_sprintf+1,sprintf@val+1
  5396  0006B0  6A36               	clrf	(sprintf@val+2)^0,c
  5397  0006B2  6A37               	clrf	(sprintf@val+3)^0,c
  5398  0006B4  0E02               	movlw	2
  5399  0006B6                     L2:
  5400  0006B6  FFFF               	dw	65535	; assembler added errata NOP
  5401  0006B8  2639               	addwf	sprintf@ap^0,f,c
  5402  0006BA  0E00               	movlw	0
  5403  0006BC  223A               	addwfc	(sprintf@ap+1)^0,f,c
  5404  0006BE                     l4676:
  5405  0006BE  FFFF               	dw	65535	; assembler added errata NOP
  5406                           
  5407                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  5408  0006C0  0E01               	movlw	1
  5409  0006C2  6E3B               	movwf	sprintf@c^0,c
  5410  0006C4                     l4682:
  5411  0006C4  FFFF               	dw	65535	; assembler added errata NOP
  5412                           
  5413                           ;doprnt.c: 1332: if(val < dpowers[c])
  5414  0006C6  503B               	movf	sprintf@c^0,w,c
  5415  0006C8  0D04               	mullw	4
  5416  0006CA  0E8F               	movlw	low _dpowers
  5417  0006CC  24F3               	addwf	243,w,c
  5418  0006CE  6EF6               	movwf	tblptrl,c
  5419  0006D0  0E79               	movlw	high _dpowers
  5420  0006D2  20F4               	addwfc	244,w,c
  5421  0006D4  6EF7               	movwf	tblptrh,c
  5422  0006D6                     	if	0	;There are less than 3 active tblptr bytes
  5423  0006D6                     	endif
  5424  0006D6  0009               	tblrd		*+
  5425  0006D8  FFFF               	dw	65535	; errata NOP
  5426  0006DA  50F5               	movf	tablat,w,c
  5427  0006DC  5C34               	subwf	sprintf@val^0,w,c
  5428  0006DE  0009               	tblrd		*+
  5429  0006E0  FFFF               	dw	65535	; errata NOP
  5430  0006E2  50F5               	movf	tablat,w,c
  5431  0006E4  5835               	subwfb	(sprintf@val+1)^0,w,c
  5432  0006E6  0009               	tblrd		*+
  5433  0006E8  FFFF               	dw	65535	; errata NOP
  5434  0006EA  50F5               	movf	tablat,w,c
  5435  0006EC  5836               	subwfb	(sprintf@val+2)^0,w,c
  5436  0006EE  0009               	tblrd		*+
  5437  0006F0  FFFF               	dw	65535	; errata NOP
  5438  0006F2  50F5               	movf	tablat,w,c
  5439  0006F4  5837               	subwfb	(sprintf@val+3)^0,w,c
  5440  0006F6  A0D8               	btfss	status,0,c
  5441  0006F8  D005               	goto	u3840
  5442  0006FA  2A3B               	incf	sprintf@c^0,f,c
  5443  0006FC  0E0A               	movlw	10
  5444  0006FE  183B               	xorwf	sprintf@c^0,w,c
  5445  000700  A4D8               	btfss	status,2,c
  5446  000702  D7E0               	goto	l4682
  5447  000704                     u3840:
  5448  000704  FFFF               	dw	65535	; assembler added errata NOP
  5449                           
  5450                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  5451  000706  C038  F030         	movff	sprintf@flag,??_sprintf
  5452  00070A  0E03               	movlw	3
  5453  00070C  1630               	andwf	??_sprintf^0,f,c
  5454  00070E  B4D8               	btfsc	status,2,c
  5455  000710  D008               	goto	l4696
  5456                           
  5457                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  5458  000712  C024  FFD9         	movff	sprintf@sp,fsr2l
  5459  000716  C025  FFDA         	movff	sprintf@sp+1,fsr2h
  5460  00071A  0E2D               	movlw	45
  5461  00071C  6EDF               	movwf	indf2,c
  5462  00071E  4A24               	infsnz	sprintf@sp^0,f,c
  5463  000720  2A25               	incf	(sprintf@sp+1)^0,f,c
  5464  000722                     l4696:
  5465  000722  FFFF               	dw	65535	; assembler added errata NOP
  5466                           
  5467                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  5468  000724  C03B  F032         	movff	sprintf@c,sprintf@prec
  5469  000728  6A33               	clrf	(sprintf@prec+1)^0,c
  5470                           
  5471                           ;doprnt.c: 1500: while(prec--) {
  5472  00072A  D048               	goto	l4704
  5473  00072C                     l4698:
  5474  00072C  FFFF               	dw	65535	; assembler added errata NOP
  5475                           
  5476                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  5477  00072E  C032  F030         	movff	sprintf@prec,??_sprintf
  5478  000732  C033  F031         	movff	sprintf@prec+1,??_sprintf+1
  5479  000736  90D8               	bcf	status,0,c
  5480  000738  3630               	rlcf	??_sprintf^0,f,c
  5481  00073A  3631               	rlcf	(??_sprintf+1)^0,f,c
  5482  00073C  90D8               	bcf	status,0,c
  5483  00073E  3630               	rlcf	??_sprintf^0,f,c
  5484  000740  3631               	rlcf	(??_sprintf+1)^0,f,c
  5485  000742  0E8F               	movlw	low _dpowers
  5486  000744  2430               	addwf	??_sprintf^0,w,c
  5487  000746  6EF6               	movwf	tblptrl,c
  5488  000748  0E79               	movlw	high _dpowers
  5489  00074A  2031               	addwfc	(??_sprintf+1)^0,w,c
  5490  00074C  6EF7               	movwf	tblptrh,c
  5491  00074E                     	if	0	;There are less than 3 active tblptr bytes
  5492  00074E                     	endif
  5493  00074E  0009               	tblrd		*+
  5494  000750  FFFF               	dw	65535	; errata NOP
  5495  000752  CFF5 F012          	movff	tablat,___lldiv@divisor
  5496  000756  0009               	tblrd		*+
  5497  000758  FFFF               	dw	65535	; errata NOP
  5498  00075A  CFF5 F013          	movff	tablat,___lldiv@divisor+1
  5499  00075E  0009               	tblrd		*+
  5500  000760  FFFF               	dw	65535	; errata NOP
  5501  000762  CFF5 F014          	movff	tablat,___lldiv@divisor+2
  5502  000766  000A               	tblrd		*-
  5503  000768  FFFF               	dw	65535	; errata NOP
  5504  00076A  CFF5 F015          	movff	tablat,___lldiv@divisor+3
  5505  00076E  C034  F00E         	movff	sprintf@val,___lldiv@dividend
  5506  000772  C035  F00F         	movff	sprintf@val+1,___lldiv@dividend+1
  5507  000776  C036  F010         	movff	sprintf@val+2,___lldiv@dividend+2
  5508  00077A  C037  F011         	movff	sprintf@val+3,___lldiv@dividend+3
  5509  00077E  EC61  F00B         	call	___lldiv	;wreg free
  5510  000782  C00E  F01B         	movff	?___lldiv,___llmod@dividend
  5511  000786  C00F  F01C         	movff	?___lldiv+1,___llmod@dividend+1
  5512  00078A  C010  F01D         	movff	?___lldiv+2,___llmod@dividend+2
  5513  00078E  C011  F01E         	movff	?___lldiv+3,___llmod@dividend+3
  5514  000792  0E0A               	movlw	10
  5515  000794  6E1F               	movwf	___llmod@divisor^0,c
  5516  000796  0E00               	movlw	0
  5517  000798  6E20               	movwf	(___llmod@divisor+1)^0,c
  5518  00079A  0E00               	movlw	0
  5519  00079C  6E21               	movwf	(___llmod@divisor+2)^0,c
  5520  00079E  0E00               	movlw	0
  5521  0007A0  6E22               	movwf	(___llmod@divisor+3)^0,c
  5522  0007A2  ECB1  F00C         	call	___llmod	;wreg free
  5523  0007A6  501B               	movf	?___llmod^0,w,c
  5524  0007A8  0F30               	addlw	48
  5525  0007AA  6E3B               	movwf	sprintf@c^0,c
  5526                           
  5527                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  5528  0007AC  C024  FFD9         	movff	sprintf@sp,fsr2l
  5529  0007B0  C025  FFDA         	movff	sprintf@sp+1,fsr2h
  5530  0007B4  C03B  FFDF         	movff	sprintf@c,indf2
  5531  0007B8  4A24               	infsnz	sprintf@sp^0,f,c
  5532  0007BA  2A25               	incf	(sprintf@sp+1)^0,f,c
  5533  0007BC                     l4704:
  5534  0007BC  FFFF               	dw	65535	; assembler added errata NOP
  5535  0007BE  0632               	decf	sprintf@prec^0,f,c
  5536  0007C0  A0D8               	btfss	status,0,c
  5537  0007C2  0633               	decf	(sprintf@prec+1)^0,f,c
  5538  0007C4  2832               	incf	sprintf@prec^0,w,c
  5539  0007C6  E1B2               	bnz	l4698
  5540  0007C8  2833               	incf	(sprintf@prec+1)^0,w,c
  5541  0007CA  A4D8               	btfss	status,2,c
  5542  0007CC  D7AF               	goto	l4698
  5543  0007CE                     u3860:
  5544  0007CE  FFFF               	dw	65535	; assembler added errata NOP
  5545  0007D0  C026  FFF6         	movff	sprintf@f,tblptrl
  5546  0007D4  C027  FFF7         	movff	sprintf@f+1,tblptrh
  5547  0007D8  4A26               	infsnz	sprintf@f^0,f,c
  5548  0007DA  2A27               	incf	(sprintf@f+1)^0,f,c
  5549  0007DC                     	if	0	;tblptru may be non-zero
  5550  0007DC                     	endif
  5551  0007DC                     	if	0	;tblptru may be non-zero
  5552  0007DC                     	endif
  5553  0007DC  0008               	tblrd		*
  5554  0007DE  FFFF               	dw	65535	; errata NOP
  5555  0007E0  CFF5 F03B          	movff	tablat,sprintf@c
  5556  0007E4  503B               	movf	sprintf@c^0,w,c
  5557  0007E6  A4D8               	btfss	status,2,c
  5558  0007E8  D6DE               	goto	l4636
  5559  0007EA                     u3870:
  5560  0007EA  FFFF               	dw	65535	; assembler added errata NOP
  5561                           
  5562                           ;doprnt.c: 1564: *sp = 0;
  5563  0007EC  C024  FFD9         	movff	sprintf@sp,fsr2l
  5564  0007F0  C025  FFDA         	movff	sprintf@sp+1,fsr2h
  5565  0007F4  0E00               	movlw	0
  5566  0007F6  6EDF               	movwf	indf2,c
  5567  0007F8  0012               	return		;funcret
  5568  0007FA  FFFF               	dw	65535	; errata NOP
  5569  0007FC                     __end_of_sprintf:
  5570                           	callstack 0
  5571                           
  5572 ;; *************** function ___llmod *****************
  5573 ;; Defined at:
  5574 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\llmod.c"
  5575 ;; Parameters:    Size  Location     Type
  5576 ;;  dividend        4   26[COMRAM] unsigned long 
  5577 ;;  divisor         4   30[COMRAM] unsigned long 
  5578 ;; Auto vars:     Size  Location     Type
  5579 ;;  counter         1   34[COMRAM] unsigned char 
  5580 ;; Return value:  Size  Location     Type
  5581 ;;                  4   26[COMRAM] unsigned long 
  5582 ;; Registers used:
  5583 ;;		wreg, status,2, status,0
  5584 ;; Tracked objects:
  5585 ;;		On entry : 0/0
  5586 ;;		On exit  : 0/0
  5587 ;;		Unchanged: 0/0
  5588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5589 ;;      Params:         8       0       0       0       0       0       0
  5590 ;;      Locals:         1       0       0       0       0       0       0
  5591 ;;      Temps:          0       0       0       0       0       0       0
  5592 ;;      Totals:         9       0       0       0       0       0       0
  5593 ;;Total ram usage:        9 bytes
  5594 ;; Hardware stack levels used: 1
  5595 ;; Hardware stack levels required when called: 3
  5596 ;; This function calls:
  5597 ;;		Nothing
  5598 ;; This function is called by:
  5599 ;;		_sprintf
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602                           
  5603                           	psect	text15
  5604  001962                     __ptext15:
  5605                           	callstack 0
  5606  001962                     ___llmod:
  5607                           	callstack 0
  5608  001962  FFFF               	dw	65535	; assembler added errata NOP
  5609                           
  5610                           ;incstack = 0
  5611  001964  501F               	movf	___llmod@divisor^0,w,c
  5612  001966  1020               	iorwf	(___llmod@divisor+1)^0,w,c
  5613  001968  1021               	iorwf	(___llmod@divisor+2)^0,w,c
  5614  00196A  1022               	iorwf	(___llmod@divisor+3)^0,w,c
  5615  00196C  B4D8               	btfsc	status,2,c
  5616  00196E  D028               	goto	l1649
  5617  001970  0E01               	movlw	1
  5618  001972  6E23               	movwf	___llmod@counter^0,c
  5619  001974  D007               	goto	l4624
  5620  001976                     l4622:
  5621  001976  FFFF               	dw	65535	; assembler added errata NOP
  5622  001978  90D8               	bcf	status,0,c
  5623  00197A  361F               	rlcf	___llmod@divisor^0,f,c
  5624  00197C  3620               	rlcf	(___llmod@divisor+1)^0,f,c
  5625  00197E  3621               	rlcf	(___llmod@divisor+2)^0,f,c
  5626  001980  3622               	rlcf	(___llmod@divisor+3)^0,f,c
  5627  001982  2A23               	incf	___llmod@counter^0,f,c
  5628  001984                     l4624:
  5629  001984  FFFF               	dw	65535	; assembler added errata NOP
  5630  001986  AE22               	btfss	(___llmod@divisor+3)^0,7,c
  5631  001988  D7F6               	goto	l4622
  5632  00198A                     u3760:
  5633  00198A  FFFF               	dw	65535	; assembler added errata NOP
  5634  00198C  501F               	movf	___llmod@divisor^0,w,c
  5635  00198E  5C1B               	subwf	___llmod@dividend^0,w,c
  5636  001990  5020               	movf	(___llmod@divisor+1)^0,w,c
  5637  001992  581C               	subwfb	(___llmod@dividend+1)^0,w,c
  5638  001994  5021               	movf	(___llmod@divisor+2)^0,w,c
  5639  001996  581D               	subwfb	(___llmod@dividend+2)^0,w,c
  5640  001998  5022               	movf	(___llmod@divisor+3)^0,w,c
  5641  00199A  581E               	subwfb	(___llmod@dividend+3)^0,w,c
  5642  00199C  A0D8               	btfss	status,0,c
  5643  00199E  D008               	goto	l4630
  5644  0019A0  501F               	movf	___llmod@divisor^0,w,c
  5645  0019A2  5E1B               	subwf	___llmod@dividend^0,f,c
  5646  0019A4  5020               	movf	(___llmod@divisor+1)^0,w,c
  5647  0019A6  5A1C               	subwfb	(___llmod@dividend+1)^0,f,c
  5648  0019A8  5021               	movf	(___llmod@divisor+2)^0,w,c
  5649  0019AA  5A1D               	subwfb	(___llmod@dividend+2)^0,f,c
  5650  0019AC  5022               	movf	(___llmod@divisor+3)^0,w,c
  5651  0019AE  5A1E               	subwfb	(___llmod@dividend+3)^0,f,c
  5652  0019B0                     l4630:
  5653  0019B0  FFFF               	dw	65535	; assembler added errata NOP
  5654  0019B2  90D8               	bcf	status,0,c
  5655  0019B4  3222               	rrcf	(___llmod@divisor+3)^0,f,c
  5656  0019B6  3221               	rrcf	(___llmod@divisor+2)^0,f,c
  5657  0019B8  3220               	rrcf	(___llmod@divisor+1)^0,f,c
  5658  0019BA  321F               	rrcf	___llmod@divisor^0,f,c
  5659  0019BC  2E23               	decfsz	___llmod@counter^0,f,c
  5660  0019BE  D7E5               	goto	u3760
  5661  0019C0                     l1649:
  5662  0019C0  FFFF               	dw	65535	; assembler added errata NOP
  5663  0019C2  C01B  F01B         	movff	___llmod@dividend,?___llmod
  5664  0019C6  C01C  F01C         	movff	___llmod@dividend+1,?___llmod+1
  5665  0019CA  C01D  F01D         	movff	___llmod@dividend+2,?___llmod+2
  5666  0019CE  C01E  F01E         	movff	___llmod@dividend+3,?___llmod+3
  5667  0019D2  0012               	return		;funcret
  5668  0019D4  FFFF               	dw	65535	; errata NOP
  5669  0019D6                     __end_of___llmod:
  5670                           	callstack 0
  5671                           
  5672 ;; *************** function _Wait_ms *****************
  5673 ;; Defined at:
  5674 ;;		line 103 in file "Src/SystemTime.c"
  5675 ;; Parameters:    Size  Location     Type
  5676 ;;  value           4   13[COMRAM] unsigned long 
  5677 ;; Auto vars:     Size  Location     Type
  5678 ;;  x               4   21[COMRAM] unsigned long 
  5679 ;; Return value:  Size  Location     Type
  5680 ;;                  1    wreg      void 
  5681 ;; Registers used:
  5682 ;;		wreg, status,2, status,0
  5683 ;; Tracked objects:
  5684 ;;		On entry : 0/0
  5685 ;;		On exit  : 0/0
  5686 ;;		Unchanged: 0/0
  5687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5688 ;;      Params:         4       0       0       0       0       0       0
  5689 ;;      Locals:         4       0       0       0       0       0       0
  5690 ;;      Temps:          4       0       0       0       0       0       0
  5691 ;;      Totals:        12       0       0       0       0       0       0
  5692 ;;Total ram usage:       12 bytes
  5693 ;; Hardware stack levels used: 1
  5694 ;; Hardware stack levels required when called: 3
  5695 ;; This function calls:
  5696 ;;		Nothing
  5697 ;; This function is called by:
  5698 ;;		_SIM800xInit
  5699 ;; This function uses a non-reentrant model
  5700 ;;
  5701                           
  5702                           	psect	text16
  5703  001A4A                     __ptext16:
  5704                           	callstack 0
  5705  001A4A                     _Wait_ms:
  5706                           	callstack 0
  5707  001A4A  FFFF               	dw	65535	; assembler added errata NOP
  5708                           
  5709                           ;SystemTime.c: 106: uint32_t x = IncVar;
  5710                           
  5711                           ;incstack = 0
  5712  001A4C  C05D  F016         	movff	_IncVar,Wait_ms@x	;volatile
  5713  001A50  C05E  F017         	movff	_IncVar+1,Wait_ms@x+1	;volatile
  5714  001A54  C05F  F018         	movff	_IncVar+2,Wait_ms@x+2	;volatile
  5715  001A58  C060  F019         	movff	_IncVar+3,Wait_ms@x+3	;volatile
  5716                           
  5717                           ;SystemTime.c: 108: while((value != 0)){
  5718  001A5C  D025               	goto	u2210
  5719  001A5E                     l3544:
  5720  001A5E  FFFF               	dw	65535	; assembler added errata NOP
  5721                           
  5722                           ;SystemTime.c: 111: --value;
  5723  001A60  060E               	decf	Wait_ms@value^0,f,c
  5724  001A62  0E00               	movlw	0
  5725  001A64  5A0F               	subwfb	(Wait_ms@value+1)^0,f,c
  5726  001A66  5A10               	subwfb	(Wait_ms@value+2)^0,f,c
  5727  001A68  5A11               	subwfb	(Wait_ms@value+3)^0,f,c
  5728                           
  5729                           ;SystemTime.c: 112: x+=1;
  5730  001A6A  0E01               	movlw	1
  5731  001A6C  2616               	addwf	Wait_ms@x^0,f,c
  5732  001A6E  0E00               	movlw	0
  5733  001A70  2217               	addwfc	(Wait_ms@x+1)^0,f,c
  5734  001A72  2218               	addwfc	(Wait_ms@x+2)^0,f,c
  5735  001A74  2219               	addwfc	(Wait_ms@x+3)^0,f,c
  5736  001A76                     l290:
  5737  001A76  FFFF               	dw	65535	; assembler added errata NOP
  5738  001A78  500E               	movf	Wait_ms@value^0,w,c
  5739  001A7A  100F               	iorwf	(Wait_ms@value+1)^0,w,c
  5740  001A7C  1010               	iorwf	(Wait_ms@value+2)^0,w,c
  5741  001A7E  1011               	iorwf	(Wait_ms@value+3)^0,w,c
  5742  001A80  B4D8               	btfsc	status,2,c
  5743  001A82  D012               	goto	u2210
  5744  001A84  5016               	movf	Wait_ms@x^0,w,c
  5745  001A86  5C5D               	subwf	_IncVar^0,w,c	;volatile
  5746  001A88  6E12               	movwf	??_Wait_ms^0,c
  5747  001A8A  5017               	movf	(Wait_ms@x+1)^0,w,c
  5748  001A8C  585E               	subwfb	(_IncVar+1)^0,w,c	;volatile
  5749  001A8E  6E13               	movwf	(??_Wait_ms+1)^0,c
  5750  001A90  5018               	movf	(Wait_ms@x+2)^0,w,c
  5751  001A92  585F               	subwfb	(_IncVar+2)^0,w,c	;volatile
  5752  001A94  6E14               	movwf	(??_Wait_ms+2)^0,c
  5753  001A96  5019               	movf	(Wait_ms@x+3)^0,w,c
  5754  001A98  5860               	subwfb	(_IncVar+3)^0,w,c	;volatile
  5755  001A9A  6E15               	movwf	(??_Wait_ms+3)^0,c
  5756  001A9C  5012               	movf	??_Wait_ms^0,w,c
  5757  001A9E  1013               	iorwf	(??_Wait_ms+1)^0,w,c
  5758  001AA0  1014               	iorwf	(??_Wait_ms+2)^0,w,c
  5759  001AA2  1015               	iorwf	(??_Wait_ms+3)^0,w,c
  5760  001AA4  A4D8               	btfss	status,2,c
  5761  001AA6  D7DB               	goto	l3544
  5762  001AA8                     u2210:
  5763  001AA8  FFFF               	dw	65535	; assembler added errata NOP
  5764  001AAA  500E               	movf	Wait_ms@value^0,w,c
  5765  001AAC  100F               	iorwf	(Wait_ms@value+1)^0,w,c
  5766  001AAE  1010               	iorwf	(Wait_ms@value+2)^0,w,c
  5767  001AB0  1011               	iorwf	(Wait_ms@value+3)^0,w,c
  5768  001AB2  B4D8               	btfsc	status,2,c
  5769  001AB4  0012               	return		;funcret
  5770  001AB6  FFFF               	dw	65535	; assembler added errata NOP
  5771  001AB8  D7DE               	goto	l290
  5772  001ABA  FFFF               	dw	65535	; errata NOP
  5773  001ABC                     __end_of_Wait_ms:
  5774                           	callstack 0
  5775                           
  5776 ;; *************** function _SIM800xSDMInit *****************
  5777 ;; Defined at:
  5778 ;;		line 48 in file "Src/SIM800x_SDM.c"
  5779 ;; Parameters:    Size  Location     Type
  5780 ;;  br              4   26[COMRAM] unsigned long 
  5781 ;; Auto vars:     Size  Location     Type
  5782 ;;  val             4   34[COMRAM] unsigned long 
  5783 ;; Return value:  Size  Location     Type
  5784 ;;                  1    wreg      void 
  5785 ;; Registers used:
  5786 ;;		wreg, status,2, status,0, cstack
  5787 ;; Tracked objects:
  5788 ;;		On entry : 0/0
  5789 ;;		On exit  : 0/0
  5790 ;;		Unchanged: 0/0
  5791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5792 ;;      Params:         4       0       0       0       0       0       0
  5793 ;;      Locals:         4       0       0       0       0       0       0
  5794 ;;      Temps:          4       0       0       0       0       0       0
  5795 ;;      Totals:        12       0       0       0       0       0       0
  5796 ;;Total ram usage:       12 bytes
  5797 ;; Hardware stack levels used: 1
  5798 ;; Hardware stack levels required when called: 4
  5799 ;; This function calls:
  5800 ;;		_SystimeInit
  5801 ;;		_USARTAsyncInit
  5802 ;;		___lldiv
  5803 ;; This function is called by:
  5804 ;;		_SIM800xInit
  5805 ;; This function uses a non-reentrant model
  5806 ;;
  5807                           
  5808                           	psect	text17
  5809  0019D6                     __ptext17:
  5810                           	callstack 0
  5811  0019D6                     _SIM800xSDMInit:
  5812                           	callstack 0
  5813  0019D6  FFFF               	dw	65535	; assembler added errata NOP
  5814                           
  5815                           ;SIM800x_SDM.c: 53: uint32_t val = ((16 * 1000000/(16 * br)) - 1);
  5816                           
  5817                           ;incstack = 0
  5818  0019D8  0E00               	movlw	0
  5819  0019DA  6E0E               	movwf	___lldiv@dividend^0,c
  5820  0019DC  0E24               	movlw	36
  5821  0019DE  6E0F               	movwf	(___lldiv@dividend+1)^0,c
  5822  0019E0  0EF4               	movlw	244
  5823  0019E2  6E10               	movwf	(___lldiv@dividend+2)^0,c
  5824  0019E4  0E00               	movlw	0
  5825  0019E6  6E11               	movwf	(___lldiv@dividend+3)^0,c
  5826  0019E8  C01B  F01F         	movff	SIM800xSDMInit@br,??_SIM800xSDMInit
  5827  0019EC  C01C  F020         	movff	SIM800xSDMInit@br+1,??_SIM800xSDMInit+1
  5828  0019F0  C01D  F021         	movff	SIM800xSDMInit@br+2,??_SIM800xSDMInit+2
  5829  0019F4  C01E  F022         	movff	SIM800xSDMInit@br+3,??_SIM800xSDMInit+3
  5830  0019F8  0E04               	movlw	4
  5831  0019FA                     u4105:
  5832  0019FA  FFFF               	dw	65535	; assembler added errata NOP
  5833  0019FC  90D8               	bcf	status,0,c
  5834  0019FE  361F               	rlcf	??_SIM800xSDMInit^0,f,c
  5835  001A00  3620               	rlcf	(??_SIM800xSDMInit+1)^0,f,c
  5836  001A02  3621               	rlcf	(??_SIM800xSDMInit+2)^0,f,c
  5837  001A04  3622               	rlcf	(??_SIM800xSDMInit+3)^0,f,c
  5838  001A06  2EE8               	decfsz	wreg,f,c
  5839  001A08  D7F8               	goto	u4105
  5840  001A0A  C01F  F012         	movff	??_SIM800xSDMInit,___lldiv@divisor
  5841  001A0E  C020  F013         	movff	??_SIM800xSDMInit+1,___lldiv@divisor+1
  5842  001A12  C021  F014         	movff	??_SIM800xSDMInit+2,___lldiv@divisor+2
  5843  001A16  C022  F015         	movff	??_SIM800xSDMInit+3,___lldiv@divisor+3
  5844  001A1A  EC61  F00B         	call	___lldiv	;wreg free
  5845  001A1E  0EFF               	movlw	255
  5846  001A20  240E               	addwf	?___lldiv^0,w,c
  5847  001A22  6E23               	movwf	SIM800xSDMInit@val^0,c
  5848  001A24  0EFF               	movlw	255
  5849  001A26  200F               	addwfc	(?___lldiv+1)^0,w,c
  5850  001A28  6E24               	movwf	(SIM800xSDMInit@val+1)^0,c
  5851  001A2A  0EFF               	movlw	255
  5852  001A2C  2010               	addwfc	(?___lldiv+2)^0,w,c
  5853  001A2E  6E25               	movwf	(SIM800xSDMInit@val+2)^0,c
  5854  001A30  0EFF               	movlw	255
  5855  001A32  2011               	addwfc	(?___lldiv+3)^0,w,c
  5856  001A34  6E26               	movwf	(SIM800xSDMInit@val+3)^0,c
  5857                           
  5858                           ;SIM800x_SDM.c: 57: USARTAsyncInit((uint8_t)val);
  5859  001A36  5023               	movf	SIM800xSDMInit@val^0,w,c
  5860  001A38  ECC3  F010         	call	_USARTAsyncInit
  5861                           
  5862                           ;SIM800x_SDM.c: 60: INTCON |= 0xC0;
  5863  001A3C  0EC0               	movlw	192
  5864  001A3E  12F2               	iorwf	242,f,c	;volatile
  5865                           
  5866                           ;SIM800x_SDM.c: 61: PIE1 |= 0x20;
  5867  001A40  8A9D               	bsf	157,5,c	;volatile
  5868                           
  5869                           ;SIM800x_SDM.c: 63: SystimeInit();
  5870  001A42  EC75  F010         	call	_SystimeInit	;wreg free
  5871  001A46  0012               	return		;funcret
  5872  001A48  FFFF               	dw	65535	; errata NOP
  5873  001A4A                     __end_of_SIM800xSDMInit:
  5874                           	callstack 0
  5875                           
  5876 ;; *************** function ___lldiv *****************
  5877 ;; Defined at:
  5878 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  5879 ;; Parameters:    Size  Location     Type
  5880 ;;  dividend        4   13[COMRAM] unsigned long 
  5881 ;;  divisor         4   17[COMRAM] unsigned long 
  5882 ;; Auto vars:     Size  Location     Type
  5883 ;;  quotient        4   21[COMRAM] unsigned long 
  5884 ;;  counter         1   25[COMRAM] unsigned char 
  5885 ;; Return value:  Size  Location     Type
  5886 ;;                  4   13[COMRAM] unsigned long 
  5887 ;; Registers used:
  5888 ;;		wreg, status,2, status,0
  5889 ;; Tracked objects:
  5890 ;;		On entry : 0/0
  5891 ;;		On exit  : 0/0
  5892 ;;		Unchanged: 0/0
  5893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5894 ;;      Params:         8       0       0       0       0       0       0
  5895 ;;      Locals:         5       0       0       0       0       0       0
  5896 ;;      Temps:          0       0       0       0       0       0       0
  5897 ;;      Totals:        13       0       0       0       0       0       0
  5898 ;;Total ram usage:       13 bytes
  5899 ;; Hardware stack levels used: 1
  5900 ;; Hardware stack levels required when called: 3
  5901 ;; This function calls:
  5902 ;;		Nothing
  5903 ;; This function is called by:
  5904 ;;		_SIM800xSDMInit
  5905 ;;		_sprintf
  5906 ;; This function uses a non-reentrant model
  5907 ;;
  5908                           
  5909                           	psect	text18
  5910  0016C2                     __ptext18:
  5911                           	callstack 0
  5912  0016C2                     ___lldiv:
  5913                           	callstack 0
  5914  0016C2  FFFF               	dw	65535	; assembler added errata NOP
  5915                           
  5916                           ;incstack = 0
  5917  0016C4  0E00               	movlw	0
  5918  0016C6  6E16               	movwf	___lldiv@quotient^0,c
  5919  0016C8  0E00               	movlw	0
  5920  0016CA  6E17               	movwf	(___lldiv@quotient+1)^0,c
  5921  0016CC  0E00               	movlw	0
  5922  0016CE  6E18               	movwf	(___lldiv@quotient+2)^0,c
  5923  0016D0  0E00               	movlw	0
  5924  0016D2  6E19               	movwf	(___lldiv@quotient+3)^0,c
  5925  0016D4  5012               	movf	___lldiv@divisor^0,w,c
  5926  0016D6  1013               	iorwf	(___lldiv@divisor+1)^0,w,c
  5927  0016D8  1014               	iorwf	(___lldiv@divisor+2)^0,w,c
  5928  0016DA  1015               	iorwf	(___lldiv@divisor+3)^0,w,c
  5929  0016DC  B4D8               	btfsc	status,2,c
  5930  0016DE  D02E               	goto	l1268
  5931  0016E0  0E01               	movlw	1
  5932  0016E2  6E1A               	movwf	___lldiv@counter^0,c
  5933  0016E4  D007               	goto	l4604
  5934  0016E6                     l4602:
  5935  0016E6  FFFF               	dw	65535	; assembler added errata NOP
  5936  0016E8  90D8               	bcf	status,0,c
  5937  0016EA  3612               	rlcf	___lldiv@divisor^0,f,c
  5938  0016EC  3613               	rlcf	(___lldiv@divisor+1)^0,f,c
  5939  0016EE  3614               	rlcf	(___lldiv@divisor+2)^0,f,c
  5940  0016F0  3615               	rlcf	(___lldiv@divisor+3)^0,f,c
  5941  0016F2  2A1A               	incf	___lldiv@counter^0,f,c
  5942  0016F4                     l4604:
  5943  0016F4  FFFF               	dw	65535	; assembler added errata NOP
  5944  0016F6  AE15               	btfss	(___lldiv@divisor+3)^0,7,c
  5945  0016F8  D7F6               	goto	l4602
  5946  0016FA                     u3730:
  5947  0016FA  FFFF               	dw	65535	; assembler added errata NOP
  5948  0016FC  90D8               	bcf	status,0,c
  5949  0016FE  3616               	rlcf	___lldiv@quotient^0,f,c
  5950  001700  3617               	rlcf	(___lldiv@quotient+1)^0,f,c
  5951  001702  3618               	rlcf	(___lldiv@quotient+2)^0,f,c
  5952  001704  3619               	rlcf	(___lldiv@quotient+3)^0,f,c
  5953  001706  5012               	movf	___lldiv@divisor^0,w,c
  5954  001708  5C0E               	subwf	___lldiv@dividend^0,w,c
  5955  00170A  5013               	movf	(___lldiv@divisor+1)^0,w,c
  5956  00170C  580F               	subwfb	(___lldiv@dividend+1)^0,w,c
  5957  00170E  5014               	movf	(___lldiv@divisor+2)^0,w,c
  5958  001710  5810               	subwfb	(___lldiv@dividend+2)^0,w,c
  5959  001712  5015               	movf	(___lldiv@divisor+3)^0,w,c
  5960  001714  5811               	subwfb	(___lldiv@dividend+3)^0,w,c
  5961  001716  A0D8               	btfss	status,0,c
  5962  001718  D009               	goto	l4614
  5963  00171A  5012               	movf	___lldiv@divisor^0,w,c
  5964  00171C  5E0E               	subwf	___lldiv@dividend^0,f,c
  5965  00171E  5013               	movf	(___lldiv@divisor+1)^0,w,c
  5966  001720  5A0F               	subwfb	(___lldiv@dividend+1)^0,f,c
  5967  001722  5014               	movf	(___lldiv@divisor+2)^0,w,c
  5968  001724  5A10               	subwfb	(___lldiv@dividend+2)^0,f,c
  5969  001726  5015               	movf	(___lldiv@divisor+3)^0,w,c
  5970  001728  5A11               	subwfb	(___lldiv@dividend+3)^0,f,c
  5971  00172A  8016               	bsf	___lldiv@quotient^0,0,c
  5972  00172C                     l4614:
  5973  00172C  FFFF               	dw	65535	; assembler added errata NOP
  5974  00172E  90D8               	bcf	status,0,c
  5975  001730  3215               	rrcf	(___lldiv@divisor+3)^0,f,c
  5976  001732  3214               	rrcf	(___lldiv@divisor+2)^0,f,c
  5977  001734  3213               	rrcf	(___lldiv@divisor+1)^0,f,c
  5978  001736  3212               	rrcf	___lldiv@divisor^0,f,c
  5979  001738  2E1A               	decfsz	___lldiv@counter^0,f,c
  5980  00173A  D7DF               	goto	u3730
  5981  00173C                     l1268:
  5982  00173C  FFFF               	dw	65535	; assembler added errata NOP
  5983  00173E  C016  F00E         	movff	___lldiv@quotient,?___lldiv
  5984  001742  C017  F00F         	movff	___lldiv@quotient+1,?___lldiv+1
  5985  001746  C018  F010         	movff	___lldiv@quotient+2,?___lldiv+2
  5986  00174A  C019  F011         	movff	___lldiv@quotient+3,?___lldiv+3
  5987  00174E  0012               	return		;funcret
  5988  001750  FFFF               	dw	65535	; errata NOP
  5989  001752                     __end_of___lldiv:
  5990                           	callstack 0
  5991                           
  5992 ;; *************** function _USARTAsyncInit *****************
  5993 ;; Defined at:
  5994 ;;		line 62 in file "C:/EmbeddedDevOps/M8M_APIs/PIC18.X/Src/USART.c"
  5995 ;; Parameters:    Size  Location     Type
  5996 ;;  bgr             1    wreg     unsigned char 
  5997 ;; Auto vars:     Size  Location     Type
  5998 ;;  bgr             1   13[COMRAM] unsigned char 
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  1    wreg      void 
  6001 ;; Registers used:
  6002 ;;		wreg, status,2
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6008 ;;      Params:         0       0       0       0       0       0       0
  6009 ;;      Locals:         1       0       0       0       0       0       0
  6010 ;;      Temps:          0       0       0       0       0       0       0
  6011 ;;      Totals:         1       0       0       0       0       0       0
  6012 ;;Total ram usage:        1 bytes
  6013 ;; Hardware stack levels used: 1
  6014 ;; Hardware stack levels required when called: 3
  6015 ;; This function calls:
  6016 ;;		Nothing
  6017 ;; This function is called by:
  6018 ;;		_SIM800xSDMInit
  6019 ;; This function uses a non-reentrant model
  6020 ;;
  6021                           
  6022                           	psect	text19
  6023  002186                     __ptext19:
  6024                           	callstack 0
  6025  002186                     _USARTAsyncInit:
  6026                           	callstack 0
  6027  002186  FFFF               	dw	65535	; assembler added errata NOP
  6028                           
  6029                           ;incstack = 0
  6030                           ;USARTAsyncInit@bgr stored from wreg
  6031  002188  6E0E               	movwf	USARTAsyncInit@bgr^0,c
  6032                           
  6033                           ;USART.c: 65: TXSTA = 0x24;
  6034  00218A  0E24               	movlw	36
  6035  00218C  6EAC               	movwf	172,c	;volatile
  6036                           
  6037                           ;USART.c: 66: RCSTA = 0x90;
  6038  00218E  0E90               	movlw	144
  6039  002190  6EAB               	movwf	171,c	;volatile
  6040                           
  6041                           ;USART.c: 67: SPBRG = bgr;
  6042  002192  C00E  FFAF         	movff	USARTAsyncInit@bgr,4015	;volatile
  6043  002196  0012               	return		;funcret
  6044  002198  FFFF               	dw	65535	; errata NOP
  6045  00219A                     __end_of_USARTAsyncInit:
  6046                           	callstack 0
  6047                           
  6048 ;; *************** function _SystimeInit *****************
  6049 ;; Defined at:
  6050 ;;		line 55 in file "Src/SystemTime.c"
  6051 ;; Parameters:    Size  Location     Type
  6052 ;;		None
  6053 ;; Auto vars:     Size  Location     Type
  6054 ;;		None
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  1    wreg      void 
  6057 ;; Registers used:
  6058 ;;		wreg, status,2, status,0
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6064 ;;      Params:         0       0       0       0       0       0       0
  6065 ;;      Locals:         0       0       0       0       0       0       0
  6066 ;;      Temps:          0       0       0       0       0       0       0
  6067 ;;      Totals:         0       0       0       0       0       0       0
  6068 ;;Total ram usage:        0 bytes
  6069 ;; Hardware stack levels used: 1
  6070 ;; Hardware stack levels required when called: 3
  6071 ;; This function calls:
  6072 ;;		Nothing
  6073 ;; This function is called by:
  6074 ;;		_SIM800xSDMInit
  6075 ;; This function uses a non-reentrant model
  6076 ;;
  6077                           
  6078                           	psect	text20
  6079  0020EA                     __ptext20:
  6080                           	callstack 0
  6081  0020EA                     _SystimeInit:
  6082                           	callstack 0
  6083  0020EA  FFFF               	dw	65535	; assembler added errata NOP
  6084                           
  6085                           ;incstack = 0
  6086  0020EC  0EFC               	movlw	252
  6087  0020EE  6E66               	movwf	(_val+1)^0,c	;volatile
  6088  0020F0  0E1A               	movlw	26
  6089  0020F2  6E65               	movwf	_val^0,c	;volatile
  6090                           
  6091                           ;SystemTime.c: 64: };SystemTime.c: 66: INTCON |= 0xC0;
  6092                           
  6093                           ;SystemTime.c: 60: }
  6094  0020F4  0EC0               	movlw	192
  6095  0020F6  12F2               	iorwf	242,f,c	;volatile
  6096                           
  6097                           ;SystemTime.c: 68: T0CON = 0x81;
  6098  0020F8  0E81               	movlw	129
  6099  0020FA  6ED5               	movwf	213,c	;volatile
  6100                           
  6101                           ;SystemTime.c: 69: TMR0 = val;
  6102  0020FC  C065  FFD6         	movff	_val,4054	;volatile
  6103  002100  C066  FFD7         	movff	_val+1,4055	;volatile
  6104                           
  6105                           ;SystemTime.c: 70: TMR0IF = 0;
  6106  002104  94F2               	bcf	4082,2,c	;volatile
  6107                           
  6108                           ;SystemTime.c: 71: TMR0IE = 1;
  6109  002106  8AF2               	bsf	4082,5,c	;volatile
  6110  002108  0012               	return		;funcret
  6111  00210A  FFFF               	dw	65535	; errata NOP
  6112  00210C                     __end_of_SystimeInit:
  6113                           	callstack 0
  6114                           
  6115 ;; *************** function _SIM800xIPSetConnectionType *****************
  6116 ;; Defined at:
  6117 ;;		line 657 in file "Src/SIM800x.c"
  6118 ;; Parameters:    Size  Location     Type
  6119 ;;  cid             1    wreg     unsigned char 
  6120 ;;  contype         2   31[COMRAM] PTR const unsigned char 
  6121 ;;		 -> STR_3(5), 
  6122 ;; Auto vars:     Size  Location     Type
  6123 ;;  cid             1   33[COMRAM] unsigned char 
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  1    wreg      enum E2115
  6126 ;; Registers used:
  6127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6133 ;;      Params:         2       0       0       0       0       0       0
  6134 ;;      Locals:         1       0       0       0       0       0       0
  6135 ;;      Temps:          0       0       0       0       0       0       0
  6136 ;;      Totals:         3       0       0       0       0       0       0
  6137 ;;Total ram usage:        3 bytes
  6138 ;; Hardware stack levels used: 1
  6139 ;; Hardware stack levels required when called: 6
  6140 ;; This function calls:
  6141 ;;		_ProcessResp1
  6142 ;;		_SIM800xSDMFlush
  6143 ;;		_SIM800xSDMPrint
  6144 ;;		_SIM800xSDMSendByte
  6145 ;;		_strlen
  6146 ;; This function is called by:
  6147 ;;		_SystemInit
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           	psect	text21
  6152  001ABC                     __ptext21:
  6153                           	callstack 0
  6154  001ABC                     _SIM800xIPSetConnectionType:
  6155                           	callstack 0
  6156  001ABC  FFFF               	dw	65535	; assembler added errata NOP
  6157                           
  6158                           ;incstack = 0
  6159                           ;SIM800xIPSetConnectionType@cid stored from wreg
  6160  001ABE  6E22               	movwf	SIM800xIPSetConnectionType@cid^0,c
  6161                           
  6162                           ;SIM800x.c: 660: if((cid == 0) || (strlen(contype) > 4))
  6163  001AC0  5022               	movf	SIM800xIPSetConnectionType@cid^0,w,c
  6164  001AC2  B4D8               	btfsc	status,2,c
  6165  001AC4  D00C               	goto	u4310
  6166  001AC6  C020  F00E         	movff	SIM800xIPSetConnectionType@contype,strlen@s
  6167  001ACA  C021  F00F         	movff	SIM800xIPSetConnectionType@contype+1,strlen@s+1
  6168  001ACE  EC7B  F00F         	call	_strlen	;wreg free
  6169  001AD2  500F               	movf	(?_strlen+1)^0,w,c
  6170  001AD4  E104               	bnz	u4310
  6171  001AD6  0E05               	movlw	5
  6172  001AD8  5C0E               	subwf	?_strlen^0,w,c
  6173  001ADA  A0D8               	btfss	status,0,c
  6174  001ADC  D003               	goto	l5004
  6175  001ADE                     u4310:
  6176  001ADE  FFFF               	dw	65535	; assembler added errata NOP
  6177                           
  6178                           ;SIM800x.c: 661: return SIM800X_ERROR;
  6179  001AE0  0E01               	movlw	1
  6180  001AE2  D01F               	goto	l513
  6181  001AE4                     l5004:
  6182  001AE4  FFFF               	dw	65535	; assembler added errata NOP
  6183                           
  6184                           ;SIM800x.c: 663: SIM800xSDMFlush();
  6185  001AE6  ECAE  F010         	call	_SIM800xSDMFlush	;wreg free
  6186                           
  6187                           ;SIM800x.c: 664: SIM800xSDMPrint("AT+SAPBR=3,");
  6188  001AEA  0ECE               	movlw	low STR_43
  6189  001AEC  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  6190  001AEE  0E7E               	movlw	high STR_43
  6191  001AF0  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6192  001AF2  ECFA  F00D         	call	_SIM800xSDMPrint	;wreg free
  6193                           
  6194                           ;SIM800x.c: 665: SIM800xSDMSendByte((uint8_t)((cid & 0x03) + 48));
  6195  001AF6  5022               	movf	SIM800xIPSetConnectionType@cid^0,w,c
  6196  001AF8  0B03               	andlw	3
  6197  001AFA  0F30               	addlw	48
  6198  001AFC  ECCD  F010         	call	_SIM800xSDMSendByte
  6199                           
  6200                           ;SIM800x.c: 666: SIM800xSDMPrint(",\"CONTYPE\",");
  6201  001B00  0E86               	movlw	low STR_44
  6202  001B02  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  6203  001B04  0E7E               	movlw	high STR_44
  6204  001B06  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6205  001B08  ECFA  F00D         	call	_SIM800xSDMPrint	;wreg free
  6206                           
  6207                           ;SIM800x.c: 667: SIM800xSDMPrint(contype);
  6208  001B0C  C020  F00F         	movff	SIM800xIPSetConnectionType@contype,SIM800xSDMPrint@str
  6209  001B10  C021  F010         	movff	SIM800xIPSetConnectionType@contype+1,SIM800xSDMPrint@str+1
  6210  001B14  ECFA  F00D         	call	_SIM800xSDMPrint	;wreg free
  6211                           
  6212                           ;SIM800x.c: 668: SIM800xSDMSendByte('\r');
  6213  001B18  0E0D               	movlw	13
  6214  001B1A  ECCD  F010         	call	_SIM800xSDMSendByte
  6215                           
  6216                           ;SIM800x.c: 670: return ProcessResp1();
  6217  001B1E  EC72  F00C         	call	_ProcessResp1	;wreg free
  6218  001B22                     l513:
  6219  001B22  FFFF               	dw	65535	; assembler added errata NOP
  6220  001B24  0012               	return		;funcret
  6221  001B26  FFFF               	dw	65535	; errata NOP
  6222  001B28                     __end_of_SIM800xIPSetConnectionType:
  6223                           	callstack 0
  6224                           
  6225 ;; *************** function _SIM800xIPSetAPN *****************
  6226 ;; Defined at:
  6227 ;;		line 675 in file "Src/SIM800x.c"
  6228 ;; Parameters:    Size  Location     Type
  6229 ;;  cid             1    wreg     unsigned char 
  6230 ;;  apn             2   31[COMRAM] PTR const unsigned char 
  6231 ;;		 -> STR_4(9), 
  6232 ;; Auto vars:     Size  Location     Type
  6233 ;;  cid             1   33[COMRAM] unsigned char 
  6234 ;; Return value:  Size  Location     Type
  6235 ;;                  1    wreg      enum E2115
  6236 ;; Registers used:
  6237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6238 ;; Tracked objects:
  6239 ;;		On entry : 0/0
  6240 ;;		On exit  : 0/0
  6241 ;;		Unchanged: 0/0
  6242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6243 ;;      Params:         2       0       0       0       0       0       0
  6244 ;;      Locals:         1       0       0       0       0       0       0
  6245 ;;      Temps:          0       0       0       0       0       0       0
  6246 ;;      Totals:         3       0       0       0       0       0       0
  6247 ;;Total ram usage:        3 bytes
  6248 ;; Hardware stack levels used: 1
  6249 ;; Hardware stack levels required when called: 6
  6250 ;; This function calls:
  6251 ;;		_ProcessResp1
  6252 ;;		_SIM800xSDMFlush
  6253 ;;		_SIM800xSDMPrint
  6254 ;;		_SIM800xSDMSendByte
  6255 ;;		_strlen
  6256 ;; This function is called by:
  6257 ;;		_SystemInit
  6258 ;; This function uses a non-reentrant model
  6259 ;;
  6260                           
  6261                           	psect	text22
  6262  001B28                     __ptext22:
  6263                           	callstack 0
  6264  001B28                     _SIM800xIPSetAPN:
  6265                           	callstack 0
  6266  001B28  FFFF               	dw	65535	; assembler added errata NOP
  6267                           
  6268                           ;incstack = 0
  6269                           ;SIM800xIPSetAPN@cid stored from wreg
  6270  001B2A  6E22               	movwf	SIM800xIPSetAPN@cid^0,c
  6271                           
  6272                           ;SIM800x.c: 678: if((cid == 0) || (strlen(apn) > 64))
  6273  001B2C  5022               	movf	SIM800xIPSetAPN@cid^0,w,c
  6274  001B2E  B4D8               	btfsc	status,2,c
  6275  001B30  D00C               	goto	u4330
  6276  001B32  C020  F00E         	movff	SIM800xIPSetAPN@apn,strlen@s
  6277  001B36  C021  F00F         	movff	SIM800xIPSetAPN@apn+1,strlen@s+1
  6278  001B3A  EC7B  F00F         	call	_strlen	;wreg free
  6279  001B3E  500F               	movf	(?_strlen+1)^0,w,c
  6280  001B40  E104               	bnz	u4330
  6281  001B42  0E41               	movlw	65
  6282  001B44  5C0E               	subwf	?_strlen^0,w,c
  6283  001B46  A0D8               	btfss	status,0,c
  6284  001B48  D003               	goto	l5028
  6285  001B4A                     u4330:
  6286  001B4A  FFFF               	dw	65535	; assembler added errata NOP
  6287                           
  6288                           ;SIM800x.c: 679: return SIM800X_ERROR;
  6289  001B4C  0E01               	movlw	1
  6290  001B4E  D01F               	goto	l519
  6291  001B50                     l5028:
  6292  001B50  FFFF               	dw	65535	; assembler added errata NOP
  6293                           
  6294                           ;SIM800x.c: 681: SIM800xSDMFlush();
  6295  001B52  ECAE  F010         	call	_SIM800xSDMFlush	;wreg free
  6296                           
  6297                           ;SIM800x.c: 682: SIM800xSDMPrint("AT+SAPBR=3,");
  6298  001B56  0ECE               	movlw	low STR_43
  6299  001B58  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  6300  001B5A  0E7E               	movlw	high STR_43
  6301  001B5C  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6302  001B5E  ECFA  F00D         	call	_SIM800xSDMPrint	;wreg free
  6303                           
  6304                           ;SIM800x.c: 683: SIM800xSDMSendByte((uint8_t)((cid & 0x03) + 48));
  6305  001B62  5022               	movf	SIM800xIPSetAPN@cid^0,w,c
  6306  001B64  0B03               	andlw	3
  6307  001B66  0F30               	addlw	48
  6308  001B68  ECCD  F010         	call	_SIM800xSDMSendByte
  6309                           
  6310                           ;SIM800x.c: 684: SIM800xSDMPrint(",\"APN\",");
  6311  001B6C  0EAC               	movlw	low STR_46
  6312  001B6E  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  6313  001B70  0E7F               	movlw	high STR_46
  6314  001B72  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6315  001B74  ECFA  F00D         	call	_SIM800xSDMPrint	;wreg free
  6316                           
  6317                           ;SIM800x.c: 685: SIM800xSDMPrint(apn);
  6318  001B78  C020  F00F         	movff	SIM800xIPSetAPN@apn,SIM800xSDMPrint@str
  6319  001B7C  C021  F010         	movff	SIM800xIPSetAPN@apn+1,SIM800xSDMPrint@str+1
  6320  001B80  ECFA  F00D         	call	_SIM800xSDMPrint	;wreg free
  6321                           
  6322                           ;SIM800x.c: 686: SIM800xSDMSendByte('\r');
  6323  001B84  0E0D               	movlw	13
  6324  001B86  ECCD  F010         	call	_SIM800xSDMSendByte
  6325                           
  6326                           ;SIM800x.c: 688: return ProcessResp1();
  6327  001B8A  EC72  F00C         	call	_ProcessResp1	;wreg free
  6328  001B8E                     l519:
  6329  001B8E  FFFF               	dw	65535	; assembler added errata NOP
  6330  001B90  0012               	return		;funcret
  6331  001B92  FFFF               	dw	65535	; errata NOP
  6332  001B94                     __end_of_SIM800xIPSetAPN:
  6333                           	callstack 0
  6334                           
  6335 ;; *************** function _SIM800xIPOpen *****************
  6336 ;; Defined at:
  6337 ;;		line 770 in file "Src/SIM800x.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;  cid             1    wreg     unsigned char 
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;  cid             1   31[COMRAM] unsigned char 
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  1    wreg      enum E2115
  6344 ;; Registers used:
  6345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6351 ;;      Params:         0       0       0       0       0       0       0
  6352 ;;      Locals:         1       0       0       0       0       0       0
  6353 ;;      Temps:          0       0       0       0       0       0       0
  6354 ;;      Totals:         1       0       0       0       0       0       0
  6355 ;;Total ram usage:        1 bytes
  6356 ;; Hardware stack levels used: 1
  6357 ;; Hardware stack levels required when called: 6
  6358 ;; This function calls:
  6359 ;;		_ProcessResp1
  6360 ;;		_SIM800xSDMFlush
  6361 ;;		_SIM800xSDMPrint
  6362 ;;		_SIM800xSDMSendByte
  6363 ;; This function is called by:
  6364 ;;		_SystemInit
  6365 ;; This function uses a non-reentrant model
  6366 ;;
  6367                           
  6368                           	psect	text23
  6369  001F8C                     __ptext23:
  6370                           	callstack 0
  6371  001F8C                     _SIM800xIPOpen:
  6372                           	callstack 0
  6373  001F8C  FFFF               	dw	65535	; assembler added errata NOP
  6374                           
  6375                           ;incstack = 0
  6376                           ;SIM800xIPOpen@cid stored from wreg
  6377  001F8E  6E20               	movwf	SIM800xIPOpen@cid^0,c
  6378                           
  6379                           ;SIM800x.c: 773: if(cid == 0)
  6380  001F90  5020               	movf	SIM800xIPOpen@cid^0,w,c
  6381  001F92  A4D8               	btfss	status,2,c
  6382  001F94  D002               	goto	l5050
  6383                           
  6384                           ;SIM800x.c: 774: return SIM800X_ERROR;
  6385  001F96  0E01               	movlw	1
  6386  001F98  D01B               	goto	l547
  6387  001F9A                     l5050:
  6388  001F9A  FFFF               	dw	65535	; assembler added errata NOP
  6389                           
  6390                           ;SIM800x.c: 776: SIM800xSDMFlush();
  6391  001F9C  ECAE  F010         	call	_SIM800xSDMFlush	;wreg free
  6392                           
  6393                           ;SIM800x.c: 777: SIM800xSDMPrint("AT+SAPBR=1,");
  6394  001FA0  0EAA               	movlw	low STR_56
  6395  001FA2  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  6396  001FA4  0E7E               	movlw	high STR_56
  6397  001FA6  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6398  001FA8  ECFA  F00D         	call	_SIM800xSDMPrint	;wreg free
  6399                           
  6400                           ;SIM800x.c: 778: SIM800xSDMSendByte((uint8_t)((cid & 0x03) + 48));
  6401  001FAC  5020               	movf	SIM800xIPOpen@cid^0,w,c
  6402  001FAE  0B03               	andlw	3
  6403  001FB0  0F30               	addlw	48
  6404  001FB2  ECCD  F010         	call	_SIM800xSDMSendByte
  6405                           
  6406                           ;SIM800x.c: 779: SIM800xSDMSendByte('\r');
  6407  001FB6  0E0D               	movlw	13
  6408  001FB8  ECCD  F010         	call	_SIM800xSDMSendByte
  6409                           
  6410                           ;SIM800x.c: 781: Tout = 85000;
  6411  001FBC  0E08               	movlw	8
  6412  001FBE  6E6A               	movwf	_Tout^0,c
  6413  001FC0  0E4C               	movlw	76
  6414  001FC2  6E6B               	movwf	(_Tout+1)^0,c
  6415  001FC4  0E01               	movlw	1
  6416  001FC6  6E6C               	movwf	(_Tout+2)^0,c
  6417  001FC8  0E00               	movlw	0
  6418  001FCA  6E6D               	movwf	(_Tout+3)^0,c
  6419                           
  6420                           ;SIM800x.c: 782: return ProcessResp1();
  6421  001FCC  EC72  F00C         	call	_ProcessResp1	;wreg free
  6422  001FD0                     l547:
  6423  001FD0  FFFF               	dw	65535	; assembler added errata NOP
  6424  001FD2  0012               	return		;funcret
  6425  001FD4  FFFF               	dw	65535	; errata NOP
  6426  001FD6                     __end_of_SIM800xIPOpen:
  6427                           	callstack 0
  6428                           
  6429 ;; *************** function _ProcessResp1 *****************
  6430 ;; Defined at:
  6431 ;;		line 165 in file "Src/SIM800x.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;		None
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;  time            4   26[COMRAM] unsigned long 
  6436 ;;  c               1   30[COMRAM] unsigned char 
  6437 ;; Return value:  Size  Location     Type
  6438 ;;                  1    wreg      enum E2114
  6439 ;; Registers used:
  6440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6441 ;; Tracked objects:
  6442 ;;		On entry : 0/0
  6443 ;;		On exit  : 0/0
  6444 ;;		Unchanged: 0/0
  6445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6446 ;;      Params:         0       0       0       0       0       0       0
  6447 ;;      Locals:         5       0       0       0       0       0       0
  6448 ;;      Temps:          4       0       0       0       0       0       0
  6449 ;;      Totals:         9       0       0       0       0       0       0
  6450 ;;Total ram usage:        9 bytes
  6451 ;; Hardware stack levels used: 1
  6452 ;; Hardware stack levels required when called: 5
  6453 ;; This function calls:
  6454 ;;		_SIM800xSDMPeek
  6455 ;;		_SIM800xSDMRxAvailable
  6456 ;;		_Tick_ms
  6457 ;; This function is called by:
  6458 ;;		_SIM800xIPSetConnectionType
  6459 ;;		_SIM800xIPSetAPN
  6460 ;;		_SIM800xIPOpen
  6461 ;; This function uses a non-reentrant model
  6462 ;;
  6463                           
  6464                           	psect	text24
  6465  0018E4                     __ptext24:
  6466                           	callstack 0
  6467  0018E4                     _ProcessResp1:
  6468                           	callstack 0
  6469  0018E4  FFFF               	dw	65535	; assembler added errata NOP
  6470                           
  6471                           ;SIM800x.c: 167: uint32_t time = Tick_ms();
  6472                           
  6473                           ;incstack = 0
  6474  0018E6  ECA3  F010         	call	_Tick_ms	;wreg free
  6475  0018EA  C00E  F01B         	movff	?_Tick_ms,ProcessResp1@time
  6476  0018EE  C00F  F01C         	movff	?_Tick_ms+1,ProcessResp1@time+1
  6477  0018F2  C010  F01D         	movff	?_Tick_ms+2,ProcessResp1@time+2
  6478  0018F6  C011  F01E         	movff	?_Tick_ms+3,ProcessResp1@time+3
  6479                           
  6480                           ;SIM800x.c: 168: while(SIM800xSDMRxAvailable() < 6)
  6481  0018FA  D01B               	goto	l4762
  6482  0018FC                     l4756:
  6483  0018FC  FFFF               	dw	65535	; assembler added errata NOP
  6484                           
  6485                           ;SIM800x.c: 169: {;SIM800x.c: 170: if((Tick_ms() - time) > Tout)
  6486  0018FE  ECA3  F010         	call	_Tick_ms	;wreg free
  6487  001902  501B               	movf	ProcessResp1@time^0,w,c
  6488  001904  5C0E               	subwf	?_Tick_ms^0,w,c
  6489  001906  6E17               	movwf	??_ProcessResp1^0,c
  6490  001908  501C               	movf	(ProcessResp1@time+1)^0,w,c
  6491  00190A  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  6492  00190C  6E18               	movwf	(??_ProcessResp1+1)^0,c
  6493  00190E  501D               	movf	(ProcessResp1@time+2)^0,w,c
  6494  001910  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  6495  001912  6E19               	movwf	(??_ProcessResp1+2)^0,c
  6496  001914  501E               	movf	(ProcessResp1@time+3)^0,w,c
  6497  001916  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  6498  001918  6E1A               	movwf	(??_ProcessResp1+3)^0,c
  6499  00191A  5017               	movf	??_ProcessResp1^0,w,c
  6500  00191C  5C6A               	subwf	_Tout^0,w,c
  6501  00191E  5018               	movf	(??_ProcessResp1+1)^0,w,c
  6502  001920  586B               	subwfb	(_Tout+1)^0,w,c
  6503  001922  5019               	movf	(??_ProcessResp1+2)^0,w,c
  6504  001924  586C               	subwfb	(_Tout+2)^0,w,c
  6505  001926  501A               	movf	(??_ProcessResp1+3)^0,w,c
  6506  001928  586D               	subwfb	(_Tout+3)^0,w,c
  6507  00192A  B0D8               	btfsc	status,0,c
  6508  00192C  D002               	goto	l4762
  6509                           
  6510                           ;SIM800x.c: 171: {;SIM800x.c: 172: return SIM800X_TIME_OUT;
  6511  00192E  0E05               	movlw	5
  6512  001930  D015               	goto	l365
  6513  001932                     l4762:
  6514  001932  FFFF               	dw	65535	; assembler added errata NOP
  6515  001934  EC45  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  6516  001938  5014               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  6517  00193A  E104               	bnz	u3950
  6518  00193C  0E06               	movlw	6
  6519  00193E  5C13               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  6520  001940  A0D8               	btfss	status,0,c
  6521  001942  D7DC               	goto	l4756
  6522  001944                     u3950:
  6523                           
  6524                           ;SIM800x.c: 173: };SIM800x.c: 174: };SIM800x.c: 175: char c = SIM800xSDMPeek(2);
  6525  001944  0E02               	movlw	2
  6526  001946  ECEB  F00F         	call	_SIM800xSDMPeek
  6527  00194A  6E1F               	movwf	ProcessResp1@c^0,c
  6528                           
  6529                           ;SIM800x.c: 176: if(c == 'O')
  6530  00194C  0E4F               	movlw	79
  6531  00194E  181F               	xorwf	ProcessResp1@c^0,w,c
  6532  001950  A4D8               	btfss	status,2,c
  6533  001952  D002               	goto	l4772
  6534                           
  6535                           ;SIM800x.c: 177: return SIM800X_OK;
  6536  001954  0E00               	movlw	0
  6537  001956  D002               	goto	l365
  6538  001958                     l4772:
  6539  001958  FFFF               	dw	65535	; assembler added errata NOP
  6540                           
  6541                           ;SIM800x.c: 178: return SIM800X_ERROR;
  6542  00195A  0E01               	movlw	1
  6543  00195C                     l365:
  6544  00195C  FFFF               	dw	65535	; assembler added errata NOP
  6545  00195E  0012               	return		;funcret
  6546  001960  FFFF               	dw	65535	; errata NOP
  6547  001962                     __end_of_ProcessResp1:
  6548                           	callstack 0
  6549                           
  6550 ;; *************** function _SIM800xIPGetState *****************
  6551 ;; Defined at:
  6552 ;;		line 814 in file "Src/SIM800x.c"
  6553 ;; Parameters:    Size  Location     Type
  6554 ;;  cid             1    wreg     unsigned char 
  6555 ;;  ip              2   48[COMRAM] PTR unsigned char 
  6556 ;;		 -> SystemInit@ip(20), 
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;  cid             1   89[COMRAM] unsigned char 
  6559 ;;  i               1   91[COMRAM] unsigned char 
  6560 ;;  len             1   90[COMRAM] unsigned char 
  6561 ;;  str            30   54[COMRAM] unsigned char [30]
  6562 ;;  time1           4   84[COMRAM] unsigned long 
  6563 ;;  res             1   88[COMRAM] enum E2114
  6564 ;;  res1            1    0        enum E2260
  6565 ;; Return value:  Size  Location     Type
  6566 ;;                  1    wreg      enum E2261
  6567 ;; Registers used:
  6568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6569 ;; Tracked objects:
  6570 ;;		On entry : 0/0
  6571 ;;		On exit  : 0/0
  6572 ;;		Unchanged: 0/0
  6573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6574 ;;      Params:         2       0       0       0       0       0       0
  6575 ;;      Locals:        38       0       0       0       0       0       0
  6576 ;;      Temps:          4       0       0       0       0       0       0
  6577 ;;      Totals:        44       0       0       0       0       0       0
  6578 ;;Total ram usage:       44 bytes
  6579 ;; Hardware stack levels used: 1
  6580 ;; Hardware stack levels required when called: 7
  6581 ;; This function calls:
  6582 ;;		_ProcessResp2
  6583 ;;		_SIM800xSDMFlush
  6584 ;;		_SIM800xSDMPrint
  6585 ;;		_SIM800xSDMRxAvailable
  6586 ;;		_SIM800xSDMSendByte
  6587 ;;		_Tick_ms
  6588 ;;		_strlen
  6589 ;; This function is called by:
  6590 ;;		_SystemInit
  6591 ;; This function uses a non-reentrant model
  6592 ;;
  6593                           
  6594                           	psect	text25
  6595  001482                     __ptext25:
  6596                           	callstack 0
  6597  001482                     _SIM800xIPGetState:
  6598                           	callstack 0
  6599  001482  FFFF               	dw	65535	; assembler added errata NOP
  6600                           
  6601                           ;incstack = 0
  6602                           ;SIM800xIPGetState@cid stored from wreg
  6603  001484  6E5A               	movwf	SIM800xIPGetState@cid^0,c
  6604                           
  6605                           ;SIM800x.c: 817: if(cid == 0)
  6606  001486  505A               	movf	SIM800xIPGetState@cid^0,w,c
  6607  001488  B4D8               	btfsc	status,2,c
  6608  00148A  D079               	goto	l562
  6609                           
  6610                           ;SIM800x.c: 820: char str[30];;SIM800x.c: 821: SIM800xSDMFlush();
  6611  00148C  ECAE  F010         	call	_SIM800xSDMFlush	;wreg free
  6612                           
  6613                           ;SIM800x.c: 822: SIM800xSDMPrint("AT+SAPBR=2,");
  6614  001490  0EC2               	movlw	low STR_58
  6615  001492  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  6616  001494  0E7E               	movlw	high STR_58
  6617  001496  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  6618  001498  ECFA  F00D         	call	_SIM800xSDMPrint	;wreg free
  6619                           
  6620                           ;SIM800x.c: 823: SIM800xSDMSendByte((uint8_t)((cid & 0x03) + 48));
  6621  00149C  505A               	movf	SIM800xIPGetState@cid^0,w,c
  6622  00149E  0B03               	andlw	3
  6623  0014A0  0F30               	addlw	48
  6624  0014A2  ECCD  F010         	call	_SIM800xSDMSendByte
  6625                           
  6626                           ;SIM800x.c: 824: SIM800xSDMSendByte('\r');
  6627  0014A6  0E0D               	movlw	13
  6628  0014A8  ECCD  F010         	call	_SIM800xSDMSendByte
  6629                           
  6630                           ;SIM800x.c: 825: SIM800xIPStatusType res1;;SIM800x.c: 827: uint32_t time1 = Tick_ms();
  6631  0014AC  ECA3  F010         	call	_Tick_ms	;wreg free
  6632  0014B0  C00E  F055         	movff	?_Tick_ms,SIM800xIPGetState@time1
  6633  0014B4  C00F  F056         	movff	?_Tick_ms+1,SIM800xIPGetState@time1+1
  6634  0014B8  C010  F057         	movff	?_Tick_ms+2,SIM800xIPGetState@time1+2
  6635  0014BC  C011  F058         	movff	?_Tick_ms+3,SIM800xIPGetState@time1+3
  6636                           
  6637                           ;SIM800x.c: 828: while(SIM800xSDMRxAvailable() < 25)
  6638  0014C0  D019               	goto	l5082
  6639  0014C2                     l5078:
  6640  0014C2  FFFF               	dw	65535	; assembler added errata NOP
  6641                           
  6642                           ;SIM800x.c: 829: {;SIM800x.c: 830: if((Tick_ms() - time1) > Tout)
  6643  0014C4  ECA3  F010         	call	_Tick_ms	;wreg free
  6644  0014C8  5055               	movf	SIM800xIPGetState@time1^0,w,c
  6645  0014CA  5C0E               	subwf	?_Tick_ms^0,w,c
  6646  0014CC  6E33               	movwf	??_SIM800xIPGetState^0,c
  6647  0014CE  5056               	movf	(SIM800xIPGetState@time1+1)^0,w,c
  6648  0014D0  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  6649  0014D2  6E34               	movwf	(??_SIM800xIPGetState+1)^0,c
  6650  0014D4  5057               	movf	(SIM800xIPGetState@time1+2)^0,w,c
  6651  0014D6  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  6652  0014D8  6E35               	movwf	(??_SIM800xIPGetState+2)^0,c
  6653  0014DA  5058               	movf	(SIM800xIPGetState@time1+3)^0,w,c
  6654  0014DC  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  6655  0014DE  6E36               	movwf	(??_SIM800xIPGetState+3)^0,c
  6656  0014E0  5033               	movf	??_SIM800xIPGetState^0,w,c
  6657  0014E2  5C6A               	subwf	_Tout^0,w,c
  6658  0014E4  5034               	movf	(??_SIM800xIPGetState+1)^0,w,c
  6659  0014E6  586B               	subwfb	(_Tout+1)^0,w,c
  6660  0014E8  5035               	movf	(??_SIM800xIPGetState+2)^0,w,c
  6661  0014EA  586C               	subwfb	(_Tout+2)^0,w,c
  6662  0014EC  5036               	movf	(??_SIM800xIPGetState+3)^0,w,c
  6663  0014EE  586D               	subwfb	(_Tout+3)^0,w,c
  6664  0014F0  A0D8               	btfss	status,0,c
  6665  0014F2  D045               	goto	l562
  6666  0014F4                     l5082:
  6667  0014F4  FFFF               	dw	65535	; assembler added errata NOP
  6668  0014F6  EC45  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  6669  0014FA  5014               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  6670  0014FC  E104               	bnz	u4370
  6671  0014FE  0E19               	movlw	25
  6672  001500  5C13               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  6673  001502  A0D8               	btfss	status,0,c
  6674  001504  D7DE               	goto	l5078
  6675  001506                     u4370:
  6676                           
  6677                           ;SIM800x.c: 832: };SIM800x.c: 833: SIM800x_APIStatusType res = ProcessResp2(str);
  6678  001506  0E37               	movlw	low SIM800xIPGetState@str
  6679  001508  6E25               	movwf	ProcessResp2@str^0,c
  6680  00150A  0E00               	movlw	high SIM800xIPGetState@str
  6681  00150C  6E26               	movwf	(ProcessResp2@str+1)^0,c
  6682  00150E  EC12  F00B         	call	_ProcessResp2	;wreg free
  6683  001512  6E59               	movwf	SIM800xIPGetState@res^0,c
  6684                           
  6685                           ;SIM800x.c: 834: if(res == SIM800X_OK)
  6686  001514  5059               	movf	SIM800xIPGetState@res^0,w,c
  6687  001516  A4D8               	btfss	status,2,c
  6688  001518  D032               	goto	l562
  6689                           
  6690                           ;SIM800x.c: 835: {;SIM800x.c: 836: uint8_t len = (uint8_t)(strlen(str) - 1);
  6691  00151A  0E37               	movlw	low SIM800xIPGetState@str
  6692  00151C  6E0E               	movwf	strlen@s^0,c
  6693  00151E  0E00               	movlw	high SIM800xIPGetState@str
  6694  001520  6E0F               	movwf	(strlen@s+1)^0,c
  6695  001522  EC7B  F00F         	call	_strlen	;wreg free
  6696  001526  040E               	decf	?_strlen^0,w,c
  6697  001528  6E5B               	movwf	SIM800xIPGetState@len^0,c
  6698                           
  6699                           ;SIM800x.c: 838: for(uint8_t i = 13; i < len; i++)
  6700  00152A  0E0D               	movlw	13
  6701  00152C  6E5C               	movwf	SIM800xIPGetState@i^0,c
  6702  00152E  D016               	goto	l5098
  6703  001530                     l5094:
  6704  001530  FFFF               	dw	65535	; assembler added errata NOP
  6705                           
  6706                           ;SIM800x.c: 839: {;SIM800x.c: 840: ip[i - 13] = str[i];
  6707  001532  0E37               	movlw	low SIM800xIPGetState@str
  6708  001534  245C               	addwf	SIM800xIPGetState@i^0,w,c
  6709  001536  6ED9               	movwf	fsr2l,c
  6710  001538  6ADA               	clrf	fsr2h,c
  6711  00153A  0E00               	movlw	high SIM800xIPGetState@str
  6712  00153C  22DA               	addwfc	fsr2h,f,c
  6713  00153E  505C               	movf	SIM800xIPGetState@i^0,w,c
  6714  001540  2431               	addwf	SIM800xIPGetState@ip^0,w,c
  6715  001542  6E33               	movwf	??_SIM800xIPGetState^0,c
  6716  001544  0E00               	movlw	0
  6717  001546  2032               	addwfc	(SIM800xIPGetState@ip+1)^0,w,c
  6718  001548  6E34               	movwf	(??_SIM800xIPGetState+1)^0,c
  6719  00154A  0EF3               	movlw	243
  6720  00154C  2433               	addwf	??_SIM800xIPGetState^0,w,c
  6721  00154E  6EE1               	movwf	fsr1l,c
  6722  001550  0EFF               	movlw	255
  6723  001552  2034               	addwfc	(??_SIM800xIPGetState+1)^0,w,c
  6724  001554  6EE2               	movwf	fsr1h,c
  6725  001556  CFDF FFE7          	movff	indf2,indf1
  6726  00155A  2A5C               	incf	SIM800xIPGetState@i^0,f,c
  6727  00155C                     l5098:
  6728  00155C  FFFF               	dw	65535	; assembler added errata NOP
  6729  00155E  505B               	movf	SIM800xIPGetState@len^0,w,c
  6730  001560  5C5C               	subwf	SIM800xIPGetState@i^0,w,c
  6731  001562  A0D8               	btfss	status,0,c
  6732  001564  D7E5               	goto	l5094
  6733                           
  6734                           ;SIM800x.c: 841: };SIM800x.c: 842: ip[(uint8_t)(len - 13)] = '\0';
  6735  001566  C05B  F033         	movff	SIM800xIPGetState@len,??_SIM800xIPGetState
  6736  00156A  0EF3               	movlw	243
  6737  00156C  2633               	addwf	??_SIM800xIPGetState^0,f,c
  6738  00156E  5033               	movf	??_SIM800xIPGetState^0,w,c
  6739  001570  2431               	addwf	SIM800xIPGetState@ip^0,w,c
  6740  001572  6ED9               	movwf	fsr2l,c
  6741  001574  0E00               	movlw	0
  6742  001576  2032               	addwfc	(SIM800xIPGetState@ip+1)^0,w,c
  6743  001578  6EDA               	movwf	fsr2h,c
  6744  00157A  0E00               	movlw	0
  6745  00157C  6EDF               	movwf	indf2,c
  6746  00157E                     l562:
  6747  00157E  FFFF               	dw	65535	; assembler added errata NOP
  6748  001580  0012               	return		;funcret
  6749  001582  FFFF               	dw	65535	; errata NOP
  6750  001584                     __end_of_SIM800xIPGetState:
  6751                           	callstack 0
  6752                           
  6753 ;; *************** function _ProcessResp2 *****************
  6754 ;; Defined at:
  6755 ;;		line 182 in file "Src/SIM800x.c"
  6756 ;; Parameters:    Size  Location     Type
  6757 ;;  str             2   36[COMRAM] PTR unsigned char 
  6758 ;;		 -> SIM800xGPRSGetAddress@str(40), SIM800xIPGetState@str(30), SIM800xGetSoftwareRevisionID@str(30), 
  6759 ;; Auto vars:     Size  Location     Type
  6760 ;;  time            4   42[COMRAM] unsigned long 
  6761 ;;  res             2   46[COMRAM] int 
  6762 ;; Return value:  Size  Location     Type
  6763 ;;                  1    wreg      enum E2114
  6764 ;; Registers used:
  6765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6766 ;; Tracked objects:
  6767 ;;		On entry : 0/0
  6768 ;;		On exit  : 0/0
  6769 ;;		Unchanged: 0/0
  6770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6771 ;;      Params:         2       0       0       0       0       0       0
  6772 ;;      Locals:         6       0       0       0       0       0       0
  6773 ;;      Temps:          4       0       0       0       0       0       0
  6774 ;;      Totals:        12       0       0       0       0       0       0
  6775 ;;Total ram usage:       12 bytes
  6776 ;; Hardware stack levels used: 1
  6777 ;; Hardware stack levels required when called: 6
  6778 ;; This function calls:
  6779 ;;		_SIM800xSDMPeek
  6780 ;;		_SIM800xSDMReadF1Pkt
  6781 ;;		_Tick_ms
  6782 ;; This function is called by:
  6783 ;;		_SIM800xIPGetState
  6784 ;; This function uses a non-reentrant model
  6785 ;;
  6786                           
  6787                           	psect	text26
  6788  001624                     __ptext26:
  6789                           	callstack 0
  6790  001624                     _ProcessResp2:
  6791                           	callstack 0
  6792  001624  FFFF               	dw	65535	; assembler added errata NOP
  6793                           
  6794                           ;SIM800x.c: 185: int res = SIM800xSDMReadF1Pkt((char*)str);
  6795                           
  6796                           ;incstack = 0
  6797  001626  C025  F017         	movff	ProcessResp2@str,SIM800xSDMReadF1Pkt@data
  6798  00162A  C026  F018         	movff	ProcessResp2@str+1,SIM800xSDMReadF1Pkt@data+1
  6799  00162E  EC28  F009         	call	_SIM800xSDMReadF1Pkt	;wreg free
  6800  001632  C017  F02F         	movff	?_SIM800xSDMReadF1Pkt,ProcessResp2@res
  6801  001636  C018  F030         	movff	?_SIM800xSDMReadF1Pkt+1,ProcessResp2@res+1
  6802                           
  6803                           ;SIM800x.c: 186: if(res < 0)
  6804  00163A  AE30               	btfss	(ProcessResp2@res+1)^0,7,c
  6805  00163C  D002               	goto	l4786
  6806                           
  6807                           ;SIM800x.c: 187: {;SIM800x.c: 188: return SIM800X_TIME_OUT;
  6808  00163E  0E05               	movlw	5
  6809  001640  D03D               	goto	l371
  6810  001642                     l4786:
  6811  001642  FFFF               	dw	65535	; assembler added errata NOP
  6812                           
  6813                           ;SIM800x.c: 190: else if(res == 0)
  6814  001644  502F               	movf	ProcessResp2@res^0,w,c
  6815  001646  1030               	iorwf	(ProcessResp2@res+1)^0,w,c
  6816  001648  A4D8               	btfss	status,2,c
  6817  00164A  D003               	goto	l4792
  6818  00164C                     u3980:
  6819  00164C  FFFF               	dw	65535	; assembler added errata NOP
  6820                           
  6821                           ;SIM800x.c: 191: {;SIM800x.c: 192: return SIM800X_INVALID_RESPONSE;
  6822  00164E  0E08               	movlw	8
  6823  001650  D035               	goto	l371
  6824  001652                     l4792:
  6825  001652  FFFF               	dw	65535	; assembler added errata NOP
  6826                           
  6827                           ;SIM800x.c: 193: };SIM800x.c: 194: str[res] = '\0';
  6828  001654  502F               	movf	ProcessResp2@res^0,w,c
  6829  001656  2425               	addwf	ProcessResp2@str^0,w,c
  6830  001658  6ED9               	movwf	fsr2l,c
  6831  00165A  5030               	movf	(ProcessResp2@res+1)^0,w,c
  6832  00165C  2026               	addwfc	(ProcessResp2@str+1)^0,w,c
  6833  00165E  6EDA               	movwf	fsr2h,c
  6834  001660  0E00               	movlw	0
  6835  001662  6EDF               	movwf	indf2,c
  6836                           
  6837                           ;SIM800x.c: 196: uint32_t time = Tick_ms();
  6838  001664  ECA3  F010         	call	_Tick_ms	;wreg free
  6839  001668  C00E  F02B         	movff	?_Tick_ms,ProcessResp2@time
  6840  00166C  C00F  F02C         	movff	?_Tick_ms+1,ProcessResp2@time+1
  6841  001670  C010  F02D         	movff	?_Tick_ms+2,ProcessResp2@time+2
  6842  001674  C011  F02E         	movff	?_Tick_ms+3,ProcessResp2@time+3
  6843                           
  6844                           ;SIM800x.c: 197: while(SIM800xSDMPeek(2) != 'O')
  6845  001678  D019               	goto	l4802
  6846  00167A                     l4796:
  6847  00167A  FFFF               	dw	65535	; assembler added errata NOP
  6848                           
  6849                           ;SIM800x.c: 198: {;SIM800x.c: 199: if((Tick_ms() - time) > Tout)
  6850  00167C  ECA3  F010         	call	_Tick_ms	;wreg free
  6851  001680  502B               	movf	ProcessResp2@time^0,w,c
  6852  001682  5C0E               	subwf	?_Tick_ms^0,w,c
  6853  001684  6E27               	movwf	??_ProcessResp2^0,c
  6854  001686  502C               	movf	(ProcessResp2@time+1)^0,w,c
  6855  001688  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  6856  00168A  6E28               	movwf	(??_ProcessResp2+1)^0,c
  6857  00168C  502D               	movf	(ProcessResp2@time+2)^0,w,c
  6858  00168E  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  6859  001690  6E29               	movwf	(??_ProcessResp2+2)^0,c
  6860  001692  502E               	movf	(ProcessResp2@time+3)^0,w,c
  6861  001694  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  6862  001696  6E2A               	movwf	(??_ProcessResp2+3)^0,c
  6863  001698  5027               	movf	??_ProcessResp2^0,w,c
  6864  00169A  5C6A               	subwf	_Tout^0,w,c
  6865  00169C  5028               	movf	(??_ProcessResp2+1)^0,w,c
  6866  00169E  586B               	subwfb	(_Tout+1)^0,w,c
  6867  0016A0  5029               	movf	(??_ProcessResp2+2)^0,w,c
  6868  0016A2  586C               	subwfb	(_Tout+2)^0,w,c
  6869  0016A4  502A               	movf	(??_ProcessResp2+3)^0,w,c
  6870  0016A6  586D               	subwfb	(_Tout+3)^0,w,c
  6871  0016A8  A0D8               	btfss	status,0,c
  6872  0016AA  D7D0               	goto	u3980
  6873  0016AC                     l4802:
  6874  0016AC  FFFF               	dw	65535	; assembler added errata NOP
  6875  0016AE  0E02               	movlw	2
  6876  0016B0  ECEB  F00F         	call	_SIM800xSDMPeek
  6877  0016B4  0A4F               	xorlw	79
  6878  0016B6  A4D8               	btfss	status,2,c
  6879  0016B8  D7E0               	goto	l4796
  6880                           
  6881                           ;SIM800x.c: 202: };SIM800x.c: 203: };SIM800x.c: 204: return SIM800X_OK;
  6882  0016BA  0E00               	movlw	0
  6883  0016BC                     l371:
  6884  0016BC  FFFF               	dw	65535	; assembler added errata NOP
  6885  0016BE  0012               	return		;funcret
  6886  0016C0  FFFF               	dw	65535	; errata NOP
  6887  0016C2                     __end_of_ProcessResp2:
  6888                           	callstack 0
  6889                           
  6890 ;; *************** function _SIM800xSDMPeek *****************
  6891 ;; Defined at:
  6892 ;;		line 217 in file "Src/SIM800x_SDM.c"
  6893 ;; Parameters:    Size  Location     Type
  6894 ;;  idx             1    wreg     unsigned char 
  6895 ;; Auto vars:     Size  Location     Type
  6896 ;;  idx             1   15[COMRAM] unsigned char 
  6897 ;; Return value:  Size  Location     Type
  6898 ;;                  1    wreg      unsigned char 
  6899 ;; Registers used:
  6900 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6901 ;; Tracked objects:
  6902 ;;		On entry : 0/0
  6903 ;;		On exit  : 0/0
  6904 ;;		Unchanged: 0/0
  6905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6906 ;;      Params:         0       0       0       0       0       0       0
  6907 ;;      Locals:         1       0       0       0       0       0       0
  6908 ;;      Temps:          2       0       0       0       0       0       0
  6909 ;;      Totals:         3       0       0       0       0       0       0
  6910 ;;Total ram usage:        3 bytes
  6911 ;; Hardware stack levels used: 1
  6912 ;; Hardware stack levels required when called: 3
  6913 ;; This function calls:
  6914 ;;		Nothing
  6915 ;; This function is called by:
  6916 ;;		_ProcessResp1
  6917 ;;		_ProcessResp2
  6918 ;;		_SIM800xInit
  6919 ;;		_SIM800xHTTPInputData
  6920 ;;		_SIM800xHTTPRead
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           
  6924                           	psect	text27
  6925  001FD6                     __ptext27:
  6926                           	callstack 0
  6927  001FD6                     _SIM800xSDMPeek:
  6928                           	callstack 0
  6929  001FD6  FFFF               	dw	65535	; assembler added errata NOP
  6930                           
  6931                           ;incstack = 0
  6932                           ;SIM800xSDMPeek@idx stored from wreg
  6933  001FD8  6E10               	movwf	SIM800xSDMPeek@idx^0,c
  6934                           
  6935                           ;SIM800x_SDM.c: 220: if((Rxfifoptr + idx) >= Rxfifocurrent)
  6936  001FDA  5010               	movf	SIM800xSDMPeek@idx^0,w,c
  6937  001FDC  2463               	addwf	_Rxfifoptr@SIM800x_SDM$F1167^0,w,c	;volatile
  6938  001FDE  6E0E               	movwf	??_SIM800xSDMPeek^0,c
  6939  001FE0  0E00               	movlw	0
  6940  001FE2  2064               	addwfc	(_Rxfifoptr@SIM800x_SDM$F1167+1)^0,w,c	;volatile
  6941  001FE4  6E0F               	movwf	(??_SIM800xSDMPeek+1)^0,c
  6942  001FE6  5061               	movf	_Rxfifocurrent@SIM800x_SDM$F1168^0,w,c	;volatile
  6943  001FE8  5C0E               	subwf	??_SIM800xSDMPeek^0,w,c
  6944  001FEA  5062               	movf	(_Rxfifocurrent@SIM800x_SDM$F1168+1)^0,w,c	;volatile
  6945  001FEC  580F               	subwfb	(??_SIM800xSDMPeek+1)^0,w,c
  6946  001FEE  A0D8               	btfss	status,0,c
  6947  001FF0  D002               	goto	l4540
  6948                           
  6949                           ;SIM800x_SDM.c: 221: return 0xFF;
  6950  001FF2  0EFF               	movlw	255
  6951  001FF4  D010               	goto	l1057
  6952  001FF6                     l4540:
  6953  001FF6  FFFF               	dw	65535	; assembler added errata NOP
  6954                           
  6955                           ;SIM800x_SDM.c: 222: return RxFIFO[Rxfifoptr + idx];
  6956  001FF8  0E00               	movlw	low _RxFIFO@SIM800x_SDM$F1166
  6957  001FFA  6E0E               	movwf	??_SIM800xSDMPeek^0,c
  6958  001FFC  0E03               	movlw	high _RxFIFO@SIM800x_SDM$F1166
  6959  001FFE  6E0F               	movwf	(??_SIM800xSDMPeek+1)^0,c
  6960  002000  5010               	movf	SIM800xSDMPeek@idx^0,w,c
  6961  002002  260E               	addwf	??_SIM800xSDMPeek^0,f,c
  6962  002004  0E00               	movlw	0
  6963  002006  220F               	addwfc	(??_SIM800xSDMPeek+1)^0,f,c
  6964  002008  5063               	movf	_Rxfifoptr@SIM800x_SDM$F1167^0,w,c	;volatile
  6965  00200A  240E               	addwf	??_SIM800xSDMPeek^0,w,c
  6966  00200C  6ED9               	movwf	fsr2l,c
  6967  00200E  5064               	movf	(_Rxfifoptr@SIM800x_SDM$F1167+1)^0,w,c	;volatile
  6968  002010  200F               	addwfc	(??_SIM800xSDMPeek+1)^0,w,c
  6969  002012  6EDA               	movwf	fsr2h,c
  6970  002014  50DF               	movf	indf2,w,c
  6971  002016                     l1057:
  6972  002016  FFFF               	dw	65535	; assembler added errata NOP
  6973  002018  0012               	return		;funcret
  6974  00201A  FFFF               	dw	65535	; errata NOP
  6975  00201C                     __end_of_SIM800xSDMPeek:
  6976                           	callstack 0
  6977                           
  6978 ;; *************** function _SIM800xHTTPSetURL *****************
  6979 ;; Defined at:
  6980 ;;		line 1421 in file "Src/SIM800x.c"
  6981 ;; Parameters:    Size  Location     Type
  6982 ;;  url             2   77[COMRAM] PTR const unsigned char 
  6983 ;;		 -> STR_9(279), 
  6984 ;;  errcode         2   79[COMRAM] PTR unsigned int 
  6985 ;;		 -> SystemInit@err(2), 
  6986 ;; Auto vars:     Size  Location     Type
  6987 ;;		None
  6988 ;; Return value:  Size  Location     Type
  6989 ;;                  1    wreg      enum E2115
  6990 ;; Registers used:
  6991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6992 ;; Tracked objects:
  6993 ;;		On entry : 0/0
  6994 ;;		On exit  : 0/0
  6995 ;;		Unchanged: 0/0
  6996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6997 ;;      Params:         4       0       0       0       0       0       0
  6998 ;;      Locals:         0       0       0       0       0       0       0
  6999 ;;      Temps:          0       0       0       0       0       0       0
  7000 ;;      Totals:         4       0       0       0       0       0       0
  7001 ;;Total ram usage:        4 bytes
  7002 ;; Hardware stack levels used: 1
  7003 ;; Hardware stack levels required when called: 7
  7004 ;; This function calls:
  7005 ;;		_ProcessResp4
  7006 ;;		_SIM800xSDMFlush
  7007 ;;		_SIM800xSDMPrint
  7008 ;;		_SIM800xSDMSendByte
  7009 ;;		_strlen
  7010 ;; This function is called by:
  7011 ;;		_SystemInit
  7012 ;; This function uses a non-reentrant model
  7013 ;;
  7014                           
  7015                           	psect	text28
  7016  001D60                     __ptext28:
  7017                           	callstack 0
  7018  001D60                     _SIM800xHTTPSetURL:
  7019                           	callstack 0
  7020  001D60  FFFF               	dw	65535	; assembler added errata NOP
  7021                           
  7022                           ;SIM800x.c: 1424: if(strlen(url) > 500)
  7023                           
  7024                           ;incstack = 0
  7025  001D62  C04E  F00E         	movff	SIM800xHTTPSetURL@url,strlen@s
  7026  001D66  C04F  F00F         	movff	SIM800xHTTPSetURL@url+1,strlen@s+1
  7027  001D6A  EC7B  F00F         	call	_strlen	;wreg free
  7028  001D6E  0EF5               	movlw	245
  7029  001D70  5C0E               	subwf	?_strlen^0,w,c
  7030  001D72  0E01               	movlw	1
  7031  001D74  580F               	subwfb	(?_strlen+1)^0,w,c
  7032  001D76  A0D8               	btfss	status,0,c
  7033  001D78  D002               	goto	l5118
  7034                           
  7035                           ;SIM800x.c: 1425: return SIM800X_ERROR;
  7036  001D7A  0E01               	movlw	1
  7037  001D7C  D018               	goto	l741
  7038  001D7E                     l5118:
  7039  001D7E  FFFF               	dw	65535	; assembler added errata NOP
  7040                           
  7041                           ;SIM800x.c: 1427: SIM800xSDMFlush();
  7042  001D80  ECAE  F010         	call	_SIM800xSDMFlush	;wreg free
  7043                           
  7044                           ;SIM800x.c: 1428: SIM800xSDMPrint("AT+HTTPPARA=\"URL\",");
  7045  001D84  0E54               	movlw	low STR_88
  7046  001D86  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  7047  001D88  0E7D               	movlw	high STR_88
  7048  001D8A  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  7049  001D8C  ECFA  F00D         	call	_SIM800xSDMPrint	;wreg free
  7050                           
  7051                           ;SIM800x.c: 1429: SIM800xSDMPrint(url);
  7052  001D90  C04E  F00F         	movff	SIM800xHTTPSetURL@url,SIM800xSDMPrint@str
  7053  001D94  C04F  F010         	movff	SIM800xHTTPSetURL@url+1,SIM800xSDMPrint@str+1
  7054  001D98  ECFA  F00D         	call	_SIM800xSDMPrint	;wreg free
  7055                           
  7056                           ;SIM800x.c: 1430: SIM800xSDMSendByte('\r');
  7057  001D9C  0E0D               	movlw	13
  7058  001D9E  ECCD  F010         	call	_SIM800xSDMSendByte
  7059                           
  7060                           ;SIM800x.c: 1432: return ProcessResp4(errcode);
  7061  001DA2  C050  F02E         	movff	SIM800xHTTPSetURL@errcode,ProcessResp4@ec
  7062  001DA6  C051  F02F         	movff	SIM800xHTTPSetURL@errcode+1,ProcessResp4@ec+1
  7063  001DAA  ECBF  F009         	call	_ProcessResp4	;wreg free
  7064  001DAE                     l741:
  7065  001DAE  FFFF               	dw	65535	; assembler added errata NOP
  7066  001DB0  0012               	return		;funcret
  7067  001DB2  FFFF               	dw	65535	; errata NOP
  7068  001DB4                     __end_of_SIM800xHTTPSetURL:
  7069                           	callstack 0
  7070                           
  7071 ;; *************** function _SIM800xHTTPSetContent *****************
  7072 ;; Defined at:
  7073 ;;		line 1538 in file "Src/SIM800x.c"
  7074 ;; Parameters:    Size  Location     Type
  7075 ;;  content         2   77[COMRAM] PTR const unsigned char 
  7076 ;;		 -> STR_10(17), 
  7077 ;;  errcode         2   79[COMRAM] PTR unsigned int 
  7078 ;;		 -> SystemInit@err(2), 
  7079 ;; Auto vars:     Size  Location     Type
  7080 ;;		None
  7081 ;; Return value:  Size  Location     Type
  7082 ;;                  1    wreg      enum E2115
  7083 ;; Registers used:
  7084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7085 ;; Tracked objects:
  7086 ;;		On entry : 0/0
  7087 ;;		On exit  : 0/0
  7088 ;;		Unchanged: 0/0
  7089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7090 ;;      Params:         4       0       0       0       0       0       0
  7091 ;;      Locals:         0       0       0       0       0       0       0
  7092 ;;      Temps:          0       0       0       0       0       0       0
  7093 ;;      Totals:         4       0       0       0       0       0       0
  7094 ;;Total ram usage:        4 bytes
  7095 ;; Hardware stack levels used: 1
  7096 ;; Hardware stack levels required when called: 7
  7097 ;; This function calls:
  7098 ;;		_ProcessResp4
  7099 ;;		_SIM800xSDMFlush
  7100 ;;		_SIM800xSDMPrint
  7101 ;;		_SIM800xSDMSendByte
  7102 ;;		_strlen
  7103 ;; This function is called by:
  7104 ;;		_SystemInit
  7105 ;; This function uses a non-reentrant model
  7106 ;;
  7107                           
  7108                           	psect	text29
  7109  001DB4                     __ptext29:
  7110                           	callstack 0
  7111  001DB4                     _SIM800xHTTPSetContent:
  7112                           	callstack 0
  7113  001DB4  FFFF               	dw	65535	; assembler added errata NOP
  7114                           
  7115                           ;SIM800x.c: 1541: if(strlen(content) > 80)
  7116                           
  7117                           ;incstack = 0
  7118  001DB6  C04E  F00E         	movff	SIM800xHTTPSetContent@content,strlen@s
  7119  001DBA  C04F  F00F         	movff	SIM800xHTTPSetContent@content+1,strlen@s+1
  7120  001DBE  EC7B  F00F         	call	_strlen	;wreg free
  7121  001DC2  500F               	movf	(?_strlen+1)^0,w,c
  7122  001DC4  E104               	bnz	u4410
  7123  001DC6  0E51               	movlw	81
  7124  001DC8  5C0E               	subwf	?_strlen^0,w,c
  7125  001DCA  A0D8               	btfss	status,0,c
  7126  001DCC  D002               	goto	l5136
  7127  001DCE                     u4410:
  7128                           
  7129                           ;SIM800x.c: 1542: return SIM800X_ERROR;
  7130  001DCE  0E01               	movlw	1
  7131  001DD0  D018               	goto	l773
  7132  001DD2                     l5136:
  7133  001DD2  FFFF               	dw	65535	; assembler added errata NOP
  7134                           
  7135                           ;SIM800x.c: 1544: SIM800xSDMFlush();
  7136  001DD4  ECAE  F010         	call	_SIM800xSDMFlush	;wreg free
  7137                           
  7138                           ;SIM800x.c: 1545: SIM800xSDMPrint("AT+HTTPPARA=\"CONTENT\",");
  7139  001DD8  0E97               	movlw	low STR_96
  7140  001DDA  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  7141  001DDC  0E7C               	movlw	high STR_96
  7142  001DDE  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  7143  001DE0  ECFA  F00D         	call	_SIM800xSDMPrint	;wreg free
  7144                           
  7145                           ;SIM800x.c: 1546: SIM800xSDMPrint(content);
  7146  001DE4  C04E  F00F         	movff	SIM800xHTTPSetContent@content,SIM800xSDMPrint@str
  7147  001DE8  C04F  F010         	movff	SIM800xHTTPSetContent@content+1,SIM800xSDMPrint@str+1
  7148  001DEC  ECFA  F00D         	call	_SIM800xSDMPrint	;wreg free
  7149                           
  7150                           ;SIM800x.c: 1547: SIM800xSDMSendByte('\r');
  7151  001DF0  0E0D               	movlw	13
  7152  001DF2  ECCD  F010         	call	_SIM800xSDMSendByte
  7153                           
  7154                           ;SIM800x.c: 1549: return ProcessResp4(errcode);
  7155  001DF6  C050  F02E         	movff	SIM800xHTTPSetContent@errcode,ProcessResp4@ec
  7156  001DFA  C051  F02F         	movff	SIM800xHTTPSetContent@errcode+1,ProcessResp4@ec+1
  7157  001DFE  ECBF  F009         	call	_ProcessResp4	;wreg free
  7158  001E02                     l773:
  7159  001E02  FFFF               	dw	65535	; assembler added errata NOP
  7160  001E04  0012               	return		;funcret
  7161  001E06  FFFF               	dw	65535	; errata NOP
  7162  001E08                     __end_of_SIM800xHTTPSetContent:
  7163                           	callstack 0
  7164                           
  7165 ;; *************** function _strlen *****************
  7166 ;; Defined at:
  7167 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\strlen.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;  s               2   13[COMRAM] PTR const unsigned char 
  7170 ;;		 -> SIM800xGPRSGetAddress@str(40), SIM800xIPGetParameters@str(30), SIM800xIPGetState@str(30), txmessage(100), 
  7171 ;;		 -> STR_10(17), STR_9(279), STR_4(9), STR_3(5), 
  7172 ;; Auto vars:     Size  Location     Type
  7173 ;;  cp              2   15[COMRAM] PTR const unsigned char 
  7174 ;;		 -> SIM800xGPRSGetAddress@str(40), SIM800xIPGetParameters@str(30), SIM800xIPGetState@str(30), txmessage(100), 
  7175 ;;		 -> STR_10(17), STR_9(279), STR_4(9), STR_3(5), 
  7176 ;; Return value:  Size  Location     Type
  7177 ;;                  2   13[COMRAM] unsigned int 
  7178 ;; Registers used:
  7179 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7180 ;; Tracked objects:
  7181 ;;		On entry : 0/0
  7182 ;;		On exit  : 0/0
  7183 ;;		Unchanged: 0/0
  7184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7185 ;;      Params:         2       0       0       0       0       0       0
  7186 ;;      Locals:         2       0       0       0       0       0       0
  7187 ;;      Temps:          0       0       0       0       0       0       0
  7188 ;;      Totals:         4       0       0       0       0       0       0
  7189 ;;Total ram usage:        4 bytes
  7190 ;; Hardware stack levels used: 1
  7191 ;; Hardware stack levels required when called: 3
  7192 ;; This function calls:
  7193 ;;		Nothing
  7194 ;; This function is called by:
  7195 ;;		_SIM800xIPSetConnectionType
  7196 ;;		_SIM800xIPSetAPN
  7197 ;;		_SIM800xIPGetState
  7198 ;;		_SIM800xHTTPSetURL
  7199 ;;		_SIM800xHTTPSetContent
  7200 ;;		_SIM800xHTTPInputData
  7201 ;; This function uses a non-reentrant model
  7202 ;;
  7203                           
  7204                           	psect	text30
  7205  001EF6                     __ptext30:
  7206                           	callstack 0
  7207  001EF6                     _strlen:
  7208                           	callstack 0
  7209  001EF6  FFFF               	dw	65535	; assembler added errata NOP
  7210                           
  7211                           ;incstack = 0
  7212  001EF8  C00E  F010         	movff	strlen@s,strlen@cp
  7213  001EFC  C00F  F011         	movff	strlen@s+1,strlen@cp+1
  7214  001F00  D003               	goto	l4716
  7215  001F02                     l4714:
  7216  001F02  FFFF               	dw	65535	; assembler added errata NOP
  7217  001F04  4A10               	infsnz	strlen@cp^0,f,c
  7218  001F06  2A11               	incf	(strlen@cp+1)^0,f,c
  7219  001F08                     l4716:
  7220  001F08  FFFF               	dw	65535	; assembler added errata NOP
  7221  001F0A  C010  FFF6         	movff	strlen@cp,tblptrl
  7222  001F0E  C011  FFF7         	movff	strlen@cp+1,tblptrh
  7223  001F12  6AF8               	clrf	tblptru,c
  7224  001F14  0E05               	movlw	(high __ramtop+-1)
  7225  001F16  64F7               	cpfsgt	tblptrh,c
  7226  001F18  D004               	bra	u3887
  7227  001F1A  0008               	tblrd		*
  7228  001F1C  FFFF               	dw	65535	; errata NOP
  7229  001F1E  50F5               	movf	tablat,w,c
  7230  001F20  D005               	bra	u3880
  7231  001F22                     u3887:
  7232  001F22  CFF6 FFE1          	movff	tblptrl,fsr1l
  7233  001F26  CFF7 FFE2          	movff	tblptrh,fsr1h
  7234  001F2A  50E7               	movf	indf1,w,c
  7235  001F2C                     u3880:
  7236  001F2C  0900               	iorlw	0
  7237  001F2E  A4D8               	btfss	status,2,c
  7238  001F30  D7E8               	goto	l4714
  7239  001F32  500E               	movf	strlen@s^0,w,c
  7240  001F34  5C10               	subwf	strlen@cp^0,w,c
  7241  001F36  6E0E               	movwf	?_strlen^0,c
  7242  001F38  500F               	movf	(strlen@s+1)^0,w,c
  7243  001F3A  5811               	subwfb	(strlen@cp+1)^0,w,c
  7244  001F3C  6E0F               	movwf	(?_strlen+1)^0,c
  7245  001F3E  0012               	return		;funcret
  7246  001F40  FFFF               	dw	65535	; errata NOP
  7247  001F42                     __end_of_strlen:
  7248                           	callstack 0
  7249                           
  7250 ;; *************** function _SIM800xHTTPInit *****************
  7251 ;; Defined at:
  7252 ;;		line 1385 in file "Src/SIM800x.c"
  7253 ;; Parameters:    Size  Location     Type
  7254 ;;  errcode         2   77[COMRAM] PTR unsigned int 
  7255 ;;		 -> SystemInit@err(2), 
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;		None
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  1    wreg      enum E2115
  7260 ;; Registers used:
  7261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7267 ;;      Params:         2       0       0       0       0       0       0
  7268 ;;      Locals:         0       0       0       0       0       0       0
  7269 ;;      Temps:          0       0       0       0       0       0       0
  7270 ;;      Totals:         2       0       0       0       0       0       0
  7271 ;;Total ram usage:        2 bytes
  7272 ;; Hardware stack levels used: 1
  7273 ;; Hardware stack levels required when called: 7
  7274 ;; This function calls:
  7275 ;;		_ProcessResp4
  7276 ;;		_SIM800xSDMFlush
  7277 ;;		_SIM800xSDMPrint
  7278 ;; This function is called by:
  7279 ;;		_SystemInit
  7280 ;; This function uses a non-reentrant model
  7281 ;;
  7282                           
  7283                           	psect	text31
  7284  00210C                     __ptext31:
  7285                           	callstack 0
  7286  00210C                     _SIM800xHTTPInit:
  7287                           	callstack 0
  7288  00210C  FFFF               	dw	65535	; assembler added errata NOP
  7289                           
  7290                           ;SIM800x.c: 1388: SIM800xSDMFlush();
  7291                           
  7292                           ;incstack = 0
  7293  00210E  ECAE  F010         	call	_SIM800xSDMFlush	;wreg free
  7294                           
  7295                           ;SIM800x.c: 1389: SIM800xSDMPrint("AT+HTTPINIT\r");
  7296  002112  0E3C               	movlw	low STR_85
  7297  002114  6E0F               	movwf	SIM800xSDMPrint@str^0,c
  7298  002116  0E7E               	movlw	high STR_85
  7299  002118  6E10               	movwf	(SIM800xSDMPrint@str+1)^0,c
  7300  00211A  ECFA  F00D         	call	_SIM800xSDMPrint	;wreg free
  7301                           
  7302                           ;SIM800x.c: 1390: return ProcessResp4(errcode);
  7303  00211E  C04E  F02E         	movff	SIM800xHTTPInit@errcode,ProcessResp4@ec
  7304  002122  C04F  F02F         	movff	SIM800xHTTPInit@errcode+1,ProcessResp4@ec+1
  7305  002126  ECBF  F009         	call	_ProcessResp4	;wreg free
  7306  00212A  0012               	return		;funcret
  7307  00212C  FFFF               	dw	65535	; errata NOP
  7308  00212E                     __end_of_SIM800xHTTPInit:
  7309                           	callstack 0
  7310                           
  7311 ;; *************** function _SIM800xSDMPrint *****************
  7312 ;; Defined at:
  7313 ;;		line 166 in file "Src/SIM800x_SDM.c"
  7314 ;; Parameters:    Size  Location     Type
  7315 ;;  str             2   14[COMRAM] PTR const unsigned char 
  7316 ;;		 -> STR_107(9), STR_106(8), STR_105(10), STR_104(16), 
  7317 ;;		 -> STR_103(13), STR_102(16), STR_101(14), SIM800xHTTPRead@str(30), 
  7318 ;;		 -> SIM800xHTTPAction@str(30), SIM800xHTTPInputData@str(30), STR_97(24), STR_96(23), 
  7319 ;;		 -> SIM800xHTTPSetTimeout@str(30), SIM800xHTTPSetBreakEnd@str(30), SIM800xHTTPSetBreak@str(30), SIM800xHTTPSetRedir@
      +str(25), 
  7320 ;;		 -> SIM800xHTTPSetPort@str(30), STR_90(21), STR_89(18), STR_88(19), 
  7321 ;;		 -> STR_87(19), STR_86(13), STR_85(13), STR_84(10), 
  7322 ;;		 -> STR_83(11), STR_82(6), STR_81(10), STR_80(11), 
  7323 ;;		 -> STR_79(11), STR_78(12), STR_77(12), STR_76(2), 
  7324 ;;		 -> STR_75(3), STR_74(3), STR_73(2), STR_72(13), 
  7325 ;;		 -> SIM800xGPRSGetAddress@str(40), SIM800xGPRSSetDataMode@str(20), STR_69(12), STR_68(12), 
  7326 ;;		 -> STR_67(11), SIM800xGPRSSetQoSRequest@str(40), SIM800xGPRSSetQoSMin@str(40), STR_64(7), 
  7327 ;;		 -> STR_63(12), STR_62(12), STR_61(12), STR_60(11), 
  7328 ;;		 -> SIM800xIPGetParameters@str(30), STR_58(12), STR_57(12), STR_56(12), 
  7329 ;;		 -> STR_55(9), STR_54(12), SIM800xIPSetRate@str(8), STR_52(13), 
  7330 ;;		 -> STR_51(12), STR_50(8), STR_49(12), STR_48(9), 
  7331 ;;		 -> STR_47(12), STR_46(8), STR_45(12), STR_44(12), 
  7332 ;;		 -> STR_43(12), STR_42(9), STR_41(5), STR_40(8), 
  7333 ;;		 -> STR_39(8), STR_38(8), STR_37(8), STR_36(8), 
  7334 ;;		 -> STR_35(4), STR_34(6), SIM800xSetBaudRate@str(15), STR_32(13), 
  7335 ;;		 -> STR_31(6), SIM800xInit@str(15), STR_29(6), STR_28(4), 
  7336 ;;		 -> STR_10(17), STR_9(279), STR_4(9), STR_3(5), 
  7337 ;; Auto vars:     Size  Location     Type
  7338 ;;		None
  7339 ;; Return value:  Size  Location     Type
  7340 ;;                  1    wreg      void 
  7341 ;; Registers used:
  7342 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7343 ;; Tracked objects:
  7344 ;;		On entry : 0/0
  7345 ;;		On exit  : 0/0
  7346 ;;		Unchanged: 0/0
  7347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7348 ;;      Params:         2       0       0       0       0       0       0
  7349 ;;      Locals:         0       0       0       0       0       0       0
  7350 ;;      Temps:          0       0       0       0       0       0       0
  7351 ;;      Totals:         2       0       0       0       0       0       0
  7352 ;;Total ram usage:        2 bytes
  7353 ;; Hardware stack levels used: 1
  7354 ;; Hardware stack levels required when called: 4
  7355 ;; This function calls:
  7356 ;;		_SIM800xSDMSendByte
  7357 ;; This function is called by:
  7358 ;;		_SIM800xInit
  7359 ;;		_SIM800xIPSetConnectionType
  7360 ;;		_SIM800xIPSetAPN
  7361 ;;		_SIM800xIPOpen
  7362 ;;		_SIM800xIPGetState
  7363 ;;		_SIM800xHTTPInit
  7364 ;;		_SIM800xHTTPSetURL
  7365 ;;		_SIM800xHTTPSetContent
  7366 ;;		_SIM800xHTTPInputData
  7367 ;;		_SIM800xHTTPAction
  7368 ;;		_SIM800xHTTPRead
  7369 ;; This function uses a non-reentrant model
  7370 ;;
  7371                           
  7372                           	psect	text32
  7373  001BF4                     __ptext32:
  7374                           	callstack 0
  7375  001BF4                     _SIM800xSDMPrint:
  7376                           	callstack 0
  7377  001BF4  FFFF               	dw	65535	; assembler added errata NOP
  7378                           
  7379                           ;SIM800x_SDM.c: 168: while(*str!='\0')
  7380                           
  7381                           ;incstack = 0
  7382  001BF6  D016               	goto	l4884
  7383  001BF8                     l4880:
  7384  001BF8  FFFF               	dw	65535	; assembler added errata NOP
  7385                           
  7386                           ;SIM800x_SDM.c: 169: {;SIM800x_SDM.c: 170: SIM800xSDMSendByte(*(str++));
  7387  001BFA  C00F  FFF6         	movff	SIM800xSDMPrint@str,tblptrl
  7388  001BFE  C010  FFF7         	movff	SIM800xSDMPrint@str+1,tblptrh
  7389  001C02  6AF8               	clrf	tblptru,c
  7390  001C04  0E05               	movlw	(high __ramtop+-1)
  7391  001C06  64F7               	cpfsgt	tblptrh,c
  7392  001C08  D004               	bra	u4117
  7393  001C0A  0008               	tblrd		*
  7394  001C0C  FFFF               	dw	65535	; errata NOP
  7395  001C0E  50F5               	movf	tablat,w,c
  7396  001C10  D005               	bra	u4110
  7397  001C12                     u4117:
  7398  001C12  CFF6 FFE1          	movff	tblptrl,fsr1l
  7399  001C16  CFF7 FFE2          	movff	tblptrh,fsr1h
  7400  001C1A  50E7               	movf	indf1,w,c
  7401  001C1C                     u4110:
  7402  001C1C  ECCD  F010         	call	_SIM800xSDMSendByte
  7403  001C20  4A0F               	infsnz	SIM800xSDMPrint@str^0,f,c
  7404  001C22  2A10               	incf	(SIM800xSDMPrint@str+1)^0,f,c
  7405  001C24                     l4884:
  7406  001C24  FFFF               	dw	65535	; assembler added errata NOP
  7407  001C26  C00F  FFF6         	movff	SIM800xSDMPrint@str,tblptrl
  7408  001C2A  C010  FFF7         	movff	SIM800xSDMPrint@str+1,tblptrh
  7409  001C2E  6AF8               	clrf	tblptru,c
  7410  001C30  0E05               	movlw	(high __ramtop+-1)
  7411  001C32  64F7               	cpfsgt	tblptrh,c
  7412  001C34  D004               	bra	u4127
  7413  001C36  0008               	tblrd		*
  7414  001C38  FFFF               	dw	65535	; errata NOP
  7415  001C3A  50F5               	movf	tablat,w,c
  7416  001C3C  D005               	bra	u4120
  7417  001C3E                     u4127:
  7418  001C3E  CFF6 FFE1          	movff	tblptrl,fsr1l
  7419  001C42  CFF7 FFE2          	movff	tblptrh,fsr1h
  7420  001C46  50E7               	movf	indf1,w,c
  7421  001C48                     u4120:
  7422  001C48  0900               	iorlw	0
  7423  001C4A  B4D8               	btfsc	status,2,c
  7424  001C4C  0012               	return		;funcret
  7425  001C4E  FFFF               	dw	65535	; assembler added errata NOP
  7426  001C50  D7D3               	goto	l4880
  7427  001C52  FFFF               	dw	65535	; errata NOP
  7428  001C54                     __end_of_SIM800xSDMPrint:
  7429                           	callstack 0
  7430                           
  7431 ;; *************** function _SIM800xSDMSendByte *****************
  7432 ;; Defined at:
  7433 ;;		line 126 in file "Src/SIM800x_SDM.c"
  7434 ;; Parameters:    Size  Location     Type
  7435 ;;  data            1    wreg     unsigned char 
  7436 ;; Auto vars:     Size  Location     Type
  7437 ;;  data            1   13[COMRAM] unsigned char 
  7438 ;; Return value:  Size  Location     Type
  7439 ;;                  1    wreg      void 
  7440 ;; Registers used:
  7441 ;;		wreg
  7442 ;; Tracked objects:
  7443 ;;		On entry : 0/0
  7444 ;;		On exit  : 0/0
  7445 ;;		Unchanged: 0/0
  7446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7447 ;;      Params:         0       0       0       0       0       0       0
  7448 ;;      Locals:         1       0       0       0       0       0       0
  7449 ;;      Temps:          0       0       0       0       0       0       0
  7450 ;;      Totals:         1       0       0       0       0       0       0
  7451 ;;Total ram usage:        1 bytes
  7452 ;; Hardware stack levels used: 1
  7453 ;; Hardware stack levels required when called: 3
  7454 ;; This function calls:
  7455 ;;		Nothing
  7456 ;; This function is called by:
  7457 ;;		_SIM800xIPSetConnectionType
  7458 ;;		_SIM800xIPSetAPN
  7459 ;;		_SIM800xIPOpen
  7460 ;;		_SIM800xIPGetState
  7461 ;;		_SIM800xHTTPSetURL
  7462 ;;		_SIM800xHTTPSetContent
  7463 ;;		_SIM800xSDMPrint
  7464 ;; This function uses a non-reentrant model
  7465 ;;
  7466                           
  7467                           	psect	text33
  7468  00219A                     __ptext33:
  7469                           	callstack 0
  7470  00219A                     _SIM800xSDMSendByte:
  7471                           	callstack 0
  7472  00219A  FFFF               	dw	65535	; assembler added errata NOP
  7473                           
  7474                           ;incstack = 0
  7475                           ;SIM800xSDMSendByte@data stored from wreg
  7476  00219C  6E0E               	movwf	SIM800xSDMSendByte@data^0,c
  7477  00219E  FFFF               	dw	65535	; assembler added errata NOP
  7478                           
  7479                           ;SIM800x_SDM.c: 136: while(TXSTAbits.TRMT == 0); TXREG = data;;
  7480  0021A0  A2AC               	btfss	172,1,c	;volatile
  7481  0021A2  D7FD               	goto	l4592
  7482  0021A4  C00E  FFAD         	movff	SIM800xSDMSendByte@data,4013	;volatile
  7483  0021A8  0012               	return		;funcret
  7484  0021AA  FFFF               	dw	65535	; errata NOP
  7485  0021AC                     __end_of_SIM800xSDMSendByte:
  7486                           	callstack 0
  7487                           
  7488 ;; *************** function _ProcessResp4 *****************
  7489 ;; Defined at:
  7490 ;;		line 227 in file "Src/SIM800x.c"
  7491 ;; Parameters:    Size  Location     Type
  7492 ;;  ec              2   45[COMRAM] PTR unsigned int 
  7493 ;;		 -> SystemInit@err(2), 
  7494 ;; Auto vars:     Size  Location     Type
  7495 ;;  str            20   51[COMRAM] unsigned char [20]
  7496 ;;  time            4   71[COMRAM] unsigned long 
  7497 ;;  res             2   75[COMRAM] int 
  7498 ;; Return value:  Size  Location     Type
  7499 ;;                  1    wreg      enum E2114
  7500 ;; Registers used:
  7501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7502 ;; Tracked objects:
  7503 ;;		On entry : 0/0
  7504 ;;		On exit  : 0/0
  7505 ;;		Unchanged: 0/0
  7506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7507 ;;      Params:         2       0       0       0       0       0       0
  7508 ;;      Locals:        26       0       0       0       0       0       0
  7509 ;;      Temps:          4       0       0       0       0       0       0
  7510 ;;      Totals:        32       0       0       0       0       0       0
  7511 ;;Total ram usage:       32 bytes
  7512 ;; Hardware stack levels used: 1
  7513 ;; Hardware stack levels required when called: 6
  7514 ;; This function calls:
  7515 ;;		_SIM800xSDMReadF1Pkt
  7516 ;;		_SIM800xSDMRxAvailable
  7517 ;;		_StrToInt
  7518 ;;		_Tick_ms
  7519 ;; This function is called by:
  7520 ;;		_SIM800xHTTPInit
  7521 ;;		_SIM800xHTTPSetURL
  7522 ;;		_SIM800xHTTPSetContent
  7523 ;; This function uses a non-reentrant model
  7524 ;;
  7525                           
  7526                           	psect	text34
  7527  00137E                     __ptext34:
  7528                           	callstack 0
  7529  00137E                     _ProcessResp4:
  7530                           	callstack 0
  7531  00137E  FFFF               	dw	65535	; assembler added errata NOP
  7532                           
  7533                           ;SIM800x.c: 229: uint32_t time = Tick_ms();
  7534                           
  7535                           ;incstack = 0
  7536  001380  ECA3  F010         	call	_Tick_ms	;wreg free
  7537  001384  C00E  F048         	movff	?_Tick_ms,ProcessResp4@time
  7538  001388  C00F  F049         	movff	?_Tick_ms+1,ProcessResp4@time+1
  7539  00138C  C010  F04A         	movff	?_Tick_ms+2,ProcessResp4@time+2
  7540  001390  C011  F04B         	movff	?_Tick_ms+3,ProcessResp4@time+3
  7541                           
  7542                           ;SIM800x.c: 230: while(SIM800xSDMRxAvailable() < 6)
  7543  001394  D01C               	goto	l4816
  7544  001396                     l4810:
  7545  001396  FFFF               	dw	65535	; assembler added errata NOP
  7546                           
  7547                           ;SIM800x.c: 231: {;SIM800x.c: 232: if((Tick_ms() - time) > Tout)
  7548  001398  ECA3  F010         	call	_Tick_ms	;wreg free
  7549  00139C  5048               	movf	ProcessResp4@time^0,w,c
  7550  00139E  5C0E               	subwf	?_Tick_ms^0,w,c
  7551  0013A0  6E30               	movwf	??_ProcessResp4^0,c
  7552  0013A2  5049               	movf	(ProcessResp4@time+1)^0,w,c
  7553  0013A4  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  7554  0013A6  6E31               	movwf	(??_ProcessResp4+1)^0,c
  7555  0013A8  504A               	movf	(ProcessResp4@time+2)^0,w,c
  7556  0013AA  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  7557  0013AC  6E32               	movwf	(??_ProcessResp4+2)^0,c
  7558  0013AE  504B               	movf	(ProcessResp4@time+3)^0,w,c
  7559  0013B0  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  7560  0013B2  6E33               	movwf	(??_ProcessResp4+3)^0,c
  7561  0013B4  5030               	movf	??_ProcessResp4^0,w,c
  7562  0013B6  5C6A               	subwf	_Tout^0,w,c
  7563  0013B8  5031               	movf	(??_ProcessResp4+1)^0,w,c
  7564  0013BA  586B               	subwfb	(_Tout+1)^0,w,c
  7565  0013BC  5032               	movf	(??_ProcessResp4+2)^0,w,c
  7566  0013BE  586C               	subwfb	(_Tout+2)^0,w,c
  7567  0013C0  5033               	movf	(??_ProcessResp4+3)^0,w,c
  7568  0013C2  586D               	subwfb	(_Tout+3)^0,w,c
  7569  0013C4  B0D8               	btfsc	status,0,c
  7570  0013C6  D003               	goto	l4816
  7571  0013C8                     u4010:
  7572  0013C8  FFFF               	dw	65535	; assembler added errata NOP
  7573                           
  7574                           ;SIM800x.c: 233: {;SIM800x.c: 234: return SIM800X_TIME_OUT;
  7575  0013CA  0E05               	movlw	5
  7576  0013CC  D057               	goto	l389
  7577  0013CE                     l4816:
  7578  0013CE  FFFF               	dw	65535	; assembler added errata NOP
  7579  0013D0  EC45  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  7580  0013D4  5014               	movf	(?_SIM800xSDMRxAvailable+1)^0,w,c
  7581  0013D6  E104               	bnz	u4020
  7582  0013D8  0E06               	movlw	6
  7583  0013DA  5C13               	subwf	?_SIM800xSDMRxAvailable^0,w,c
  7584  0013DC  A0D8               	btfss	status,0,c
  7585  0013DE  D7DB               	goto	l4810
  7586  0013E0                     u4020:
  7587                           
  7588                           ;SIM800x.c: 235: };SIM800x.c: 236: };SIM800x.c: 237: char str[20] = {0, 0, 0, 0};
  7589  0013E0  EE20  F034         	lfsr	2,ProcessResp4@str
  7590  0013E4  0E13               	movlw	19
  7591  0013E6                     u4031:
  7592  0013E6  6ADE               	clrf	postinc2,c
  7593  0013E8  06E8               	decf	wreg,f,c
  7594  0013EA  E2FD               	bc	u4031
  7595                           
  7596                           ;SIM800x.c: 240: int res = SIM800xSDMReadF1Pkt(str);
  7597  0013EC  0E34               	movlw	low ProcessResp4@str
  7598  0013EE  6E17               	movwf	SIM800xSDMReadF1Pkt@data^0,c
  7599  0013F0  0E00               	movlw	high ProcessResp4@str
  7600  0013F2  6E18               	movwf	(SIM800xSDMReadF1Pkt@data+1)^0,c
  7601  0013F4  EC28  F009         	call	_SIM800xSDMReadF1Pkt	;wreg free
  7602  0013F8  C017  F04C         	movff	?_SIM800xSDMReadF1Pkt,ProcessResp4@res
  7603  0013FC  C018  F04D         	movff	?_SIM800xSDMReadF1Pkt+1,ProcessResp4@res+1
  7604                           
  7605                           ;SIM800x.c: 241: if(res < 0)
  7606  001400  BE4D               	btfsc	(ProcessResp4@res+1)^0,7,c
  7607  001402  D7E2               	goto	u4010
  7608                           
  7609                           ;SIM800x.c: 245: else if(str[0] == 'O')
  7610  001404  0E4F               	movlw	79
  7611  001406  1834               	xorwf	ProcessResp4@str^0,w,c
  7612  001408  A4D8               	btfss	status,2,c
  7613  00140A  D002               	goto	l4838
  7614                           
  7615                           ;SIM800x.c: 246: {;SIM800x.c: 247: return SIM800X_OK;
  7616  00140C  0E00               	movlw	0
  7617  00140E  D036               	goto	l389
  7618  001410                     l4838:
  7619  001410  FFFF               	dw	65535	; assembler added errata NOP
  7620                           
  7621                           ;SIM800x.c: 249: else if(str[0] == 'E')
  7622  001412  0E45               	movlw	69
  7623  001414  1834               	xorwf	ProcessResp4@str^0,w,c
  7624  001416  A4D8               	btfss	status,2,c
  7625  001418  D002               	goto	l4846
  7626                           
  7627                           ;SIM800x.c: 250: {;SIM800x.c: 251: return SIM800X_ERROR;
  7628  00141A  0E01               	movlw	1
  7629  00141C  D02F               	goto	l389
  7630  00141E                     l4846:
  7631  00141E  FFFF               	dw	65535	; assembler added errata NOP
  7632                           
  7633                           ;SIM800x.c: 253: else if(str[0] == '+')
  7634  001420  0E2B               	movlw	43
  7635  001422  1834               	xorwf	ProcessResp4@str^0,w,c
  7636  001424  A4D8               	btfss	status,2,c
  7637  001426  D01A               	goto	l396
  7638                           
  7639                           ;SIM800x.c: 254: {;SIM800x.c: 255: str[(uint8_t)res] = '\0';
  7640  001428  0E34               	movlw	low ProcessResp4@str
  7641  00142A  244C               	addwf	ProcessResp4@res^0,w,c
  7642  00142C  6ED9               	movwf	fsr2l,c
  7643  00142E  6ADA               	clrf	fsr2h,c
  7644  001430  0E00               	movlw	high ProcessResp4@str
  7645  001432  22DA               	addwfc	fsr2h,f,c
  7646  001434  0E00               	movlw	0
  7647  001436  6EDF               	movwf	indf2,c
  7648                           
  7649                           ;SIM800x.c: 256: *ec = (uint16_t)StrToInt(str, 12, (uint16_t)(res - 1));
  7650  001438  0E34               	movlw	low ProcessResp4@str
  7651  00143A  6E1A               	movwf	StrToInt@str^0,c
  7652  00143C  0E00               	movlw	high ProcessResp4@str
  7653  00143E  6E1B               	movwf	(StrToInt@str+1)^0,c
  7654  001440  0E0C               	movlw	12
  7655  001442  6E1C               	movwf	StrToInt@start^0,c
  7656  001444  044C               	decf	ProcessResp4@res^0,w,c
  7657  001446  6E1D               	movwf	StrToInt@stop^0,c
  7658  001448  ECBE  F007         	call	_StrToInt	;wreg free
  7659  00144C  C02E  FFD9         	movff	ProcessResp4@ec,fsr2l
  7660  001450  C02F  FFDA         	movff	ProcessResp4@ec+1,fsr2h
  7661  001454  C01A  FFDE         	movff	?_StrToInt,postinc2
  7662  001458  C01B  FFDD         	movff	?_StrToInt+1,postdec2
  7663  00145C                     l396:
  7664  00145C  FFFF               	dw	65535	; assembler added errata NOP
  7665                           
  7666                           ;SIM800x.c: 257: };SIM800x.c: 259: if(str[3] == 'E')
  7667  00145E  0E45               	movlw	69
  7668  001460  1837               	xorwf	(ProcessResp4@str+3)^0,w,c
  7669  001462  A4D8               	btfss	status,2,c
  7670  001464  D002               	goto	l4858
  7671                           
  7672                           ;SIM800x.c: 260: return SIM800X_CME_ERROR;
  7673  001466  0E02               	movlw	2
  7674  001468  D009               	goto	l389
  7675  00146A                     l4858:
  7676  00146A  FFFF               	dw	65535	; assembler added errata NOP
  7677                           
  7678                           ;SIM800x.c: 261: if(str[3] == 'S')
  7679  00146C  0E53               	movlw	83
  7680  00146E  1837               	xorwf	(ProcessResp4@str+3)^0,w,c
  7681  001470  A4D8               	btfss	status,2,c
  7682  001472  D002               	goto	l4864
  7683                           
  7684                           ;SIM800x.c: 262: return SIM800X_CMS_ERROR;
  7685  001474  0E03               	movlw	3
  7686  001476  D002               	goto	l389
  7687  001478                     l4864:
  7688  001478  FFFF               	dw	65535	; assembler added errata NOP
  7689                           
  7690                           ;SIM800x.c: 264: return SIM800X_INVALID_RESPONSE;
  7691  00147A  0E08               	movlw	8
  7692  00147C                     l389:
  7693  00147C  FFFF               	dw	65535	; assembler added errata NOP
  7694  00147E  0012               	return		;funcret
  7695  001480  FFFF               	dw	65535	; errata NOP
  7696  001482                     __end_of_ProcessResp4:
  7697                           	callstack 0
  7698                           
  7699 ;; *************** function _StrToInt *****************
  7700 ;; Defined at:
  7701 ;;		line 131 in file "Src/SIM800x.c"
  7702 ;; Parameters:    Size  Location     Type
  7703 ;;  str             2   25[COMRAM] PTR const unsigned char 
  7704 ;;		 -> SIM800x3GPPGetSubscriberNumber@str(40), SIM800x3GPPGetSignalQuality@str(20), SIM800x3GPPGetOperatorName@str(40),
      + SIM800xHTTPReadHeader@str(30), 
  7705 ;;		 -> SIM800xHTTPReadState@str(30), SIM800xHTTPRead@str(30), SIM800xHTTPAction@str(30), SIM800xHTTPInputData@str(30), 
  7706 ;;		 -> SIM800xGPRSGetNRegState@str(20), SIM800xGPRSSetDataMode@str(20), SIM800xGetIMSI@str(20), ProcessResp4@str(20), 
  7707 ;;  start           1   27[COMRAM] unsigned char 
  7708 ;;  stop            1   28[COMRAM] unsigned char 
  7709 ;; Auto vars:     Size  Location     Type
  7710 ;;  j               1   38[COMRAM] unsigned char 
  7711 ;;  i               1   44[COMRAM] unsigned char 
  7712 ;;  po              4   40[COMRAM] unsigned long 
  7713 ;;  val             4   34[COMRAM] unsigned long 
  7714 ;;  ctrl            1   39[COMRAM] unsigned char 
  7715 ;; Return value:  Size  Location     Type
  7716 ;;                  4   25[COMRAM] unsigned long 
  7717 ;; Registers used:
  7718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7719 ;; Tracked objects:
  7720 ;;		On entry : 0/0
  7721 ;;		On exit  : 0/0
  7722 ;;		Unchanged: 0/0
  7723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7724 ;;      Params:         4       0       0       0       0       0       0
  7725 ;;      Locals:        11       0       0       0       0       0       0
  7726 ;;      Temps:          5       0       0       0       0       0       0
  7727 ;;      Totals:        20       0       0       0       0       0       0
  7728 ;;Total ram usage:       20 bytes
  7729 ;; Hardware stack levels used: 1
  7730 ;; Hardware stack levels required when called: 4
  7731 ;; This function calls:
  7732 ;;		___lmul
  7733 ;; This function is called by:
  7734 ;;		_ProcessResp4
  7735 ;;		_SIM800xHTTPInputData
  7736 ;;		_SIM800xHTTPAction
  7737 ;;		_SIM800xHTTPRead
  7738 ;; This function uses a non-reentrant model
  7739 ;;
  7740                           
  7741                           	psect	text35
  7742  000F7C                     __ptext35:
  7743                           	callstack 0
  7744  000F7C                     _StrToInt:
  7745                           	callstack 0
  7746  000F7C  FFFF               	dw	65535	; assembler added errata NOP
  7747                           
  7748                           ;SIM800x.c: 134: uint32_t val = 0, po = 1;
  7749                           
  7750                           ;incstack = 0
  7751  000F7E  0E00               	movlw	0
  7752  000F80  6E23               	movwf	StrToInt@val^0,c
  7753  000F82  0E00               	movlw	0
  7754  000F84  6E24               	movwf	(StrToInt@val+1)^0,c
  7755  000F86  0E00               	movlw	0
  7756  000F88  6E25               	movwf	(StrToInt@val+2)^0,c
  7757  000F8A  0E00               	movlw	0
  7758  000F8C  6E26               	movwf	(StrToInt@val+3)^0,c
  7759  000F8E  0E01               	movlw	1
  7760  000F90  6E29               	movwf	StrToInt@po^0,c
  7761  000F92  0E00               	movlw	0
  7762  000F94  6E2A               	movwf	(StrToInt@po+1)^0,c
  7763  000F96  0E00               	movlw	0
  7764  000F98  6E2B               	movwf	(StrToInt@po+2)^0,c
  7765  000F9A  0E00               	movlw	0
  7766  000F9C  6E2C               	movwf	(StrToInt@po+3)^0,c
  7767                           
  7768                           ;SIM800x.c: 135: uint8_t ctrl = 0;
  7769  000F9E  0E00               	movlw	0
  7770  000FA0  6E28               	movwf	StrToInt@ctrl^0,c
  7771                           
  7772                           ;SIM800x.c: 137: for(uint8_t i = start;i < stop + 1; i++)
  7773  000FA2  C01C  F02D         	movff	StrToInt@start,StrToInt@i
  7774  000FA6  D095               	goto	l4532
  7775  000FA8                     l4502:
  7776  000FA8  FFFF               	dw	65535	; assembler added errata NOP
  7777                           
  7778                           ;SIM800x.c: 138: {;SIM800x.c: 140: if((str[i] >= '0' && str[i] <= '9'))
  7779  000FAA  502D               	movf	StrToInt@i^0,w,c
  7780  000FAC  241A               	addwf	StrToInt@str^0,w,c
  7781  000FAE  6ED9               	movwf	fsr2l,c
  7782  000FB0  0E00               	movlw	0
  7783  000FB2  201B               	addwfc	(StrToInt@str+1)^0,w,c
  7784  000FB4  6EDA               	movwf	fsr2h,c
  7785  000FB6  0E2F               	movlw	47
  7786  000FB8  64DF               	cpfsgt	indf2,c
  7787  000FBA  D072               	goto	l4520
  7788  000FBC  502D               	movf	StrToInt@i^0,w,c
  7789  000FBE  241A               	addwf	StrToInt@str^0,w,c
  7790  000FC0  6ED9               	movwf	fsr2l,c
  7791  000FC2  0E00               	movlw	0
  7792  000FC4  201B               	addwfc	(StrToInt@str+1)^0,w,c
  7793  000FC6  6EDA               	movwf	fsr2h,c
  7794  000FC8  0E3A               	movlw	58
  7795  000FCA  60DF               	cpfslt	indf2,c
  7796  000FCC  D069               	goto	l4520
  7797                           
  7798                           ;SIM800x.c: 141: {;SIM800x.c: 143: ctrl = 1;
  7799  000FCE  0E01               	movlw	1
  7800  000FD0  6E28               	movwf	StrToInt@ctrl^0,c
  7801                           
  7802                           ;SIM800x.c: 145: for(uint8_t j = 0;j < stop - i;j++)
  7803  000FD2  0E00               	movlw	0
  7804  000FD4  6E27               	movwf	StrToInt@j^0,c
  7805  000FD6  D01C               	goto	l4512
  7806  000FD8                     l4508:
  7807  000FD8  FFFF               	dw	65535	; assembler added errata NOP
  7808                           
  7809                           ;SIM800x.c: 146: po = po * 10;
  7810  000FDA  C029  F00E         	movff	StrToInt@po,___lmul@multiplier
  7811  000FDE  C02A  F00F         	movff	StrToInt@po+1,___lmul@multiplier+1
  7812  000FE2  C02B  F010         	movff	StrToInt@po+2,___lmul@multiplier+2
  7813  000FE6  C02C  F011         	movff	StrToInt@po+3,___lmul@multiplier+3
  7814  000FEA  0E0A               	movlw	10
  7815  000FEC  6E12               	movwf	___lmul@multiplicand^0,c
  7816  000FEE  0E00               	movlw	0
  7817  000FF0  6E13               	movwf	(___lmul@multiplicand+1)^0,c
  7818  000FF2  0E00               	movlw	0
  7819  000FF4  6E14               	movwf	(___lmul@multiplicand+2)^0,c
  7820  000FF6  0E00               	movlw	0
  7821  000FF8  6E15               	movwf	(___lmul@multiplicand+3)^0,c
  7822  000FFA  EC2A  F00E         	call	___lmul	;wreg free
  7823  000FFE  C00E  F029         	movff	?___lmul,StrToInt@po
  7824  001002  C00F  F02A         	movff	?___lmul+1,StrToInt@po+1
  7825  001006  C010  F02B         	movff	?___lmul+2,StrToInt@po+2
  7826  00100A  C011  F02C         	movff	?___lmul+3,StrToInt@po+3
  7827  00100E  2A27               	incf	StrToInt@j^0,f,c
  7828  001010                     l4512:
  7829  001010  FFFF               	dw	65535	; assembler added errata NOP
  7830  001012  502D               	movf	StrToInt@i^0,w,c
  7831  001014  C01D  F01E         	movff	StrToInt@stop,??_StrToInt
  7832  001018  6A1F               	clrf	(??_StrToInt+1)^0,c
  7833  00101A  5E1E               	subwf	??_StrToInt^0,f,c
  7834  00101C  0E00               	movlw	0
  7835  00101E  5A1F               	subwfb	(??_StrToInt+1)^0,f,c
  7836  001020  5027               	movf	StrToInt@j^0,w,c
  7837  001022  6E20               	movwf	(??_StrToInt+2)^0,c
  7838  001024  6A21               	clrf	(??_StrToInt+3)^0,c
  7839  001026  501E               	movf	??_StrToInt^0,w,c
  7840  001028  5C20               	subwf	(??_StrToInt+2)^0,w,c
  7841  00102A  5021               	movf	(??_StrToInt+3)^0,w,c
  7842  00102C  0A80               	xorlw	128
  7843  00102E  6E22               	movwf	(??_StrToInt+4)^0,c
  7844  001030  501F               	movf	(??_StrToInt+1)^0,w,c
  7845  001032  0A80               	xorlw	128
  7846  001034  5822               	subwfb	(??_StrToInt+4)^0,w,c
  7847  001036  A0D8               	btfss	status,0,c
  7848  001038  D7CF               	goto	l4508
  7849                           
  7850                           ;SIM800x.c: 148: if(str[i] >= '0' && str[i] <= '9')
  7851  00103A  502D               	movf	StrToInt@i^0,w,c
  7852  00103C  241A               	addwf	StrToInt@str^0,w,c
  7853  00103E  6ED9               	movwf	fsr2l,c
  7854  001040  0E00               	movlw	0
  7855  001042  201B               	addwfc	(StrToInt@str+1)^0,w,c
  7856  001044  6EDA               	movwf	fsr2h,c
  7857  001046  0E2F               	movlw	47
  7858  001048  64DF               	cpfsgt	indf2,c
  7859  00104A  D02A               	goto	l4520
  7860  00104C  502D               	movf	StrToInt@i^0,w,c
  7861  00104E  241A               	addwf	StrToInt@str^0,w,c
  7862  001050  6ED9               	movwf	fsr2l,c
  7863  001052  0E00               	movlw	0
  7864  001054  201B               	addwfc	(StrToInt@str+1)^0,w,c
  7865  001056  6EDA               	movwf	fsr2h,c
  7866  001058  0E3A               	movlw	58
  7867  00105A  60DF               	cpfslt	indf2,c
  7868  00105C  D021               	goto	l4520
  7869                           
  7870                           ;SIM800x.c: 149: val += (uint32_t)((uint8_t)(str[i] - 48) * po);
  7871  00105E  502D               	movf	StrToInt@i^0,w,c
  7872  001060  241A               	addwf	StrToInt@str^0,w,c
  7873  001062  6ED9               	movwf	fsr2l,c
  7874  001064  0E00               	movlw	0
  7875  001066  201B               	addwfc	(StrToInt@str+1)^0,w,c
  7876  001068  6EDA               	movwf	fsr2h,c
  7877  00106A  50DF               	movf	indf2,w,c
  7878  00106C  6E1E               	movwf	??_StrToInt^0,c
  7879  00106E  0ED0               	movlw	208
  7880  001070  261E               	addwf	??_StrToInt^0,f,c
  7881  001072  501E               	movf	??_StrToInt^0,w,c
  7882  001074  6E0E               	movwf	___lmul@multiplier^0,c
  7883  001076  6A0F               	clrf	(___lmul@multiplier+1)^0,c
  7884  001078  6A10               	clrf	(___lmul@multiplier+2)^0,c
  7885  00107A  6A11               	clrf	(___lmul@multiplier+3)^0,c
  7886  00107C  C029  F012         	movff	StrToInt@po,___lmul@multiplicand
  7887  001080  C02A  F013         	movff	StrToInt@po+1,___lmul@multiplicand+1
  7888  001084  C02B  F014         	movff	StrToInt@po+2,___lmul@multiplicand+2
  7889  001088  C02C  F015         	movff	StrToInt@po+3,___lmul@multiplicand+3
  7890  00108C  EC2A  F00E         	call	___lmul	;wreg free
  7891  001090  500E               	movf	?___lmul^0,w,c
  7892  001092  2623               	addwf	StrToInt@val^0,f,c
  7893  001094  500F               	movf	(?___lmul+1)^0,w,c
  7894  001096  2224               	addwfc	(StrToInt@val+1)^0,f,c
  7895  001098  5010               	movf	(?___lmul+2)^0,w,c
  7896  00109A  2225               	addwfc	(StrToInt@val+2)^0,f,c
  7897  00109C  5011               	movf	(?___lmul+3)^0,w,c
  7898  00109E  2226               	addwfc	(StrToInt@val+3)^0,f,c
  7899  0010A0                     l4520:
  7900  0010A0  FFFF               	dw	65535	; assembler added errata NOP
  7901                           
  7902                           ;SIM800x.c: 151: };SIM800x.c: 153: po = 1;
  7903  0010A2  0E01               	movlw	1
  7904  0010A4  6E29               	movwf	StrToInt@po^0,c
  7905  0010A6  0E00               	movlw	0
  7906  0010A8  6E2A               	movwf	(StrToInt@po+1)^0,c
  7907  0010AA  0E00               	movlw	0
  7908  0010AC  6E2B               	movwf	(StrToInt@po+2)^0,c
  7909  0010AE  0E00               	movlw	0
  7910  0010B0  6E2C               	movwf	(StrToInt@po+3)^0,c
  7911                           
  7912                           ;SIM800x.c: 155: if(!ctrl)
  7913  0010B2  5028               	movf	StrToInt@ctrl^0,w,c
  7914  0010B4  A4D8               	btfss	status,2,c
  7915  0010B6  D009               	goto	l4528
  7916                           
  7917                           ;SIM800x.c: 156: return 0;
  7918  0010B8  0E00               	movlw	0
  7919  0010BA  6E1A               	movwf	?_StrToInt^0,c
  7920  0010BC  0E00               	movlw	0
  7921  0010BE  6E1B               	movwf	(?_StrToInt+1)^0,c
  7922  0010C0  0E00               	movlw	0
  7923  0010C2  6E1C               	movwf	(?_StrToInt+2)^0,c
  7924  0010C4  0E00               	movlw	0
  7925  0010C6  6E1D               	movwf	(?_StrToInt+3)^0,c
  7926  0010C8  D021               	goto	l358
  7927  0010CA                     l4528:
  7928  0010CA  FFFF               	dw	65535	; assembler added errata NOP
  7929                           
  7930                           ;SIM800x.c: 158: ctrl = 0;
  7931  0010CC  0E00               	movlw	0
  7932  0010CE  6E28               	movwf	StrToInt@ctrl^0,c
  7933  0010D0  2A2D               	incf	StrToInt@i^0,f,c
  7934  0010D2                     l4532:
  7935  0010D2  FFFF               	dw	65535	; assembler added errata NOP
  7936  0010D4  501D               	movf	StrToInt@stop^0,w,c
  7937  0010D6  6E1E               	movwf	??_StrToInt^0,c
  7938  0010D8  6A1F               	clrf	(??_StrToInt+1)^0,c
  7939  0010DA  0E01               	movlw	1
  7940  0010DC  261E               	addwf	??_StrToInt^0,f,c
  7941  0010DE  0E00               	movlw	0
  7942  0010E0  221F               	addwfc	(??_StrToInt+1)^0,f,c
  7943  0010E2  502D               	movf	StrToInt@i^0,w,c
  7944  0010E4  6E20               	movwf	(??_StrToInt+2)^0,c
  7945  0010E6  6A21               	clrf	(??_StrToInt+3)^0,c
  7946  0010E8  501E               	movf	??_StrToInt^0,w,c
  7947  0010EA  5C20               	subwf	(??_StrToInt+2)^0,w,c
  7948  0010EC  5021               	movf	(??_StrToInt+3)^0,w,c
  7949  0010EE  0A80               	xorlw	128
  7950  0010F0  6E22               	movwf	(??_StrToInt+4)^0,c
  7951  0010F2  501F               	movf	(??_StrToInt+1)^0,w,c
  7952  0010F4  0A80               	xorlw	128
  7953  0010F6  5822               	subwfb	(??_StrToInt+4)^0,w,c
  7954  0010F8  A0D8               	btfss	status,0,c
  7955  0010FA  D756               	goto	l4502
  7956                           
  7957                           ;SIM800x.c: 160: };SIM800x.c: 161: return val;
  7958  0010FC  C023  F01A         	movff	StrToInt@val,?_StrToInt
  7959  001100  C024  F01B         	movff	StrToInt@val+1,?_StrToInt+1
  7960  001104  C025  F01C         	movff	StrToInt@val+2,?_StrToInt+2
  7961  001108  C026  F01D         	movff	StrToInt@val+3,?_StrToInt+3
  7962  00110C                     l358:
  7963  00110C  FFFF               	dw	65535	; assembler added errata NOP
  7964  00110E  0012               	return		;funcret
  7965  001110  FFFF               	dw	65535	; errata NOP
  7966  001112                     __end_of_StrToInt:
  7967                           	callstack 0
  7968                           
  7969 ;; *************** function ___lmul *****************
  7970 ;; Defined at:
  7971 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul32.c"
  7972 ;; Parameters:    Size  Location     Type
  7973 ;;  multiplier      4   13[COMRAM] unsigned long 
  7974 ;;  multiplicand    4   17[COMRAM] unsigned long 
  7975 ;; Auto vars:     Size  Location     Type
  7976 ;;  product         4   21[COMRAM] unsigned long 
  7977 ;; Return value:  Size  Location     Type
  7978 ;;                  4   13[COMRAM] unsigned long 
  7979 ;; Registers used:
  7980 ;;		wreg, status,2, status,0
  7981 ;; Tracked objects:
  7982 ;;		On entry : 0/0
  7983 ;;		On exit  : 0/0
  7984 ;;		Unchanged: 0/0
  7985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7986 ;;      Params:         8       0       0       0       0       0       0
  7987 ;;      Locals:         4       0       0       0       0       0       0
  7988 ;;      Temps:          0       0       0       0       0       0       0
  7989 ;;      Totals:        12       0       0       0       0       0       0
  7990 ;;Total ram usage:       12 bytes
  7991 ;; Hardware stack levels used: 1
  7992 ;; Hardware stack levels required when called: 3
  7993 ;; This function calls:
  7994 ;;		Nothing
  7995 ;; This function is called by:
  7996 ;;		_StrToInt
  7997 ;; This function uses a non-reentrant model
  7998 ;;
  7999                           
  8000                           	psect	text36
  8001  001C54                     __ptext36:
  8002                           	callstack 0
  8003  001C54                     ___lmul:
  8004                           	callstack 0
  8005  001C54  FFFF               	dw	65535	; assembler added errata NOP
  8006                           
  8007                           ;incstack = 0
  8008  001C56  0E00               	movlw	0
  8009  001C58  6E16               	movwf	___lmul@product^0,c
  8010  001C5A  0E00               	movlw	0
  8011  001C5C  6E17               	movwf	(___lmul@product+1)^0,c
  8012  001C5E  0E00               	movlw	0
  8013  001C60  6E18               	movwf	(___lmul@product+2)^0,c
  8014  001C62  0E00               	movlw	0
  8015  001C64  6E19               	movwf	(___lmul@product+3)^0,c
  8016  001C66                     l4490:
  8017  001C66  FFFF               	dw	65535	; assembler added errata NOP
  8018  001C68  A00E               	btfss	___lmul@multiplier^0,0,c
  8019  001C6A  D008               	goto	l4494
  8020  001C6C  5012               	movf	___lmul@multiplicand^0,w,c
  8021  001C6E  2616               	addwf	___lmul@product^0,f,c
  8022  001C70  5013               	movf	(___lmul@multiplicand+1)^0,w,c
  8023  001C72  2217               	addwfc	(___lmul@product+1)^0,f,c
  8024  001C74  5014               	movf	(___lmul@multiplicand+2)^0,w,c
  8025  001C76  2218               	addwfc	(___lmul@product+2)^0,f,c
  8026  001C78  5015               	movf	(___lmul@multiplicand+3)^0,w,c
  8027  001C7A  2219               	addwfc	(___lmul@product+3)^0,f,c
  8028  001C7C                     l4494:
  8029  001C7C  FFFF               	dw	65535	; assembler added errata NOP
  8030  001C7E  90D8               	bcf	status,0,c
  8031  001C80  3612               	rlcf	___lmul@multiplicand^0,f,c
  8032  001C82  3613               	rlcf	(___lmul@multiplicand+1)^0,f,c
  8033  001C84  3614               	rlcf	(___lmul@multiplicand+2)^0,f,c
  8034  001C86  3615               	rlcf	(___lmul@multiplicand+3)^0,f,c
  8035  001C88  90D8               	bcf	status,0,c
  8036  001C8A  3211               	rrcf	(___lmul@multiplier+3)^0,f,c
  8037  001C8C  3210               	rrcf	(___lmul@multiplier+2)^0,f,c
  8038  001C8E  320F               	rrcf	(___lmul@multiplier+1)^0,f,c
  8039  001C90  320E               	rrcf	___lmul@multiplier^0,f,c
  8040  001C92  500E               	movf	___lmul@multiplier^0,w,c
  8041  001C94  100F               	iorwf	(___lmul@multiplier+1)^0,w,c
  8042  001C96  1010               	iorwf	(___lmul@multiplier+2)^0,w,c
  8043  001C98  1011               	iorwf	(___lmul@multiplier+3)^0,w,c
  8044  001C9A  A4D8               	btfss	status,2,c
  8045  001C9C  D7E4               	goto	l4490
  8046  001C9E  C016  F00E         	movff	___lmul@product,?___lmul
  8047  001CA2  C017  F00F         	movff	___lmul@product+1,?___lmul+1
  8048  001CA6  C018  F010         	movff	___lmul@product+2,?___lmul+2
  8049  001CAA  C019  F011         	movff	___lmul@product+3,?___lmul+3
  8050  001CAE  0012               	return		;funcret
  8051  001CB0  FFFF               	dw	65535	; errata NOP
  8052  001CB2                     __end_of___lmul:
  8053                           	callstack 0
  8054                           
  8055 ;; *************** function _SIM800xSDMReadF1Pkt *****************
  8056 ;; Defined at:
  8057 ;;		line 236 in file "Src/SIM800x_SDM.c"
  8058 ;; Parameters:    Size  Location     Type
  8059 ;;  data            2   22[COMRAM] PTR unsigned char 
  8060 ;;		 -> SIM800x3GPPGetSubscriberNumber@str(40), SIM800x3GPPGetSignalQuality@str(20), SIM800x3GPPGetOperatorName@str(40),
      + SIM800xHTTPReadHeader@str(30), 
  8061 ;;		 -> SIM800xHTTPReadState@str(30), SIM800xHTTPRead@str(30), SIM800xHTTPAction@str(30), SIM800xHTTPInputData@str(30), 
  8062 ;;		 -> SIM800xGPRSGetNRegState@str(20), SIM800xGPRSGetAddress@str(40), SIM800xGPRSSetDataMode@str(20), SIM800xIPGetStat
      +e@str(30), 
  8063 ;;		 -> SIM800xGetIMSI@str(20), SIM800xGetSoftwareRevisionID@str(30), ProcessResp4@str(20), 
  8064 ;; Auto vars:     Size  Location     Type
  8065 ;;  time            4   31[COMRAM] unsigned long 
  8066 ;;  val             2   28[COMRAM] unsigned int 
  8067 ;;  tmp             1   35[COMRAM] unsigned char 
  8068 ;;  i               1   30[COMRAM] unsigned char 
  8069 ;; Return value:  Size  Location     Type
  8070 ;;                  2   22[COMRAM] int 
  8071 ;; Registers used:
  8072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8073 ;; Tracked objects:
  8074 ;;		On entry : 0/0
  8075 ;;		On exit  : 0/0
  8076 ;;		Unchanged: 0/0
  8077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8078 ;;      Params:         2       0       0       0       0       0       0
  8079 ;;      Locals:         8       0       0       0       0       0       0
  8080 ;;      Temps:          4       0       0       0       0       0       0
  8081 ;;      Totals:        14       0       0       0       0       0       0
  8082 ;;Total ram usage:       14 bytes
  8083 ;; Hardware stack levels used: 1
  8084 ;; Hardware stack levels required when called: 5
  8085 ;; This function calls:
  8086 ;;		_SIM800xSDMFlush
  8087 ;;		_SIM800xSDMReadByte
  8088 ;;		_SIM800xSDMRxAvailable
  8089 ;;		_Tick_ms
  8090 ;; This function is called by:
  8091 ;;		_ProcessResp2
  8092 ;;		_ProcessResp4
  8093 ;;		_SIM800xHTTPInputData
  8094 ;;		_SIM800xHTTPAction
  8095 ;;		_SIM800xHTTPRead
  8096 ;; This function uses a non-reentrant model
  8097 ;;
  8098                           
  8099                           	psect	text37
  8100  001250                     __ptext37:
  8101                           	callstack 0
  8102  001250                     _SIM800xSDMReadF1Pkt:
  8103                           	callstack 0
  8104  001250  FFFF               	dw	65535	; assembler added errata NOP
  8105                           
  8106                           ;SIM800x_SDM.c: 239: uint8_t i = 0, tmp = 0;
  8107                           
  8108                           ;incstack = 0
  8109  001252  0E00               	movlw	0
  8110  001254  6E1F               	movwf	SIM800xSDMReadF1Pkt@i^0,c
  8111                           
  8112                           ;SIM800x_SDM.c: 240: uint16_t val = SIM800xSDMRxAvailable();
  8113  001256  EC45  F010         	call	_SIM800xSDMRxAvailable	;wreg free
  8114  00125A  C013  F01D         	movff	?_SIM800xSDMRxAvailable,SIM800xSDMReadF1Pkt@val
  8115  00125E  C014  F01E         	movff	?_SIM800xSDMRxAvailable+1,SIM800xSDMReadF1Pkt@val+1
  8116                           
  8117                           ;SIM800x_SDM.c: 242: if(val > 5)
  8118  001262  501E               	movf	(SIM800xSDMReadF1Pkt@val+1)^0,w,c
  8119  001264  E104               	bnz	u3630
  8120  001266  0E06               	movlw	6
  8121  001268  5C1D               	subwf	SIM800xSDMReadF1Pkt@val^0,w,c
  8122  00126A  A0D8               	btfss	status,0,c
  8123  00126C  D081               	goto	u3700
  8124  00126E                     u3630:
  8125                           
  8126                           ;SIM800x_SDM.c: 243: {;SIM800x_SDM.c: 245: tmp = SIM800xSDMReadByte();
  8127  00126E  EC54  F00F         	call	_SIM800xSDMReadByte	;wreg free
  8128  001272  6E24               	movwf	SIM800xSDMReadF1Pkt@tmp^0,c
  8129                           
  8130                           ;SIM800x_SDM.c: 251: if(tmp == 0x0D)
  8131  001274  0E0D               	movlw	13
  8132  001276  1824               	xorwf	SIM800xSDMReadF1Pkt@tmp^0,w,c
  8133  001278  A4D8               	btfss	status,2,c
  8134  00127A  D07A               	goto	u3700
  8135                           
  8136                           ;SIM800x_SDM.c: 252: {;SIM800x_SDM.c: 254: tmp = SIM800xSDMReadByte();
  8137  00127C  EC54  F00F         	call	_SIM800xSDMReadByte	;wreg free
  8138  001280  6E24               	movwf	SIM800xSDMReadF1Pkt@tmp^0,c
  8139                           
  8140                           ;SIM800x_SDM.c: 256: if(tmp == 0x0A)
  8141  001282  0E0A               	movlw	10
  8142  001284  1824               	xorwf	SIM800xSDMReadF1Pkt@tmp^0,w,c
  8143  001286  A4D8               	btfss	status,2,c
  8144  001288  D073               	goto	u3700
  8145                           
  8146                           ;SIM800x_SDM.c: 257: {;SIM800x_SDM.c: 259: uint32_t time = Tick_ms();
  8147  00128A  ECA3  F010         	call	_Tick_ms	;wreg free
  8148  00128E  C00E  F020         	movff	?_Tick_ms,SIM800xSDMReadF1Pkt@time
  8149  001292  C00F  F021         	movff	?_Tick_ms+1,SIM800xSDMReadF1Pkt@time+1
  8150  001296  C010  F022         	movff	?_Tick_ms+2,SIM800xSDMReadF1Pkt@time+2
  8151  00129A  C011  F023         	movff	?_Tick_ms+3,SIM800xSDMReadF1Pkt@time+3
  8152                           
  8153                           ;SIM800x_SDM.c: 261: while((tmp = SIM800xSDMReadByte()) != 0x0D)
  8154  00129E  D035               	goto	l4578
  8155  0012A0                     l4560:
  8156  0012A0  FFFF               	dw	65535	; assembler added errata NOP
  8157                           
  8158                           ;SIM800x_SDM.c: 262: {;SIM800x_SDM.c: 264: if(tmp != 0xFF)
  8159  0012A2  2824               	incf	SIM800xSDMReadF1Pkt@tmp^0,w,c
  8160  0012A4  B4D8               	btfsc	status,2,c
  8161  0012A6  D013               	goto	l4570
  8162                           
  8163                           ;SIM800x_SDM.c: 265: {;SIM800x_SDM.c: 272: *(data++) = tmp;
  8164  0012A8  C017  FFD9         	movff	SIM800xSDMReadF1Pkt@data,fsr2l
  8165  0012AC  C018  FFDA         	movff	SIM800xSDMReadF1Pkt@data+1,fsr2h
  8166  0012B0  C024  FFDF         	movff	SIM800xSDMReadF1Pkt@tmp,indf2
  8167  0012B4  4A17               	infsnz	SIM800xSDMReadF1Pkt@data^0,f,c
  8168  0012B6  2A18               	incf	(SIM800xSDMReadF1Pkt@data+1)^0,f,c
  8169                           
  8170                           ;SIM800x_SDM.c: 273: ++i;
  8171  0012B8  2A1F               	incf	SIM800xSDMReadF1Pkt@i^0,f,c
  8172                           
  8173                           ;SIM800x_SDM.c: 274: time = Tick_ms();
  8174  0012BA  ECA3  F010         	call	_Tick_ms	;wreg free
  8175  0012BE  C00E  F020         	movff	?_Tick_ms,SIM800xSDMReadF1Pkt@time
  8176  0012C2  C00F  F021         	movff	?_Tick_ms+1,SIM800xSDMReadF1Pkt@time+1
  8177  0012C6  C010  F022         	movff	?_Tick_ms+2,SIM800xSDMReadF1Pkt@time+2
  8178  0012CA  C011  F023         	movff	?_Tick_ms+3,SIM800xSDMReadF1Pkt@time+3
  8179  0012CE                     l4570:
  8180  0012CE  FFFF               	dw	65535	; assembler added errata NOP
  8181                           
  8182                           ;SIM800x_SDM.c: 275: };SIM800x_SDM.c: 277: if((Tick_ms() - time) > Tout)
  8183  0012D0  ECA3  F010         	call	_Tick_ms	;wreg free
  8184  0012D4  5020               	movf	SIM800xSDMReadF1Pkt@time^0,w,c
  8185  0012D6  5C0E               	subwf	?_Tick_ms^0,w,c
  8186  0012D8  6E19               	movwf	??_SIM800xSDMReadF1Pkt^0,c
  8187  0012DA  5021               	movf	(SIM800xSDMReadF1Pkt@time+1)^0,w,c
  8188  0012DC  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  8189  0012DE  6E1A               	movwf	(??_SIM800xSDMReadF1Pkt+1)^0,c
  8190  0012E0  5022               	movf	(SIM800xSDMReadF1Pkt@time+2)^0,w,c
  8191  0012E2  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  8192  0012E4  6E1B               	movwf	(??_SIM800xSDMReadF1Pkt+2)^0,c
  8193  0012E6  5023               	movf	(SIM800xSDMReadF1Pkt@time+3)^0,w,c
  8194  0012E8  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  8195  0012EA  6E1C               	movwf	(??_SIM800xSDMReadF1Pkt+3)^0,c
  8196  0012EC  501C               	movf	(??_SIM800xSDMReadF1Pkt+3)^0,w,c
  8197  0012EE  101B               	iorwf	(??_SIM800xSDMReadF1Pkt+2)^0,w,c
  8198  0012F0  E106               	bnz	u3670
  8199  0012F2  0ED1               	movlw	209
  8200  0012F4  5C19               	subwf	??_SIM800xSDMReadF1Pkt^0,w,c
  8201  0012F6  0E07               	movlw	7
  8202  0012F8  581A               	subwfb	(??_SIM800xSDMReadF1Pkt+1)^0,w,c
  8203  0012FA  A0D8               	btfss	status,0,c
  8204  0012FC  D006               	goto	l4578
  8205  0012FE                     u3670:
  8206  0012FE  FFFF               	dw	65535	; assembler added errata NOP
  8207  001300                     l4572:
  8208                           
  8209                           ;SIM800x_SDM.c: 278: {;SIM800x_SDM.c: 279: SIM800xSDMFlush();
  8210  001300  ECAE  F010         	call	_SIM800xSDMFlush	;wreg free
  8211                           
  8212                           ;SIM800x_SDM.c: 280: return -1;
  8213  001304  6817               	setf	?_SIM800xSDMReadF1Pkt^0,c
  8214  001306  6818               	setf	(?_SIM800xSDMReadF1Pkt+1)^0,c
  8215  001308  D037               	goto	l1070
  8216  00130A                     l4578:
  8217  00130A  FFFF               	dw	65535	; assembler added errata NOP
  8218  00130C  EC54  F00F         	call	_SIM800xSDMReadByte	;wreg free
  8219  001310  6E24               	movwf	SIM800xSDMReadF1Pkt@tmp^0,c
  8220  001312  0E0D               	movlw	13
  8221  001314  1824               	xorwf	SIM800xSDMReadF1Pkt@tmp^0,w,c
  8222  001316  A4D8               	btfss	status,2,c
  8223  001318  D7C3               	goto	l4560
  8224                           
  8225                           ;SIM800x_SDM.c: 281: };SIM800x_SDM.c: 283: };SIM800x_SDM.c: 285: time = Tick_ms();
  8226  00131A  ECA3  F010         	call	_Tick_ms	;wreg free
  8227  00131E  C00E  F020         	movff	?_Tick_ms,SIM800xSDMReadF1Pkt@time
  8228  001322  C00F  F021         	movff	?_Tick_ms+1,SIM800xSDMReadF1Pkt@time+1
  8229  001326  C010  F022         	movff	?_Tick_ms+2,SIM800xSDMReadF1Pkt@time+2
  8230  00132A  C011  F023         	movff	?_Tick_ms+3,SIM800xSDMReadF1Pkt@time+3
  8231                           
  8232                           ;SIM800x_SDM.c: 287: while((tmp = SIM800xSDMReadByte()) != 0x0A)
  8233  00132E  D018               	goto	l4590
  8234  001330                     l4582:
  8235  001330  FFFF               	dw	65535	; assembler added errata NOP
  8236                           
  8237                           ;SIM800x_SDM.c: 288: {;SIM800x_SDM.c: 290: if((Tick_ms() - time) > Tout)
  8238  001332  ECA3  F010         	call	_Tick_ms	;wreg free
  8239  001336  5020               	movf	SIM800xSDMReadF1Pkt@time^0,w,c
  8240  001338  5C0E               	subwf	?_Tick_ms^0,w,c
  8241  00133A  6E19               	movwf	??_SIM800xSDMReadF1Pkt^0,c
  8242  00133C  5021               	movf	(SIM800xSDMReadF1Pkt@time+1)^0,w,c
  8243  00133E  580F               	subwfb	(?_Tick_ms+1)^0,w,c
  8244  001340  6E1A               	movwf	(??_SIM800xSDMReadF1Pkt+1)^0,c
  8245  001342  5022               	movf	(SIM800xSDMReadF1Pkt@time+2)^0,w,c
  8246  001344  5810               	subwfb	(?_Tick_ms+2)^0,w,c
  8247  001346  6E1B               	movwf	(??_SIM800xSDMReadF1Pkt+2)^0,c
  8248  001348  5023               	movf	(SIM800xSDMReadF1Pkt@time+3)^0,w,c
  8249  00134A  5811               	subwfb	(?_Tick_ms+3)^0,w,c
  8250  00134C  6E1C               	movwf	(??_SIM800xSDMReadF1Pkt+3)^0,c
  8251  00134E  501C               	movf	(??_SIM800xSDMReadF1Pkt+3)^0,w,c
  8252  001350  101B               	iorwf	(??_SIM800xSDMReadF1Pkt+2)^0,w,c
  8253  001352  E1D6               	bnz	l4572
  8254  001354  0ED1               	movlw	209
  8255  001356  5C19               	subwf	??_SIM800xSDMReadF1Pkt^0,w,c
  8256  001358  0E07               	movlw	7
  8257  00135A  581A               	subwfb	(??_SIM800xSDMReadF1Pkt+1)^0,w,c
  8258  00135C  B0D8               	btfsc	status,0,c
  8259  00135E  D7CF               	goto	u3670
  8260  001360                     l4590:
  8261  001360  FFFF               	dw	65535	; assembler added errata NOP
  8262  001362  EC54  F00F         	call	_SIM800xSDMReadByte	;wreg free
  8263  001366  6E24               	movwf	SIM800xSDMReadF1Pkt@tmp^0,c
  8264  001368  0E0A               	movlw	10
  8265  00136A  1824               	xorwf	SIM800xSDMReadF1Pkt@tmp^0,w,c
  8266  00136C  A4D8               	btfss	status,2,c
  8267  00136E  D7E0               	goto	l4582
  8268  001370                     u3700:
  8269  001370  FFFF               	dw	65535	; assembler added errata NOP
  8270                           
  8271                           ;SIM800x_SDM.c: 294: };SIM800x_SDM.c: 296: };SIM800x_SDM.c: 297: };SIM800x_SDM.c: 298: }
      +                          ;SIM800x_SDM.c: 304: };SIM800x_SDM.c: 306: return i;
  8272  001372  C01F  F017         	movff	SIM800xSDMReadF1Pkt@i,?_SIM800xSDMReadF1Pkt
  8273  001376  6A18               	clrf	(?_SIM800xSDMReadF1Pkt+1)^0,c
  8274  001378                     l1070:
  8275  001378  FFFF               	dw	65535	; assembler added errata NOP
  8276  00137A  0012               	return		;funcret
  8277  00137C  FFFF               	dw	65535	; errata NOP
  8278  00137E                     __end_of_SIM800xSDMReadF1Pkt:
  8279                           	callstack 0
  8280                           
  8281 ;; *************** function _Tick_ms *****************
  8282 ;; Defined at:
  8283 ;;		line 76 in file "Src/SystemTime.c"
  8284 ;; Parameters:    Size  Location     Type
  8285 ;;		None
  8286 ;; Auto vars:     Size  Location     Type
  8287 ;;		None
  8288 ;; Return value:  Size  Location     Type
  8289 ;;                  4   13[COMRAM] unsigned long 
  8290 ;; Registers used:
  8291 ;;		None
  8292 ;; Tracked objects:
  8293 ;;		On entry : 0/0
  8294 ;;		On exit  : 0/0
  8295 ;;		Unchanged: 0/0
  8296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8297 ;;      Params:         4       0       0       0       0       0       0
  8298 ;;      Locals:         0       0       0       0       0       0       0
  8299 ;;      Temps:          0       0       0       0       0       0       0
  8300 ;;      Totals:         4       0       0       0       0       0       0
  8301 ;;Total ram usage:        4 bytes
  8302 ;; Hardware stack levels used: 1
  8303 ;; Hardware stack levels required when called: 3
  8304 ;; This function calls:
  8305 ;;		Nothing
  8306 ;; This function is called by:
  8307 ;;		_ProcessResp1
  8308 ;;		_ProcessResp2
  8309 ;;		_ProcessResp4
  8310 ;;		_SIM800xIPGetState
  8311 ;;		_SIM800xHTTPInputData
  8312 ;;		_SIM800xHTTPAction
  8313 ;;		_SIM800xHTTPRead
  8314 ;;		_SIM800xSDMReadF1Pkt
  8315 ;; This function uses a non-reentrant model
  8316 ;;
  8317                           
  8318                           	psect	text38
  8319  002146                     __ptext38:
  8320                           	callstack 0
  8321  002146                     _Tick_ms:
  8322                           	callstack 0
  8323  002146  FFFF               	dw	65535	; assembler added errata NOP
  8324                           
  8325                           ;SystemTime.c: 79: return IncVar;
  8326                           
  8327                           ;incstack = 0
  8328  002148  C05D  F00E         	movff	_IncVar,?_Tick_ms	;volatile
  8329  00214C  C05E  F00F         	movff	_IncVar+1,?_Tick_ms+1	;volatile
  8330  002150  C05F  F010         	movff	_IncVar+2,?_Tick_ms+2	;volatile
  8331  002154  C060  F011         	movff	_IncVar+3,?_Tick_ms+3	;volatile
  8332  002158  0012               	return		;funcret
  8333  00215A  FFFF               	dw	65535	; errata NOP
  8334  00215C                     __end_of_Tick_ms:
  8335                           	callstack 0
  8336                           
  8337 ;; *************** function _SIM800xSDMRxAvailable *****************
  8338 ;; Defined at:
  8339 ;;		line 118 in file "Src/SIM800x_SDM.c"
  8340 ;; Parameters:    Size  Location     Type
  8341 ;;		None
  8342 ;; Auto vars:     Size  Location     Type
  8343 ;;		None
  8344 ;; Return value:  Size  Location     Type
  8345 ;;                  2   18[COMRAM] unsigned int 
  8346 ;; Registers used:
  8347 ;;		wreg, status,2, status,0, cstack
  8348 ;; Tracked objects:
  8349 ;;		On entry : 0/0
  8350 ;;		On exit  : 0/0
  8351 ;;		Unchanged: 0/0
  8352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8353 ;;      Params:         2       0       0       0       0       0       0
  8354 ;;      Locals:         0       0       0       0       0       0       0
  8355 ;;      Temps:          2       0       0       0       0       0       0
  8356 ;;      Totals:         4       0       0       0       0       0       0
  8357 ;;Total ram usage:        4 bytes
  8358 ;; Hardware stack levels used: 1
  8359 ;; Hardware stack levels required when called: 4
  8360 ;; This function calls:
  8361 ;;		___lwmod
  8362 ;; This function is called by:
  8363 ;;		_ProcessResp1
  8364 ;;		_ProcessResp4
  8365 ;;		_SIM800xInit
  8366 ;;		_SIM800xIPGetState
  8367 ;;		_SIM800xHTTPInputData
  8368 ;;		_SIM800xHTTPAction
  8369 ;;		_SIM800xHTTPRead
  8370 ;;		_SIM800xSDMReadF1Pkt
  8371 ;; This function uses a non-reentrant model
  8372 ;;
  8373                           
  8374                           	psect	text39
  8375  00208A                     __ptext39:
  8376                           	callstack 0
  8377  00208A                     _SIM800xSDMRxAvailable:
  8378                           	callstack 0
  8379  00208A  FFFF               	dw	65535	; assembler added errata NOP
  8380                           
  8381                           ;SIM800x_SDM.c: 121: return (uint16_t)((Rxfifocurrent + 200 - Rxfifoptr) % 200);
  8382                           
  8383                           ;incstack = 0
  8384  00208C  5063               	movf	_Rxfifoptr@SIM800x_SDM$F1167^0,w,c	;volatile
  8385  00208E  5C61               	subwf	_Rxfifocurrent@SIM800x_SDM$F1168^0,w,c	;volatile
  8386  002090  6E15               	movwf	??_SIM800xSDMRxAvailable^0,c
  8387  002092  5064               	movf	(_Rxfifoptr@SIM800x_SDM$F1167+1)^0,w,c	;volatile
  8388  002094  5862               	subwfb	(_Rxfifocurrent@SIM800x_SDM$F1168+1)^0,w,c	;volatile
  8389  002096  6E16               	movwf	(??_SIM800xSDMRxAvailable+1)^0,c
  8390  002098  0EC8               	movlw	200
  8391  00209A  2415               	addwf	??_SIM800xSDMRxAvailable^0,w,c
  8392  00209C  6E0E               	movwf	___lwmod@dividend^0,c
  8393  00209E  0E00               	movlw	0
  8394  0020A0  2016               	addwfc	(??_SIM800xSDMRxAvailable+1)^0,w,c
  8395  0020A2  6E0F               	movwf	(___lwmod@dividend+1)^0,c
  8396  0020A4  0E00               	movlw	0
  8397  0020A6  6E11               	movwf	(___lwmod@divisor+1)^0,c
  8398  0020A8  0EC8               	movlw	200
  8399  0020AA  6E10               	movwf	___lwmod@divisor^0,c
  8400  0020AC  EC04  F00F         	call	___lwmod	;wreg free
  8401  0020B0  C00E  F013         	movff	?___lwmod,?_SIM800xSDMRxAvailable
  8402  0020B4  C00F  F014         	movff	?___lwmod+1,?_SIM800xSDMRxAvailable+1
  8403  0020B8  0012               	return		;funcret
  8404  0020BA  FFFF               	dw	65535	; errata NOP
  8405  0020BC                     __end_of_SIM800xSDMRxAvailable:
  8406                           	callstack 0
  8407                           
  8408 ;; *************** function _SIM800xSDMReadByte *****************
  8409 ;; Defined at:
  8410 ;;		line 175 in file "Src/SIM800x_SDM.c"
  8411 ;; Parameters:    Size  Location     Type
  8412 ;;		None
  8413 ;; Auto vars:     Size  Location     Type
  8414 ;;  data            1   18[COMRAM] unsigned char 
  8415 ;; Return value:  Size  Location     Type
  8416 ;;                  1    wreg      unsigned char 
  8417 ;; Registers used:
  8418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8419 ;; Tracked objects:
  8420 ;;		On entry : 0/0
  8421 ;;		On exit  : 0/0
  8422 ;;		Unchanged: 0/0
  8423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8424 ;;      Params:         0       0       0       0       0       0       0
  8425 ;;      Locals:         1       0       0       0       0       0       0
  8426 ;;      Temps:          0       0       0       0       0       0       0
  8427 ;;      Totals:         1       0       0       0       0       0       0
  8428 ;;Total ram usage:        1 bytes
  8429 ;; Hardware stack levels used: 1
  8430 ;; Hardware stack levels required when called: 4
  8431 ;; This function calls:
  8432 ;;		___lwmod
  8433 ;; This function is called by:
  8434 ;;		_SIM800xInit
  8435 ;;		_SIM800xHTTPRead
  8436 ;;		_SIM800xSDMReadF1Pkt
  8437 ;; This function uses a non-reentrant model
  8438 ;;
  8439                           
  8440                           	psect	text40
  8441  001EA8                     __ptext40:
  8442                           	callstack 0
  8443  001EA8                     _SIM800xSDMReadByte:
  8444                           	callstack 0
  8445  001EA8  FFFF               	dw	65535	; assembler added errata NOP
  8446                           
  8447                           ;SIM800x_SDM.c: 178: if(Rxfifocurrent == Rxfifoptr)
  8448                           
  8449                           ;incstack = 0
  8450  001EAA  5063               	movf	_Rxfifoptr@SIM800x_SDM$F1167^0,w,c	;volatile
  8451  001EAC  1861               	xorwf	_Rxfifocurrent@SIM800x_SDM$F1168^0,w,c	;volatile
  8452  001EAE  E106               	bnz	l4480
  8453  001EB0  5064               	movf	(_Rxfifoptr@SIM800x_SDM$F1167+1)^0,w,c	;volatile
  8454  001EB2  1862               	xorwf	(_Rxfifocurrent@SIM800x_SDM$F1168+1)^0,w,c	;volatile
  8455  001EB4  A4D8               	btfss	status,2,c
  8456  001EB6  D002               	goto	l4480
  8457                           
  8458                           ;SIM800x_SDM.c: 179: return 0xFF;
  8459  001EB8  0EFF               	movlw	255
  8460  001EBA  D01A               	goto	l1045
  8461  001EBC                     l4480:
  8462  001EBC  FFFF               	dw	65535	; assembler added errata NOP
  8463                           
  8464                           ;SIM800x_SDM.c: 181: uint8_t data = RxFIFO[Rxfifoptr];
  8465  001EBE  0E00               	movlw	low _RxFIFO@SIM800x_SDM$F1166
  8466  001EC0  2463               	addwf	_Rxfifoptr@SIM800x_SDM$F1167^0,w,c	;volatile
  8467  001EC2  6ED9               	movwf	fsr2l,c
  8468  001EC4  0E03               	movlw	high _RxFIFO@SIM800x_SDM$F1166
  8469  001EC6  2064               	addwfc	(_Rxfifoptr@SIM800x_SDM$F1167+1)^0,w,c	;volatile
  8470  001EC8  6EDA               	movwf	fsr2h,c
  8471  001ECA  50DF               	movf	indf2,w,c
  8472  001ECC  6E13               	movwf	SIM800xSDMReadByte@data^0,c
  8473                           
  8474                           ;SIM800x_SDM.c: 182: Rxfifoptr = (uint16_t)((Rxfifoptr + 1) % 200);
  8475  001ECE  0E01               	movlw	1
  8476  001ED0  2463               	addwf	_Rxfifoptr@SIM800x_SDM$F1167^0,w,c	;volatile
  8477  001ED2  6E0E               	movwf	___lwmod@dividend^0,c
  8478  001ED4  0E00               	movlw	0
  8479  001ED6  2064               	addwfc	(_Rxfifoptr@SIM800x_SDM$F1167+1)^0,w,c	;volatile
  8480  001ED8  6E0F               	movwf	(___lwmod@dividend+1)^0,c
  8481  001EDA  0E00               	movlw	0
  8482  001EDC  6E11               	movwf	(___lwmod@divisor+1)^0,c
  8483  001EDE  0EC8               	movlw	200
  8484  001EE0  6E10               	movwf	___lwmod@divisor^0,c
  8485  001EE2  EC04  F00F         	call	___lwmod	;wreg free
  8486  001EE6  C00E  F063         	movff	?___lwmod,_Rxfifoptr@SIM800x_SDM$F1167	;volatile
  8487  001EEA  C00F  F064         	movff	?___lwmod+1,_Rxfifoptr@SIM800x_SDM$F1167+1	;volatile
  8488                           
  8489                           ;SIM800x_SDM.c: 184: return data;
  8490  001EEE  5013               	movf	SIM800xSDMReadByte@data^0,w,c
  8491  001EF0                     l1045:
  8492  001EF0  FFFF               	dw	65535	; assembler added errata NOP
  8493  001EF2  0012               	return		;funcret
  8494  001EF4  FFFF               	dw	65535	; errata NOP
  8495  001EF6                     __end_of_SIM800xSDMReadByte:
  8496                           	callstack 0
  8497                           
  8498 ;; *************** function ___lwmod *****************
  8499 ;; Defined at:
  8500 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  8501 ;; Parameters:    Size  Location     Type
  8502 ;;  dividend        2   13[COMRAM] unsigned int 
  8503 ;;  divisor         2   15[COMRAM] unsigned int 
  8504 ;; Auto vars:     Size  Location     Type
  8505 ;;  counter         1   17[COMRAM] unsigned char 
  8506 ;; Return value:  Size  Location     Type
  8507 ;;                  2   13[COMRAM] unsigned int 
  8508 ;; Registers used:
  8509 ;;		wreg, status,2, status,0
  8510 ;; Tracked objects:
  8511 ;;		On entry : 0/0
  8512 ;;		On exit  : 0/0
  8513 ;;		Unchanged: 0/0
  8514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8515 ;;      Params:         4       0       0       0       0       0       0
  8516 ;;      Locals:         1       0       0       0       0       0       0
  8517 ;;      Temps:          0       0       0       0       0       0       0
  8518 ;;      Totals:         5       0       0       0       0       0       0
  8519 ;;Total ram usage:        5 bytes
  8520 ;; Hardware stack levels used: 1
  8521 ;; Hardware stack levels required when called: 3
  8522 ;; This function calls:
  8523 ;;		Nothing
  8524 ;; This function is called by:
  8525 ;;		_SIM800xSDMRxAvailable
  8526 ;;		_SIM800xSDMReadByte
  8527 ;; This function uses a non-reentrant model
  8528 ;;
  8529                           
  8530                           	psect	text41
  8531  001E08                     __ptext41:
  8532                           	callstack 0
  8533  001E08                     ___lwmod:
  8534                           	callstack 0
  8535  001E08  FFFF               	dw	65535	; assembler added errata NOP
  8536                           
  8537                           ;incstack = 0
  8538  001E0A  5010               	movf	___lwmod@divisor^0,w,c
  8539  001E0C  1011               	iorwf	(___lwmod@divisor+1)^0,w,c
  8540  001E0E  B4D8               	btfsc	status,2,c
  8541  001E10  D01C               	goto	l1730
  8542  001E12  0E01               	movlw	1
  8543  001E14  6E12               	movwf	___lwmod@counter^0,c
  8544  001E16  D005               	goto	l4456
  8545  001E18                     l4454:
  8546  001E18  FFFF               	dw	65535	; assembler added errata NOP
  8547  001E1A  90D8               	bcf	status,0,c
  8548  001E1C  3610               	rlcf	___lwmod@divisor^0,f,c
  8549  001E1E  3611               	rlcf	(___lwmod@divisor+1)^0,f,c
  8550  001E20  2A12               	incf	___lwmod@counter^0,f,c
  8551  001E22                     l4456:
  8552  001E22  FFFF               	dw	65535	; assembler added errata NOP
  8553  001E24  AE11               	btfss	(___lwmod@divisor+1)^0,7,c
  8554  001E26  D7F8               	goto	l4454
  8555  001E28                     u3500:
  8556  001E28  FFFF               	dw	65535	; assembler added errata NOP
  8557  001E2A  5010               	movf	___lwmod@divisor^0,w,c
  8558  001E2C  5C0E               	subwf	___lwmod@dividend^0,w,c
  8559  001E2E  5011               	movf	(___lwmod@divisor+1)^0,w,c
  8560  001E30  580F               	subwfb	(___lwmod@dividend+1)^0,w,c
  8561  001E32  A0D8               	btfss	status,0,c
  8562  001E34  D004               	goto	l4462
  8563  001E36  5010               	movf	___lwmod@divisor^0,w,c
  8564  001E38  5E0E               	subwf	___lwmod@dividend^0,f,c
  8565  001E3A  5011               	movf	(___lwmod@divisor+1)^0,w,c
  8566  001E3C  5A0F               	subwfb	(___lwmod@dividend+1)^0,f,c
  8567  001E3E                     l4462:
  8568  001E3E  FFFF               	dw	65535	; assembler added errata NOP
  8569  001E40  90D8               	bcf	status,0,c
  8570  001E42  3211               	rrcf	(___lwmod@divisor+1)^0,f,c
  8571  001E44  3210               	rrcf	___lwmod@divisor^0,f,c
  8572  001E46  2E12               	decfsz	___lwmod@counter^0,f,c
  8573  001E48  D7EF               	goto	u3500
  8574  001E4A                     l1730:
  8575  001E4A  FFFF               	dw	65535	; assembler added errata NOP
  8576  001E4C  C00E  F00E         	movff	___lwmod@dividend,?___lwmod
  8577  001E50  C00F  F00F         	movff	___lwmod@dividend+1,?___lwmod+1
  8578  001E54  0012               	return		;funcret
  8579  001E56  FFFF               	dw	65535	; errata NOP
  8580  001E58                     __end_of___lwmod:
  8581                           	callstack 0
  8582                           
  8583 ;; *************** function _SIM800xSDMFlush *****************
  8584 ;; Defined at:
  8585 ;;		line 227 in file "Src/SIM800x_SDM.c"
  8586 ;; Parameters:    Size  Location     Type
  8587 ;;		None
  8588 ;; Auto vars:     Size  Location     Type
  8589 ;;		None
  8590 ;; Return value:  Size  Location     Type
  8591 ;;                  1    wreg      void 
  8592 ;; Registers used:
  8593 ;;		wreg, status,2
  8594 ;; Tracked objects:
  8595 ;;		On entry : 0/0
  8596 ;;		On exit  : 0/0
  8597 ;;		Unchanged: 0/0
  8598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8599 ;;      Params:         0       0       0       0       0       0       0
  8600 ;;      Locals:         0       0       0       0       0       0       0
  8601 ;;      Temps:          0       0       0       0       0       0       0
  8602 ;;      Totals:         0       0       0       0       0       0       0
  8603 ;;Total ram usage:        0 bytes
  8604 ;; Hardware stack levels used: 1
  8605 ;; Hardware stack levels required when called: 3
  8606 ;; This function calls:
  8607 ;;		Nothing
  8608 ;; This function is called by:
  8609 ;;		_SIM800xInit
  8610 ;;		_SIM800xIPSetConnectionType
  8611 ;;		_SIM800xIPSetAPN
  8612 ;;		_SIM800xIPOpen
  8613 ;;		_SIM800xIPGetState
  8614 ;;		_SIM800xHTTPInit
  8615 ;;		_SIM800xHTTPSetURL
  8616 ;;		_SIM800xHTTPSetContent
  8617 ;;		_SIM800xHTTPInputData
  8618 ;;		_SIM800xHTTPAction
  8619 ;;		_SIM800xHTTPRead
  8620 ;;		_SIM800xSDMReadF1Pkt
  8621 ;; This function uses a non-reentrant model
  8622 ;;
  8623                           
  8624                           	psect	text42
  8625  00215C                     __ptext42:
  8626                           	callstack 0
  8627  00215C                     _SIM800xSDMFlush:
  8628                           	callstack 0
  8629  00215C  FFFF               	dw	65535	; assembler added errata NOP
  8630                           
  8631                           ;SIM800x_SDM.c: 230: Rxfifoptr = 0;
  8632                           
  8633                           ;incstack = 0
  8634  00215E  0E00               	movlw	0
  8635  002160  6E64               	movwf	(_Rxfifoptr@SIM800x_SDM$F1167+1)^0,c	;volatile
  8636  002162  0E00               	movlw	0
  8637  002164  6E63               	movwf	_Rxfifoptr@SIM800x_SDM$F1167^0,c	;volatile
  8638                           
  8639                           ;SIM800x_SDM.c: 231: Rxfifocurrent = 0;
  8640  002166  0E00               	movlw	0
  8641  002168  6E62               	movwf	(_Rxfifocurrent@SIM800x_SDM$F1168+1)^0,c	;volatile
  8642  00216A  0E00               	movlw	0
  8643  00216C  6E61               	movwf	_Rxfifocurrent@SIM800x_SDM$F1168^0,c	;volatile
  8644  00216E  0012               	return		;funcret
  8645  002170  FFFF               	dw	65535	; errata NOP
  8646  002172                     __end_of_SIM800xSDMFlush:
  8647                           	callstack 0
  8648                           
  8649 ;; *************** function _AddEntryToJsonObject *****************
  8650 ;; Defined at:
  8651 ;;		line 54 in file "Src/JSON.c"
  8652 ;; Parameters:    Size  Location     Type
  8653 ;;  JsonObject      2   13[COMRAM] PTR unsigned char 
  8654 ;;		 -> txmessage(100), 
  8655 ;;  key             2   15[COMRAM] PTR const unsigned char 
  8656 ;;		 -> STR_18(15), STR_16(20), STR_14(4), STR_12(23), 
  8657 ;;  value           2   17[COMRAM] PTR const unsigned char 
  8658 ;;		 -> STR_19(3), STR_17(3), STR_15(5), STR_13(3), 
  8659 ;;  Cpos            2   19[COMRAM] PTR unsigned int 
  8660 ;;		 -> cpos(2), 
  8661 ;; Auto vars:     Size  Location     Type
  8662 ;;  offset          1   25[COMRAM] unsigned char 
  8663 ;; Return value:  Size  Location     Type
  8664 ;;                  1    wreg      unsigned char 
  8665 ;; Registers used:
  8666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8667 ;; Tracked objects:
  8668 ;;		On entry : 0/0
  8669 ;;		On exit  : 0/0
  8670 ;;		Unchanged: 0/0
  8671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8672 ;;      Params:         8       0       0       0       0       0       0
  8673 ;;      Locals:         1       0       0       0       0       0       0
  8674 ;;      Temps:          4       0       0       0       0       0       0
  8675 ;;      Totals:        13       0       0       0       0       0       0
  8676 ;;Total ram usage:       13 bytes
  8677 ;; Hardware stack levels used: 1
  8678 ;; Hardware stack levels required when called: 3
  8679 ;; This function calls:
  8680 ;;		Nothing
  8681 ;; This function is called by:
  8682 ;;		_SystemInit
  8683 ;; This function uses a non-reentrant model
  8684 ;;
  8685                           
  8686                           	psect	text43
  8687  000032                     __ptext43:
  8688                           	callstack 0
  8689  000032                     _AddEntryToJsonObject:
  8690                           	callstack 0
  8691  000032  FFFF               	dw	65535	; assembler added errata NOP
  8692                           
  8693                           ;Src/JSON.c: 54: unsigned char AddEntryToJsonObject(char * JsonObject, const char * key,
      +                           const char * value, unsigned int *Cpos);Src/JSON.c: 55: {;Src/JSON.c: 57:  unsigned cha
      +                          r offset = 0;
  8694                           
  8695                           ;incstack = 0
  8696  000034  0E00               	movlw	0
  8697  000036  6E1A               	movwf	AddEntryToJsonObject@offset^0,c
  8698                           
  8699                           ;Src/JSON.c: 59:  if (!*Cpos)
  8700  000038  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8701  00003C  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8702  000040  50DE               	movf	postinc2,w,c
  8703  000042  10DE               	iorwf	postinc2,w,c
  8704  000044  A4D8               	btfss	status,2,c
  8705  000046  D009               	goto	l3960
  8706                           
  8707                           ;Src/JSON.c: 60:     {;Src/JSON.c: 61:   JsonObject[0] = '{';
  8708  000048  C00E  FFD9         	movff	AddEntryToJsonObject@JsonObject,fsr2l
  8709  00004C  C00F  FFDA         	movff	AddEntryToJsonObject@JsonObject+1,fsr2h
  8710  000050  0E7B               	movlw	123
  8711  000052  6EDF               	movwf	indf2,c
  8712                           
  8713                           ;Src/JSON.c: 62:   offset = 1;
  8714  000054  0E01               	movlw	1
  8715  000056  6E1A               	movwf	AddEntryToJsonObject@offset^0,c
  8716                           
  8717                           ;Src/JSON.c: 63:  }else
  8718  000058  D025               	goto	l108
  8719  00005A                     l3960:
  8720  00005A  FFFF               	dw	65535	; assembler added errata NOP
  8721                           
  8722                           ;Src/JSON.c: 64:  {;Src/JSON.c: 65:   JsonObject[*Cpos] = ',';
  8723  00005C  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8724  000060  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8725  000064  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8726  000068  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8727  00006C  5016               	movf	??_AddEntryToJsonObject^0,w,c
  8728  00006E  240E               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8729  000070  6ED9               	movwf	fsr2l,c
  8730  000072  5017               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8731  000074  200F               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8732  000076  6EDA               	movwf	fsr2h,c
  8733  000078  0E2C               	movlw	44
  8734  00007A  6EDF               	movwf	indf2,c
  8735                           
  8736                           ;Src/JSON.c: 66:   *Cpos = *Cpos + 1;
  8737  00007C  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8738  000080  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8739  000084  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8740  000088  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8741  00008C  0E01               	movlw	1
  8742  00008E  2616               	addwf	??_AddEntryToJsonObject^0,f,c
  8743  000090  0E00               	movlw	0
  8744  000092  2217               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8745  000094  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8746  000098  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8747  00009C  C016  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8748  0000A0  C017  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8749  0000A4                     l108:
  8750  0000A4  FFFF               	dw	65535	; assembler added errata NOP
  8751                           
  8752                           ;Src/JSON.c: 69:     JsonObject[*Cpos + offset] = '\"';
  8753  0000A6  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8754  0000AA  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8755  0000AE  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8756  0000B2  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8757  0000B6  501A               	movf	AddEntryToJsonObject@offset^0,w,c
  8758  0000B8  240E               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8759  0000BA  6E18               	movwf	(??_AddEntryToJsonObject+2)^0,c
  8760  0000BC  0E00               	movlw	0
  8761  0000BE  200F               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8762  0000C0  6E19               	movwf	(??_AddEntryToJsonObject+3)^0,c
  8763  0000C2  5016               	movf	??_AddEntryToJsonObject^0,w,c
  8764  0000C4  2418               	addwf	(??_AddEntryToJsonObject+2)^0,w,c
  8765  0000C6  6ED9               	movwf	fsr2l,c
  8766  0000C8  5017               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8767  0000CA  2019               	addwfc	(??_AddEntryToJsonObject+3)^0,w,c
  8768  0000CC  6EDA               	movwf	fsr2h,c
  8769  0000CE  0E22               	movlw	34
  8770  0000D0  6EDF               	movwf	indf2,c
  8771  0000D2  D01F               	goto	l3966
  8772  0000D4                     l3962:
  8773  0000D4  FFFF               	dw	65535	; assembler added errata NOP
  8774                           
  8775                           ;Src/JSON.c: 73:  {;Src/JSON.c: 74:   JsonObject[*Cpos + offset] = *key;
  8776  0000D6  C010  FFF6         	movff	AddEntryToJsonObject@key,tblptrl
  8777  0000DA  C011  FFF7         	movff	AddEntryToJsonObject@key+1,tblptrh
  8778  0000DE                     	if	0	;tblptru may be non-zero
  8779  0000DE                     	endif
  8780  0000DE                     	if	0	;tblptru may be non-zero
  8781  0000DE                     	endif
  8782  0000DE  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8783  0000E2  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8784  0000E6  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8785  0000EA  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8786  0000EE  501A               	movf	AddEntryToJsonObject@offset^0,w,c
  8787  0000F0  240E               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8788  0000F2  6E18               	movwf	(??_AddEntryToJsonObject+2)^0,c
  8789  0000F4  0E00               	movlw	0
  8790  0000F6  200F               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8791  0000F8  6E19               	movwf	(??_AddEntryToJsonObject+3)^0,c
  8792  0000FA  5016               	movf	??_AddEntryToJsonObject^0,w,c
  8793  0000FC  2418               	addwf	(??_AddEntryToJsonObject+2)^0,w,c
  8794  0000FE  6ED9               	movwf	fsr2l,c
  8795  000100  5017               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8796  000102  2019               	addwfc	(??_AddEntryToJsonObject+3)^0,w,c
  8797  000104  6EDA               	movwf	fsr2h,c
  8798  000106  0008               	tblrd		*
  8799  000108  FFFF               	dw	65535	; errata NOP
  8800  00010A  CFF5 FFDF          	movff	tablat,indf2
  8801                           
  8802                           ;Src/JSON.c: 75:   key++;
  8803  00010E  4A10               	infsnz	AddEntryToJsonObject@key^0,f,c
  8804  000110  2A11               	incf	(AddEntryToJsonObject@key+1)^0,f,c
  8805  000112                     l3966:
  8806  000112  FFFF               	dw	65535	; assembler added errata NOP
  8807                           
  8808                           ;Src/JSON.c: 76:   *Cpos = *Cpos + 1;
  8809  000114  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8810  000118  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8811  00011C  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8812  000120  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8813  000124  0E01               	movlw	1
  8814  000126  2616               	addwf	??_AddEntryToJsonObject^0,f,c
  8815  000128  0E00               	movlw	0
  8816  00012A  2217               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8817  00012C  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8818  000130  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8819  000134  C016  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8820  000138  C017  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8821                           
  8822                           ;Src/JSON.c: 72:  while (*key != 0)
  8823  00013C  C010  FFF6         	movff	AddEntryToJsonObject@key,tblptrl
  8824  000140  C011  FFF7         	movff	AddEntryToJsonObject@key+1,tblptrh
  8825  000144                     	if	0	;tblptru may be non-zero
  8826  000144                     	endif
  8827  000144                     	if	0	;tblptru may be non-zero
  8828  000144                     	endif
  8829  000144  0008               	tblrd		*
  8830  000146  FFFF               	dw	65535	; errata NOP
  8831  000148  50F5               	movf	tablat,w,c
  8832  00014A  0900               	iorlw	0
  8833  00014C  A4D8               	btfss	status,2,c
  8834  00014E  D7C2               	goto	l3962
  8835                           
  8836                           ;Src/JSON.c: 79:     JsonObject[*Cpos + offset] = '\"';
  8837  000150  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8838  000154  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8839  000158  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8840  00015C  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8841  000160  501A               	movf	AddEntryToJsonObject@offset^0,w,c
  8842  000162  240E               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8843  000164  6E18               	movwf	(??_AddEntryToJsonObject+2)^0,c
  8844  000166  0E00               	movlw	0
  8845  000168  200F               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8846  00016A  6E19               	movwf	(??_AddEntryToJsonObject+3)^0,c
  8847  00016C  5016               	movf	??_AddEntryToJsonObject^0,w,c
  8848  00016E  2418               	addwf	(??_AddEntryToJsonObject+2)^0,w,c
  8849  000170  6ED9               	movwf	fsr2l,c
  8850  000172  5017               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8851  000174  2019               	addwfc	(??_AddEntryToJsonObject+3)^0,w,c
  8852  000176  6EDA               	movwf	fsr2h,c
  8853  000178  0E22               	movlw	34
  8854  00017A  6EDF               	movwf	indf2,c
  8855                           
  8856                           ;Src/JSON.c: 80:     *Cpos = *Cpos + 1;
  8857  00017C  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8858  000180  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8859  000184  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8860  000188  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8861  00018C  0E01               	movlw	1
  8862  00018E  2616               	addwf	??_AddEntryToJsonObject^0,f,c
  8863  000190  0E00               	movlw	0
  8864  000192  2217               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8865  000194  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8866  000198  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8867  00019C  C016  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8868  0001A0  C017  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8869                           
  8870                           ;Src/JSON.c: 82:  if(offset)
  8871  0001A4  501A               	movf	AddEntryToJsonObject@offset^0,w,c
  8872  0001A6  B4D8               	btfsc	status,2,c
  8873  0001A8  D025               	goto	l3976
  8874                           
  8875                           ;Src/JSON.c: 83:  {;Src/JSON.c: 84:   *Cpos = *Cpos + 1;
  8876  0001AA  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8877  0001AE  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8878  0001B2  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8879  0001B6  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8880  0001BA  0E01               	movlw	1
  8881  0001BC  2616               	addwf	??_AddEntryToJsonObject^0,f,c
  8882  0001BE  0E00               	movlw	0
  8883  0001C0  2217               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8884  0001C2  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8885  0001C6  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8886  0001CA  C016  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8887  0001CE  C017  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8888                           
  8889                           ;Src/JSON.c: 85:   JsonObject[*Cpos] = ':';
  8890  0001D2  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8891  0001D6  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8892  0001DA  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8893  0001DE  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8894  0001E2  5016               	movf	??_AddEntryToJsonObject^0,w,c
  8895  0001E4  240E               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8896  0001E6  6ED9               	movwf	fsr2l,c
  8897  0001E8  5017               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8898  0001EA  200F               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8899  0001EC  6EDA               	movwf	fsr2h,c
  8900  0001EE  0E3A               	movlw	58
  8901  0001F0  6EDF               	movwf	indf2,c
  8902                           
  8903                           ;Src/JSON.c: 86:  }else
  8904  0001F2  D046               	goto	l3984
  8905  0001F4                     l3976:
  8906  0001F4  FFFF               	dw	65535	; assembler added errata NOP
  8907                           
  8908                           ;Src/JSON.c: 87:  {;Src/JSON.c: 88:   JsonObject[*Cpos] = ':';
  8909  0001F6  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8910  0001FA  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8911  0001FE  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8912  000202  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8913  000206  5016               	movf	??_AddEntryToJsonObject^0,w,c
  8914  000208  240E               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8915  00020A  6ED9               	movwf	fsr2l,c
  8916  00020C  5017               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8917  00020E  200F               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8918  000210  6EDA               	movwf	fsr2h,c
  8919  000212  0E3A               	movlw	58
  8920  000214  6EDF               	movwf	indf2,c
  8921  000216  D01F               	goto	l3982
  8922  000218                     l3978:
  8923  000218  FFFF               	dw	65535	; assembler added errata NOP
  8924                           
  8925                           ;Src/JSON.c: 93:  {;Src/JSON.c: 94:   JsonObject[*Cpos + offset] = *value;
  8926  00021A  C012  FFF6         	movff	AddEntryToJsonObject@value,tblptrl
  8927  00021E  C013  FFF7         	movff	AddEntryToJsonObject@value+1,tblptrh
  8928  000222                     	if	0	;tblptru may be non-zero
  8929  000222                     	endif
  8930  000222                     	if	0	;tblptru may be non-zero
  8931  000222                     	endif
  8932  000222  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8933  000226  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8934  00022A  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8935  00022E  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8936  000232  501A               	movf	AddEntryToJsonObject@offset^0,w,c
  8937  000234  240E               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  8938  000236  6E18               	movwf	(??_AddEntryToJsonObject+2)^0,c
  8939  000238  0E00               	movlw	0
  8940  00023A  200F               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  8941  00023C  6E19               	movwf	(??_AddEntryToJsonObject+3)^0,c
  8942  00023E  5016               	movf	??_AddEntryToJsonObject^0,w,c
  8943  000240  2418               	addwf	(??_AddEntryToJsonObject+2)^0,w,c
  8944  000242  6ED9               	movwf	fsr2l,c
  8945  000244  5017               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  8946  000246  2019               	addwfc	(??_AddEntryToJsonObject+3)^0,w,c
  8947  000248  6EDA               	movwf	fsr2h,c
  8948  00024A  0008               	tblrd		*
  8949  00024C  FFFF               	dw	65535	; errata NOP
  8950  00024E  CFF5 FFDF          	movff	tablat,indf2
  8951                           
  8952                           ;Src/JSON.c: 95:   value++;
  8953  000252  4A12               	infsnz	AddEntryToJsonObject@value^0,f,c
  8954  000254  2A13               	incf	(AddEntryToJsonObject@value+1)^0,f,c
  8955  000256                     l3982:
  8956  000256  FFFF               	dw	65535	; assembler added errata NOP
  8957                           
  8958                           ;Src/JSON.c: 96:   *Cpos = *Cpos + 1;
  8959  000258  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8960  00025C  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8961  000260  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8962  000264  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8963  000268  0E01               	movlw	1
  8964  00026A  2616               	addwf	??_AddEntryToJsonObject^0,f,c
  8965  00026C  0E00               	movlw	0
  8966  00026E  2217               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  8967  000270  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8968  000274  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8969  000278  C016  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  8970  00027C  C017  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  8971  000280                     l3984:
  8972  000280  FFFF               	dw	65535	; assembler added errata NOP
  8973                           
  8974                           ;Src/JSON.c: 92:  while (*value != 0)
  8975  000282  C012  FFF6         	movff	AddEntryToJsonObject@value,tblptrl
  8976  000286  C013  FFF7         	movff	AddEntryToJsonObject@value+1,tblptrh
  8977  00028A                     	if	0	;tblptru may be non-zero
  8978  00028A                     	endif
  8979  00028A                     	if	0	;tblptru may be non-zero
  8980  00028A                     	endif
  8981  00028A  0008               	tblrd		*
  8982  00028C  FFFF               	dw	65535	; errata NOP
  8983  00028E  50F5               	movf	tablat,w,c
  8984  000290  0900               	iorlw	0
  8985  000292  A4D8               	btfss	status,2,c
  8986  000294  D7C1               	goto	l3978
  8987                           
  8988                           ;Src/JSON.c: 99:  if(offset != 0)
  8989  000296  501A               	movf	AddEntryToJsonObject@offset^0,w,c
  8990  000298  B4D8               	btfsc	status,2,c
  8991  00029A  D014               	goto	l117
  8992                           
  8993                           ;Src/JSON.c: 100:   *Cpos = *Cpos + 1;
  8994  00029C  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  8995  0002A0  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  8996  0002A4  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  8997  0002A8  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  8998  0002AC  0E01               	movlw	1
  8999  0002AE  2616               	addwf	??_AddEntryToJsonObject^0,f,c
  9000  0002B0  0E00               	movlw	0
  9001  0002B2  2217               	addwfc	(??_AddEntryToJsonObject+1)^0,f,c
  9002  0002B4  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  9003  0002B8  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  9004  0002BC  C016  FFDE         	movff	??_AddEntryToJsonObject,postinc2
  9005  0002C0  C017  FFDD         	movff	??_AddEntryToJsonObject+1,postdec2
  9006  0002C4                     l117:
  9007  0002C4  FFFF               	dw	65535	; assembler added errata NOP
  9008                           
  9009                           ;Src/JSON.c: 101:  JsonObject[*Cpos] = '}';
  9010  0002C6  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  9011  0002CA  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  9012  0002CE  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  9013  0002D2  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  9014  0002D6  5016               	movf	??_AddEntryToJsonObject^0,w,c
  9015  0002D8  240E               	addwf	AddEntryToJsonObject@JsonObject^0,w,c
  9016  0002DA  6ED9               	movwf	fsr2l,c
  9017  0002DC  5017               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  9018  0002DE  200F               	addwfc	(AddEntryToJsonObject@JsonObject+1)^0,w,c
  9019  0002E0  6EDA               	movwf	fsr2h,c
  9020  0002E2  0E7D               	movlw	125
  9021  0002E4  6EDF               	movwf	indf2,c
  9022                           
  9023                           ;Src/JSON.c: 102:  JsonObject[*Cpos + 1] = 0;
  9024  0002E6  C014  FFD9         	movff	AddEntryToJsonObject@Cpos,fsr2l
  9025  0002EA  C015  FFDA         	movff	AddEntryToJsonObject@Cpos+1,fsr2h
  9026  0002EE  CFDE F016          	movff	postinc2,??_AddEntryToJsonObject
  9027  0002F2  CFDD F017          	movff	postdec2,??_AddEntryToJsonObject+1
  9028  0002F6  C00E  F018         	movff	AddEntryToJsonObject@JsonObject,??_AddEntryToJsonObject+2
  9029  0002FA  C00F  F019         	movff	AddEntryToJsonObject@JsonObject+1,??_AddEntryToJsonObject+3
  9030  0002FE  5016               	movf	??_AddEntryToJsonObject^0,w,c
  9031  000300  2618               	addwf	(??_AddEntryToJsonObject+2)^0,f,c
  9032  000302  5017               	movf	(??_AddEntryToJsonObject+1)^0,w,c
  9033  000304  2219               	addwfc	(??_AddEntryToJsonObject+3)^0,f,c
  9034  000306  0E01               	movlw	1
  9035  000308  2418               	addwf	(??_AddEntryToJsonObject+2)^0,w,c
  9036  00030A  6ED9               	movwf	fsr2l,c
  9037  00030C  0E00               	movlw	0
  9038  00030E  2019               	addwfc	(??_AddEntryToJsonObject+3)^0,w,c
  9039  000310  6EDA               	movwf	fsr2h,c
  9040  000312  0E00               	movlw	0
  9041  000314  6EDF               	movwf	indf2,c
  9042  000316  0012               	return		;funcret
  9043  000318  FFFF               	dw	65535	; errata NOP
  9044  00031A                     __end_of_AddEntryToJsonObject:
  9045                           	callstack 0
  9046                           
  9047 ;; *************** function _Isr *****************
  9048 ;; Defined at:
  9049 ;;		line 65 in file "C:/EmbeddedDevOps/M8M_APIs/PIC18.X/Src/ISR.c"
  9050 ;; Parameters:    Size  Location     Type
  9051 ;;		None
  9052 ;; Auto vars:     Size  Location     Type
  9053 ;;		None
  9054 ;; Return value:  Size  Location     Type
  9055 ;;                  1    wreg      void 
  9056 ;; Registers used:
  9057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9058 ;; Tracked objects:
  9059 ;;		On entry : 0/0
  9060 ;;		On exit  : 0/0
  9061 ;;		Unchanged: 0/0
  9062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9063 ;;      Params:         0       0       0       0       0       0       0
  9064 ;;      Locals:         0       0       0       0       0       0       0
  9065 ;;      Temps:          2       0       0       0       0       0       0
  9066 ;;      Totals:         2       0       0       0       0       0       0
  9067 ;;Total ram usage:        2 bytes
  9068 ;; Hardware stack levels used: 1
  9069 ;; Hardware stack levels required when called: 2
  9070 ;; This function calls:
  9071 ;;		_SIM800xSDMCallBack
  9072 ;;		_SoftUARTCallBack
  9073 ;;		_SysTimeCallBack
  9074 ;; This function is called by:
  9075 ;;		Interrupt level 2
  9076 ;; This function uses a non-reentrant model
  9077 ;;
  9078                           
  9079                           	psect	intcode
  9080  000008                     __pintcode:
  9081                           	callstack 0
  9082  000008                     _Isr:
  9083                           	callstack 0
  9084  000008  FFFF               	dw	65535	; assembler added errata NOP
  9085                           
  9086                           ;incstack = 0
  9087  00000A  826E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9088  00000C  CFD9 F00C          	movff	fsr2l,??_Isr
  9089  000010  CFDA F00D          	movff	fsr2h,??_Isr+1
  9090                           
  9091                           ;ISR.c: 67: SysTimeCallBack();
  9092  000014  EC0E  F010         	call	_SysTimeCallBack	;wreg free
  9093                           
  9094                           ;ISR.c: 69: SoftUARTCallBack();
  9095  000018  ECC2  F00A         	call	_SoftUARTCallBack	;wreg free
  9096                           
  9097                           ;ISR.c: 70: SIM800xSDMCallBack();
  9098  00001C  EC59  F00E         	call	_SIM800xSDMCallBack	;wreg free
  9099  000020  C00D  FFDA         	movff	??_Isr+1,fsr2h
  9100  000024  C00C  FFD9         	movff	??_Isr,fsr2l
  9101  000028  926E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9102  00002A  0011               	retfie		f
  9103  00002C  FFFF               	dw	65535	; errata NOP
  9104  00002E                     __end_of_Isr:
  9105                           	callstack 0
  9106                           
  9107 ;; *************** function _SysTimeCallBack *****************
  9108 ;; Defined at:
  9109 ;;		line 137 in file "Src/SystemTime.c"
  9110 ;; Parameters:    Size  Location     Type
  9111 ;;		None
  9112 ;; Auto vars:     Size  Location     Type
  9113 ;;		None
  9114 ;; Return value:  Size  Location     Type
  9115 ;;                  1    wreg      void 
  9116 ;; Registers used:
  9117 ;;		wreg, status,2, status,0
  9118 ;; Tracked objects:
  9119 ;;		On entry : 0/0
  9120 ;;		On exit  : 0/0
  9121 ;;		Unchanged: 0/0
  9122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9123 ;;      Params:         0       0       0       0       0       0       0
  9124 ;;      Locals:         0       0       0       0       0       0       0
  9125 ;;      Temps:          0       0       0       0       0       0       0
  9126 ;;      Totals:         0       0       0       0       0       0       0
  9127 ;;Total ram usage:        0 bytes
  9128 ;; Hardware stack levels used: 1
  9129 ;; This function calls:
  9130 ;;		Nothing
  9131 ;; This function is called by:
  9132 ;;		_Isr
  9133 ;; This function uses a non-reentrant model
  9134 ;;
  9135                           
  9136                           	psect	text45
  9137  00201C                     __ptext45:
  9138                           	callstack 0
  9139  00201C                     _SysTimeCallBack:
  9140                           	callstack 0
  9141  00201C  FFFF               	dw	65535	; assembler added errata NOP
  9142                           
  9143                           ;SystemTime.c: 140: if(TMR0IF)
  9144                           
  9145                           ;incstack = 0
  9146  00201E  A4F2               	btfss	4082,2,c	;volatile
  9147  002020  D018               	goto	i2l307
  9148                           
  9149                           ;SystemTime.c: 141: {;SystemTime.c: 142: if(DecVar != 0)
  9150  002022  0100               	movlb	0	; () banked
  9151  002024  51BC               	movf	_DecVar& (0+255),w,b	;volatile
  9152  002026  11BD               	iorwf	(_DecVar+1)& (0+255),w,b	;volatile
  9153  002028  11BE               	iorwf	(_DecVar+2)& (0+255),w,b	;volatile
  9154  00202A  11BF               	iorwf	(_DecVar+3)& (0+255),w,b	;volatile
  9155  00202C  B4D8               	btfsc	status,2,c
  9156  00202E  D005               	goto	i2l306
  9157                           
  9158                           ; BSR set to: 0
  9159                           ;SystemTime.c: 143: --DecVar;
  9160  002030  07BC               	decf	_DecVar& (0+255),f,b	;volatile
  9161  002032  0E00               	movlw	0
  9162  002034  5BBD               	subwfb	(_DecVar+1)& (0+255),f,b	;volatile
  9163  002036  5BBE               	subwfb	(_DecVar+2)& (0+255),f,b	;volatile
  9164  002038  5BBF               	subwfb	(_DecVar+3)& (0+255),f,b	;volatile
  9165  00203A                     i2l306:
  9166  00203A  FFFF               	dw	65535	; assembler added errata NOP
  9167                           
  9168                           ; BSR set to: 0
  9169                           ;SystemTime.c: 145: ++IncVar;
  9170  00203C  0E01               	movlw	1
  9171  00203E  265D               	addwf	_IncVar^0,f,c	;volatile
  9172  002040  0E00               	movlw	0
  9173  002042  225E               	addwfc	(_IncVar+1)^0,f,c	;volatile
  9174  002044  225F               	addwfc	(_IncVar+2)^0,f,c	;volatile
  9175  002046  2260               	addwfc	(_IncVar+3)^0,f,c	;volatile
  9176                           
  9177                           ; BSR set to: 0
  9178                           ;SystemTime.c: 147: TMR0IF = 0;
  9179  002048  94F2               	bcf	4082,2,c	;volatile
  9180                           
  9181                           ; BSR set to: 0
  9182                           ;SystemTime.c: 148: TMR0 = val;
  9183  00204A  C065  FFD6         	movff	_val,4054	;volatile
  9184  00204E  C066  FFD7         	movff	_val+1,4055	;volatile
  9185  002052                     i2l307:
  9186  002052  FFFF               	dw	65535	; assembler added errata NOP
  9187  002054  0012               	return		;funcret
  9188  002056  FFFF               	dw	65535	; errata NOP
  9189  002058                     __end_of_SysTimeCallBack:
  9190                           	callstack 0
  9191                           
  9192 ;; *************** function _SoftUARTCallBack *****************
  9193 ;; Defined at:
  9194 ;;		line 214 in file "Src/SoftwareUART.c"
  9195 ;; Parameters:    Size  Location     Type
  9196 ;;		None
  9197 ;; Auto vars:     Size  Location     Type
  9198 ;;  k               1   10[COMRAM] unsigned char 
  9199 ;;  next            1    9[COMRAM] unsigned char 
  9200 ;;  rxtmp           1    8[COMRAM] unsigned char 
  9201 ;; Return value:  Size  Location     Type
  9202 ;;                  1    wreg      void 
  9203 ;; Registers used:
  9204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9205 ;; Tracked objects:
  9206 ;;		On entry : 0/0
  9207 ;;		On exit  : 0/0
  9208 ;;		Unchanged: 0/0
  9209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9210 ;;      Params:         0       0       0       0       0       0       0
  9211 ;;      Locals:         3       0       0       0       0       0       0
  9212 ;;      Temps:          2       0       0       0       0       0       0
  9213 ;;      Totals:         5       0       0       0       0       0       0
  9214 ;;Total ram usage:        5 bytes
  9215 ;; Hardware stack levels used: 1
  9216 ;; Hardware stack levels required when called: 1
  9217 ;; This function calls:
  9218 ;;		i2___awmod
  9219 ;; This function is called by:
  9220 ;;		_Isr
  9221 ;; This function uses a non-reentrant model
  9222 ;;
  9223                           
  9224                           	psect	text46
  9225  001584                     __ptext46:
  9226                           	callstack 0
  9227  001584                     _SoftUARTCallBack:
  9228                           	callstack 0
  9229  001584  FFFF               	dw	65535	; assembler added errata NOP
  9230                           
  9231                           ;SoftwareUART.c: 218: if(INT0IF && INT0IE)
  9232                           
  9233                           ;incstack = 0
  9234  001586  B2F2               	btfsc	4082,1,c	;volatile
  9235  001588  A8F2               	btfss	4082,4,c	;volatile
  9236  00158A  D048               	goto	i2l212
  9237                           
  9238                           ;SoftwareUART.c: 224: {;SoftwareUART.c: 225: uint8_t rxtmp = 0;
  9239  00158C  0E00               	movlw	0
  9240  00158E  6E09               	movwf	SoftUARTCallBack@rxtmp^0,c
  9241                           
  9242                           ;SoftwareUART.c: 227: if((uint8_t)((IO.Bytes[0x01 + 0] >> 0) & 0x01) == 0)
  9243  001590  B081               	btfsc	129,0,c	;volatile
  9244  001592  D044               	goto	i2l212
  9245                           
  9246                           ;SoftwareUART.c: 228: {;SoftwareUART.c: 230: _delay((unsigned long)((((1000000/9600)/2))
      +                          *((16 * 1000000)/4000000.0)));
  9247  001594  0E34               	movlw	52
  9248  001596                     i2u497_47:
  9249  001596  FFFF               	dw	65535	; errata NOP
  9250  001598  2EE8               	decfsz	wreg,f,c
  9251  00159A  D7FD               	bra	i2u497_47
  9252                           
  9253                           ;SoftwareUART.c: 232: for(uint8_t k = 0;k < 8;++k)
  9254  00159C  0E00               	movlw	0
  9255  00159E  6E0B               	movwf	SoftUARTCallBack@k^0,c
  9256  0015A0                     i2l4410:
  9257  0015A0  FFFF               	dw	65535	; assembler added errata NOP
  9258                           
  9259                           ;SoftwareUART.c: 233: {;SoftwareUART.c: 235: _delay((unsigned long)((((1000000/9600) - 3
      +                          ))*((16 * 1000000)/4000000.0)));
  9260  0015A2  0E65               	movlw	101
  9261  0015A4                     i2u498_47:
  9262  0015A4  FFFF               	dw	65535	; errata NOP
  9263  0015A6  2EE8               	decfsz	wreg,f,c
  9264  0015A8  D7FD               	bra	i2u498_47
  9265                           
  9266                           ;SoftwareUART.c: 236: if((uint8_t)((IO.Bytes[0x01 + 0] >> 0) & 0x01))
  9267  0015AA  A081               	btfss	129,0,c	;volatile
  9268  0015AC  D00E               	goto	i2l4416
  9269                           
  9270                           ;SoftwareUART.c: 237: {;SoftwareUART.c: 238: rxtmp |= (uint8_t)(1 << k);
  9271  0015AE  C00B  F007         	movff	SoftUARTCallBack@k,??_SoftUARTCallBack
  9272  0015B2  0E01               	movlw	1
  9273  0015B4  6E08               	movwf	(??_SoftUARTCallBack+1)^0,c
  9274  0015B6  2A07               	incf	??_SoftUARTCallBack^0,f,c
  9275  0015B8  D003               	goto	i2u344_44
  9276  0015BA                     i2u344_45:
  9277  0015BA  FFFF               	dw	65535	; assembler added errata NOP
  9278  0015BC  90D8               	bcf	status,0,c
  9279  0015BE  3608               	rlcf	(??_SoftUARTCallBack+1)^0,f,c
  9280  0015C0                     i2u344_44:
  9281  0015C0  FFFF               	dw	65535	; assembler added errata NOP
  9282  0015C2  2E07               	decfsz	??_SoftUARTCallBack^0,f,c
  9283  0015C4  D7FA               	goto	i2u344_45
  9284  0015C6  5008               	movf	(??_SoftUARTCallBack+1)^0,w,c
  9285  0015C8  1209               	iorwf	SoftUARTCallBack@rxtmp^0,f,c
  9286  0015CA                     i2l4416:
  9287  0015CA  FFFF               	dw	65535	; assembler added errata NOP
  9288  0015CC  2A0B               	incf	SoftUARTCallBack@k^0,f,c
  9289  0015CE  0E07               	movlw	7
  9290  0015D0  640B               	cpfsgt	SoftUARTCallBack@k^0,c
  9291  0015D2  D7E6               	goto	i2l4410
  9292                           
  9293                           ;SoftwareUART.c: 240: };SoftwareUART.c: 243: };SoftwareUART.c: 245: uint8_t next = (uint
      +                          8_t)((Rxfifocurrent + 1) % 100);
  9294  0015D4  0E01               	movlw	1
  9295  0015D6  2468               	addwf	_Rxfifocurrent^0,w,c	;volatile
  9296  0015D8  6E01               	movwf	i2___awmod@dividend^0,c
  9297  0015DA  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  9298  0015DC  0E00               	movlw	0
  9299  0015DE  2202               	addwfc	(i2___awmod@dividend+1)^0,f,c
  9300  0015E0  0E00               	movlw	0
  9301  0015E2  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  9302  0015E4  0E64               	movlw	100
  9303  0015E6  6E03               	movwf	i2___awmod@divisor^0,c
  9304  0015E8  EC30  F00C         	call	i2___awmod	;wreg free
  9305  0015EC  5001               	movf	?i2___awmod^0,w,c
  9306  0015EE  6E0A               	movwf	SoftUARTCallBack@next^0,c
  9307                           
  9308                           ;SoftwareUART.c: 246: if (next != Rxfifoptr)
  9309  0015F0  5069               	movf	_Rxfifoptr^0,w,c	;volatile
  9310  0015F2  180A               	xorwf	SoftUARTCallBack@next^0,w,c
  9311  0015F4  B4D8               	btfsc	status,2,c
  9312  0015F6  D00B               	goto	i2l217
  9313                           
  9314                           ;SoftwareUART.c: 247: {;SoftwareUART.c: 248: RxFIFO[Rxfifocurrent] = rxtmp;
  9315  0015F8  0E00               	movlw	low _RxFIFO
  9316  0015FA  2468               	addwf	_Rxfifocurrent^0,w,c	;volatile
  9317  0015FC  6ED9               	movwf	fsr2l,c
  9318  0015FE  6ADA               	clrf	fsr2h,c
  9319  001600  0E02               	movlw	high _RxFIFO
  9320  001602  22DA               	addwfc	fsr2h,f,c
  9321  001604  C009  FFDF         	movff	SoftUARTCallBack@rxtmp,indf2
  9322                           
  9323                           ;SoftwareUART.c: 249: Rxfifocurrent = next;
  9324  001608  C00A  F068         	movff	SoftUARTCallBack@next,_Rxfifocurrent	;volatile
  9325                           
  9326                           ;SoftwareUART.c: 251: }
  9327  00160C  D002               	goto	i2l4428
  9328  00160E                     i2l217:
  9329  00160E  FFFF               	dw	65535	; assembler added errata NOP
  9330                           
  9331                           ;SoftwareUART.c: 252: else;SoftwareUART.c: 253: {;SoftwareUART.c: 254: Rxstatus.Buf = 1;
  9332  001610  8067               	bsf	_Rxstatus^0,0,c	;volatile
  9333  001612                     i2l4428:
  9334  001612  FFFF               	dw	65535	; assembler added errata NOP
  9335                           
  9336                           ;SoftwareUART.c: 255: };SoftwareUART.c: 257: _delay((unsigned long)((((1000000/9600)))*(
      +                          (16 * 1000000)/4000000.0)));
  9337  001614  0E68               	movlw	104
  9338  001616                     i2u499_47:
  9339  001616  FFFF               	dw	65535	; errata NOP
  9340  001618  2EE8               	decfsz	wreg,f,c
  9341  00161A  D7FD               	bra	i2u499_47
  9342  00161C                     i2l212:
  9343  00161C  FFFF               	dw	65535	; assembler added errata NOP
  9344                           
  9345                           ;SoftwareUART.c: 263: };SoftwareUART.c: 264: };SoftwareUART.c: 266: INT0IF = 0;
  9346  00161E  92F2               	bcf	4082,1,c	;volatile
  9347  001620  0012               	return		;funcret
  9348  001622  FFFF               	dw	65535	; errata NOP
  9349  001624                     __end_of_SoftUARTCallBack:
  9350                           	callstack 0
  9351                           
  9352 ;; *************** function i2___awmod *****************
  9353 ;; Defined at:
  9354 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  9355 ;; Parameters:    Size  Location     Type
  9356 ;;  dividend        2    0[COMRAM] int 
  9357 ;;  divisor         2    2[COMRAM] int 
  9358 ;; Auto vars:     Size  Location     Type
  9359 ;;  sign            1    5[COMRAM] unsigned char 
  9360 ;;  counter         1    4[COMRAM] unsigned char 
  9361 ;; Return value:  Size  Location     Type
  9362 ;;                  2    0[COMRAM] int 
  9363 ;; Registers used:
  9364 ;;		wreg, status,2, status,0
  9365 ;; Tracked objects:
  9366 ;;		On entry : 0/0
  9367 ;;		On exit  : 0/0
  9368 ;;		Unchanged: 0/0
  9369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9370 ;;      Params:         4       0       0       0       0       0       0
  9371 ;;      Locals:         2       0       0       0       0       0       0
  9372 ;;      Temps:          0       0       0       0       0       0       0
  9373 ;;      Totals:         6       0       0       0       0       0       0
  9374 ;;Total ram usage:        6 bytes
  9375 ;; Hardware stack levels used: 1
  9376 ;; This function calls:
  9377 ;;		Nothing
  9378 ;; This function is called by:
  9379 ;;		_SoftUARTCallBack
  9380 ;; This function uses a non-reentrant model
  9381 ;;
  9382                           
  9383                           	psect	text47
  9384  001860                     __ptext47:
  9385                           	callstack 0
  9386  001860                     i2___awmod:
  9387                           	callstack 0
  9388  001860  FFFF               	dw	65535	; assembler added errata NOP
  9389                           
  9390                           ;incstack = 0
  9391  001862  0E00               	movlw	0
  9392  001864  6E06               	movwf	i2___awmod@sign^0,c
  9393  001866  AE02               	btfss	(i2___awmod@dividend+1)^0,7,c
  9394  001868  D006               	goto	i2l4268
  9395  00186A  6C01               	negf	i2___awmod@dividend^0,c
  9396  00186C  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  9397  00186E  B0D8               	btfsc	status,0,c
  9398  001870  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  9399  001872  0E01               	movlw	1
  9400  001874  6E06               	movwf	i2___awmod@sign^0,c
  9401  001876                     i2l4268:
  9402  001876  FFFF               	dw	65535	; assembler added errata NOP
  9403  001878  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  9404  00187A  D004               	goto	i2l4272
  9405  00187C  6C03               	negf	i2___awmod@divisor^0,c
  9406  00187E  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  9407  001880  B0D8               	btfsc	status,0,c
  9408  001882  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  9409  001884                     i2l4272:
  9410  001884  FFFF               	dw	65535	; assembler added errata NOP
  9411  001886  5003               	movf	i2___awmod@divisor^0,w,c
  9412  001888  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  9413  00188A  B4D8               	btfsc	status,2,c
  9414  00188C  D01C               	goto	i2l4288
  9415  00188E  0E01               	movlw	1
  9416  001890  6E05               	movwf	i2___awmod@counter^0,c
  9417  001892  D005               	goto	i2l4278
  9418  001894                     i2l4276:
  9419  001894  FFFF               	dw	65535	; assembler added errata NOP
  9420  001896  90D8               	bcf	status,0,c
  9421  001898  3603               	rlcf	i2___awmod@divisor^0,f,c
  9422  00189A  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  9423  00189C  2A05               	incf	i2___awmod@counter^0,f,c
  9424  00189E                     i2l4278:
  9425  00189E  FFFF               	dw	65535	; assembler added errata NOP
  9426  0018A0  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  9427  0018A2  D7F8               	goto	i2l4276
  9428  0018A4                     i2u321_40:
  9429  0018A4  FFFF               	dw	65535	; assembler added errata NOP
  9430  0018A6  5003               	movf	i2___awmod@divisor^0,w,c
  9431  0018A8  5C01               	subwf	i2___awmod@dividend^0,w,c
  9432  0018AA  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  9433  0018AC  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  9434  0018AE  A0D8               	btfss	status,0,c
  9435  0018B0  D004               	goto	i2l4284
  9436  0018B2  5003               	movf	i2___awmod@divisor^0,w,c
  9437  0018B4  5E01               	subwf	i2___awmod@dividend^0,f,c
  9438  0018B6  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  9439  0018B8  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  9440  0018BA                     i2l4284:
  9441  0018BA  FFFF               	dw	65535	; assembler added errata NOP
  9442  0018BC  90D8               	bcf	status,0,c
  9443  0018BE  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  9444  0018C0  3203               	rrcf	i2___awmod@divisor^0,f,c
  9445  0018C2  2E05               	decfsz	i2___awmod@counter^0,f,c
  9446  0018C4  D7EF               	goto	i2u321_40
  9447  0018C6                     i2l4288:
  9448  0018C6  FFFF               	dw	65535	; assembler added errata NOP
  9449  0018C8  5006               	movf	i2___awmod@sign^0,w,c
  9450  0018CA  B4D8               	btfsc	status,2,c
  9451  0018CC  D004               	goto	i2l4292
  9452  0018CE  6C01               	negf	i2___awmod@dividend^0,c
  9453  0018D0  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  9454  0018D2  B0D8               	btfsc	status,0,c
  9455  0018D4  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  9456  0018D6                     i2l4292:
  9457  0018D6  FFFF               	dw	65535	; assembler added errata NOP
  9458  0018D8  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  9459  0018DC  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  9460  0018E0  0012               	return		;funcret
  9461  0018E2  FFFF               	dw	65535	; errata NOP
  9462  0018E4                     __end_ofi2___awmod:
  9463                           	callstack 0
  9464                           
  9465 ;; *************** function _SIM800xSDMCallBack *****************
  9466 ;; Defined at:
  9467 ;;		line 383 in file "Src/SIM800x_SDM.c"
  9468 ;; Parameters:    Size  Location     Type
  9469 ;;		None
  9470 ;; Auto vars:     Size  Location     Type
  9471 ;;  tmp             1    5[COMRAM] unsigned char 
  9472 ;;  next            2    6[COMRAM] unsigned int 
  9473 ;; Return value:  Size  Location     Type
  9474 ;;                  1    wreg      void 
  9475 ;; Registers used:
  9476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9477 ;; Tracked objects:
  9478 ;;		On entry : 0/0
  9479 ;;		On exit  : 0/0
  9480 ;;		Unchanged: 0/0
  9481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9482 ;;      Params:         0       0       0       0       0       0       0
  9483 ;;      Locals:         3       0       0       0       0       0       0
  9484 ;;      Temps:          0       0       0       0       0       0       0
  9485 ;;      Totals:         3       0       0       0       0       0       0
  9486 ;;Total ram usage:        3 bytes
  9487 ;; Hardware stack levels used: 1
  9488 ;; Hardware stack levels required when called: 1
  9489 ;; This function calls:
  9490 ;;		_USARTReceiveByte
  9491 ;;		i2___lwmod
  9492 ;; This function is called by:
  9493 ;;		_Isr
  9494 ;; This function uses a non-reentrant model
  9495 ;;
  9496                           
  9497                           	psect	text48
  9498  001CB2                     __ptext48:
  9499                           	callstack 0
  9500  001CB2                     _SIM800xSDMCallBack:
  9501                           	callstack 0
  9502  001CB2  FFFF               	dw	65535	; assembler added errata NOP
  9503                           
  9504                           ;SIM800x_SDM.c: 386: if(RCIF)
  9505                           
  9506                           ;incstack = 0
  9507  001CB4  AA9E               	btfss	3998,5,c	;volatile
  9508  001CB6  D026               	goto	i2l1097
  9509                           
  9510                           ;SIM800x_SDM.c: 387: {;SIM800x_SDM.c: 389: uint16_t next = (Rxfifocurrent + 1) % 200;
  9511  001CB8  0E01               	movlw	1
  9512  001CBA  2461               	addwf	_Rxfifocurrent@SIM800x_SDM$F1168^0,w,c	;volatile
  9513  001CBC  6E01               	movwf	i2___lwmod@dividend^0,c
  9514  001CBE  0E00               	movlw	0
  9515  001CC0  2062               	addwfc	(_Rxfifocurrent@SIM800x_SDM$F1168+1)^0,w,c	;volatile
  9516  001CC2  6E02               	movwf	(i2___lwmod@dividend+1)^0,c
  9517  001CC4  0E00               	movlw	0
  9518  001CC6  6E04               	movwf	(i2___lwmod@divisor+1)^0,c
  9519  001CC8  0EC8               	movlw	200
  9520  001CCA  6E03               	movwf	i2___lwmod@divisor^0,c
  9521  001CCC  EC2C  F00F         	call	i2___lwmod	;wreg free
  9522  001CD0  C001  F007         	movff	?i2___lwmod,SIM800xSDMCallBack@next
  9523  001CD4  C002  F008         	movff	?i2___lwmod+1,SIM800xSDMCallBack@next+1
  9524                           
  9525                           ;SIM800x_SDM.c: 390: if (next != Rxfifoptr)
  9526  001CD8  5063               	movf	_Rxfifoptr@SIM800x_SDM$F1167^0,w,c	;volatile
  9527  001CDA  1807               	xorwf	SIM800xSDMCallBack@next^0,w,c
  9528  001CDC  E104               	bnz	i2u348_40
  9529  001CDE  5064               	movf	(_Rxfifoptr@SIM800x_SDM$F1167+1)^0,w,c	;volatile
  9530  001CE0  1808               	xorwf	(SIM800xSDMCallBack@next+1)^0,w,c
  9531  001CE2  B4D8               	btfsc	status,2,c
  9532  001CE4  D00F               	goto	i2l1097
  9533  001CE6                     i2u348_40:
  9534                           
  9535                           ;SIM800x_SDM.c: 391: {;SIM800x_SDM.c: 392: uint8_t tmp = USARTReceiveByte();
  9536  001CE6  EC97  F010         	call	_USARTReceiveByte	;wreg free
  9537  001CEA  6E06               	movwf	SIM800xSDMCallBack@tmp^0,c
  9538                           
  9539                           ;SIM800x_SDM.c: 393: RxFIFO[Rxfifocurrent] = tmp;
  9540  001CEC  0E00               	movlw	low _RxFIFO@SIM800x_SDM$F1166
  9541  001CEE  2461               	addwf	_Rxfifocurrent@SIM800x_SDM$F1168^0,w,c	;volatile
  9542  001CF0  6ED9               	movwf	fsr2l,c
  9543  001CF2  0E03               	movlw	high _RxFIFO@SIM800x_SDM$F1166
  9544  001CF4  2062               	addwfc	(_Rxfifocurrent@SIM800x_SDM$F1168+1)^0,w,c	;volatile
  9545  001CF6  6EDA               	movwf	fsr2h,c
  9546  001CF8  C006  FFDF         	movff	SIM800xSDMCallBack@tmp,indf2
  9547                           
  9548                           ;SIM800x_SDM.c: 394: Rxfifocurrent = next;
  9549  001CFC  C007  F061         	movff	SIM800xSDMCallBack@next,_Rxfifocurrent@SIM800x_SDM$F1168	;volatile
  9550  001D00  C008  F062         	movff	SIM800xSDMCallBack@next+1,_Rxfifocurrent@SIM800x_SDM$F1168+1	;volatile
  9551  001D04                     i2l1097:
  9552  001D04  FFFF               	dw	65535	; assembler added errata NOP
  9553  001D06  0012               	return		;funcret
  9554  001D08  FFFF               	dw	65535	; errata NOP
  9555  001D0A                     __end_of_SIM800xSDMCallBack:
  9556                           	callstack 0
  9557                           
  9558 ;; *************** function i2___lwmod *****************
  9559 ;; Defined at:
  9560 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  9561 ;; Parameters:    Size  Location     Type
  9562 ;;  dividend        2    0[COMRAM] unsigned int 
  9563 ;;  divisor         2    2[COMRAM] unsigned int 
  9564 ;; Auto vars:     Size  Location     Type
  9565 ;;  counter         1    4[COMRAM] unsigned char 
  9566 ;; Return value:  Size  Location     Type
  9567 ;;                  2    0[COMRAM] unsigned int 
  9568 ;; Registers used:
  9569 ;;		wreg, status,2, status,0
  9570 ;; Tracked objects:
  9571 ;;		On entry : 0/0
  9572 ;;		On exit  : 0/0
  9573 ;;		Unchanged: 0/0
  9574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9575 ;;      Params:         4       0       0       0       0       0       0
  9576 ;;      Locals:         1       0       0       0       0       0       0
  9577 ;;      Temps:          0       0       0       0       0       0       0
  9578 ;;      Totals:         5       0       0       0       0       0       0
  9579 ;;Total ram usage:        5 bytes
  9580 ;; Hardware stack levels used: 1
  9581 ;; This function calls:
  9582 ;;		Nothing
  9583 ;; This function is called by:
  9584 ;;		_SIM800xSDMCallBack
  9585 ;; This function uses a non-reentrant model
  9586 ;;
  9587                           
  9588                           	psect	text49
  9589  001E58                     __ptext49:
  9590                           	callstack 0
  9591  001E58                     i2___lwmod:
  9592                           	callstack 0
  9593  001E58  FFFF               	dw	65535	; assembler added errata NOP
  9594                           
  9595                           ;incstack = 0
  9596  001E5A  5003               	movf	i2___lwmod@divisor^0,w,c
  9597  001E5C  1004               	iorwf	(i2___lwmod@divisor+1)^0,w,c
  9598  001E5E  B4D8               	btfsc	status,2,c
  9599  001E60  D01C               	goto	i2l1730
  9600  001E62  0E01               	movlw	1
  9601  001E64  6E05               	movwf	i2___lwmod@counter^0,c
  9602  001E66  D005               	goto	i2l4302
  9603  001E68                     i2l4300:
  9604  001E68  FFFF               	dw	65535	; assembler added errata NOP
  9605  001E6A  90D8               	bcf	status,0,c
  9606  001E6C  3603               	rlcf	i2___lwmod@divisor^0,f,c
  9607  001E6E  3604               	rlcf	(i2___lwmod@divisor+1)^0,f,c
  9608  001E70  2A05               	incf	i2___lwmod@counter^0,f,c
  9609  001E72                     i2l4302:
  9610  001E72  FFFF               	dw	65535	; assembler added errata NOP
  9611  001E74  AE04               	btfss	(i2___lwmod@divisor+1)^0,7,c
  9612  001E76  D7F8               	goto	i2l4300
  9613  001E78                     i2u325_40:
  9614  001E78  FFFF               	dw	65535	; assembler added errata NOP
  9615  001E7A  5003               	movf	i2___lwmod@divisor^0,w,c
  9616  001E7C  5C01               	subwf	i2___lwmod@dividend^0,w,c
  9617  001E7E  5004               	movf	(i2___lwmod@divisor+1)^0,w,c
  9618  001E80  5802               	subwfb	(i2___lwmod@dividend+1)^0,w,c
  9619  001E82  A0D8               	btfss	status,0,c
  9620  001E84  D004               	goto	i2l4308
  9621  001E86  5003               	movf	i2___lwmod@divisor^0,w,c
  9622  001E88  5E01               	subwf	i2___lwmod@dividend^0,f,c
  9623  001E8A  5004               	movf	(i2___lwmod@divisor+1)^0,w,c
  9624  001E8C  5A02               	subwfb	(i2___lwmod@dividend+1)^0,f,c
  9625  001E8E                     i2l4308:
  9626  001E8E  FFFF               	dw	65535	; assembler added errata NOP
  9627  001E90  90D8               	bcf	status,0,c
  9628  001E92  3204               	rrcf	(i2___lwmod@divisor+1)^0,f,c
  9629  001E94  3203               	rrcf	i2___lwmod@divisor^0,f,c
  9630  001E96  2E05               	decfsz	i2___lwmod@counter^0,f,c
  9631  001E98  D7EF               	goto	i2u325_40
  9632  001E9A                     i2l1730:
  9633  001E9A  FFFF               	dw	65535	; assembler added errata NOP
  9634  001E9C  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
  9635  001EA0  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  9636  001EA4  0012               	return		;funcret
  9637  001EA6  FFFF               	dw	65535	; errata NOP
  9638  001EA8                     __end_ofi2___lwmod:
  9639                           	callstack 0
  9640                           
  9641 ;; *************** function _USARTReceiveByte *****************
  9642 ;; Defined at:
  9643 ;;		line 123 in file "C:/EmbeddedDevOps/M8M_APIs/PIC18.X/Src/USART.c"
  9644 ;; Parameters:    Size  Location     Type
  9645 ;;		None
  9646 ;; Auto vars:     Size  Location     Type
  9647 ;;  data            1    0[COMRAM] unsigned char 
  9648 ;; Return value:  Size  Location     Type
  9649 ;;                  1    wreg      unsigned char 
  9650 ;; Registers used:
  9651 ;;		wreg, status,2
  9652 ;; Tracked objects:
  9653 ;;		On entry : 0/0
  9654 ;;		On exit  : 0/0
  9655 ;;		Unchanged: 0/0
  9656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9657 ;;      Params:         0       0       0       0       0       0       0
  9658 ;;      Locals:         1       0       0       0       0       0       0
  9659 ;;      Temps:          0       0       0       0       0       0       0
  9660 ;;      Totals:         1       0       0       0       0       0       0
  9661 ;;Total ram usage:        1 bytes
  9662 ;; Hardware stack levels used: 1
  9663 ;; This function calls:
  9664 ;;		Nothing
  9665 ;; This function is called by:
  9666 ;;		_SIM800xSDMCallBack
  9667 ;; This function uses a non-reentrant model
  9668 ;;
  9669                           
  9670                           	psect	text50
  9671  00212E                     __ptext50:
  9672                           	callstack 0
  9673  00212E                     _USARTReceiveByte:
  9674                           	callstack 0
  9675  00212E  FFFF               	dw	65535	; assembler added errata NOP
  9676                           
  9677                           ;USART.c: 126: uint8_t data = RCREG;
  9678                           
  9679                           ;incstack = 0
  9680  002130  CFAE F001          	movff	4014,USARTReceiveByte@data	;volatile
  9681                           
  9682                           ;USART.c: 128: if(RCSTA,OERR)
  9683  002134  50AB               	movf	171,w,c	;volatile
  9684  002136  A2AB               	btfss	4011,1,c	;volatile
  9685  002138  D002               	goto	i2l4256
  9686                           
  9687                           ;USART.c: 129: RCSTA,CREN = 0;
  9688  00213A  50AB               	movf	171,w,c	;volatile
  9689  00213C  98AB               	bcf	4011,4,c	;volatile
  9690  00213E                     i2l4256:
  9691  00213E  FFFF               	dw	65535	; assembler added errata NOP
  9692                           
  9693                           ;USART.c: 131: return data;
  9694  002140  5001               	movf	USARTReceiveByte@data^0,w,c
  9695  002142  0012               	return		;funcret
  9696  002144  FFFF               	dw	65535	; errata NOP
  9697  002146                     __end_of_USARTReceiveByte:
  9698                           	callstack 0
  9699                           
  9700                           	psect	rparam
  9701  0000                     
  9702                           	psect	temp
  9703  00006E                     btemp:
  9704                           	callstack 0
  9705  00006E                     	ds	1
  9706  0000                     int$flags	set	btemp
  9707  0000                     wtemp8	set	btemp+1
  9708  0000                     ttemp5	set	btemp+1
  9709  0000                     ttemp6	set	btemp+4
  9710  0000                     ttemp7	set	btemp+8
  9711                           
  9712                           	psect	idloc
  9713                           
  9714                           ;Config register IDLOC0 @ 0x200000
  9715                           ;	unspecified, using default values
  9716  200000                     	org	2097152
  9717  200000  FF                 	db	255
  9718                           
  9719                           ;Config register IDLOC1 @ 0x200001
  9720                           ;	unspecified, using default values
  9721  200001                     	org	2097153
  9722  200001  FF                 	db	255
  9723                           
  9724                           ;Config register IDLOC2 @ 0x200002
  9725                           ;	unspecified, using default values
  9726  200002                     	org	2097154
  9727  200002  FF                 	db	255
  9728                           
  9729                           ;Config register IDLOC3 @ 0x200003
  9730                           ;	unspecified, using default values
  9731  200003                     	org	2097155
  9732  200003  FF                 	db	255
  9733                           
  9734                           ;Config register IDLOC4 @ 0x200004
  9735                           ;	unspecified, using default values
  9736  200004                     	org	2097156
  9737  200004  FF                 	db	255
  9738                           
  9739                           ;Config register IDLOC5 @ 0x200005
  9740                           ;	unspecified, using default values
  9741  200005                     	org	2097157
  9742  200005  FF                 	db	255
  9743                           
  9744                           ;Config register IDLOC6 @ 0x200006
  9745                           ;	unspecified, using default values
  9746  200006                     	org	2097158
  9747  200006  FF                 	db	255
  9748                           
  9749                           ;Config register IDLOC7 @ 0x200007
  9750                           ;	unspecified, using default values
  9751  200007                     	org	2097159
  9752  200007  FF                 	db	255
  9753                           
  9754                           	psect	config
  9755                           
  9756                           ; Padding undefined space
  9757  300000                     	org	3145728
  9758  300000  FF                 	db	255
  9759                           
  9760                           ;Config register CONFIG1H @ 0x300001
  9761                           ;	Oscillator Selection bits
  9762                           ;	OSC = HS, HS oscillator
  9763                           ;	Oscillator System Clock Switch Enable bit
  9764                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  9765  300001                     	org	3145729
  9766  300001  22                 	db	34
  9767                           
  9768                           ;Config register CONFIG2L @ 0x300002
  9769                           ;	Power-up Timer Enable bit
  9770                           ;	PWRT = OFF, PWRT disabled
  9771                           ;	Brown-out Reset Enable bit
  9772                           ;	BOR = ON, Brown-out Reset enabled
  9773                           ;	Brown-out Reset Voltage bits
  9774                           ;	BORV = 20, VBOR set to 2.0V
  9775  300002                     	org	3145730
  9776  300002  0F                 	db	15
  9777                           
  9778                           ;Config register CONFIG2H @ 0x300003
  9779                           ;	Watchdog Timer Enable bit
  9780                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9781                           ;	Watchdog Timer Postscale Select bits
  9782                           ;	WDTPS = 128, 1:128
  9783  300003                     	org	3145731
  9784  300003  0E                 	db	14
  9785                           
  9786                           ; Padding undefined space
  9787  300004                     	org	3145732
  9788  300004  FF                 	db	255
  9789                           
  9790                           ;Config register CONFIG3H @ 0x300005
  9791                           ;	CCP2 Mux bit
  9792                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
  9793  300005                     	org	3145733
  9794  300005  01                 	db	1
  9795                           
  9796                           ;Config register CONFIG4L @ 0x300006
  9797                           ;	Stack Full/Underflow Reset Enable bit
  9798                           ;	STVR = OFF, Stack Full/Underflow will not cause RESET
  9799                           ;	Low Voltage ICSP Enable bit
  9800                           ;	LVP = OFF, Low Voltage ICSP disabled
  9801                           ;	Background Debugger Enable bit
  9802                           ;	DEBUG = 0x1, unprogrammed default
  9803  300006                     	org	3145734
  9804  300006  80                 	db	128
  9805                           
  9806                           ; Padding undefined space
  9807  300007                     	org	3145735
  9808  300007  FF                 	db	255
  9809                           
  9810                           ;Config register CONFIG5L @ 0x300008
  9811                           ;	Code Protection bit
  9812                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  9813                           ;	Code Protection bit
  9814                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  9815                           ;	Code Protection bit
  9816                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  9817                           ;	Code Protection bit
  9818                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  9819  300008                     	org	3145736
  9820  300008  0F                 	db	15
  9821                           
  9822                           ;Config register CONFIG5H @ 0x300009
  9823                           ;	Boot Block Code Protection bit
  9824                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  9825                           ;	Data EEPROM Code Protection bit
  9826                           ;	CPD = OFF, Data EEPROM not code protected
  9827  300009                     	org	3145737
  9828  300009  C0                 	db	192
  9829                           
  9830                           ;Config register CONFIG6L @ 0x30000A
  9831                           ;	Write Protection bit
  9832                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  9833                           ;	Write Protection bit
  9834                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  9835                           ;	Write Protection bit
  9836                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  9837                           ;	Write Protection bit
  9838                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  9839  30000A                     	org	3145738
  9840  30000A  0F                 	db	15
  9841                           
  9842                           ;Config register CONFIG6H @ 0x30000B
  9843                           ;	Configuration Register Write Protection bit
  9844                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  9845                           ;	Boot Block Write Protection bit
  9846                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  9847                           ;	Data EEPROM Write Protection bit
  9848                           ;	WRTD = OFF, Data EEPROM not write protected
  9849  30000B                     	org	3145739
  9850  30000B  E0                 	db	224
  9851                           
  9852                           ;Config register CONFIG7L @ 0x30000C
  9853                           ;	Table Read Protection bit
  9854                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  9855                           ;	Table Read Protection bit
  9856                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  9857                           ;	Table Read Protection bit
  9858                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  9859                           ;	Table Read Protection bit
  9860                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  9861  30000C                     	org	3145740
  9862  30000C  0F                 	db	15
  9863                           
  9864                           ;Config register CONFIG7H @ 0x30000D
  9865                           ;	Boot Block Table Read Protection bit
  9866                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  9867  30000D                     	org	3145741
  9868  30000D  40                 	db	64
  9869                           tosu	equ	0xFFF
  9870                           tosh	equ	0xFFE
  9871                           tosl	equ	0xFFD
  9872                           stkptr	equ	0xFFC
  9873                           pclatu	equ	0xFFB
  9874                           pclath	equ	0xFFA
  9875                           pcl	equ	0xFF9
  9876                           tblptru	equ	0xFF8
  9877                           tblptrh	equ	0xFF7
  9878                           tblptrl	equ	0xFF6
  9879                           tablat	equ	0xFF5
  9880                           prodh	equ	0xFF4
  9881                           prodl	equ	0xFF3
  9882                           indf0	equ	0xFEF
  9883                           postinc0	equ	0xFEE
  9884                           postdec0	equ	0xFED
  9885                           preinc0	equ	0xFEC
  9886                           plusw0	equ	0xFEB
  9887                           fsr0h	equ	0xFEA
  9888                           fsr0l	equ	0xFE9
  9889                           wreg	equ	0xFE8
  9890                           indf1	equ	0xFE7
  9891                           postinc1	equ	0xFE6
  9892                           postdec1	equ	0xFE5
  9893                           preinc1	equ	0xFE4
  9894                           plusw1	equ	0xFE3
  9895                           fsr1h	equ	0xFE2
  9896                           fsr1l	equ	0xFE1
  9897                           bsr	equ	0xFE0
  9898                           indf2	equ	0xFDF
  9899                           postinc2	equ	0xFDE
  9900                           postdec2	equ	0xFDD
  9901                           preinc2	equ	0xFDC
  9902                           plusw2	equ	0xFDB
  9903                           fsr2h	equ	0xFDA
  9904                           fsr2l	equ	0xFD9
  9905                           status	equ	0xFD8

Data Sizes:
    Strings     1606
    Constant    41
    Data        8
    BSS         743
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     92     109
    BANK0           128     41     115
    BANK1           256     29     249
    BANK2           256      0     240
    BANK3           256      0     200
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 279
		 -> SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xIPGetParameters@str(COMRAM[30]), SIM800xIPGetState@str(COMRAM[30]), txmessage(BANK2[100]), 
		 -> STR_10(CODE[17]), STR_9(CODE[279]), STR_4(CODE[9]), STR_3(CODE[5]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 279
		 -> SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xIPGetParameters@str(COMRAM[30]), SIM800xIPGetState@str(COMRAM[30]), txmessage(BANK2[100]), 
		 -> STR_10(CODE[17]), STR_9(CODE[279]), STR_4(CODE[9]), STR_3(CODE[5]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_100(CODE[21]), STR_99(CODE[18]), STR_98(CODE[21]), STR_95(CODE[26]), 
		 -> STR_94(CODE[28]), STR_93(CODE[25]), STR_92(CODE[24]), STR_91(CODE[26]), 
		 -> STR_71(CODE[15]), STR_70(CODE[20]), STR_66(CODE[29]), STR_65(CODE[29]), 
		 -> STR_59(CODE[15]), STR_53(CODE[4]), STR_33(CODE[12]), STR_30(CODE[12]), 
		 -> STR_24(CODE[27]), STR_23(CODE[24]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 40
		 -> SIM800xHTTPRead@str(BANK0[30]), SIM800xHTTPAction@str(BANK0[30]), SIM800xHTTPInputData@str(BANK0[30]), SIM800xHTTPSetTimeout@str(COMRAM[30]), 
		 -> SIM800xHTTPSetBreakEnd@str(COMRAM[30]), SIM800xHTTPSetBreak@str(COMRAM[30]), SIM800xHTTPSetRedir@str(COMRAM[25]), SIM800xHTTPSetPort@str(COMRAM[30]), 
		 -> SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xGPRSSetDataMode@str(COMRAM[20]), SIM800xGPRSSetQoSRequest@str(COMRAM[40]), SIM800xGPRSSetQoSMin@str(COMRAM[40]), 
		 -> SIM800xIPGetParameters@str(COMRAM[30]), SIM800xIPSetRate@str(COMRAM[8]), SIM800xSetBaudRate@str(COMRAM[15]), SIM800xInit@str(COMRAM[15]), 
		 -> SystemTask@msg(BANK1[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    SIM800xSDMReadF1Pkt@data	PTR unsigned char  size(2) Largest target is 40
		 -> SIM800x3GPPGetSubscriberNumber@str(COMRAM[40]), SIM800x3GPPGetSignalQuality@str(COMRAM[20]), SIM800x3GPPGetOperatorName@str(COMRAM[40]), SIM800xHTTPReadHeader@str(COMRAM[30]), 
		 -> SIM800xHTTPReadState@str(COMRAM[30]), SIM800xHTTPRead@str(BANK0[30]), SIM800xHTTPAction@str(BANK0[30]), SIM800xHTTPInputData@str(BANK0[30]), 
		 -> SIM800xGPRSGetNRegState@str(COMRAM[20]), SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xGPRSSetDataMode@str(COMRAM[20]), SIM800xIPGetState@str(COMRAM[30]), 
		 -> SIM800xGetIMSI@str(COMRAM[20]), SIM800xGetSoftwareRevisionID@str(COMRAM[30]), ProcessResp4@str(COMRAM[20]), 

    SIM800xSDMPrint@str	PTR const unsigned char  size(2) Largest target is 279
		 -> STR_107(CODE[9]), STR_106(CODE[8]), STR_105(CODE[10]), STR_104(CODE[16]), 
		 -> STR_103(CODE[13]), STR_102(CODE[16]), STR_101(CODE[14]), SIM800xHTTPRead@str(BANK0[30]), 
		 -> SIM800xHTTPAction@str(BANK0[30]), SIM800xHTTPInputData@str(BANK0[30]), STR_97(CODE[24]), STR_96(CODE[23]), 
		 -> SIM800xHTTPSetTimeout@str(COMRAM[30]), SIM800xHTTPSetBreakEnd@str(COMRAM[30]), SIM800xHTTPSetBreak@str(COMRAM[30]), SIM800xHTTPSetRedir@str(COMRAM[25]), 
		 -> SIM800xHTTPSetPort@str(COMRAM[30]), STR_90(CODE[21]), STR_89(CODE[18]), STR_88(CODE[19]), 
		 -> STR_87(CODE[19]), STR_86(CODE[13]), STR_85(CODE[13]), STR_84(CODE[10]), 
		 -> STR_83(CODE[11]), STR_82(CODE[6]), STR_81(CODE[10]), STR_80(CODE[11]), 
		 -> STR_79(CODE[11]), STR_78(CODE[12]), STR_77(CODE[12]), STR_76(CODE[2]), 
		 -> STR_75(CODE[3]), STR_74(CODE[3]), STR_73(CODE[2]), STR_72(CODE[13]), 
		 -> SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xGPRSSetDataMode@str(COMRAM[20]), STR_69(CODE[12]), STR_68(CODE[12]), 
		 -> STR_67(CODE[11]), SIM800xGPRSSetQoSRequest@str(COMRAM[40]), SIM800xGPRSSetQoSMin@str(COMRAM[40]), STR_64(CODE[7]), 
		 -> STR_63(CODE[12]), STR_62(CODE[12]), STR_61(CODE[12]), STR_60(CODE[11]), 
		 -> SIM800xIPGetParameters@str(COMRAM[30]), STR_58(CODE[12]), STR_57(CODE[12]), STR_56(CODE[12]), 
		 -> STR_55(CODE[9]), STR_54(CODE[12]), SIM800xIPSetRate@str(COMRAM[8]), STR_52(CODE[13]), 
		 -> STR_51(CODE[12]), STR_50(CODE[8]), STR_49(CODE[12]), STR_48(CODE[9]), 
		 -> STR_47(CODE[12]), STR_46(CODE[8]), STR_45(CODE[12]), STR_44(CODE[12]), 
		 -> STR_43(CODE[12]), STR_42(CODE[9]), STR_41(CODE[5]), STR_40(CODE[8]), 
		 -> STR_39(CODE[8]), STR_38(CODE[8]), STR_37(CODE[8]), STR_36(CODE[8]), 
		 -> STR_35(CODE[4]), STR_34(CODE[6]), SIM800xSetBaudRate@str(COMRAM[15]), STR_32(CODE[13]), 
		 -> STR_31(CODE[6]), SIM800xInit@str(COMRAM[15]), STR_29(CODE[6]), STR_28(CODE[4]), 
		 -> STR_10(CODE[17]), STR_9(CODE[279]), STR_4(CODE[9]), STR_3(CODE[5]), 

    SIM800xSDMSendBytes@data	PTR unsigned char  size(2) Largest target is 100
		 -> txmessage(BANK2[100]), 

    SIM800xHTTPRead@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemTask@errcode(BANK1[2]), 

    SIM800xHTTPRead@data	PTR unsigned char  size(2) Largest target is 30
		 -> rxmessage(BANK1[30]), 

    SIM800xHTTPRead@cnt	PTR unsigned long  size(2) Largest target is 4
		 -> SystemTask@cnt(BANK1[4]), 

    SIM800xHTTPAction@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemTask@errcode(BANK1[2]), 

    SIM800xHTTPAction@cnt	PTR unsigned long  size(2) Largest target is 4
		 -> SystemTask@cnt(BANK1[4]), 

    SIM800xHTTPAction@statuscode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemTask@scode(BANK1[2]), 

    SIM800xHTTPInputData@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemTask@errcode(BANK1[2]), 

    SIM800xHTTPInputData@data	PTR unsigned char  size(2) Largest target is 100
		 -> txmessage(BANK2[100]), 

    SIM800xHTTPSetContent@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemInit@err(BANK0[2]), 

    SIM800xHTTPSetContent@content	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_10(CODE[17]), 

    SIM800xHTTPSetURL@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemInit@err(BANK0[2]), 

    SIM800xHTTPSetURL@url	PTR const unsigned char  size(2) Largest target is 279
		 -> STR_9(CODE[279]), 

    SIM800xHTTPInit@errcode	PTR unsigned int  size(2) Largest target is 2
		 -> SystemInit@err(BANK0[2]), 

    SIM800xIPGetState@ip	PTR unsigned char  size(2) Largest target is 20
		 -> SystemInit@ip(BANK0[20]), 

    SIM800xIPSetAPN@apn	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_4(CODE[9]), 

    SIM800xIPSetConnectionType@contype	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 0

    ProcessResp4@ec	PTR unsigned int  size(2) Largest target is 2
		 -> SystemInit@err(BANK0[2]), 

    ProcessResp2@str	PTR unsigned char  size(2) Largest target is 40
		 -> SIM800xGPRSGetAddress@str(COMRAM[40]), SIM800xIPGetState@str(COMRAM[30]), SIM800xGetSoftwareRevisionID@str(COMRAM[30]), 

    StrToInt@str	PTR const unsigned char  size(2) Largest target is 40
		 -> SIM800x3GPPGetSubscriberNumber@str(COMRAM[40]), SIM800x3GPPGetSignalQuality@str(COMRAM[20]), SIM800x3GPPGetOperatorName@str(COMRAM[40]), SIM800xHTTPReadHeader@str(COMRAM[30]), 
		 -> SIM800xHTTPReadState@str(COMRAM[30]), SIM800xHTTPRead@str(BANK0[30]), SIM800xHTTPAction@str(BANK0[30]), SIM800xHTTPInputData@str(BANK0[30]), 
		 -> SIM800xGPRSGetNRegState@str(COMRAM[20]), SIM800xGPRSSetDataMode@str(COMRAM[20]), SIM800xGetIMSI@str(COMRAM[20]), ProcessResp4@str(COMRAM[20]), 

    SoftUARTPrint@str	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_27(CODE[17]), STR_26(CODE[3]), STR_25(CODE[7]), SystemTask@msg(BANK1[20]), 
		 -> STR_22(CODE[34]), STR_21(CODE[32]), STR_20(CODE[35]), STR_11(CODE[8]), 
		 -> STR_8(CODE[32]), STR_7(CODE[3]), STR_6(CODE[31]), SystemInit@ip(BANK0[20]), 
		 -> STR_5(CODE[8]), STR_2(CODE[30]), STR_1(CODE[21]), 

    AddEntryToJsonObject@value	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_19(CODE[3]), STR_17(CODE[3]), STR_15(CODE[5]), STR_13(CODE[3]), 

    AddEntryToJsonObject@key	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_18(CODE[15]), STR_16(CODE[20]), STR_14(CODE[4]), STR_12(CODE[23]), 

    AddEntryToJsonObject@JsonObject	PTR unsigned char  size(2) Largest target is 100
		 -> txmessage(BANK2[100]), 

    AddEntryToJsonObject@Cpos	PTR unsigned int  size(2) Largest target is 2
		 -> cpos(BANK0[2]), 


Critical Paths under _main in COMRAM

    _SystemTask->_SIM800xHTTPRead
    _SoftUARTRxAvailable->___awmod
    _SoftUARTReceiveByte->___awmod
    _SIM800xHTTPRead->_sprintf
    _SIM800xHTTPInputData->_sprintf
    _SIM800xHTTPAction->_sprintf
    _SystemInit->_SIM800xIPGetState
    _SoftUARTPrint->_SoftUARTTransmitByte
    _SIM800xInit->_sprintf
    _sprintf->___llmod
    ___llmod->___lldiv
    _SIM800xSDMInit->___lldiv
    _SIM800xIPSetConnectionType->_ProcessResp1
    _SIM800xIPSetAPN->_ProcessResp1
    _SIM800xIPOpen->_ProcessResp1
    _ProcessResp1->_SIM800xSDMRxAvailable
    _SIM800xIPGetState->_ProcessResp2
    _ProcessResp2->_SIM800xSDMReadF1Pkt
    _SIM800xHTTPSetURL->_ProcessResp4
    _SIM800xHTTPSetContent->_ProcessResp4
    _SIM800xHTTPInit->_ProcessResp4
    _SIM800xSDMPrint->_SIM800xSDMSendByte
    _ProcessResp4->_StrToInt
    _StrToInt->___lmul
    _SIM800xSDMReadF1Pkt->_SIM800xSDMRxAvailable
    _SIM800xSDMRxAvailable->___lwmod
    _SIM800xSDMReadByte->___lwmod

Critical Paths under _Isr in COMRAM

    _Isr->_SoftUARTCallBack
    _SoftUARTCallBack->i2___awmod
    _SIM800xSDMCallBack->i2___lwmod

Critical Paths under _main in BANK0

    _SystemTask->_SIM800xHTTPAction

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_SystemTask

Critical Paths under _Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  194009
                         _SystemInit
                         _SystemTask
 ---------------------------------------------------------------------------------
 (1) _SystemTask                                          31    31      0   77542
                                             77 COMRAM     2     2      0
                                              0 BANK1     29    29      0
                  _SIM800xHTTPAction
               _SIM800xHTTPInputData
                    _SIM800xHTTPRead
                      _SoftUARTPrint
                _SoftUARTReceiveByte
                _SoftUARTRxAvailable
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _SoftUARTRxAvailable                                  2     2      0     903
                                             19 COMRAM     2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _SoftUARTReceiveByte                                  3     1      2     937
                                             19 COMRAM     3     1      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     903
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPRead                                     58    44     14   22896
                                             59 COMRAM    18     4     14
                                              0 BANK0     40    40      0
                    _SIM800xSDMFlush
                     _SIM800xSDMPeek
                    _SIM800xSDMPrint
                 _SIM800xSDMReadByte
                _SIM800xSDMReadF1Pkt
              _SIM800xSDMRxAvailable
                           _StrToInt
                            _Tick_ms
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPInputData                                56    44     12   23795
                                             59 COMRAM    16     4     12
                                              0 BANK0     40    40      0
                    _SIM800xSDMFlush
                     _SIM800xSDMPeek
                    _SIM800xSDMPrint
                _SIM800xSDMReadF1Pkt
              _SIM800xSDMRxAvailable
                _SIM800xSDMSendBytes
                           _StrToInt
                            _Tick_ms
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMSendBytes                                  4     0      4     245
                                             13 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPAction                                   55    45     10   21909
                                             59 COMRAM    14     4     10
                                              0 BANK0     41    41      0
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                _SIM800xSDMReadF1Pkt
              _SIM800xSDMRxAvailable
                           _StrToInt
                            _Tick_ms
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                          22    22      0  116467
                                              0 BANK0     22    22      0
               _AddEntryToJsonObject
                    _SIM800xHTTPInit
              _SIM800xHTTPSetContent
                  _SIM800xHTTPSetURL
                  _SIM800xIPGetState
                      _SIM800xIPOpen
                    _SIM800xIPSetAPN
         _SIM800xIPSetConnectionType
                        _SIM800xInit
                       _SoftUARTInit
                      _SoftUARTPrint
 ---------------------------------------------------------------------------------
 (2) _SoftUARTPrint                                        2     0      2    1731
                                             16 COMRAM     2     0      2
               _SoftUARTTransmitByte
 ---------------------------------------------------------------------------------
 (3) _SoftUARTTransmitByte                                 3     3      0     136
                                             13 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _SoftUARTInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIM800xInit                                         22    18      4   14748
                                             59 COMRAM    22    18      4
                    _SIM800xSDMFlush
                     _SIM800xSDMInit
                     _SIM800xSDMPeek
                    _SIM800xSDMPrint
                 _SIM800xSDMReadByte
              _SIM800xSDMRxAvailable
                            _Wait_ms
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             33    21     12    4819
                                             35 COMRAM    24    12     12
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     412
                                             26 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _Wait_ms                                             12     8      4     512
                                             13 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMInit                                      12     8      4     918
                                             26 COMRAM    12     8      4
                        _SystimeInit
                     _USARTAsyncInit
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     741
                                             13 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _USARTAsyncInit                                       1     1      0      22
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _SystimeInit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIM800xIPSetConnectionType                           3     1      2    9383
                                             31 COMRAM     3     1      2
                       _ProcessResp1
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                 _SIM800xSDMSendByte
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _SIM800xIPSetAPN                                      3     1      2    9383
                                             31 COMRAM     3     1      2
                       _ProcessResp1
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                 _SIM800xSDMSendByte
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _SIM800xIPOpen                                        1     1      0    7581
                                             31 COMRAM     1     1      0
                       _ProcessResp1
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                 _SIM800xSDMSendByte
 ---------------------------------------------------------------------------------
 (3) _ProcessResp1                                         9     9      0     832
                                             22 COMRAM     9     9      0
                     _SIM800xSDMPeek
              _SIM800xSDMRxAvailable
                            _Tick_ms
 ---------------------------------------------------------------------------------
 (2) _SIM800xIPGetState                                   45    43      2   13327
                                             48 COMRAM    44    42      2
                       _ProcessResp2
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
              _SIM800xSDMRxAvailable
                 _SIM800xSDMSendByte
                            _Tick_ms
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _ProcessResp2                                        12    10      2    3687
                                             36 COMRAM    12    10      2
                     _SIM800xSDMPeek
                _SIM800xSDMReadF1Pkt
                            _Tick_ms
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMPeek                                       3     3      0      62
                                             13 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPSetURL                                    4     0      4   19912
                                             77 COMRAM     4     0      4
                       _ProcessResp4
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                 _SIM800xSDMSendByte
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPSetContent                                4     0      4   19912
                                             77 COMRAM     4     0      4
                       _ProcessResp4
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
                 _SIM800xSDMSendByte
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2    1650
                                             13 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _SIM800xHTTPInit                                      2     0      2   18079
                                             77 COMRAM     2     0      2
                       _ProcessResp4
                    _SIM800xSDMFlush
                    _SIM800xSDMPrint
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMPrint                                      2     0      2    6656
                                             14 COMRAM     2     0      2
                 _SIM800xSDMSendByte
 ---------------------------------------------------------------------------------
 (4) _SIM800xSDMSendByte                                   1     1      0      31
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ProcessResp4                                        32    30      2   11302
                                             45 COMRAM    32    30      2
                _SIM800xSDMReadF1Pkt
              _SIM800xSDMRxAvailable
                           _StrToInt
                            _Tick_ms
 ---------------------------------------------------------------------------------
 (3) _StrToInt                                            20    16      4    5632
                                             25 COMRAM    20    16      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     776
                                             13 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMReadF1Pkt                                 14    12      2    2853
                                             22 COMRAM    14    12      2
                    _SIM800xSDMFlush
                 _SIM800xSDMReadByte
              _SIM800xSDMRxAvailable
                            _Tick_ms
 ---------------------------------------------------------------------------------
 (3) _Tick_ms                                              4     0      4       0
                                             13 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _SIM800xSDMRxAvailable                                4     2      2     702
                                             18 COMRAM     4     2      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) _SIM800xSDMReadByte                                   1     1      0     736
                                             18 COMRAM     1     1      0
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     702
                                             13 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _SIM800xSDMFlush                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AddEntryToJsonObject                                13     5      8    2232
                                             13 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Isr                                                  2     2      0     787
                                             11 COMRAM     2     2      0
                 _SIM800xSDMCallBack
                   _SoftUARTCallBack
                    _SysTimeCallBack
 ---------------------------------------------------------------------------------
 (8) _SysTimeCallBack                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _SoftUARTCallBack                                     5     5      0     485
                                              6 COMRAM     5     5      0
                          i2___awmod
 ---------------------------------------------------------------------------------
 (9) i2___awmod                                            6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _SIM800xSDMCallBack                                   3     3      0     302
                                              5 COMRAM     3     3      0
                   _USARTReceiveByte
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (9) i2___lwmod                                            5     1      4     211
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (9) _USARTReceiveByte                                     1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SystemInit
     _AddEntryToJsonObject
     _SIM800xHTTPInit
       _ProcessResp4
         _SIM800xSDMReadF1Pkt
           _SIM800xSDMFlush
           _SIM800xSDMReadByte
             ___lwmod
           _SIM800xSDMRxAvailable
             ___lwmod
           _Tick_ms
         _SIM800xSDMRxAvailable
         _StrToInt
           ___lmul
         _Tick_ms
       _SIM800xSDMFlush
       _SIM800xSDMPrint
         _SIM800xSDMSendByte
     _SIM800xHTTPSetContent
       _ProcessResp4
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMSendByte
       _strlen
     _SIM800xHTTPSetURL
       _ProcessResp4
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMSendByte
       _strlen
     _SIM800xIPGetState
       _ProcessResp2
         _SIM800xSDMPeek
         _SIM800xSDMReadF1Pkt
         _Tick_ms
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMRxAvailable
       _SIM800xSDMSendByte
       _Tick_ms
       _strlen
     _SIM800xIPOpen
       _ProcessResp1
         _SIM800xSDMPeek
         _SIM800xSDMRxAvailable
         _Tick_ms
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMSendByte
     _SIM800xIPSetAPN
       _ProcessResp1
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMSendByte
       _strlen
     _SIM800xIPSetConnectionType
       _ProcessResp1
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMSendByte
       _strlen
     _SIM800xInit
       _SIM800xSDMFlush
       _SIM800xSDMInit
         _SystimeInit
         _USARTAsyncInit
         ___lldiv
       _SIM800xSDMPeek
       _SIM800xSDMPrint
       _SIM800xSDMReadByte
       _SIM800xSDMRxAvailable
       _Wait_ms
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
     _SoftUARTInit
     _SoftUARTPrint
       _SoftUARTTransmitByte
   _SystemTask
     _SIM800xHTTPAction
       _SIM800xSDMFlush
       _SIM800xSDMPrint
       _SIM800xSDMReadF1Pkt
       _SIM800xSDMRxAvailable
       _StrToInt
       _Tick_ms
       _sprintf
     _SIM800xHTTPInputData
       _SIM800xSDMFlush
       _SIM800xSDMPeek
       _SIM800xSDMPrint
       _SIM800xSDMReadF1Pkt
       _SIM800xSDMRxAvailable
       _SIM800xSDMSendBytes
       _StrToInt
       _Tick_ms
       _sprintf
       _strlen
     _SIM800xHTTPRead
       _SIM800xSDMFlush
       _SIM800xSDMPeek
       _SIM800xSDMPrint
       _SIM800xSDMReadByte
       _SIM800xSDMReadF1Pkt
       _SIM800xSDMRxAvailable
       _StrToInt
       _Tick_ms
       _sprintf
     _SoftUARTPrint
     _SoftUARTReceiveByte
       ___awmod
     _SoftUARTRxAvailable
       ___awmod
     _sprintf

 _Isr (ROOT)
   _SIM800xSDMCallBack
     _USARTReceiveByte
     i2___lwmod
   _SoftUARTCallBack
     i2___awmod
   _SysTimeCallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     1D      F9       7       97.3%
BITBANK0            80      0       0       4        0.0%
BANK0               80     29      73       5       89.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     5C      6D       1       86.5%
BITBIGSFRllhhh      25      0       0      18        0.0%
BITBIGSFRlh         19      0       0      17        0.0%
BITBIGSFRh           D      0       0      16        0.0%
BITBIGSFRllhl        C      0       0      19        0.0%
BITBIGSFRlll         6      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     391      21        0.0%
DATA                 0      0     391       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Apr 02 12:53:13 2023

                                     SIM800xSDMReadF1Pkt@time 0020  
                                         ?_SIM800xSDMSendByte 0001  
                                                          l50 0DCE  
                                                          l54 0DDC  
                                                          l75 21B2  
                                                          _IO 000F80  
                                        ?_SIM800xSDMSendBytes 000E  
                                                         l108 00A4  
                                                         l117 02C4  
                                                         l410 124A  
                                                         l227 1D28  
                                                         l251 1F86  
                                                         l513 1B22  
                                                         l290 1A76  
                                                         l371 16BC  
                                                         l365 195C  
                                                         l358 110C  
                                                         l519 1B8E  
                                   __end_of_SIM800xHTTPAction 0A1E  
                                                         l562 157E  
                                                         l547 1FD0  
                                                         l396 145C  
                                                         l389 147C  
                                                         l741 1DAE  
                                                         l807 0A18  
                                                         l773 1E02  
                                                         l829 0594  
                                                         l783 0C22  
                                                         _GIE 007F97  
                                                         _Isr 0008  
                                                         _val 0065  
                                                ___awmod@sign 0013  
                                        ??_SIM800xSDMReadByte 0013  
                                   __end_of_SIM800xHTTPSetURL 1DB4  
                                                         wreg 000FE8  
                                   __end_of_SIM800xIPGetState 1584  
                                         SIM800xHTTPRead@data 003C  
                                                StrToInt@ctrl 0028  
                                         SIM800xHTTPRead@time 00E8  
                                         SIM800xHTTPRead@size 0042  
                                                StrToInt@stop 001D  
                                        ??_SIM800xSDMSendByte 000E  
                                             ?_USARTAsyncInit 0001  
                                                        ?_Isr 0001  
                                                        l1031 205C  
                                                        l1220 060E  
                                                        l1045 1EF0  
                                                        l1070 1378  
                                                        l1223 0674  
                                                        l1057 2016  
                                                        l1268 173C  
                                                        l1730 1E4A  
                                                        l5004 1AE4  
                                                        l1649 19C0  
                                                        l5050 1F9A  
                                                        l5210 0BBA  
                                                        l5028 1B50  
                                                        l4502 0FA8  
                                                        l5118 1D7E  
                                                        l5206 0B86  
                                                        l4512 1010  
                                                        l4520 10A0  
                                                        l5136 1DD2  
                                                        l3544 1A5E  
                                                        l5216 0BD4  
                                                        l5082 14F4  
                                                        l4602 16E6  
                                                        l5242 0810  
                                                        l5322 0352  
                                                        l4508 0FD8  
                                                        l4532 10D2  
                                                        l4540 1FF6  
                                                        l4604 16F4  
                                                        l5252 0866  
                                                        l5332 03BA  
                                                        l5156 1F52  
                                                        l4462 1E3E  
                                                        l4454 1E18  
                                                        l5094 1530  
                                                        l5078 14C2  
                                                        l4614 172C  
                                                        l4630 19B0  
                                                        l4622 1976  
                                                        l5174 0A88  
                                                        l5318 034E  
                                                        l4456 1E22  
                                                        l4480 1EBC  
                                                        l4560 12A0  
                                                        l4528 10CA  
                                                        l4624 1984  
                                                        l4704 07BC  
                                                        l5184 0AF0  
                                                        l5360 0492  
                                                        l4570 12CE  
                                                        l4490 1C66  
                                                        l4810 1396  
                                                        l4714 1F02  
                                                        l4802 16AC  
                                                        l5098 155C  
                                                        l4650 05D6  
                                                        l4642 05C2  
                                                        l5282 0936  
                                                        l5258 08A0  
                                                        l5338 03F4  
                                                        l4572 1300  
                                                        l4716 1F08  
                                                        l4644 05CA  
                                                        l4636 05A6  
                                                        l4740 1D32  
                                                        l5276 0902  
                                                        l5188 0B24  
                                                        l5372 04F6  
                                                        l4582 1330  
                                                        l4590 1360  
                                                        l4494 1C7C  
                                                        l4646 05D0  
                                                        l4742 1D36  
                                                        l4726 1D16  
                                                        l5366 04B2  
                                                        l4910 1810  
                                                        l4902 17F2  
                                                        l5470 0F68  
                                                        l5454 0E1E  
                                                        l3960 005A  
                                                        l4816 13CE  
                                                        l4592 219E  
                                                        l4672 0696  
                                                        l5368 04C0  
                                                        l4912 181A  
                                                        l5472 0F76  
                                                        l3962 00D4  
                                                        l4578 130A  
                                                        l4762 1932  
                                                        l4682 06C4  
                                                        l4658 0634  
                                                        l5298 09D8  
                                                        l5378 052A  
                                                        l5386 054C  
                                                        l4922 1842  
                                                        l4906 1800  
                                                        l4772 1958  
                                                        l4756 18FC  
                                                        l4676 06BE  
                                                        l3982 0256  
                                                        l3966 0112  
                                                        l4846 141E  
                                                        l4838 1410  
                                                        l4926 1852  
                                                        l4918 1836  
                                                        l3984 0280  
                                                        l3976 01F4  
                                                        l4864 1478  
                                                        l4880 1BF8  
                                                        l4792 1652  
                                                        l4696 0722  
                                                        l4944 117A  
                                                        l3978 0218  
                                                        l4858 146A  
                                                        l4786 1642  
                                                        l4698 072C  
                                                        l4946 1180  
                                                        l4884 1C24  
                                                        l4796 167A  
                                                        l4980 1246  
                                                        l4892 2072  
                                                        l4974 1238  
                                                        l4990 1B98  
                                                        l4994 1BC4  
                                                        STR_1 7D04  
                                                        STR_2 7B73  
                                                        STR_3 7FE0  
                                                        STR_4 7F6B  
                                                        STR_5 7FB4  
                                                        STR_6 7B54  
                                                        STR_7 7B31  
                                                        STR_8 7B34  
                                                        STR_9 79B8  
                                                        _CREN 007D5C  
                                                        u2210 1AA8  
                                                        u4010 13C8  
                                                        u4020 13E0  
                                                        u4110 1C1C  
                                                        u4031 13E6  
                                                        u4120 1C48  
                                                        u4105 19FA  
                                                        u3500 1E28  
                                                        u4117 1C12  
                                                        u4310 1ADE  
                                                        u4127 1C3E  
                                                        _PIE1 000F9D  
                                                        u4410 1DCE  
                                                        u4330 1B4A  
                                                        u3700 1370  
                                                        u3630 126E  
                                                        u4270 1BBC  
                                                        u4190 1820  
                                                        u4431 0A4A  
                                                        u4280 1BE8  
                                                        u4600 08B2  
                                                        u4441 0A5C  
                                                        u4370 1506  
                                                        u3730 16FA  
                                                        u4530 0BCC  
                                                        u4450 0A70  
                                                        u4460 0A86  
                                                        u4277 1BB2  
                                                        u4701 035A  
                                                        u3670 12FE  
                                                        u4710 03EE  
                                                        u4287 1BDE  
                                                        u4471 0A90  
                                                        u3760 198A  
                                                        u3840 0704  
                                                        u4640 0948  
                                                        u4720 0406  
                                                        u4570 080A  
                                                        u4490 0B36  
                                                        u3860 07CE  
                                                        _RCIF 007CF5  
                                                        u4581 0818  
                                                        u3950 1944  
                                                        u3870 07EA  
                                                        u4590 089A  
                                                        u3880 1F2C  
                                                        u4690 034C  
                                                        u3980 164C  
                                                        u4790 053C  
                                                        u3887 1F22  
                                                        _OERR 007D59  
                                                        u4947 1D1E  
                                        SIM800xHTTPRead@F2950 0164  
                                                        u4957 1D3E  
                                                        u4967 1D50  
                                                        _TMR0 000FD6  
                                       ??_SIM800xSDMReadF1Pkt 0019  
                                                        _Tout 006A  
                                                        _cpos 00C4  
                                                        _main 21AC  
                                       SoftUARTTransmitByte@k 0010  
                                                        fsr1h 000FE2  
                                                        fsr2h 000FDA  
                                                        indf1 000FE7  
                                                        indf2 000FDF  
                                                        fsr1l 000FE1  
                                                        fsr2l 000FD9  
                                                        btemp 006E  
                                                        prodh 000FF4  
                                                        prodl 000FF3  
                                         SIM800xIPGetState@ip 0031  
                                                        start 002E  
                                      ?_SIM800xSDMRxAvailable 0013  
                                             ProcessResp2@res 002F  
                                             ProcessResp4@res 004C  
                                             ProcessResp2@str 0025  
                                             ProcessResp4@str 0034  
                                                ___param_bank 000000  
                                               StrToInt@start 001C  
                                                       ??_Isr 000C  
                                       ??_SIM800xSDMSendBytes 0012  
                                             __end_of_Tick_ms 215C  
                                             __end_of_Wait_ms 1ABC  
                                                ?_SIM800xInit 003C  
                                                       ?_main 0001  
                                                       STR_10 7D9C  
                                                       STR_11 7FB4  
                                                       STR_12 7CAE  
                                                       STR_20 7ACF  
                                                       STR_13 7FF3  
                                                       STR_21 7B14  
                                                       STR_14 7FE9  
                                                       STR_30 7E7A  
                                                       STR_22 7AF2  
                                                       STR_15 7FDB  
                                                       STR_31 7FD0  
                                                       STR_23 7C7F  
                                                       STR_40 7F8C  
                                                       STR_32 7E08  
                                                       STR_16 7D2D  
                                                       STR_24 7BE7  
                                                       STR_17 7FF9  
                                                       STR_41 7FD6  
                                                       STR_25 7FC3  
                                                       STR_26 7B31  
                                                       STR_50 7FA4  
                                                       STR_42 7F47  
                                                       STR_18 7DEB  
                                                       STR_19 7FF6  
                                                       STR_43 7ECE  
                                                       STR_27 7D8B  
                                                       STR_28 7FE5  
                                                       STR_36 7F74  
                                                       STR_60 7F13  
                                                       STR_44 7E86  
                                                       STR_52 7E49  
                                             __end_of___awmod 1860  
                                                       STR_45 7ECE  
                                                       STR_29 7FCA  
                                                       STR_37 7F84  
                                                       STR_61 7E62  
                                                       STR_46 7FAC  
                                                       STR_38 7F9C  
                                                       STR_62 7E56  
                                                       STR_70 7D19  
                                                       STR_39 7F7C  
                                                       STR_55 7F59  
                                                       STR_63 7EE6  
                                                       STR_71 7DDC  
                                                       STR_64 7FBC  
                                                       STR_48 7F62  
                                                       STR_80 7EF2  
                                                       STR_56 7EAA  
                                                       STR_72 7E15  
                                                       STR_73 7FFC  
                                                       STR_81 7F33  
                                                       STR_57 7E92  
                                                       STR_65 7B91  
                                                       STR_74 7FF0  
                                                       STR_58 7EC2  
                                                       STR_90 7CEF  
                                                       STR_66 7BAE  
                                                       STR_75 7FED  
                                                       STR_67 7F08  
                                                       STR_83 7EFD  
                                                       STR_59 7DCD  
                                                       STR_91 7C02  
                                                       STR_84 7F3D  
                                                       STR_68 7EB6  
                                                       STR_92 7C4F  
                                                       STR_77 7EDA  
                                                       STR_69 7E9E  
                                                       STR_85 7E3C  
                                                       STR_93 7C36  
                                                       STR_78 7E6E  
                                                       STR_86 7E2F  
                                                       STR_94 7BCB  
                                                       STR_79 7F1E  
                                                       STR_87 7D41  
                                                       STR_95 7C1C  
                                                       STR_88 7D54  
                                                       STR_96 7C97  
                                                       STR_89 7D79  
                                                       STR_97 7C67  
                                                       STR_98 7CC5  
                                                       STR_99 7D67  
                                             __end_of___lldiv 1752  
                                                       _T0CON 000FD5  
                                             __end_of___llmod 19D6  
                                             __end_of___lwmod 1E58  
                                                       i2l212 161C  
                                                       i2l217 160E  
                                                       i2l306 203A  
                                                       i2l307 2052  
                                                       _RCREG 000FAE  
                                                       _RCSTA 000FAB  
                                                       _SPBRG 000FAF  
                                                       _TXREG 000FAD  
                                                       _TXSTA 000FAC  
                                         ___lmul@multiplicand 0012  
                                            __end_of_OSC_FREQ 79B8  
                                        SIM800xHTTPSetURL@url 004E  
                                             __end_of_dpowers 79B7  
                                     __end_of_SIM800xHTTPInit 212E  
                                     __end_of_SIM800xHTTPRead 059A  
                                     __end_of_SIM800xIPSetAPN 1B94  
                                                       tablat 000FF5  
                                     __end_of_SIM800xSDMFlush 2172  
                                     __end_of_SIM800xSDMPrint 1C54  
                                        SIM800xIPGetState@cid 005A  
                                        SIM800xIPGetState@len 005B  
                                        SIM800xIPGetState@res 0059  
                                                       ttemp5 006F  
                                                       ttemp6 0072  
                                                       ttemp7 0076  
                                        SIM800xIPGetState@str 0037  
                                                       status 000FD8  
                                                       wtemp8 006F  
                                             __end_of_sprintf 07FC  
                                            ProcessResp1@time 001B  
                                            ProcessResp2@time 002B  
                                            ProcessResp4@time 0048  
                                   SIM800xHTTPReadState@F2967 0146  
                                             __initialization 1752  
                                                __end_of_main 21BA  
                                            SIM800xSDMInit@br 001B  
                                                      ??_main 005D  
                                            SIM800xIPOpen@cid 0020  
                                               __activetblptr 000002  
                                       __end_of_SoftUARTPrint 1BF4  
                                    AddEntryToJsonObject@Cpos 0014  
                                            __end_of_StrToInt 1112  
                                            ___llmod@dividend 001B  
                                                      STR_100 7CDA  
                                                      STR_101 7DFA  
                                                      STR_102 7DAD  
                                                      STR_103 7E22  
                                                      STR_104 7DBD  
                                                      STR_105 7F29  
                                                      STR_106 7F94  
                                                      STR_107 7F50  
                                                      _INT0IE 007F94  
                                                      _INT0IF 007F91  
                                                      i2l1097 1D04  
                                                      i2l1730 1E9A  
                                                      i2l4300 1E68  
                                                      i2l4302 1E72  
                                                      i2l4410 15A0  
                                                      i2l4308 1E8E  
                                                      i2l4256 213E  
                                                      i2l4272 1884  
                                                      i2l4416 15CA  
                                                      i2l4292 18D6  
                                                      i2l4284 18BA  
                                                      i2l4276 1894  
                                                      i2l4268 1876  
                                                      i2l4428 1612  
                                                      i2l4278 189E  
                                                      i2l4288 18C6  
                                                      _INTCON 000FF2  
                                                      _TMR0IE 007F95  
                                                      _TMR0IF 007F92  
                                                      _DecVar 00BC  
                                           ??_SysTimeCallBack 0001  
                                                      _IncVar 005D  
                                                      _RxFIFO 0200  
                               __end_of_SIM800xHTTPSetContent 1E08  
                                                   ??_Tick_ms 0012  
                                         _SoftUARTReceiveByte 1F42  
                                                   ??_Wait_ms 0012  
                                                      ___lmul 1C54  
                                                   ??___awmod 0012  
                                                   ??___lldiv 0016  
                                                   ??___llmod 0023  
                                                   ??___lwmod 0012  
                                                      clear_0 1798  
                                                      clear_1 17A4  
                                                      clear_2 17B0  
                                                      clear_3 17BC  
                                                      clear_4 17C8  
                                             ___awmod@divisor 0010  
                                                      isa$std 000001  
                                             ___awmod@counter 0012  
                                     SoftUARTTransmitByte@tmp 000F  
                                                      _strlen 1EF6  
                                 SIM800xHTTPAction@statuscode 003C  
                                    __end_of_SoftUARTCallBack 1624  
                                        SoftUARTCallBack@next 000A  
                                                __pdataCOMRAM 006A  
                                           ProcessResp4@F2649 00A8  
                                           __end_ofi2___awmod 18E4  
                                                __mediumconst 798E  
                                           __end_ofi2___lwmod 1EA8  
                                        ?_SoftUARTReceiveByte 0014  
                                                      tblptrh 000FF7  
                                                      tblptrl 000FF6  
                                                      tblptru 000FF8  
                                              i2___awmod@sign 0006  
                                            SoftUARTPrint@str 0011  
                                                   ??_sprintf 0030  
                                         _SoftUARTRxAvailable 20BC  
                                            ?_SIM800xHTTPInit 004E  
                                            ?_SIM800xHTTPRead 003C  
                                           ?_USARTReceiveByte 0001  
                                            ?_SIM800xIPSetAPN 0020  
                                            ?_SIM800xSDMFlush 0001  
                                               _SIM800xIPOpen 1F8C  
                                                  __accesstop 0080  
                                     __end_of__initialization 17CE  
                                            ?_SIM800xSDMPrint 000F  
                                          ??_USARTReceiveByte 0001  
                                               ___rparam_used 000001  
                                      SIM800xHTTPInit@errcode 004E  
                                                  StrToInt@po 0029  
                                           SIM800xHTTPRead@sz 00E4  
                                        USARTReceiveByte@data 0001  
                                          i2___lwmod@dividend 0001  
                                              __pcstackCOMRAM 0001  
                                                __pidataBANK0 21BE  
                                        ?_SoftUARTRxAvailable 0001  
                                      SIM800xHTTPRead@errcode 0048  
                                           SoftUARTCallBack@k 000B  
                                            ??_USARTAsyncInit 000E  
                                                  _SystemInit 0C28  
                                       ??_SoftUARTReceiveByte 0016  
                                                  _SystemTask 0DE2  
                                           SIM800xSDMInit@val 0023  
                                           SIM800xSDMPeek@idx 0010  
                                                  __pbssBANK0 0080  
                                                  __pbssBANK1 0100  
                                                  __pbssBANK2 0200  
                                                  __pbssBANK3 0300  
                                              ?_SIM800xIPOpen 0001  
                                     ??_SIM800xSDMRxAvailable 0015  
                              AddEntryToJsonObject@JsonObject 000E  
                                       ??_SoftUARTRxAvailable 0014  
                                SIM800xHTTPSetContent@content 004E  
                                                     ?___lmul 000E  
                                SIM800xHTTPSetContent@errcode 0050  
                                                   ?_StrToInt 001A  
                                               ?_SoftUARTInit 0001  
                                              ___lmul@product 0016  
                                       SIM800xSDMCallBack@tmp 0006  
                                                     ?_strlen 000E  
                                                     _INTCON2 000FF1  
                                 __end_of_SIM800xSDMReadF1Pkt 137E  
                                        SIM800xSDMReadF1Pkt@i 001F  
                                               ??_SystimeInit 000E  
                                 __end_of_SIM800xSDMSendBytes 208A  
                                                SIM800xInit@c 0051  
                                                     __Hparam 0000  
                                                     __Lparam 0000  
                                                     _Tick_ms 2146  
                                                     _Wait_ms 1A4A  
                                               ?_ProcessResp1 0001  
                                               ?_ProcessResp2 0025  
                                               ?_ProcessResp4 002E  
                                                     ___awmod 17DC  
                                              ??_SoftUARTInit 000E  
                                                     ___lldiv 16C2  
                                                     ___llmod 1962  
                                                  ??_StrToInt 001E  
                                                     ___lwmod 1E08  
                                                     __pcinit 1752  
                                                     __ramtop 0600  
                                                     __ptext0 21AC  
                                                     __ptext1 0DE2  
                                                     __ptext2 20BC  
                                                     __ptext3 1F42  
                                                     __ptext4 17DC  
                                                     __ptext5 031A  
                                                     __ptext6 0A1E  
                                                     __ptext7 2058  
                                                     __ptext8 07FC  
                                                     __ptext9 0C28  
                                                     _dpowers 798F  
                                                 ?_SystemInit 0001  
                                                 ?_SystemTask 0001  
                                            ___awmod@dividend 000E  
                                             _SysTimeCallBack 201C  
                                    SoftUARTTransmitByte@data 000E  
                                             ??_SIM800xIPOpen 0020  
                                                     _sprintf 059A  
                                        end_of_initialization 17CE  
                                       SoftUARTCallBack@rxtmp 0009  
                                               __Lmediumconst 798E  
                                             ___lldiv@divisor 0012  
                                             ___lldiv@counter 001A  
                                              ??_ProcessResp1 0017  
                                              ??_ProcessResp2 0027  
                                              ??_ProcessResp4 0030  
                                                     postdec1 000FE5  
                                                     postdec2 000FDD  
                                                     postinc0 000FEE  
                                                     postinc2 000FDE  
                                      SIM800xIPGetState@time1 0055  
                                         __end_of_SystimeInit 210C  
                                                     strlen@s 000E  
                                                SystemInit@ip 00C6  
                                           ?_SoftUARTCallBack 0001  
                                          SIM800xHTTPAction@t 00E4  
                                              _SIM800xSDMInit 19D6  
                                              _SIM800xSDMPeek 1FD6  
                                      SIM800xSDMReadF1Pkt@val 001D  
                                      SIM800xSDMReadF1Pkt@tmp 0024  
                                          ??_SoftUARTCallBack 0007  
                                                   i2___awmod 1860  
                                                   i2___lwmod 1E58  
                                ??_SIM800xIPSetConnectionType 0022  
                                          SIM800xHTTPRead@cnt 0046  
                                          SIM800xHTTPRead@res 00EC  
                                                 StrToInt@val 0023  
                                          SIM800xHTTPRead@str 00C6  
                                                 StrToInt@str 001A  
                                                   _TXSTAbits 000FAC  
                                          SIM800xIPGetState@i 005C  
                                              ProcessResp4@ec 002E  
                             _Rxfifocurrent@SIM800x_SDM$F1168 0061  
                                       _SIM800xHTTPSetContent 1DB4  
                                    SIM800xHTTPInputData@data 003C  
                                    SIM800xHTTPInputData@time 00E8  
                                              __end_of___lmul 1CB2  
                                               __pidataCOMRAM 21BA  
                                     __end_of_SysTimeCallBack 2058  
                                      __end_of_SIM800xSDMInit 1A4A  
                                      __end_of_SIM800xSDMPeek 201C  
                                __end_of_SoftUARTTransmitByte 1D60  
                                              __end_of_strlen 1F42  
                                         start_initialization 1752  
                                    SIM800xHTTPSetURL@errcode 0050  
                                                 __end_of_Isr 002E  
                                                  ?i2___awmod 0001  
                                                  ?i2___lwmod 0001  
                                        __end_of_SoftUARTInit 2186  
                                __end_of_AddEntryToJsonObject 031A  
                                              SIM800xInit@tmp 004F  
                                          SIM800xIPSetAPN@cid 0022  
                                              SIM800xInit@str 0040  
                                          SIM800xIPSetAPN@apn 0020  
                                     SIM800xHTTPRead@strindex 003E  
                                     AddEntryToJsonObject@key 0010  
                                             ___llmod@divisor 001F  
                               __end_of_SIM800xSDMRxAvailable 20BC  
                                             ___llmod@counter 0023  
                                __end_of_SIM800xHTTPInputData 0C28  
                                                 _SystimeInit 20EA  
                                                    ??___lmul 0016  
                                                 __pdataBANK0 00EF  
                                               ??_SIM800xInit 0040  
                                 __end_of_SoftUARTReceiveByte 1F8C  
                                                    ??_strlen 0010  
                                      _Tout@SIM800x_SDM$F1169 00EF  
                                                   _Rxfifoptr 0069  
                                             ?_SIM800xSDMInit 001B  
                                             ?_SIM800xSDMPeek 0001  
                                  SIM800xHTTPReadHeader@F2987 0128  
                                                 __pbssCOMRAM 005D  
                                                   StrToInt@i 002D  
                                                   StrToInt@j 0027  
                                               _SoftUARTPrint 1B94  
                                               __pcstackBANK0 00C6  
                                               __pcstackBANK1 01DC  
                                           i2___lwmod@divisor 0003  
                                           i2___lwmod@counter 0005  
                                        __end_of_ProcessResp1 1962  
                                        __end_of_ProcessResp2 16C2  
                                        __end_of_ProcessResp4 1482  
                                 _Rxfifoptr@SIM800x_SDM$F1167 0063  
                                          SIM800xSDMPrint@str 000F  
                                                 sprintf@flag 0038  
                                   SIM800xHTTPInputData@F2919 01A0  
                                                 sprintf@prec 0032  
                           SIM800xIPSetConnectionType@contype 0020  
                                 __end_of_SoftUARTRxAvailable 20EA  
                                  __end_of_SIM800xSDMCallBack 1D0A  
                                      SIM800xSDMReadByte@data 0013  
                                                    ?_Tick_ms 000E  
                                      ?_SIM800xHTTPSetContent 004E  
                                                    ?_Wait_ms 000E  
                                                   __pintcode 0008  
                                               __pmediumconst 798E  
                                                    ?___awmod 000E  
                                                    ?___lldiv 000E  
                                                    ?___llmod 001B  
                                                    ?___lwmod 000E  
                                            ?_SysTimeCallBack 0001  
                                  __end_of_SIM800xSDMReadByte 1EF6  
                                              ?_SoftUARTPrint 0011  
                                                ??_SystemInit 005D  
                                                ??_SystemTask 004E  
                                  __end_of_SIM800xSDMSendByte 21AC  
                            SIM800x3GPPGetSignalQuality@F3020 0080  
                            SIM800x3GPPGetSignalQuality@F3030 00C0  
                            SIM800x3GPPGetSignalQuality@F3028 00C2  
                                         __end_of_SIM800xInit 1250  
                                      SIM800xSDMCallBack@next 0007  
                                 SIM800xHTTPInputData@errcode 0046  
                                                 ??i2___awmod 0005  
                                                    ?_sprintf 0024  
                                                 ??i2___lwmod 0005  
                          __end_of_SIM800xIPSetConnectionType 1B28  
                                  _SIM800xIPSetConnectionType 1ABC  
                                 SIM800xHTTPInputData@timeout 0042  
                               SIM800xIPSetConnectionType@cid 0022  
                                    SIM800xHTTPAction@errcode 0044  
                                    _RxFIFO@SIM800x_SDM$F1166 0300  
                                        _SoftUARTTransmitByte 1D0A  
                                                    i2u321_40 18A4  
                             SIM800x3GPPGetOperatorName@F3005 0100  
                                                    i2u325_40 1E78  
                                                    i2u344_44 15C0  
                                                    i2u344_45 15BA  
                                                    i2u348_40 1CE6  
                                                    i2u497_47 1596  
                                                    i2u498_47 15A4  
                                                    i2u499_47 1616  
                                          __end_of_SystemInit 0DE2  
                                          __end_of_SystemTask 0F7C  
                                                    _OSC_FREQ 79B7  
                                            _USARTReceiveByte 212E  
                                           ??_SIM800xHTTPInit 0050  
                                           ??_SIM800xHTTPRead 004A  
                                        _AddEntryToJsonObject 0032  
                                           ??_SIM800xIPSetAPN 0022  
                                           ??_SIM800xSDMFlush 000E  
                                           ??_SIM800xSDMPrint 0011  
                                        _SIM800xHTTPInputData 0A1E  
                                               ProcessResp1@c 001F  
                                                   _rxmessage 01BE  
                                     SIM800xHTTPInputData@cnt 003E  
                                     SIM800xHTTPInputData@len 00E4  
                                     SIM800xHTTPInputData@res 00EC  
                                     SIM800xHTTPInputData@str 00C6  
                                           ___lmul@multiplier 000E  
                                                   copy_data0 1766  
                                                   copy_data1 1786  
                                                   _txmessage 028C  
                                          i2___awmod@dividend 0001  
                                       __end_of_SIM800xIPOpen 1FD6  
                                                Wait_ms@value 000E  
                                               SIM800xInit@br 003C  
                                       ?_SoftUARTTransmitByte 0001  
                                                    __Hrparam 0000  
                                                    Wait_ms@x 0016  
                                                    __Lrparam 0000  
                                                    _StrToInt 0F7C  
                                                _SoftUARTInit 2172  
                                                 _SIM800xInit 1112  
                                       ?_AddEntryToJsonObject 000E  
                                             ??_SoftUARTPrint 0013  
                                                    _Rxstatus 0067  
                                                  sprintf@val 0034  
                                       ?_SIM800xHTTPInputData 003C  
                                                    __ptext10 1B94  
                                                    __ptext11 1D0A  
                                                    __ptext20 20EA  
                                                    __ptext12 2172  
                                                    __ptext21 1ABC  
                                                    __ptext13 1112  
                                                    __ptext30 1EF6  
                                                    __ptext22 1B28  
                                                    __ptext14 059A  
                                                    __ptext31 210C  
                                                    __ptext23 1F8C  
                                                    __ptext15 1962  
                                                    __ptext40 1EA8  
                                                    __ptext32 1BF4  
                                                    __ptext24 18E4  
                                                    __ptext16 1A4A  
                                                    __ptext41 1E08  
                                                    __ptext33 219A  
                                                    __ptext25 1482  
                                                    __ptext17 19D6  
                                                    __ptext50 212E  
                                                    __ptext42 215C  
                                                    __ptext34 137E  
                                                    __ptext26 1624  
                                                    __ptext18 16C2  
                                                    __ptext43 0032  
                                                    __ptext35 0F7C  
                                                    __ptext27 1FD6  
                                                    __ptext19 2186  
                                                    __ptext36 1C54  
                                                    __ptext28 1D60  
                                                    __ptext45 201C  
                                                    __ptext37 1250  
                                                    __ptext29 1DB4  
                                                    __ptext46 1584  
                                                    __ptext38 2146  
                                                    __ptext47 1860  
                                                    __ptext39 208A  
                                                    __ptext48 1CB2  
                                                    __ptext49 1E58  
                         SIM800x3GPPGetSubscriberNumber@F3043 0264  
                                     SIM800xHTTPAction@method 00E8  
                                                ?_SystimeInit 0001  
                                  AddEntryToJsonObject@offset 001A  
                                                    isa$xinst 000000  
                                                    int$flags 006E  
                                                _ProcessResp1 18E4  
                                                _ProcessResp2 1624  
                                                _ProcessResp4 137E  
                                            ??_SIM800xSDMInit 001F  
                                            ??_SIM800xSDMPeek 000E  
                                           i2___awmod@divisor 0003  
                                           i2___awmod@counter 0005  
                                                  _INTCONbits 000FF2  
                                      SIM800xHTTPAction@F2931 0182  
                                         SIM800xGetIMSI@F2688 0094  
                                                    intlevel2 21C2  
                                                   sprintf@ap 0039  
                                                   sprintf@sp 0024  
                                              _USARTAsyncInit 2186  
                                     SIM800xSDMSendBytes@data 000E  
                                            ___lwmod@dividend 000E  
                                            ___lldiv@dividend 000E  
                                      ??_SoftUARTTransmitByte 000E  
                                     ??_SIM800xHTTPSetContent 0052  
                                       _SIM800xSDMRxAvailable 208A  
                                   AddEntryToJsonObject@value 0012  
                                     SoftUARTReceiveByte@data 0016  
                                      ??_AddEntryToJsonObject 0016  
                                      SIM800xSDMSendByte@data 000E  
                                          _SIM800xSDMCallBack 1CB2  
                                         _SIM800xSDMReadF1Pkt 1250  
                                      ??_SIM800xHTTPInputData 0048  
                                                    sprintf@c 003B  
                                                    sprintf@f 0026  
                                           USARTAsyncInit@bgr 000E  
                                      SIM800xSDMSendBytes@cnt 0010  
                                            ___lldiv@quotient 0016  
                                             ___lwmod@divisor 0010  
                                                    strlen@cp 0010  
                                             ___lwmod@counter 0012  
                                           _SIM800xHTTPAction 07FC  
                                       SIM800xHTTPAction@time 00E9  
                                           SystemTask@errcode 01F3  
                                         ?_SIM800xSDMCallBack 0001  
                                       SIM800xHTTPAction@tout 0040  
                                           _SIM800xHTTPSetURL 1D60  
                                          ?_SIM800xHTTPAction 003C  
                                           _SIM800xIPGetState 1482  
                                      __end_of_USARTAsyncInit 219A  
                                    __end_of_USARTReceiveByte 2146  
                                          ?_SIM800xHTTPSetURL 004E  
                                 ?_SIM800xIPSetConnectionType 0020  
                                          ?_SIM800xIPGetState 0031  
                                         _SIM800xSDMSendBytes 2058  
                                          _SIM800xSDMReadByte 1EA8  
                                        SIM800xHTTPAction@cnt 003E  
                                        SIM800xHTTPAction@res 00ED  
                                        SIM800xHTTPAction@str 00C6  
                                        ?_SIM800xSDMReadF1Pkt 0017  
                                               SystemInit@err 00DA  
                                               _Rxfifocurrent 0068  
                                         ??_SIM800xHTTPAction 0046  
                                            _SoftUARTCallBack 1584  
                                          _SIM800xSDMSendByte 219A  
                                             _SIM800xHTTPInit 210C  
                                             _SIM800xHTTPRead 031A  
                                             SystemTask@scode 01F1  
                                         ??_SIM800xHTTPSetURL 0052  
                                         ??_SIM800xIPGetState 0033  
                                             _SIM800xIPSetAPN 1B28  
                                         ?_SIM800xSDMReadByte 0001  
                                               SystemTask@cmd 01F0  
                                             _SIM800xSDMFlush 215C  
                                               SystemTask@cnt 01F5  
                                               SystemTask@msg 01DC  
                                        ??_SIM800xSDMCallBack 0006  
                                     SIM800xSDMReadF1Pkt@data 0017  
                                             _SIM800xSDMPrint 1BF4  
